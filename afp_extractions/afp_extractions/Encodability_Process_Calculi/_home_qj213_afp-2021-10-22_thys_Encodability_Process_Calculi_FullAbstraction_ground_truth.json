{"file_name": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi/FullAbstraction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi", "problem_names": ["lemma (in encoding) inj_enc_is_fully_abstract_wrt_identities:\n  assumes injectivity: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> S1 = S2\"\n  shows \"fully_abstract {(S1, S2). S1 = S2} {(T1, T2). T1 = T2}\"", "lemma (in encoding) fully_abstract_wrt_empty_relation:\n  shows \"fully_abstract {} {}\"", "lemma (in encoding) fully_abstract_wrt_all_relation:\n  shows \"fully_abstract {(S1, S2). True} {(T1, T2). True}\"", "lemma (in encoding) fully_abstract_wrt_source_relation:\n  fixes RelS :: \"('procS \\<times> 'procS) set\"\n  assumes injectivity: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> S1 = S2\"\n  shows \"\\<exists>RelT. fully_abstract RelS RelT\"", "lemma (in encoding) fully_abstract_wrt_trans_source_relation:\n  fixes RelS :: \"('procS \\<times> 'procS) set\"\n  assumes encRelS: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> (S1, S2) \\<in> RelS\"\n      and transS:  \"trans RelS\"\n  shows \"\\<exists>RelT. fully_abstract RelS RelT\"", "lemma (in encoding) fully_abstract_wrt_trans_closure_of_source_relation:\n  fixes RelS :: \"('procS \\<times> 'procS) set\"\n  assumes encRelS: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> (S1, S2) \\<in> RelS\\<^sup>+\"\n  shows \"\\<exists>RelT. fully_abstract (RelS\\<^sup>+) RelT\"", "lemma (in encoding) fully_abstract_wrt_target_relation:\n  fixes RelT :: \"('procT \\<times> 'procT) set\"\n  shows \"\\<exists>RelS. fully_abstract RelS RelT\"", "lemma (in encoding) full_abstraction_and_trans_relation_contains_SRel_impl_TRel:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and srel:    \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and trans:   \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\"", "lemma (in encoding) full_abstraction_and_trans_relation_contains_TRel_impl_SRel:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trel:    \"\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\"\n      and trans:   \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"", "lemma (in encoding) full_abstraction_impl_trans_relation_contains_SRel_iff_TRel:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trans:   \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"(\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel)\n         \\<longleftrightarrow> (SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel})\"", "lemma (in encoding) full_abstraction_impl_trans_relation_contains_SRel_iff_TRel_encRL:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and encL:    \"\\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and trans:   \"trans Rel\"\n  shows \"(\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel)\n         \\<longleftrightarrow> (SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel})\"", "lemma (in encoding) full_abstraction_impl_SRel_iff_TRel_is_refl:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"refl SRel \\<longleftrightarrow> (\\<forall>S. (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel)\"", "lemma (in encoding) full_abstraction_and_surjectivity_impl_SRel_iff_TRel_is_refl:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and surj:    \"\\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\"\n  shows \"refl SRel \\<longleftrightarrow> refl TRel\"", "lemma (in encoding) full_abstraction_impl_SRel_iff_TRel_is_sym:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"sym SRel \\<longleftrightarrow> sym {(T1, T2). \\<exists>S1 S2. T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel}\"", "lemma (in encoding) full_abstraction_and_surjectivity_impl_SRel_iff_TRel_is_sym:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and surj:    \"\\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\"\n  shows \"sym SRel \\<longleftrightarrow> sym TRel\"", "lemma (in encoding) full_abstraction_impl_SRel_iff_TRel_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"trans SRel \\<longleftrightarrow> trans {(T1, T2). \\<exists>S1 S2. T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel}\"", "lemma (in encoding) full_abstraction_and_surjectivity_impl_SRel_iff_TRel_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and surj:    \"\\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\"\n  shows \"trans SRel \\<longleftrightarrow> trans TRel\"", "lemma (in encoding) full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_preserve:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_pred Pred\"\n  shows \"rel_preserves_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_preserves_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\"", "lemma (in encoding) full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_preserve:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_binary_pred Pred\"\n  shows \"rel_preserves_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_preserves_binary_pred\n             {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\"", "lemma (in encoding) full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_reflects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_pred Pred\"\n  shows \"rel_reflects_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_reflects_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\"", "lemma (in encoding) full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_reflects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_binary_pred Pred\"\n  shows \"rel_reflects_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_reflects_binary_pred\n             {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\"", "lemma (in encoding) full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_respects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_pred Pred\"\n  shows \"rel_respects_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_respects_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\"", "lemma (in encoding) full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_respects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_binary_pred Pred\"\n  shows \"rel_respects_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_respects_binary_pred\n             {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\"", "lemma (in encoding) trans_source_target_relation_impl_full_abstraction:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                  \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and trans: \"trans Rel\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"", "lemma (in encoding) source_target_relation_impl_full_abstraction_wrt_trans_closures:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc: \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel\\<^sup>+}\"", "lemma (in encoding) quasi_trans_source_target_relation_impl_full_abstraction:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                  \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and srel:  \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and trel:  \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"\n      and trans: \"\\<forall>P Q R. (P, Q) \\<in> Rel \\<and> (Q, R) \\<in> Rel \\<and> ((P \\<in> ProcS \\<and> Q \\<in> ProcT)\n                  \\<or> (P \\<in> ProcT \\<and> Q \\<in> ProcS)) \\<longrightarrow> (P, R) \\<in> Rel\"\n  shows \"fully_abstract SRel TRel\"", "lemma (in encoding) full_abstraction_impl_indRelRSTPO_to_SRel_and_TRel:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and P Q  :: \"('procS, 'procT) Proc\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and rel:     \"P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\"\n  shows \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+\"\n    and \"\\<forall>SP TQ. SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\"", "lemma (in encoding) full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and P Q  :: \"('procS, 'procT) Proc\"\n  assumes fA:     \"fully_abstract SRel TRel\"\n      and transT: \"trans TRel\"\n      and reflS:  \"refl SRel\"\n      and rel:    \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q\"\n  shows \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (SP, SQ) \\<in> SRel\"\n    and \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n    and \"\\<forall>SP TQ. SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\"\n    and \"\\<forall>TP SQ. TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n    and \"\\<forall>TP TQ. TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\"", "lemma (in encoding) full_abstraction_wrt_preorders_impl_trans_source_target_relation:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and reflS:   \"refl SRel\"\n      and transT:  \"trans TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                     \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans Rel\"", "theorem (in encoding) fully_abstract_wrt_preorders_iff_source_target_relation_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"(fully_abstract SRel TRel \\<and> refl SRel \\<and> trans TRel) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                      \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans Rel)\"", "lemma (in encoding) source_target_relation_with_trans_symcl_impl_full_abstraction:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trans: \"trans (symcl Rel)\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\"", "lemma (in encoding) fully_abstract_wrt_equivalences_impl_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and reflT:   \"refl TRel\"\n      and symmT:   \"sym TRel\"\n      and transT:  \"trans TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\"", "lemma (in encoding) fully_abstract_impl_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract ((symcl (SRel\\<^sup>=))\\<^sup>+) ((symcl (TRel\\<^sup>=))\\<^sup>+)\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> ((symcl (SRel\\<^sup>=))\\<^sup>+) = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> ((symcl (TRel\\<^sup>=))\\<^sup>+) = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\"", "lemma (in encoding) fully_abstract_wrt_preorders_impl_source_target_relation_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> ((refl SRel \\<and> trans TRel)\n                   \\<longleftrightarrow> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}))\"", "lemma (in encoding) fully_abstract_wrt_preorders_impl_source_target_relation_is_trans_B:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and reflT:   \"refl TRel\"\n      and transT:  \"trans TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"", "lemma (in encoding) fully_abstract_wrt_equivalences_iff_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"(fully_abstract SRel TRel \\<and> equivalence TRel) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel))\"", "lemma (in encoding) fully_abstract_iff_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"fully_abstract ((symcl (SRel\\<^sup>=))\\<^sup>+) ((symcl (TRel\\<^sup>=))\\<^sup>+) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> (symcl (SRel\\<^sup>=))\\<^sup>+ = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> (symcl (TRel\\<^sup>=))\\<^sup>+ = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel))\"", "lemma (in encoding) full_abstraction_impl_indRelSTEQ_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and rel:     \"Rel = ((indRelSTEQ SRel TRel)\n                    - {(P, Q). (P \\<in> ProcS \\<and> Q \\<in> ProcS) \\<or> (P \\<in> ProcT \\<and> Q \\<in> ProcT)})\n                    \\<union> {(P, Q). (\\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel)\n                        \\<or> (\\<exists>TP TQ. TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel)}\"\n  shows \"(refl SRel \\<and> trans TRel) = trans Rel\"", "lemma (in encoding) trans_source_target_relation_impl_fully_abstract:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                  \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and srel:  \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and trel:  \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"\n      and trans: \"trans Rel\"\n  shows \"fully_abstract SRel TRel\"", "lemma (in encoding) source_target_relation_with_trans_impl_full_abstraction:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trans: \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"", "lemma (in encoding) fully_abstract_wrt_preorders_iff_source_target_relation_is_transB:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes preord: \"preorder TRel\"\n  shows \"fully_abstract SRel TRel =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}))\"", "lemma (in encoding) fully_abstract_wrt_preorders_iff_source_target_relation_union_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"(fully_abstract SRel TRel \\<and> refl SRel \\<and> trans TRel) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n          \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n          \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n          \\<and> (\\<exists>Rel'. (\\<forall>(P, Q) \\<in> Rel'. P \\<in> ProcS \\<longleftrightarrow> Q \\<in> ProcT)\n             \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel')))\""], "translations": [["", "lemma (in encoding) inj_enc_is_fully_abstract_wrt_identities:\n  assumes injectivity: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> S1 = S2\"\n  shows \"fully_abstract {(S1, S2). S1 = S2} {(T1, T2). T1 = T2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> _Collect (S1, S2) (S1 = S2)) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> _Collect (T1, T2) (T1 = T2))", "by (auto simp add: injectivity)"], ["", "text \\<open>Each encoding is fully abstract w.r.t. the empty relation on the source and the target.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_empty_relation:\n  shows \"fully_abstract {} {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> {}) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> {})", "by auto"], ["", "text \\<open>Similarly, each encoding is fully abstract w.r.t. the all-relation on the source and the\n        target.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_all_relation:\n  shows \"fully_abstract {(S1, S2). True} {(T1, T2). True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> _Collect (S1, S2) True) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> _Collect (T1, T2) True)", "by auto"], ["", "text \\<open>If the encoding is injective then for each source term relation RelS there exists a target\n        term relation RelT such that the encoding is fully abstract w.r.t. RelS and RelT.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_source_relation:\n  fixes RelS :: \"('procS \\<times> 'procS) set\"\n  assumes injectivity: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> S1 = S2\"\n  shows \"\\<exists>RelT. fully_abstract RelS RelT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "define RelT where \"RelT = {(T1, T2). \\<exists>S1 S2. (S1, S2) \\<in> RelS \\<and> T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>}\""], ["proof (state)\nthis:\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "with injectivity"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> S1 = S2\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)", "have \"fully_abstract RelS RelT\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> S1 = S2\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> RelS) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "by blast"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> RelS) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "thus \"\\<exists>RelT. fully_abstract RelS RelT\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> RelS) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "by blast"], ["proof (state)\nthis:\n  \\<exists>RelT.\n     \\<forall>S1 S2.\n        ((S1, S2) \\<in> RelS) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If all source terms that are translated to the same target term are related by a trans\n        source term relation RelS, then there exists a target term relation RelT such that the\n        encoding is fully abstract w.r.t. RelS and RelT.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_trans_source_relation:\n  fixes RelS :: \"('procS \\<times> 'procS) set\"\n  assumes encRelS: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> (S1, S2) \\<in> RelS\"\n      and transS:  \"trans RelS\"\n  shows \"\\<exists>RelT. fully_abstract RelS RelT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "define RelT where \"RelT = {(T1, T2). \\<exists>S1 S2. (S1, S2) \\<in> RelS \\<and> T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>}\""], ["proof (state)\nthis:\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "have \"fully_abstract RelS RelT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> RelS) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> RelS \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> RelS \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "assume \"(S1, S2) \\<in> RelS\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> RelS\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> RelS \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "with RelT_def"], ["proof (chain)\npicking this:\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)\n  (S1, S2) \\<in> RelS", "show \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\""], ["proof (prove)\nusing this:\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)\n  (S1, S2) \\<in> RelS\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "assume \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\""], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "with RelT_def"], ["proof (chain)\npicking this:\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT", "obtain S1' S2' where A1: \"(S1', S2') \\<in> RelS\" and A2: \"\\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S1'\\<rbrakk>\"\n                               and A3: \"\\<lbrakk>S2\\<rbrakk> = \\<lbrakk>S2'\\<rbrakk>\""], ["proof (prove)\nusing this:\n  RelT =\n  _Collect (T1, T2)\n   (\\<exists>S1 S2.\n       (S1, S2) \\<in> RelS \\<and>\n       T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk>)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT\n\ngoal (1 subgoal):\n 1. (\\<And>S1' S2'.\n        (S1', S2') \\<in> RelS \\<and>\n        \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S1'\\<rbrakk> \\<and>\n        \\<lbrakk>S2\\<rbrakk> = \\<lbrakk>S2'\\<rbrakk> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (S1', S2') \\<in> RelS\n  \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S1'\\<rbrakk>\n  \\<lbrakk>S2\\<rbrakk> = \\<lbrakk>S2'\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "from A2 encRelS"], ["proof (chain)\npicking this:\n  \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S1'\\<rbrakk>\n  \\<forall>S1 S2.\n     \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow>\n     (S1, S2) \\<in> RelS", "have \"(S1, S1') \\<in> RelS\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S1'\\<rbrakk>\n  \\<forall>S1 S2.\n     \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow>\n     (S1, S2) \\<in> RelS\n\ngoal (1 subgoal):\n 1. (S1, S1') \\<in> RelS", "by simp"], ["proof (state)\nthis:\n  (S1, S1') \\<in> RelS\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "from this A1 transS"], ["proof (chain)\npicking this:\n  (S1, S1') \\<in> RelS\n  (S1', S2') \\<in> RelS\n  trans RelS", "have \"(S1, S2') \\<in> RelS\""], ["proof (prove)\nusing this:\n  (S1, S1') \\<in> RelS\n  (S1', S2') \\<in> RelS\n  trans RelS\n\ngoal (1 subgoal):\n 1. (S1, S2') \\<in> RelS", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (S1, S1') \\<in> RelS\n  (S1', S2') \\<in> RelS\n  \\<forall>x y z.\n     (x, y) \\<in> RelS \\<longrightarrow>\n     (y, z) \\<in> RelS \\<longrightarrow> (x, z) \\<in> RelS\n\ngoal (1 subgoal):\n 1. (S1, S2') \\<in> RelS", "by blast"], ["proof (state)\nthis:\n  (S1, S2') \\<in> RelS\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "moreover"], ["proof (state)\nthis:\n  (S1, S2') \\<in> RelS\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "from A3 encRelS"], ["proof (chain)\npicking this:\n  \\<lbrakk>S2\\<rbrakk> = \\<lbrakk>S2'\\<rbrakk>\n  \\<forall>S1 S2.\n     \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow>\n     (S1, S2) \\<in> RelS", "have \"(S2', S2) \\<in> RelS\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S2\\<rbrakk> = \\<lbrakk>S2'\\<rbrakk>\n  \\<forall>S1 S2.\n     \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow>\n     (S1, S2) \\<in> RelS\n\ngoal (1 subgoal):\n 1. (S2', S2) \\<in> RelS", "by simp"], ["proof (state)\nthis:\n  (S2', S2) \\<in> RelS\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> RelT \\<Longrightarrow>\n       (S1, S2) \\<in> RelS", "ultimately"], ["proof (chain)\npicking this:\n  (S1, S2') \\<in> RelS\n  (S2', S2) \\<in> RelS", "show \"(S1, S2) \\<in> RelS\""], ["proof (prove)\nusing this:\n  (S1, S2') \\<in> RelS\n  (S2', S2) \\<in> RelS\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> RelS", "using transS"], ["proof (prove)\nusing this:\n  (S1, S2') \\<in> RelS\n  (S2', S2) \\<in> RelS\n  trans RelS\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> RelS", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (S1, S2') \\<in> RelS\n  (S2', S2) \\<in> RelS\n  \\<forall>x y z.\n     (x, y) \\<in> RelS \\<longrightarrow>\n     (y, z) \\<in> RelS \\<longrightarrow> (x, z) \\<in> RelS\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> RelS", "by blast"], ["proof (state)\nthis:\n  (S1, S2) \\<in> RelS\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> RelS) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "thus \"\\<exists>RelT. fully_abstract RelS RelT\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> RelS) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "by blast"], ["proof (state)\nthis:\n  \\<exists>RelT.\n     \\<forall>S1 S2.\n        ((S1, S2) \\<in> RelS) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) fully_abstract_wrt_trans_closure_of_source_relation:\n  fixes RelS :: \"('procS \\<times> 'procS) set\"\n  assumes encRelS: \"\\<forall>S1 S2. \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow> (S1, S2) \\<in> RelS\\<^sup>+\"\n  shows \"\\<exists>RelT. fully_abstract (RelS\\<^sup>+) RelT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS\\<^sup>+) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "using encRelS trans_trancl[of RelS]\n            fully_abstract_wrt_trans_source_relation[where RelS=\"RelS\\<^sup>+\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow>\n     (S1, S2) \\<in> RelS\\<^sup>+\n  trans (RelS\\<^sup>+)\n  (\\<forall>S1 S2.\n      \\<lbrakk>S1\\<rbrakk> = \\<lbrakk>S2\\<rbrakk> \\<longrightarrow>\n      (S1, S2) \\<in> RelS\\<^sup>+) \\<and>\n  trans (RelS\\<^sup>+) \\<Longrightarrow>\n  \\<exists>RelT.\n     \\<forall>S1 S2.\n        ((S1, S2) \\<in> RelS\\<^sup>+) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelT.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS\\<^sup>+) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "by blast"], ["", "text \\<open>For every encoding and every target term relation RelT there exists a source term relation\n        RelS such that the encoding is fully abstract w.r.t. RelS and RelT.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_target_relation:\n  fixes RelT :: \"('procT \\<times> 'procT) set\"\n  shows \"\\<exists>RelS. fully_abstract RelS RelT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>RelS.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>RelS.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "define RelS where \"RelS = {(S1, S2). (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT}\""], ["proof (state)\nthis:\n  RelS =\n  _Collect (S1, S2)\n   ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelS.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "hence \"fully_abstract RelS RelT\""], ["proof (prove)\nusing this:\n  RelS =\n  _Collect (S1, S2)\n   ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> RelS) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "by simp"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> RelS) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelS.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "thus \"\\<exists>RelS. fully_abstract RelS RelT\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> RelS) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal (1 subgoal):\n 1. \\<exists>RelS.\n       \\<forall>S1 S2.\n          ((S1, S2) \\<in> RelS) =\n          ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)", "by blast"], ["proof (state)\nthis:\n  \\<exists>RelS.\n     \\<forall>S1 S2.\n        ((S1, S2) \\<in> RelS) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> RelT)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Fully Abstract Encodings\\<close>"], ["", "text \\<open>Thus, as long as we can choose one of the two relations, full abstraction is trivial. For\n        fixed source and target term relations encodings are not trivially fully abstract. For all\n        encodings and relations SRel and TRel we can construct a relation on the disjunctive union\n        of source and target terms, whose reduction to source terms is SRel and whose reduction to\n        target terms is TRel. But full abstraction ensures that each trans relation that\n        relates source terms and their literal translations in both directions includes SRel iff it\n        includes TRel restricted to translated source terms.\\<close>"], ["", "lemma (in encoding) full_abstraction_and_trans_relation_contains_SRel_impl_TRel:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and srel:    \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and trans:   \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "define Rel' where \"Rel' = Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (state)\nthis:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "hence \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "assume \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "have \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "with srel Rel'_def"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (S1, S2) \\<in> SRel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "from encR Rel'_def"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'", "show \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "using trans Rel'_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "define Rel' where \"Rel' = Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (state)\nthis:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "from encR Rel'_def"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "assume \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "with Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "from Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "using trans Rel'_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "with srel"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "have \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S1, S2) \\<in> SRel", "show \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_and_trans_relation_contains_TRel_impl_SRel:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trel:    \"\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\"\n      and trans:   \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "define Rel' where \"Rel' = Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (state)\nthis:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "from encR Rel'_def"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S1, S2) \\<in> SRel", "have \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "with trel Rel'_def"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "from Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> Rel\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'", "show \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "using trans Rel'_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "define Rel' where \"Rel' = Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (state)\nthis:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "hence \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "with Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "from encR Rel'_def"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "using trans Rel'_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "with trel"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "have \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b) \\<in> Rel \\<Longrightarrow>\n       (a, b) \\<in> SRel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "show \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_impl_trans_relation_contains_SRel_iff_TRel:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trans:   \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"(\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel)\n         \\<longleftrightarrow> (SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n        ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n          TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n         \\<in> Rel)) =\n    (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel) \\<Longrightarrow>\n    SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n 2. SRel =\n    _Collect (S1, S2)\n     ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "assume \"\\<forall>S1 S2. ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) = ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel)\""], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n\ngoal (2 subgoals):\n 1. \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel) \\<Longrightarrow>\n    SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n 2. SRel =\n    _Collect (S1, S2)\n     ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "thus \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n\ngoal (1 subgoal):\n 1. SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)", "using assms full_abstraction_and_trans_relation_contains_TRel_impl_SRel[where\n            SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> ?Rel) \\<and>\n  (\\<forall>S1 S2.\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n      ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> ?Rel)) \\<and>\n  trans\n   (?Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S.\n         \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)) \\<Longrightarrow>\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> ?Rel)\n\ngoal (1 subgoal):\n 1. SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)", "by blast"], ["proof (state)\nthis:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. SRel =\n    _Collect (S1, S2)\n     ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. SRel =\n    _Collect (S1, S2)\n     ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "assume \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\""], ["proof (state)\nthis:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. SRel =\n    _Collect (S1, S2)\n     ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "thus \"\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "using assms full_abstraction_and_trans_relation_contains_SRel_impl_TRel[where\n            SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> ?Rel) \\<and>\n  SRel =\n  _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> ?Rel) \\<and>\n  trans\n   (?Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S.\n         \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)) \\<Longrightarrow>\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> ?Rel)\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n       ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n         TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n        \\<in> Rel)", "by blast"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n     ((TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n      \\<in> Rel)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_impl_trans_relation_contains_SRel_iff_TRel_encRL:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encR:    \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and encL:    \"\\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and trans:   \"trans Rel\"\n  shows \"(\\<forall>S1 S2. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel \\<longleftrightarrow> (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel)\n         \\<longleftrightarrow> (SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n        ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n          TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n         \\<in> Rel)) =\n    (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n        ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n          TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n         \\<in> Rel)) =\n    (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))", "from encL"], ["proof (chain)\npicking this:\n  \\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} = Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n    Rel", "by auto"], ["proof (state)\nthis:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  Rel\n\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n        ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n          TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n         \\<in> Rel)) =\n    (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))", "with fullAbs encR trans"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  trans Rel\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  trans Rel\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  Rel\n\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n        ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n          TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n         \\<in> Rel)) =\n    (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))", "using full_abstraction_impl_trans_relation_contains_SRel_iff_TRel[where Rel=\"Rel\"\n            and SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  trans Rel\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  Rel\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S.\n         \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)) \\<Longrightarrow>\n  (\\<forall>S1 S2.\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n      ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel)) =\n  (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))\n\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n        ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n          TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n         \\<in> Rel)) =\n    (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))", "by simp"], ["proof (state)\nthis:\n  (\\<forall>S1 S2.\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel) =\n      ((TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel)) =\n  (SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Full abstraction ensures that SRel and TRel satisfy the same basic properties that can be\n        defined on their pairs. In particular:\n        (1) SRel is refl iff TRel reduced to translated source terms is refl\n        (2) if the encoding is surjective then SRel is refl iff TRel is refl\n        (3) SRel is sym iff TRel reduced to translated source terms is sym\n        (4) SRel is trans iff TRel reduced to translated source terms is trans\\<close>"], ["", "lemma (in encoding) full_abstraction_impl_SRel_iff_TRel_is_refl:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"refl SRel \\<longleftrightarrow> (\\<forall>S. (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl SRel =\n    (\\<forall>S. (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel)", "unfolding refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n     (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)) =\n    (\\<forall>S. (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel)", "by (simp add: fullAbs)"], ["", "lemma (in encoding) full_abstraction_and_surjectivity_impl_SRel_iff_TRel_is_refl:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and surj:    \"\\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\"\n  shows \"refl SRel \\<longleftrightarrow> refl TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl SRel = refl TRel", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. refl SRel \\<Longrightarrow> refl TRel\n 2. refl TRel \\<Longrightarrow> refl SRel", "assume reflS: \"refl SRel\""], ["proof (state)\nthis:\n  refl SRel\n\ngoal (2 subgoals):\n 1. refl SRel \\<Longrightarrow> refl TRel\n 2. refl TRel \\<Longrightarrow> refl SRel", "show \"refl TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl TRel", "unfolding refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. TRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> TRel", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> TRel", "from surj"], ["proof (chain)\npicking this:\n  \\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>", "obtain S where \"T = \\<lbrakk>S\\<rbrakk>\""], ["proof (prove)\nusing this:\n  \\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        T = \\<lbrakk>S\\<rbrakk> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  T = \\<lbrakk>S\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  T = \\<lbrakk>S\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> TRel", "from reflS"], ["proof (chain)\npicking this:\n  refl SRel", "have \"(S, S) \\<in> SRel\""], ["proof (prove)\nusing this:\n  refl SRel\n\ngoal (1 subgoal):\n 1. (S, S) \\<in> SRel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)\n\ngoal (1 subgoal):\n 1. (S, S) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S, S) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> TRel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S, S) \\<in> SRel", "have \"(\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S, S) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  T = \\<lbrakk>S\\<rbrakk>\n  (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel", "show \"(T, T) \\<in> TRel\""], ["proof (prove)\nusing this:\n  T = \\<lbrakk>S\\<rbrakk>\n  (\\<lbrakk>S\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T, T) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (T, T) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  refl TRel\n\ngoal (1 subgoal):\n 1. refl TRel \\<Longrightarrow> refl SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. refl TRel \\<Longrightarrow> refl SRel", "assume \"refl TRel\""], ["proof (state)\nthis:\n  refl TRel\n\ngoal (1 subgoal):\n 1. refl TRel \\<Longrightarrow> refl SRel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl TRel", "show \"refl SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl TRel\n\ngoal (1 subgoal):\n 1. refl SRel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  TRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)", "by simp"], ["proof (state)\nthis:\n  refl SRel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_impl_SRel_iff_TRel_is_sym:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"sym SRel \\<longleftrightarrow> sym {(T1, T2). \\<exists>S1 S2. T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym SRel =\n    sym (_Collect (T1, T2)\n          (\\<exists>S1 S2.\n              T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n              T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel))", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. (x, y) \\<in> SRel \\<longrightarrow> (y, x) \\<in> SRel) =\n    (\\<forall>x y.\n        (x, y)\n        \\<in> _Collect (T1, T2)\n               (\\<exists>S1 S2.\n                   T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n                   T2 = \\<lbrakk>S2\\<rbrakk> \\<and>\n                   (T1, T2) \\<in> TRel) \\<longrightarrow>\n        (y, x)\n        \\<in> _Collect (T1, T2)\n               (\\<exists>S1 S2.\n                   T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n                   T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel))", "by (simp add: fullAbs, blast)"], ["", "lemma (in encoding) full_abstraction_and_surjectivity_impl_SRel_iff_TRel_is_sym:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and surj:    \"\\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\"\n  shows \"sym SRel \\<longleftrightarrow> sym TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym SRel = sym TRel", "using fullAbs surj\n            full_abstraction_impl_SRel_iff_TRel_is_sym[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> TRel) \\<Longrightarrow>\n  sym SRel =\n  sym (_Collect (T1, T2)\n        (\\<exists>S1 S2.\n            T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n            T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel))\n\ngoal (1 subgoal):\n 1. sym SRel = sym TRel", "by auto"], ["", "lemma (in encoding) full_abstraction_impl_SRel_iff_TRel_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"trans SRel \\<longleftrightarrow> trans {(T1, T2). \\<exists>S1 S2. T1 = \\<lbrakk>S1\\<rbrakk> \\<and> T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans SRel =\n    trans\n     (_Collect (T1, T2)\n       (\\<exists>S1 S2.\n           T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n           T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel))", "unfolding trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        (x, y) \\<in> SRel \\<longrightarrow>\n        (y, z) \\<in> SRel \\<longrightarrow> (x, z) \\<in> SRel) =\n    (\\<forall>x y z.\n        (x, y)\n        \\<in> _Collect (T1, T2)\n               (\\<exists>S1 S2.\n                   T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n                   T2 = \\<lbrakk>S2\\<rbrakk> \\<and>\n                   (T1, T2) \\<in> TRel) \\<longrightarrow>\n        (y, z)\n        \\<in> _Collect (T1, T2)\n               (\\<exists>S1 S2.\n                   T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n                   T2 = \\<lbrakk>S2\\<rbrakk> \\<and>\n                   (T1, T2) \\<in> TRel) \\<longrightarrow>\n        (x, z)\n        \\<in> _Collect (T1, T2)\n               (\\<exists>S1 S2.\n                   T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n                   T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel))", "by (simp add: fullAbs, blast)"], ["", "lemma (in encoding) full_abstraction_and_surjectivity_impl_SRel_iff_TRel_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and surj:    \"\\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\"\n  shows \"trans SRel \\<longleftrightarrow> trans TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans SRel = trans TRel", "using fullAbs surj\n            full_abstraction_impl_SRel_iff_TRel_is_trans[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>T. \\<exists>S. T = \\<lbrakk>S\\<rbrakk>\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> TRel) \\<Longrightarrow>\n  trans SRel =\n  trans\n   (_Collect (T1, T2)\n     (\\<exists>S1 S2.\n         T1 = \\<lbrakk>S1\\<rbrakk> \\<and>\n         T2 = \\<lbrakk>S2\\<rbrakk> \\<and> (T1, T2) \\<in> TRel))\n\ngoal (1 subgoal):\n 1. trans SRel = trans TRel", "by auto"], ["", "text \\<open>Similarly, a fully abstract encoding that respects a predicate ensures the this predicate\n        is preserved, reflected, or respected by SRel iff it is preserved, reflected, or respected\n        by TRel.\\<close>"], ["", "lemma (in encoding) full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_preserve:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_pred Pred\"\n  shows \"rel_preserves_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_preserves_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume presS: \"rel_preserves_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (state)\nthis:\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (2 subgoals):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_preserves_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "fix SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "assume \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\""], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "have \"Pred (SourceTerm SP)\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP)", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SP)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "moreover"], ["proof (state)\nthis:\n  Pred (SourceTerm SP)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "assume \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"(SP, SQ) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "ultimately"], ["proof (chain)\npicking this:\n  Pred (SourceTerm SP)\n  (SP, SQ) \\<in> SRel", "have \"Pred (SourceTerm SQ)\""], ["proof (prove)\nusing this:\n  Pred (SourceTerm SP)\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ)", "using presS"], ["proof (prove)\nusing this:\n  Pred (SourceTerm SP)\n  (SP, SQ) \\<in> SRel\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ)", "by blast"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SQ)", "show \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SQ)\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume presT:\n    \"rel_preserves_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (state)\nthis:\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_preserves_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "fix SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "assume \"Pred (SourceTerm SP)\""], ["proof (state)\nthis:\n  Pred (SourceTerm SP)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SP)", "have \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SP)\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "moreover"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "assume \"(SP, SQ) \\<in> SRel\""], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "ultimately"], ["proof (chain)\npicking this:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\""], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "using presT"], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "by blast"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SP) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ)", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "show \"Pred (SourceTerm SQ)\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ)", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_preserve:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_binary_pred Pred\"\n  shows \"rel_preserves_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_preserves_binary_pred\n             {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume presS:\n    \"rel_preserves_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (state)\nthis:\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (2 subgoals):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_preserves_binary_pred\n        {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "fix x SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "assume \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\""], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "have \"Pred (SourceTerm SP) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP) x", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SP) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "moreover"], ["proof (state)\nthis:\n  Pred (SourceTerm SP) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "assume \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"(SP, SQ) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "ultimately"], ["proof (chain)\npicking this:\n  Pred (SourceTerm SP) x\n  (SP, SQ) \\<in> SRel", "have \"Pred (SourceTerm SQ) x\""], ["proof (prove)\nusing this:\n  Pred (SourceTerm SP) x\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ) x", "using presS"], ["proof (prove)\nusing this:\n  Pred (SourceTerm SP) x\n  (SP, SQ) \\<in> SRel\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ) x", "by blast"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SQ) x", "show \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SQ) x\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume presT:\n    \"rel_preserves_binary_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (state)\nthis:\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_preserves_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "fix x SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "assume \"Pred (SourceTerm SP) x\""], ["proof (state)\nthis:\n  Pred (SourceTerm SP) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SP) x", "have \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SP) x\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "moreover"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "assume \"(SP, SQ) \\<in> SRel\""], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "ultimately"], ["proof (chain)\npicking this:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\""], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "using presT"], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "by blast"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SP) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SQ) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "show \"Pred (SourceTerm SQ) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ) x", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_reflects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_pred Pred\"\n  shows \"rel_reflects_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_reflects_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume reflS: \"rel_reflects_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (state)\nthis:\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (2 subgoals):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_reflects_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "fix SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "assume \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\""], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "have \"Pred (SourceTerm SQ)\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ)", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "moreover"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "assume \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"(SP, SQ) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "ultimately"], ["proof (chain)\npicking this:\n  Pred (SourceTerm SQ)\n  (SP, SQ) \\<in> SRel", "have \"Pred (SourceTerm SP)\""], ["proof (prove)\nusing this:\n  Pred (SourceTerm SQ)\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP)", "using reflS"], ["proof (prove)\nusing this:\n  Pred (SourceTerm SQ)\n  (SP, SQ) \\<in> SRel\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP)", "by blast"], ["proof (state)\nthis:\n  Pred (SourceTerm SP)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SP)", "show \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SP)\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume reflT:\n    \"rel_reflects_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (state)\nthis:\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_reflects_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "fix SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "assume \"Pred (SourceTerm SQ)\""], ["proof (state)\nthis:\n  Pred (SourceTerm SQ)\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SQ)", "have \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (SourceTerm SQ)\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "moreover"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "assume \"(SP, SQ) \\<in> SRel\""], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "ultimately"], ["proof (chain)\npicking this:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\""], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "using reflT"], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>))\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "by blast"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. \\<And>a b SP SQ.\n       Pred (SourceTerm SQ) \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP)", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))", "show \"Pred (SourceTerm SP)\""], ["proof (prove)\nusing this:\n  enc_respects_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>))\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP)", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SP)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_reflects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_binary_pred Pred\"\n  shows \"rel_reflects_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_reflects_binary_pred\n             {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume reflS:\n    \"rel_reflects_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (state)\nthis:\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (2 subgoals):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred\n 2. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_reflects_binary_pred\n        {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "fix x SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "assume \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\""], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "have \"Pred (SourceTerm SQ) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SQ) x", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "moreover"], ["proof (state)\nthis:\n  Pred (SourceTerm SQ) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "assume \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"(SP, SQ) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "ultimately"], ["proof (chain)\npicking this:\n  Pred (SourceTerm SQ) x\n  (SP, SQ) \\<in> SRel", "have \"Pred (SourceTerm SP) x\""], ["proof (prove)\nusing this:\n  Pred (SourceTerm SQ) x\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP) x", "using reflS"], ["proof (prove)\nusing this:\n  Pred (SourceTerm SQ) x\n  (SP, SQ) \\<in> SRel\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP) x", "by blast"], ["proof (state)\nthis:\n  Pred (SourceTerm SP) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x \\<and>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SP) x", "show \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SP) x\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "assume reflT:\n    \"rel_reflects_binary_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (state)\nthis:\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred \\<Longrightarrow>\n    rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "show \"rel_reflects_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "fix x SP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "assume \"Pred (SourceTerm SQ) x\""], ["proof (state)\nthis:\n  Pred (SourceTerm SQ) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SQ) x", "have \"Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (SourceTerm SQ) x\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x", "by simp"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "moreover"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "assume \"(SP, SQ) \\<in> SRel\""], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "ultimately"], ["proof (chain)\npicking this:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "have \"Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\""], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "using reflT"], ["proof (prove)\nusing this:\n  Pred (TargetTerm (\\<lbrakk>SQ\\<rbrakk>)) x\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "by blast"], ["proof (state)\nthis:\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. \\<And>a b x SP SQ.\n       Pred (SourceTerm SQ) x \\<and> (SP, SQ) \\<in> SRel \\<Longrightarrow>\n       Pred (SourceTerm SP) x", "with encP"], ["proof (chain)\npicking this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x", "show \"Pred (SourceTerm SP) x\""], ["proof (prove)\nusing this:\n  enc_respects_binary_pred Pred\n  Pred (TargetTerm (\\<lbrakk>SP\\<rbrakk>)) x\n\ngoal (1 subgoal):\n 1. Pred (SourceTerm SP) x", "by simp"], ["proof (state)\nthis:\n  Pred (SourceTerm SP) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_respects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_pred Pred\"\n  shows \"rel_respects_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_respects_pred {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_respects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_respects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "using assms full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_preserve[where\n                    SRel=\"SRel\" and TRel=\"TRel\" and Pred=\"Pred\"]\n            full_abstraction_and_enc_respects_pred_impl_SRel_iff_TRel_reflects[where\n              SRel=\"SRel\" and TRel=\"TRel\" and Pred=\"Pred\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  enc_respects_pred Pred\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  enc_respects_pred Pred \\<Longrightarrow>\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred =\n  rel_preserves_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  enc_respects_pred Pred \\<Longrightarrow>\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred =\n  rel_reflects_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_respects_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "by auto"], ["", "lemma (in encoding) full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_respects:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Pred :: \"('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and encP:    \"enc_respects_binary_pred Pred\"\n  shows \"rel_respects_binary_pred {(P, Q). \\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel} Pred\n         \\<longleftrightarrow> rel_respects_binary_pred\n             {(P, Q). \\<exists>SP SQ. \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and> \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel} Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_respects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_respects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "using assms full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_preserve[where\n                    SRel=\"SRel\" and TRel=\"TRel\" and Pred=\"Pred\"]\n            full_abstraction_and_enc_respects_binary_pred_impl_SRel_iff_TRel_reflects[where\n              SRel=\"SRel\" and TRel=\"TRel\" and Pred=\"Pred\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  enc_respects_binary_pred Pred\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  enc_respects_binary_pred Pred \\<Longrightarrow>\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred =\n  rel_preserves_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  enc_respects_binary_pred Pred \\<Longrightarrow>\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n   Pred =\n  rel_reflects_binary_pred\n   (_Collect (P, Q)\n     (\\<exists>SP SQ.\n         \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n         \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n         (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n   Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel))\n     Pred =\n    rel_respects_binary_pred\n     (_Collect (P, Q)\n       (\\<exists>SP SQ.\n           \\<lbrakk>SP\\<rbrakk> \\<in>T P \\<and>\n           \\<lbrakk>SQ\\<rbrakk> \\<in>T Q \\<and>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel))\n     Pred", "by auto"], ["", "subsection \\<open>Full Abstraction w.r.t. Preorders\\<close>"], ["", "text \\<open>If there however exists a trans relation Rel that relates source terms and their\n        literal translations in both directions, then the encoding is fully abstract with respect\n        to the reduction of Rel to source terms and the reduction of Rel to target terms.\\<close>"], ["", "lemma (in encoding) trans_source_target_relation_impl_full_abstraction:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                  \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and trans: \"trans Rel\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2)\n        \\<in> _Collect (S1, S2)\n               ((SourceTerm S1, SourceTerm S2) \\<in> Rel)) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel))", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "assume \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "with enc trans"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "show \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "assume \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "with enc trans"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "show \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) source_target_relation_impl_full_abstraction_wrt_trans_closures:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc: \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel\\<^sup>+}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2)\n        \\<in> _Collect (S1, S2)\n               ((SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+)) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> _Collect (T1, T2)\n               ((TargetTerm T1, TargetTerm T2) \\<in> Rel\\<^sup>+))", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "assume \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+\""], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\\<^sup>+\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\\<^sup>+\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+", "show \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "assume \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\""], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\\<^sup>+\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\\<^sup>+", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\\<^sup>+\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+", "show \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\\<^sup>+\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) quasi_trans_source_target_relation_impl_full_abstraction:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                  \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and srel:  \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and trel:  \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"\n      and trans: \"\\<forall>P Q R. (P, Q) \\<in> Rel \\<and> (Q, R) \\<in> Rel \\<and> ((P \\<in> ProcS \\<and> Q \\<in> ProcT)\n                  \\<or> (P \\<in> ProcT \\<and> Q \\<in> ProcS)) \\<longrightarrow> (P, R) \\<in> Rel\"\n  shows \"fully_abstract SRel TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with srel"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (S1, S2) \\<in> SRel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel", "using trans"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n  \\<forall>P Q R.\n     (P, Q) \\<in> Rel \\<and>\n     (Q, R) \\<in> Rel \\<and>\n     (P \\<in> ProcS \\<and> Q \\<in> ProcT \\<or>\n      P \\<in> ProcT \\<and> Q \\<in> ProcS) \\<longrightarrow>\n     (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "using trans"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S2) \\<in> Rel\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n  \\<forall>P Q R.\n     (P, Q) \\<in> Rel \\<and>\n     (Q, R) \\<in> Rel \\<and>\n     (P \\<in> ProcS \\<and> Q \\<in> ProcT \\<or>\n      P \\<in> ProcT \\<and> Q \\<in> ProcS) \\<longrightarrow>\n     (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with trel"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "show \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "assume \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with trel"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel", "using trans"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n  \\<forall>P Q R.\n     (P, Q) \\<in> Rel \\<and>\n     (Q, R) \\<in> Rel \\<and>\n     (P \\<in> ProcS \\<and> Q \\<in> ProcT \\<or>\n      P \\<in> ProcT \\<and> Q \\<in> ProcS) \\<longrightarrow>\n     (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "using trans"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel\n  \\<forall>P Q R.\n     (P, Q) \\<in> Rel \\<and>\n     (Q, R) \\<in> Rel \\<and>\n     (P \\<in> ProcS \\<and> Q \\<in> ProcT \\<or>\n      P \\<in> ProcT \\<and> Q \\<in> ProcS) \\<longrightarrow>\n     (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with srel"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "show \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If an encoding is fully abstract w.r.t. SRel and TRel, then we can conclude from a pair in\n        indRelRTPO or indRelSTEQ on a pair in TRel and SRel.\\<close>"], ["", "lemma (in encoding) full_abstraction_impl_indRelRSTPO_to_SRel_and_TRel:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and P Q  :: \"('procS, 'procT) Proc\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and rel:     \"P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\"\n  shows \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+\"\n    and \"\\<forall>SP TQ. SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>SP SQ.\n       SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+ &&&\n    \\<forall>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>SP SQ.\n       SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+\n 2. \\<forall>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "have fullAbsT: \"\\<forall>S1 S2. (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow> (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+", "assume \"(S1, S2) \\<in> SRel\\<^sup>+\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+", "thus \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (S1, S2) \\<in> SRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       (S1, y) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>) \\<in> TRel\\<^sup>+\n 2. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "fix S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       (S1, y) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>) \\<in> TRel\\<^sup>+\n 2. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       (S1, y) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>) \\<in> TRel\\<^sup>+\n 2. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S1, S2) \\<in> SRel", "show \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "case (step S2 S3)"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\\<^sup>+\n  (S2, S3) \\<in> SRel\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "assume \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\""], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "assume \"(S2, S3) \\<in> SRel\""], ["proof (state)\nthis:\n  (S2, S3) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S2, S3) \\<in> SRel", "have \"(\\<lbrakk>S2\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (S2, S3) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S2\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S2\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (S1, y) \\<in> SRel\\<^sup>+ \\<and>\n       (y, z) \\<in> SRel \\<and>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>y\\<rbrakk>)\n       \\<in> TRel\\<^sup>+ \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>z\\<rbrakk>) \\<in> TRel\\<^sup>+", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n  (\\<lbrakk>S2\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+", "show \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n  (\\<lbrakk>S2\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S3\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow>\n     (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<forall>SP SQ.\n       SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+\n 2. \\<forall>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "with rel"], ["proof (chain)\npicking this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  \\<forall>S1 S2.\n     (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow>\n     (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+", "show \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  \\<forall>S1 S2.\n     (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow>\n     (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<forall>SP SQ.\n       SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+", "using indRelRSTPO_to_SRel_and_TRel(1)[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  \\<forall>S1 S2.\n     (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow>\n     (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<forall>SP SQ.\n       SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<forall>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "show \"\\<forall>SP TQ. SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "fix SP TQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "assume \"SP \\<in>S P\" and \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  SP \\<in>S P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "with rel"], ["proof (chain)\npicking this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q", "obtain S where A1: \"(SP, S) \\<in> SRel\\<^sup>*\"\n                        and A2: \"(\\<lbrakk>S\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\""], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        (SP, S) \\<in> SRel\\<^sup>* \\<and>\n        (\\<lbrakk>S\\<rbrakk>, TQ) \\<in> TRel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using indRelRSTPO_to_SRel_and_TRel(2)[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<exists>S.\n         (SP, S) \\<in> SRel\\<^sup>* \\<and>\n         (\\<lbrakk>S\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        (SP, S) \\<in> SRel\\<^sup>* \\<and>\n        (\\<lbrakk>S\\<rbrakk>, TQ) \\<in> TRel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (SP, S) \\<in> SRel\\<^sup>*\n  (\\<lbrakk>S\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "from A1"], ["proof (chain)\npicking this:\n  (SP, S) \\<in> SRel\\<^sup>*", "have \"SP = S \\<or> (SP, S) \\<in> SRel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (SP, S) \\<in> SRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. SP = S \\<or> (SP, S) \\<in> SRel\\<^sup>+", "using rtrancl_eq_or_trancl[of SP S SRel]"], ["proof (prove)\nusing this:\n  (SP, S) \\<in> SRel\\<^sup>*\n  ((SP, S) \\<in> SRel\\<^sup>*) =\n  (SP = S \\<or> SP \\<noteq> S \\<and> (SP, S) \\<in> SRel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. SP = S \\<or> (SP, S) \\<in> SRel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  SP = S \\<or> (SP, S) \\<in> SRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "with fullAbsT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow>\n     (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n  SP = S \\<or> (SP, S) \\<in> SRel\\<^sup>+", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     (S1, S2) \\<in> SRel\\<^sup>+ \\<longrightarrow>\n     (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\\<^sup>+\n  SP = S \\<or> (SP, S) \\<in> SRel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\\<^sup>*", "by fast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "from this A2"], ["proof (chain)\npicking this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\\<^sup>*\n  (\\<lbrakk>S\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "show \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>S\\<rbrakk>) \\<in> TRel\\<^sup>*\n  (\\<lbrakk>S\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>SP TQ.\n     SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and P Q  :: \"('procS, 'procT) Proc\"\n  assumes fA:     \"fully_abstract SRel TRel\"\n      and transT: \"trans TRel\"\n      and reflS:  \"refl SRel\"\n      and rel:    \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q\"\n  shows \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (SP, SQ) \\<in> SRel\"\n    and \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n    and \"\\<forall>SP TQ. SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\"\n    and \"\\<forall>TP SQ. TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n    and \"\\<forall>TP TQ. TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n        (SP, SQ) \\<in> SRel &&&\n     \\<forall>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n        (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) &&&\n    \\<forall>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel &&&\n    \\<forall>TP SQ.\n       TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel &&&\n    \\<forall>TP TQ.\n       TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel", "using rel"], ["proof (prove)\nusing this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q\n\ngoal (1 subgoal):\n 1. (\\<forall>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n        (SP, SQ) \\<in> SRel &&&\n     \\<forall>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n        (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) &&&\n    \\<forall>SP TQ.\n       SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel &&&\n    \\<forall>TP SQ.\n       TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel &&&\n    \\<forall>TP TQ.\n       TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel", "proof induct"], ["proof (state)\ngoal (25 subgoals):\n 1. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S \\<and>\n          SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S \\<and>\n          SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S \\<and>\n          TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S \\<and>\n          SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S.\n       \\<forall>TP TQ.\n          TP \\<in>T SourceTerm S \\<and>\n          TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>S.\n        \\<forall>TP TQ.\n           TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n           TQ \\<in>T SourceTerm S \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 25 subgoals...", "case (encR S)"], ["proof (state)\nthis:\n  \n\ngoal (25 subgoals):\n 1. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S \\<and>\n          SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S \\<and>\n          SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S \\<and>\n          TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S \\<and>\n          SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S.\n       \\<forall>TP TQ.\n          TP \\<in>T SourceTerm S \\<and>\n          TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>S.\n        \\<forall>TP TQ.\n           TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n           TQ \\<in>T SourceTerm S \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 25 subgoals...", "show \"\\<forall>SP SQ. SP \\<in>S SourceTerm S \\<and> SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow> (SP, SQ) \\<in> SRel\"\n   and \"\\<forall>SP SQ. SP \\<in>S SourceTerm S \\<and> SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n   and \"\\<forall>TP SQ. TP \\<in>T SourceTerm S \\<and> SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n   and \"\\<forall>TP TQ. TP \\<in>T SourceTerm S \\<and> TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow> (TP, TQ) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>SP SQ.\n        SP \\<in>S SourceTerm S \\<and>\n        SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n        (SP, SQ) \\<in> SRel &&&\n     \\<forall>SP SQ.\n        SP \\<in>S SourceTerm S \\<and>\n        SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n        (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) &&&\n    \\<forall>TP SQ.\n       TP \\<in>T SourceTerm S \\<and>\n       SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel &&&\n    \\<forall>TP TQ.\n       TP \\<in>T SourceTerm S \\<and>\n       TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n       (TP, TQ) \\<in> TRel", "by simp+"], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     SP \\<in>S SourceTerm S \\<and>\n     SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S SourceTerm S \\<and>\n     SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>TP SQ.\n     TP \\<in>T SourceTerm S \\<and>\n     SQ \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T SourceTerm S \\<and>\n     TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n\ngoal (21 subgoals):\n 1. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S \\<and>\n          TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 2. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 3. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 4. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 5. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 6. \\<And>S.\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 7. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 8. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 9. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 10. \\<And>S1 S2.\n        (S1, S2) \\<in> SRel \\<Longrightarrow>\n        \\<forall>TP SQ.\n           TP \\<in>T SourceTerm S1 \\<and>\n           SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\nA total of 21 subgoals...", "from reflS fA"], ["proof (chain)\npicking this:\n  refl SRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "show \"\\<forall>SP TQ. SP \\<in>S SourceTerm S \\<and> TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<forall>SP TQ.\n       SP \\<in>S SourceTerm S \\<and>\n       TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<forall>SP TQ.\n       SP \\<in>S SourceTerm S \\<and>\n       TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>SP TQ.\n     SP \\<in>S SourceTerm S \\<and>\n     TQ \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (20 subgoals):\n 1. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S.\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>S1 S2.\n        (S1, S2) \\<in> SRel \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T SourceTerm S1 \\<and>\n           TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 20 subgoals...", "next"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S.\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>S1 S2.\n        (S1, S2) \\<in> SRel \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T SourceTerm S1 \\<and>\n           TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 20 subgoals...", "case (encL S)"], ["proof (state)\nthis:\n  \n\ngoal (20 subgoals):\n 1. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S.\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S.\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S.\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          TQ \\<in>T SourceTerm S \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>S1 S2.\n        (S1, S2) \\<in> SRel \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T SourceTerm S1 \\<and>\n           TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 20 subgoals...", "show \"\\<forall>SP SQ. SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and> SQ \\<in>S SourceTerm S \\<longrightarrow> (SP, SQ) \\<in> SRel\"\n   and \"\\<forall>SP SQ. SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and> SQ \\<in>S SourceTerm S \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n   and \"\\<forall>SP TQ. SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and> TQ \\<in>T SourceTerm S \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\"\n   and \"\\<forall>TP TQ. TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and> TQ \\<in>T SourceTerm S \\<longrightarrow> (TP, TQ) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>SP SQ.\n        SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n        SQ \\<in>S SourceTerm S \\<longrightarrow>\n        (SP, SQ) \\<in> SRel &&&\n     \\<forall>SP SQ.\n        SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n        SQ \\<in>S SourceTerm S \\<longrightarrow>\n        (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) &&&\n    \\<forall>SP TQ.\n       SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n       TQ \\<in>T SourceTerm S \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel &&&\n    \\<forall>TP TQ.\n       TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n       TQ \\<in>T SourceTerm S \\<longrightarrow>\n       (TP, TQ) \\<in> TRel", "by simp+"], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n\ngoal (16 subgoals):\n 1. \\<And>S.\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n          SQ \\<in>S SourceTerm S \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 3. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 4. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 5. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 6. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 7. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 8. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 9. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 10. \\<And>T1 T2.\n        (T1, T2) \\<in> TRel \\<Longrightarrow>\n        \\<forall>TP SQ.\n           TP \\<in>T TargetTerm T1 \\<and>\n           SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\nA total of 16 subgoals...", "with reflS fA"], ["proof (chain)\npicking this:\n  refl SRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (TP, TQ) \\<in> TRel", "show \"\\<forall>TP SQ. TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and> SQ \\<in>S SourceTerm S \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<forall>TP SQ.\n       TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n       SQ \\<in>S SourceTerm S \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TQ \\<in>T SourceTerm S \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<forall>TP SQ.\n       TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n       SQ \\<in>S SourceTerm S \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>TP SQ.\n     TP \\<in>T TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<and>\n     SQ \\<in>S SourceTerm S \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (15 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>T1 T2.\n        (T1, T2) \\<in> TRel \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T TargetTerm T1 \\<and>\n           TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>T1 T2.\n        (T1, T2) \\<in> TRel \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T TargetTerm T1 \\<and>\n           TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 15 subgoals...", "case (source S1 S2)"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (15 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T SourceTerm S1 \\<and>\n          TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>T1 T2.\n        (T1, T2) \\<in> TRel \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T TargetTerm T1 \\<and>\n           TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n           (TP, TQ) \\<in> TRel\nA total of 15 subgoals...", "show \"\\<forall>SP TQ. SP \\<in>S SourceTerm S1 \\<and> TQ \\<in>T SourceTerm S2 \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\"\n   and \"\\<forall>TP SQ. TP \\<in>T SourceTerm S1 \\<and> SQ \\<in>S SourceTerm S2 \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n   and \"\\<forall>TP TQ. TP \\<in>T SourceTerm S1 \\<and> TQ \\<in>T SourceTerm S2 \\<longrightarrow> (TP, TQ) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>SP TQ.\n       SP \\<in>S SourceTerm S1 \\<and>\n       TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel &&&\n    \\<forall>TP SQ.\n       TP \\<in>T SourceTerm S1 \\<and>\n       SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel &&&\n    \\<forall>TP TQ.\n       TP \\<in>T SourceTerm S1 \\<and>\n       TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n       (TP, TQ) \\<in> TRel", "by simp+"], ["proof (state)\nthis:\n  \\<forall>SP TQ.\n     SP \\<in>S SourceTerm S1 \\<and>\n     TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP SQ.\n     TP \\<in>T SourceTerm S1 \\<and>\n     SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T SourceTerm S1 \\<and>\n     TQ \\<in>T SourceTerm S2 \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n\ngoal (12 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 4. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 6. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 7. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 8. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 9. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>P Q R.\n        P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<and>\n        Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n        \\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\nA total of 12 subgoals...", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (12 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 4. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 6. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 7. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 8. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 9. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>P Q R.\n        P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<and>\n        Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n        \\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\nA total of 12 subgoals...", "thus \"\\<forall>SP SQ. SP \\<in>S SourceTerm S1 \\<and> SQ \\<in>S SourceTerm S2 \\<longrightarrow> (SP, SQ) \\<in> SRel\""], ["proof (prove)\nusing this:\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<forall>SP SQ.\n       SP \\<in>S SourceTerm S1 \\<and>\n       SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n       (SP, SQ) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     SP \\<in>S SourceTerm S1 \\<and>\n     SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n\ngoal (11 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S SourceTerm S1 \\<and>\n          SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 2. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 3. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 4. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 5. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 6. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 7. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 8. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 9. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 10. \\<And>P Q R.\n        P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<and>\n        Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n        \\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\nA total of 11 subgoals...", "with fA"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>SP SQ.\n     SP \\<in>S SourceTerm S1 \\<and>\n     SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n     (SP, SQ) \\<in> SRel", "show \"\\<forall>SP SQ. SP \\<in>S SourceTerm S1 \\<and> SQ \\<in>S SourceTerm S2 \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>SP SQ.\n     SP \\<in>S SourceTerm S1 \\<and>\n     SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<forall>SP SQ.\n       SP \\<in>S SourceTerm S1 \\<and>\n       SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     SP \\<in>S SourceTerm S1 \\<and>\n     SQ \\<in>S SourceTerm S2 \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (10 subgoals):\n 1. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>P Q R.\n        P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<and>\n        Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>P Q R.\n        P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<and>\n        Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel", "case (target T1 T2)"], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (10 subgoals):\n 1. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 6. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 7. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 8. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 9. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 10. \\<And>P Q R.\n        P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<and>\n        Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (SP, SQ) \\<in> SRel) \\<and>\n        (\\<forall>SP SQ.\n            SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>SP TQ.\n            SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n        (\\<forall>TP SQ.\n            TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n            (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n        (\\<forall>TP TQ.\n            TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n            (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n        \\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel", "show \"\\<forall>SP SQ. SP \\<in>S TargetTerm T1 \\<and> SQ \\<in>S TargetTerm T2 \\<longrightarrow> (SP, SQ) \\<in> SRel\"\n   and \"\\<forall>SP SQ. SP \\<in>S TargetTerm T1 \\<and> SQ \\<in>S TargetTerm T2 \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n   and \"\\<forall>SP TQ. SP \\<in>S TargetTerm T1 \\<and> TQ \\<in>T TargetTerm T2 \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\"\n   and \"\\<forall>TP SQ. TP \\<in>T TargetTerm T1 \\<and> SQ \\<in>S TargetTerm T2 \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>SP SQ.\n        SP \\<in>S TargetTerm T1 \\<and>\n        SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n        (SP, SQ) \\<in> SRel &&&\n     \\<forall>SP SQ.\n        SP \\<in>S TargetTerm T1 \\<and>\n        SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n        (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) &&&\n    \\<forall>SP TQ.\n       SP \\<in>S TargetTerm T1 \\<and>\n       TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel &&&\n    \\<forall>TP SQ.\n       TP \\<in>T TargetTerm T1 \\<and>\n       SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp+"], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm T1 \\<and>\n     SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S TargetTerm T1 \\<and>\n     SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S TargetTerm T1 \\<and>\n     TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP SQ.\n     TP \\<in>T TargetTerm T1 \\<and>\n     SQ \\<in>S TargetTerm T2 \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (6 subgoals):\n 1. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 4. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 5. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 6. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "assume \"(T1, T2) \\<in> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (6 subgoals):\n 1. \\<And>T1 T2.\n       (T1, T2) \\<in> TRel \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T TargetTerm T1 \\<and>\n          TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n          (TP, TQ) \\<in> TRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 4. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 5. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 6. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "thus \"\\<forall>TP TQ. TP \\<in>T TargetTerm T1 \\<and> TQ \\<in>T TargetTerm T2 \\<longrightarrow> (TP, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<forall>TP TQ.\n       TP \\<in>T TargetTerm T1 \\<and>\n       TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n       (TP, TQ) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>TP TQ.\n     TP \\<in>T TargetTerm T1 \\<and>\n     TQ \\<in>T TargetTerm T2 \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n\ngoal (5 subgoals):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "case (trans P Q R)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP SQ.\n     TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n  Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n  \\<forall>SP SQ.\n     SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow> (SP, SQ) \\<in> SRel\n  \\<forall>SP SQ.\n     SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP SQ.\n     TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow> (TP, TQ) \\<in> TRel\n\ngoal (5 subgoals):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "assume A1: \"\\<forall>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n     and A2: \"\\<forall>SP TQ. SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\"\n     and A3: \"\\<forall>TP SQ. TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\"\n     and A4: \"\\<forall>TP TQ. TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\"\n     and A5: \"\\<forall>SQ SR. SQ \\<in>S Q \\<and> SR \\<in>S R \\<longrightarrow> (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\"\n     and A6: \"\\<forall>SQ TR. SQ \\<in>S Q \\<and> TR \\<in>T R \\<longrightarrow> (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\"\n     and A7: \"\\<forall>TQ SR. TQ \\<in>T Q \\<and> SR \\<in>S R \\<longrightarrow> (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\"\n     and A8: \"\\<forall>TQ TR. TQ \\<in>T Q \\<and> TR \\<in>T R \\<longrightarrow> (TQ, TR) \\<in> TRel\""], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>SP TQ.\n     SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>TP SQ.\n     TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  \\<forall>TP TQ.\n     TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n  \\<forall>SQ SR.\n     SQ \\<in>S Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  \\<forall>SQ TR.\n     SQ \\<in>S Q \\<and> TR \\<in>T R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  \\<forall>TQ SR.\n     TQ \\<in>T Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  \\<forall>TQ TR.\n     TQ \\<in>T Q \\<and> TR \\<in>T R \\<longrightarrow> (TQ, TR) \\<in> TRel\n\ngoal (5 subgoals):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 4. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 5. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "show \"\\<forall>SP SR. SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>SP SR.\n       SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP SR.\n       SP \\<in>S P \\<and> SR \\<in>S R \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "fix SP SR"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP SR.\n       SP \\<in>S P \\<and> SR \\<in>S R \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "assume A9: \"SP \\<in>S P\" and A10: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  SP \\<in>S P\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. \\<And>SP SR.\n       SP \\<in>S P \\<and> SR \\<in>S R \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "show \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "assume A11: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "with A1 A9"], ["proof (chain)\npicking this:\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SP \\<in>S P\n  SQ \\<in>S Q", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "from A5 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>SQ SR.\n     SQ \\<in>S Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  SQ \\<in>S Q", "have \"(\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SQ SR.\n     SQ \\<in>S Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "show \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "assume A11: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "with A2 A9"], ["proof (chain)\npicking this:\n  \\<forall>SP TQ.\n     SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SP \\<in>S P\n  TQ \\<in>T Q", "have \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SP TQ.\n     SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SP \\<in>S P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "from A7 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>TQ SR.\n     TQ \\<in>T Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  TQ \\<in>T Q", "have \"(TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TQ SR.\n     TQ \\<in>T Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "show \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>SP SR.\n     SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (4 subgoals):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP SQ.\n          SP \\<in>S P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (SP, SQ) \\<in> SRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 4. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "with fA"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>SP SR.\n     SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "show \"\\<forall>SP SR. SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow> (SP, SR) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>SP SR.\n     SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<forall>SP SR.\n       SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow> (SP, SR) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>SP SR.\n     SP \\<in>S P \\<and> SR \\<in>S R \\<longrightarrow> (SP, SR) \\<in> SRel\n\ngoal (3 subgoals):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>SP TQ.\n          SP \\<in>S P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 3. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "show \"\\<forall>SP TR. SP \\<in>S P \\<and> TR \\<in>T R \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>SP TR.\n       SP \\<in>S P \\<and> TR \\<in>T R \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP TR.\n       SP \\<in>S P \\<and> TR \\<in>T R \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "fix SP TR"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP TR.\n       SP \\<in>S P \\<and> TR \\<in>T R \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "assume A9: \"SP \\<in>S P\" and A10: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  SP \\<in>S P\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>SP TR.\n       SP \\<in>S P \\<and> TR \\<in>T R \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "show \"(\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "assume A11: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "with A1 A9"], ["proof (chain)\npicking this:\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SP \\<in>S P\n  SQ \\<in>S Q", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SP SQ.\n     SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "from A6 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>SQ TR.\n     SQ \\<in>S Q \\<and> TR \\<in>T R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  TR \\<in>T R\n  SQ \\<in>S Q", "have \"(\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SQ TR.\n     SQ \\<in>S Q \\<and> TR \\<in>T R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  TR \\<in>T R\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "show \"(\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "assume A11: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "with A2 A9"], ["proof (chain)\npicking this:\n  \\<forall>SP TQ.\n     SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SP \\<in>S P\n  TQ \\<in>T Q", "have \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SP TQ.\n     SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SP \\<in>S P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "from A8 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>TQ TR.\n     TQ \\<in>T Q \\<and> TR \\<in>T R \\<longrightarrow> (TQ, TR) \\<in> TRel\n  TR \\<in>T R\n  TQ \\<in>T Q", "have \"(TQ, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TQ TR.\n     TQ \\<in>T Q \\<and> TR \\<in>T R \\<longrightarrow> (TQ, TR) \\<in> TRel\n  TR \\<in>T R\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel", "show \"(\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>SP TR.\n     SP \\<in>S P \\<and> TR \\<in>T R \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP SQ.\n          TP \\<in>T P \\<and> SQ \\<in>S R \\<longrightarrow>\n          (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n 2. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "show \"\\<forall>TP SR. TP \\<in>T P \\<and> SR \\<in>S R \\<longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>TP SR.\n       TP \\<in>T P \\<and> SR \\<in>S R \\<longrightarrow>\n       (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>TP SR.\n       TP \\<in>T P \\<and> SR \\<in>S R \\<Longrightarrow>\n       (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "fix TP SR"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>TP SR.\n       TP \\<in>T P \\<and> SR \\<in>S R \\<Longrightarrow>\n       (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "assume A9: \"TP \\<in>T P\" and A10: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  TP \\<in>T P\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. \\<And>TP SR.\n       TP \\<in>T P \\<and> SR \\<in>S R \\<Longrightarrow>\n       (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "show \"(TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "assume A11: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "with A3 A9"], ["proof (chain)\npicking this:\n  \\<forall>TP SQ.\n     TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TP \\<in>T P\n  SQ \\<in>S Q", "have \"(TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TP SQ.\n     TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TP \\<in>T P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "from A5 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>SQ SR.\n     SQ \\<in>S Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  SQ \\<in>S Q", "have \"(\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SQ SR.\n     SQ \\<in>S Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "show \"(TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "assume A11: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "with A4 A9"], ["proof (chain)\npicking this:\n  \\<forall>TP TQ.\n     TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n  TP \\<in>T P\n  TQ \\<in>T Q", "have \"(TP, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TP TQ.\n     TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n  TP \\<in>T P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TP, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "from A7 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>TQ SR.\n     TQ \\<in>T Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  TQ \\<in>T Q", "have \"(TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TQ SR.\n     TQ \\<in>T Q \\<and> SR \\<in>S R \\<longrightarrow>\n     (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  SR \\<in>S R\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow> (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (TP, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "show \"(TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (TP, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (TP, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TP, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>TP SR.\n     TP \\<in>T P \\<and> SR \\<in>S R \\<longrightarrow>\n     (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> Q \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<and>\n       Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (SP, SQ) \\<in> SRel) \\<and>\n       (\\<forall>SP SQ.\n           SP \\<in>S Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>SP TQ.\n           SP \\<in>S Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel) \\<and>\n       (\\<forall>TP SQ.\n           TP \\<in>T Q \\<and> SQ \\<in>S R \\<longrightarrow>\n           (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel) \\<and>\n       (\\<forall>TP TQ.\n           TP \\<in>T Q \\<and> TQ \\<in>T R \\<longrightarrow>\n           (TP, TQ) \\<in> TRel) \\<Longrightarrow>\n       \\<forall>TP TQ.\n          TP \\<in>T P \\<and> TQ \\<in>T R \\<longrightarrow>\n          (TP, TQ) \\<in> TRel", "show \"\\<forall>TP TR. TP \\<in>T P \\<and> TR \\<in>T R \\<longrightarrow> (TP, TR) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>TP TR.\n       TP \\<in>T P \\<and> TR \\<in>T R \\<longrightarrow> (TP, TR) \\<in> TRel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>TP TR.\n       TP \\<in>T P \\<and> TR \\<in>T R \\<Longrightarrow> (TP, TR) \\<in> TRel", "fix TP TR"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>TP TR.\n       TP \\<in>T P \\<and> TR \\<in>T R \\<Longrightarrow> (TP, TR) \\<in> TRel", "assume A9: \"TP \\<in>T P\" and A10: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  TP \\<in>T P\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>TP TR.\n       TP \\<in>T P \\<and> TR \\<in>T R \\<Longrightarrow> (TP, TR) \\<in> TRel", "show \"(TP, TR) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (TP, TR) \\<in> TRel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (TP, TR) \\<in> TRel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "assume A11: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (TP, TR) \\<in> TRel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "with A3 A9"], ["proof (chain)\npicking this:\n  \\<forall>TP SQ.\n     TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TP \\<in>T P\n  SQ \\<in>S Q", "have \"(TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TP SQ.\n     TP \\<in>T P \\<and> SQ \\<in>S Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TP \\<in>T P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (TP, TR) \\<in> TRel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (TP, TR) \\<in> TRel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "from A6 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>SQ TR.\n     SQ \\<in>S Q \\<and> TR \\<in>T R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  TR \\<in>T R\n  SQ \\<in>S Q", "have \"(\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>SQ TR.\n     SQ \\<in>S Q \\<and> TR \\<in>T R \\<longrightarrow>\n     (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  TR \\<in>T R\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (TP, TR) \\<in> TRel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "show \"(TP, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "assume A11: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "with A4 A9"], ["proof (chain)\npicking this:\n  \\<forall>TP TQ.\n     TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n  TP \\<in>T P\n  TQ \\<in>T Q", "have \"(TP, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TP TQ.\n     TP \\<in>T P \\<and> TQ \\<in>T Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n  TP \\<in>T P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TP, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "from A8 A10 A11"], ["proof (chain)\npicking this:\n  \\<forall>TQ TR.\n     TQ \\<in>T Q \\<and> TR \\<in>T R \\<longrightarrow> (TQ, TR) \\<in> TRel\n  TR \\<in>T R\n  TQ \\<in>T Q", "have \"(TQ, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>TQ TR.\n     TQ \\<in>T Q \\<and> TR \\<in>T R \\<longrightarrow> (TQ, TR) \\<in> TRel\n  TR \\<in>T R\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (TP, TR) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel", "show \"(TP, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>TP TR.\n     TP \\<in>T P \\<and> TR \\<in>T R \\<longrightarrow> (TP, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If an encoding is fully abstract w.r.t. a preorder SRel on the source and a trans\n        relation TRel on the target, then there exists a trans relation, namely indRelSTEQ,\n        that relates source terms and their literal translations in both direction such that its\n        reductions to source terms is SRel and its reduction to target terms is TRel.\\<close>"], ["", "lemma (in encoding) full_abstraction_wrt_preorders_impl_trans_source_target_relation:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and reflS:   \"refl SRel\"\n      and transT:  \"trans TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                     \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "have \"\\<forall>S. SourceTerm S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm (\\<lbrakk>S\\<rbrakk>)\n        \\<and> TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S.\n       SourceTerm\n        S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                (\\<lbrakk>S\\<rbrakk>) \\<and>\n       TargetTerm\n        (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                    S", "using indRelSTEQ.encR[where SRel=\"SRel\" and TRel=\"TRel\"]\n            indRelSTEQ.encL[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  SourceTerm\n   ?S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n            (\\<lbrakk>?S\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>?S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                ?S\n\ngoal (1 subgoal):\n 1. \\<forall>S.\n       SourceTerm\n        S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                (\\<lbrakk>S\\<rbrakk>) \\<and>\n       TargetTerm\n        (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                    S", "by blast"], ["proof (state)\nthis:\n  \\<forall>S.\n     SourceTerm\n      S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n              (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TargetTerm\n      (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                  S\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "moreover"], ["proof (state)\nthis:\n  \\<forall>S.\n     SourceTerm\n      S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n              (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TargetTerm\n      (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                  S\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "have \"SRel = {(S1, S2). SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SRel =\n    _Collect (S1, S2)\n     (SourceTerm\n       S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b\n 2. \\<And>a b.\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b\n 2. \\<And>a b.\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b\n 2. \\<And>a b.\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "thus \"SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\""], ["proof (prove)\nusing this:\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2", "by (rule indRelSTEQ.source[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\""], ["proof (state)\nthis:\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "with fullAbs reflS transT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2", "show \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(1)[where SRel=\"SRel\"\n                and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow> (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SRel =\n  _Collect (S1, S2)\n   (SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "moreover"], ["proof (state)\nthis:\n  SRel =\n  _Collect (S1, S2)\n   (SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "have \"TRel =  {(T1, T2). TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TRel =\n    _Collect (T1, T2)\n     (TargetTerm\n       T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b\n 2. \\<And>a b.\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "fix T1 T2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b\n 2. \\<And>a b.\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "assume \"(T1, T2) \\<in> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b\n 2. \\<And>a b.\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "thus \"TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\""], ["proof (prove)\nusing this:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2", "by (rule indRelSTEQ.target[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "fix T1 T2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "assume \"TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\""], ["proof (state)\nthis:\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "with fullAbs reflS transT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2", "show \"(T1, T2) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. (T1, T2) \\<in> TRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(5)[where SRel=\"SRel\"\n                and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T1, T2) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  TRel =\n  _Collect (T1, T2)\n   (TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "moreover"], ["proof (state)\nthis:\n  TRel =\n  _Collect (T1, T2)\n   (TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "have \"trans (indRelSTEQ SRel TRel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (indRelSTEQ SRel TRel)", "using indRelSTEQ.trans[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<and>\n  ?Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R \\<Longrightarrow>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R\n\ngoal (1 subgoal):\n 1. trans (indRelSTEQ SRel TRel)", "unfolding trans_def"], ["proof (prove)\nusing this:\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<and>\n  ?Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R \\<Longrightarrow>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       x \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> y \\<longrightarrow>\n       y \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> z \\<longrightarrow>\n       x \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> z", "by blast"], ["proof (state)\nthis:\n  trans (indRelSTEQ SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     SourceTerm\n      S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n              (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TargetTerm\n      (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                  S\n  SRel =\n  _Collect (S1, S2)\n   (SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2)\n  TRel =\n  _Collect (T1, T2)\n   (TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2)\n  trans (indRelSTEQ SRel TRel)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     SourceTerm\n      S \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n              (\\<lbrakk>S\\<rbrakk>) \\<and>\n     TargetTerm\n      (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                  S\n  SRel =\n  _Collect (S1, S2)\n   (SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2)\n  TRel =\n  _Collect (T1, T2)\n   (TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2)\n  trans (indRelSTEQ SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n         (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Thus an encoding is fully abstract w.r.t. a preorder SRel on the source and a trans\n        relation TRel on the target iff there exists a trans relation that relates source\n        terms and their literal translations in both directions and whose reduction to\n        source/target terms is SRel/TRel.\\<close>"], ["", "theorem (in encoding) fully_abstract_wrt_preorders_iff_source_target_relation_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"(fully_abstract SRel TRel \\<and> refl SRel \\<and> trans TRel) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                      \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>S1 S2.\n         ((S1, S2) \\<in> SRel) =\n         ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n     refl SRel \\<and> trans TRel) =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        trans Rel)", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "assume \"fully_abstract SRel TRel \\<and> refl SRel \\<and> trans TRel\""], ["proof (state)\nthis:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl SRel \\<and> trans TRel\n\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "thus \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans Rel\""], ["proof (prove)\nusing this:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl SRel \\<and> trans TRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "using full_abstraction_wrt_preorders_impl_trans_source_target_relation[where SRel=\"SRel\"\n              and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl SRel \\<and> trans TRel\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl SRel \\<and> trans TRel \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n         (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n         (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "assume \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                 \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans Rel\""], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n         (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "from this"], ["proof (chain)\npicking this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n         (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans Rel", "obtain Rel\n    where A1: \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and A2: \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and A3: \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\" and A4: \"trans Rel\""], ["proof (prove)\nusing this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n         (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans Rel\n\ngoal (1 subgoal):\n 1. (\\<And>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        trans Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "hence \"fully_abstract SRel TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans Rel\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "using trans_source_target_relation_impl_full_abstraction[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans Rel\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n      (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n  trans Rel \\<Longrightarrow>\n  \\<forall>S1 S2.\n     ((S1, S2)\n      \\<in> _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel))\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "by blast"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "moreover"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "have \"refl SRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl SRel", "unfolding refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "from A1"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "from A1"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(SourceTerm S, SourceTerm S) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "using A4"], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S, SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "with A2"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S, SourceTerm S) \\<in> Rel", "show \"(S, S) \\<in> SRel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S, SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (S, S) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (S, S) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  refl SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "moreover"], ["proof (state)\nthis:\n  refl SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "from A3 A4"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans Rel", "have \"trans TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans Rel\n\ngoal (1 subgoal):\n 1. trans TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> TRel \\<longrightarrow>\n       (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  trans TRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n           (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans Rel \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel", "show \"fully_abstract SRel TRel \\<and> refl SRel \\<and> trans TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "by blast"], ["proof (state)\nthis:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl SRel \\<and> trans TRel\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Full Abstraction w.r.t. Equivalences\\<close>"], ["", "text \\<open>If there exists a relation Rel that relates source terms and their literal translations\n        and whose sym closure is trans, then the encoding is fully abstract with respect\n        to the reduction of the sym closure of Rel to source/target terms.\\<close>"], ["", "lemma (in encoding) source_target_relation_with_trans_symcl_impl_full_abstraction:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trans: \"trans (symcl Rel)\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2)\n        \\<in> _Collect (S1, S2)\n               ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> _Collect (T1, T2)\n               ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel))", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "assume \"(SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\""], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "have \"(SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel", "show \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> symcl Rel", "using trans"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel\n  trans (symcl Rel)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> symcl Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> symcl Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel\n  \\<forall>x y z.\n     (x, y) \\<in> symcl Rel \\<longrightarrow>\n     (y, z) \\<in> symcl Rel \\<longrightarrow> (x, z) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> symcl Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "assume \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> symcl Rel\""], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "from enc"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> symcl Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> symcl Rel", "show \"(SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "using trans"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> symcl Rel\n  trans (symcl Rel)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> symcl Rel\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> symcl Rel\n  \\<forall>x y z.\n     (x, y) \\<in> symcl Rel \\<longrightarrow>\n     (y, z) \\<in> symcl Rel \\<longrightarrow> (x, z) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If an encoding is fully abstract w.r.t. the equivalences SRel and TRel, then there exists a\n        preorder, namely indRelRSTPO, that relates source terms and their literal translations such\n        that its reductions to source terms is SRel and its reduction to target terms is TRel.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_equivalences_impl_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and reflT:   \"refl TRel\"\n      and symmT:   \"sym TRel\"\n      and transT:  \"trans TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "from fullAbs reflT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl TRel", "have reflS: \"refl SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl TRel\n\ngoal (1 subgoal):\n 1. refl SRel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  TRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)", "by auto"], ["proof (state)\nthis:\n  refl SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "from fullAbs symmT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  sym TRel", "have symmS: \"sym SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  sym TRel\n\ngoal (1 subgoal):\n 1. sym SRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<forall>x y. (x, y) \\<in> SRel \\<longrightarrow> (y, x) \\<in> SRel", "by auto"], ["proof (state)\nthis:\n  sym SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "from fullAbs transT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel", "have transS: \"trans SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel\n\ngoal (1 subgoal):\n 1. trans SRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> SRel \\<longrightarrow>\n       (y, z) \\<in> SRel \\<longrightarrow> (x, z) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  trans SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"\\<forall>S. SourceTerm S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm (\\<lbrakk>S\\<rbrakk>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S.\n       SourceTerm\n        S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                     (\\<lbrakk>S\\<rbrakk>)", "using indRelRSTPO.encR[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  SourceTerm\n   ?S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 (\\<lbrakk>?S\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<forall>S.\n       SourceTerm\n        S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                     (\\<lbrakk>S\\<rbrakk>)", "by blast"], ["proof (state)\nthis:\n  \\<forall>S.\n     SourceTerm\n      S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   (\\<lbrakk>S\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "moreover"], ["proof (state)\nthis:\n  \\<forall>S.\n     SourceTerm\n      S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   (\\<lbrakk>S\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SRel =\n    _Collect (S1, S2)\n     ((SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel))", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       (SourceTerm a, SourceTerm b) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "thus \"(SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)\""], ["proof (prove)\nusing this:\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)", "by (simp add: symcl_def indRelRSTPO.source[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"(SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)\""], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "from transS"], ["proof (chain)\npicking this:\n  trans SRel", "have \"SourceTerm S1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm S2 \\<Longrightarrow> (S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  trans SRel\n\ngoal (1 subgoal):\n 1. SourceTerm\n     S1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                   S2 \\<Longrightarrow>\n    (S1, S2) \\<in> SRel", "using indRelRSTPO_to_SRel_and_TRel(1)[where SRel=\"SRel\" and TRel=\"TRel\"]\n              trancl_id[of SRel]"], ["proof (prove)\nusing this:\n  trans SRel\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\\<^sup>+\n  trans SRel \\<Longrightarrow> SRel\\<^sup>+ = SRel\n\ngoal (1 subgoal):\n 1. SourceTerm\n     S1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                   S2 \\<Longrightarrow>\n    (S1, S2) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  SourceTerm\n   S1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                 S2 \\<Longrightarrow>\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  SourceTerm\n   S1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                 S2 \\<Longrightarrow>\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "from symmS transS"], ["proof (chain)\npicking this:\n  sym SRel\n  trans SRel", "have \"SourceTerm S2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm S1 \\<Longrightarrow> (S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  sym SRel\n  trans SRel\n\ngoal (1 subgoal):\n 1. SourceTerm\n     S2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                   S1 \\<Longrightarrow>\n    (S1, S2) \\<in> SRel", "using indRelRSTPO_to_SRel_and_TRel(1)[where SRel=\"SRel\" and TRel=\"TRel\"]\n              trancl_id[of SRel]"], ["proof (prove)\nusing this:\n  sym SRel\n  trans SRel\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\\<^sup>+\n  trans SRel \\<Longrightarrow> SRel\\<^sup>+ = SRel\n\ngoal (1 subgoal):\n 1. SourceTerm\n     S2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                   S1 \\<Longrightarrow>\n    (S1, S2) \\<in> SRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> SRel \\<longrightarrow> (y, x) \\<in> SRel\n  trans SRel\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\\<^sup>+\n  trans SRel \\<Longrightarrow> SRel\\<^sup>+ = SRel\n\ngoal (1 subgoal):\n 1. SourceTerm\n     S2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                   S1 \\<Longrightarrow>\n    (S1, S2) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  SourceTerm\n   S2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                 S1 \\<Longrightarrow>\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (SourceTerm a, SourceTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)\n  SourceTerm\n   S1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                 S2 \\<Longrightarrow>\n  (S1, S2) \\<in> SRel\n  SourceTerm\n   S2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                 S1 \\<Longrightarrow>\n  (S1, S2) \\<in> SRel", "show \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel)\n  SourceTerm\n   S1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                 S2 \\<Longrightarrow>\n  (S1, S2) \\<in> SRel\n  SourceTerm\n   S2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> SourceTerm\n                 S1 \\<Longrightarrow>\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by (auto simp add: symcl_def)"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SRel =\n  _Collect (S1, S2)\n   ((SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "moreover"], ["proof (state)\nthis:\n  SRel =\n  _Collect (S1, S2)\n   ((SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"TRel =  {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TRel =\n    _Collect (T1, T2)\n     ((TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel))", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       (TargetTerm a, TargetTerm b) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "fix T1 T2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       (TargetTerm a, TargetTerm b) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "assume \"(T1, T2) \\<in> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       (TargetTerm a, TargetTerm b) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "thus \"(TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)\""], ["proof (prove)\nusing this:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)", "by (simp add: symcl_def indRelRSTPO.target[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  (TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "fix T1 T2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "assume \"(TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)\""], ["proof (state)\nthis:\n  (TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "from transT"], ["proof (chain)\npicking this:\n  trans TRel", "have \"TargetTerm T1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm T2 \\<Longrightarrow> (T1, T2) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n\ngoal (1 subgoal):\n 1. TargetTerm\n     T1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   T2 \\<Longrightarrow>\n    (T1, T2) \\<in> TRel", "using indRelRSTPO_to_SRel_and_TRel(4)[where SRel=\"SRel\" and TRel=\"TRel\"]\n              trancl_id[of TRel]"], ["proof (prove)\nusing this:\n  trans TRel\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\\<^sup>+\n  trans TRel \\<Longrightarrow> TRel\\<^sup>+ = TRel\n\ngoal (1 subgoal):\n 1. TargetTerm\n     T1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   T2 \\<Longrightarrow>\n    (T1, T2) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  TargetTerm\n   T1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 T2 \\<Longrightarrow>\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  TargetTerm\n   T1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 T2 \\<Longrightarrow>\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "from symmT transT"], ["proof (chain)\npicking this:\n  sym TRel\n  trans TRel", "have \"TargetTerm T2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm T1 \\<Longrightarrow> (T1, T2) \\<in> TRel\""], ["proof (prove)\nusing this:\n  sym TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. TargetTerm\n     T2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   T1 \\<Longrightarrow>\n    (T1, T2) \\<in> TRel", "using indRelRSTPO_to_SRel_and_TRel(4)[where SRel=\"SRel\" and TRel=\"TRel\"]\n              trancl_id[of TRel]"], ["proof (prove)\nusing this:\n  sym TRel\n  trans TRel\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\\<^sup>+\n  trans TRel \\<Longrightarrow> TRel\\<^sup>+ = TRel\n\ngoal (1 subgoal):\n 1. TargetTerm\n     T2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   T1 \\<Longrightarrow>\n    (T1, T2) \\<in> TRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel\n  trans TRel\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\\<^sup>+\n  trans TRel \\<Longrightarrow> TRel\\<^sup>+ = TRel\n\ngoal (1 subgoal):\n 1. TargetTerm\n     T2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   T1 \\<Longrightarrow>\n    (T1, T2) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  TargetTerm\n   T2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 T1 \\<Longrightarrow>\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (TargetTerm a, TargetTerm b)\n       \\<in> symcl (indRelRSTPO SRel TRel) \\<Longrightarrow>\n       (a, b) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)\n  TargetTerm\n   T1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 T2 \\<Longrightarrow>\n  (T1, T2) \\<in> TRel\n  TargetTerm\n   T2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 T1 \\<Longrightarrow>\n  (T1, T2) \\<in> TRel", "show \"(T1, T2) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel)\n  TargetTerm\n   T1 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 T2 \\<Longrightarrow>\n  (T1, T2) \\<in> TRel\n  TargetTerm\n   T2 \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                 T1 \\<Longrightarrow>\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T1, T2) \\<in> TRel", "by (auto simp add: symcl_def)"], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  TRel =\n  _Collect (T1, T2)\n   ((TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "moreover"], ["proof (state)\nthis:\n  TRel =\n  _Collect (T1, T2)\n   ((TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"refl (symcl (indRelRSTPO SRel TRel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (symcl (indRelRSTPO SRel TRel))", "unfolding refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. symcl (indRelRSTPO SRel TRel) \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> symcl (indRelRSTPO SRel TRel))", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> symcl (indRelRSTPO SRel TRel)", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> symcl (indRelRSTPO SRel TRel)", "show \"(P, P) \\<in> symcl (indRelRSTPO SRel TRel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "proof (cases P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "case (SourceTerm SP)"], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "assume \"SP \\<in>S P\""], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "with reflS"], ["proof (chain)\npicking this:\n  refl SRel\n  SP \\<in>S P", "show \"(P, P) \\<in> symcl (indRelRSTPO SRel TRel)\""], ["proof (prove)\nusing this:\n  refl SRel\n  SP \\<in>S P\n\ngoal (1 subgoal):\n 1. (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)\n  SP \\<in>S P\n\ngoal (1 subgoal):\n 1. (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "by (simp add: symcl_def indRelRSTPO.source)"], ["proof (state)\nthis:\n  (P, P) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "case (TargetTerm TP)"], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "assume \"TP \\<in>T P\""], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "with reflT"], ["proof (chain)\npicking this:\n  refl TRel\n  TP \\<in>T P", "show \"(P, P) \\<in> symcl (indRelRSTPO SRel TRel)\""], ["proof (prove)\nusing this:\n  refl TRel\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  TRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel)\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. (P, P) \\<in> symcl (indRelRSTPO SRel TRel)", "by (simp add: symcl_def indRelRSTPO.target)"], ["proof (state)\nthis:\n  (P, P) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, P) \\<in> symcl (indRelRSTPO SRel TRel)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  refl (symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "moreover"], ["proof (state)\nthis:\n  refl (symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"trans (symcl (indRelRSTPO SRel TRel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "have \"\\<forall>P Q R. P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and> R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and> (P, R) \\<notin> (indRelRSTPO SRel TRel)\n          \\<longrightarrow> Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or> Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       (P, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       (P, R) \\<notin> indRelRSTPO SRel TRel \\<and>\n       (Q, R) \\<notin> indRelRSTPO SRel TRel \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "fix P Q R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       (P, R) \\<notin> indRelRSTPO SRel TRel \\<and>\n       (Q, R) \\<notin> indRelRSTPO SRel TRel \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A1: \"P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\" and A2: \"R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\"\n         and A3: \"(P, R) \\<notin> (indRelRSTPO SRel TRel)\" and A4: \"(Q, R) \\<notin> (indRelRSTPO SRel TRel)\""], ["proof (state)\nthis:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  (P, R) \\<notin> indRelRSTPO SRel TRel\n  (Q, R) \\<notin> indRelRSTPO SRel TRel\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       (P, R) \\<notin> indRelRSTPO SRel TRel \\<and>\n       (Q, R) \\<notin> indRelRSTPO SRel TRel \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SP)"], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A5: \"SP \\<in>S P\""], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A6: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transS A1 A5"], ["proof (chain)\npicking this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  SQ \\<in>S Q", "have \"(SP, SQ) \\<in> SRel\""], ["proof (prove)\nusing this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "using indRelRSTPO_to_SRel_and_TRel(1)[where SRel=\"SRel\" and TRel=\"TRel\"]\n                    trancl_id[of SRel]"], ["proof (prove)\nusing this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  SQ \\<in>S Q\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\\<^sup>+\n  trans SRel \\<Longrightarrow> SRel\\<^sup>+ = SRel\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmS A5 A6"], ["proof (chain)\npicking this:\n  sym SRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n  (SP, SQ) \\<in> SRel", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\nusing this:\n  sym SRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> SRel \\<longrightarrow> (y, x) \\<in> SRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.source)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A6: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases R)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SR)"], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A7: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with fullAbs A2 A6"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TQ \\<in>T Q\n  SR \\<in>S R", "have \"(\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TQ \\<in>T Q\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "using full_abstraction_impl_indRelRSTPO_to_SRel_and_TRel(2)[where SRel=\"SRel\"\n                       and TRel=\"TRel\"] trancl_id[of \"TRel\\<^sup>=\"] reflcl_of_refl_rel[of TRel]\n                      trancl_reflcl[of TRel]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TQ \\<in>T Q\n  SR \\<in>S R\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n  trans (TRel\\<^sup>=) \\<Longrightarrow>\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>=\n  refl TRel \\<Longrightarrow> TRel\\<^sup>= = TRel\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TQ \\<in>T Q\n  SR \\<in>S R\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n  \\<forall>x y z.\n     (x, y) \\<in> TRel\\<^sup>= \\<longrightarrow>\n     (y, z) \\<in> TRel\\<^sup>= \\<longrightarrow>\n     (x, z) \\<in> TRel\\<^sup>= \\<Longrightarrow>\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>=\n  refl TRel \\<Longrightarrow> TRel\\<^sup>= = TRel\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transT reflT"], ["proof (chain)\npicking this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "have \"(\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel", "using trancl_id[of \"TRel\\<^sup>=\"] reflcl_of_refl_rel[of TRel] trancl_reflcl[of TRel]"], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n  trans (TRel\\<^sup>=) \\<Longrightarrow>\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>=\n  refl TRel \\<Longrightarrow> TRel\\<^sup>= = TRel\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel", "by auto"], ["proof (state)\nthis:\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmT"], ["proof (chain)\npicking this:\n  sym TRel\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel", "have \"(TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  sym TRel\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel\n  (\\<lbrakk>SR\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "moreover"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "from fullAbs A1 A5 A6"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q", "have \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "using full_abstraction_impl_indRelRSTPO_to_SRel_and_TRel(2)[where SRel=\"SRel\"\n                       and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transT reflT"], ["proof (chain)\npicking this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "have \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "using trancl_id[of \"TRel\\<^sup>=\"] reflcl_of_refl_rel[of TRel] trancl_reflcl[of TRel]"], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n  trans (TRel\\<^sup>=) \\<Longrightarrow>\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>=\n  refl TRel \\<Longrightarrow> TRel\\<^sup>= = TRel\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "by auto"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "ultimately"], ["proof (chain)\npicking this:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"(SP, SR) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (SP, SR) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SP, SR) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A3 A5 A7"], ["proof (chain)\npicking this:\n  (P, R) \\<notin> indRelRSTPO SRel TRel\n  SP \\<in>S P\n  SR \\<in>S R\n  (SP, SR) \\<in> SRel", "show ?thesis"], ["proof (prove)\nusing this:\n  (P, R) \\<notin> indRelRSTPO SRel TRel\n  SP \\<in>S P\n  SR \\<in>S R\n  (SP, SR) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.source)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TR)"], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A7: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transT A2 A6"], ["proof (chain)\npicking this:\n  trans TRel\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TQ \\<in>T Q\n  TR \\<in>T R", "have \"(TR, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TQ \\<in>T Q\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. (TR, TQ) \\<in> TRel", "using indRelRSTPO_to_SRel_and_TRel(4)[where SRel=\"SRel\" and TRel=\"TRel\"]\n                      trancl_id[of \"TRel\"]"], ["proof (prove)\nusing this:\n  trans TRel\n  R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TQ \\<in>T Q\n  TR \\<in>T R\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\\<^sup>+\n  trans TRel \\<Longrightarrow> TRel\\<^sup>+ = TRel\n\ngoal (1 subgoal):\n 1. (TR, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TR, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmT"], ["proof (chain)\npicking this:\n  sym TRel\n  (TR, TQ) \\<in> TRel", "have \"(TQ, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  sym TRel\n  (TR, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel\n  (TR, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A4 A6 A7"], ["proof (chain)\npicking this:\n  (Q, R) \\<notin> indRelRSTPO SRel TRel\n  TQ \\<in>T Q\n  TR \\<in>T R\n  (TQ, TR) \\<in> TRel", "show ?thesis"], ["proof (prove)\nusing this:\n  (Q, R) \\<notin> indRelRSTPO SRel TRel\n  TQ \\<in>T Q\n  TR \\<in>T R\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.target)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TP)"], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A5: \"TP \\<in>T P\""], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A1 A5"], ["proof (chain)\npicking this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  SQ \\<in>S Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "using indRelRSTPO_to_SRel_and_TRel(3)[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  SQ \\<in>S Q\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP SQ. TP \\<in>T ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow> False\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by blast"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A6: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transT A1 A5"], ["proof (chain)\npicking this:\n  trans TRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  TQ \\<in>T Q", "have \"(TP, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TP, TQ) \\<in> TRel", "using indRelRSTPO_to_SRel_and_TRel(4)[where SRel=\"SRel\" and TRel=\"TRel\"]\n                    trancl_id[of \"TRel\"]"], ["proof (prove)\nusing this:\n  trans TRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  TQ \\<in>T Q\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\\<^sup>+\n  trans TRel \\<Longrightarrow> TRel\\<^sup>+ = TRel\n\ngoal (1 subgoal):\n 1. (TP, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmT"], ["proof (chain)\npicking this:\n  sym TRel\n  (TP, TQ) \\<in> TRel", "have \"(TQ, TP) \\<in> TRel\""], ["proof (prove)\nusing this:\n  sym TRel\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TP) \\<in> TRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TP) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, TP) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A5 A6"], ["proof (chain)\npicking this:\n  TP \\<in>T P\n  TQ \\<in>T Q\n  (TQ, TP) \\<in> TRel", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\nusing this:\n  TP \\<in>T P\n  TQ \\<in>T Q\n  (TQ, TP) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.target)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     (P, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     (P, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "have \"\\<forall>P Q R. P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and> P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and> (Q, R) \\<notin> (indRelRSTPO SRel TRel)\n          \\<longrightarrow> Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or> R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n       (Q, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n       R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n       (Q, R) \\<notin> indRelRSTPO SRel TRel \\<and>\n       (R, P) \\<notin> indRelRSTPO SRel TRel \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "fix P Q R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n       (Q, R) \\<notin> indRelRSTPO SRel TRel \\<and>\n       (R, P) \\<notin> indRelRSTPO SRel TRel \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A1: \"P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\" and A2: \"P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\"\n         and A3: \"(Q, R) \\<notin> (indRelRSTPO SRel TRel)\" and A4: \"(R, P) \\<notin> (indRelRSTPO SRel TRel)\""], ["proof (state)\nthis:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  (Q, R) \\<notin> indRelRSTPO SRel TRel\n  (R, P) \\<notin> indRelRSTPO SRel TRel\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n       P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n       (Q, R) \\<notin> indRelRSTPO SRel TRel \\<and>\n       (R, P) \\<notin> indRelRSTPO SRel TRel \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SP)"], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A5: \"SP \\<in>S P\""], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A6: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transS A1 A5"], ["proof (chain)\npicking this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  SQ \\<in>S Q", "have \"(SP, SQ) \\<in> SRel\""], ["proof (prove)\nusing this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "using indRelRSTPO_to_SRel_and_TRel(1)[where SRel=\"SRel\" and TRel=\"TRel\"]\n                    trancl_id[of \"SRel\"]"], ["proof (prove)\nusing this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  SQ \\<in>S Q\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\\<^sup>+\n  trans SRel \\<Longrightarrow> SRel\\<^sup>+ = SRel\n\ngoal (1 subgoal):\n 1. (SP, SQ) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (SP, SQ) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmS A5 A6"], ["proof (chain)\npicking this:\n  sym SRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n  (SP, SQ) \\<in> SRel", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\nusing this:\n  sym SRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> SRel \\<longrightarrow> (y, x) \\<in> SRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n  (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.source)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A6: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases R)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SR)"], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A7: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transS A2 A5"], ["proof (chain)\npicking this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  SP \\<in>S P\n  SR \\<in>S R", "have \"(SP, SR) \\<in> SRel\""], ["proof (prove)\nusing this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  SP \\<in>S P\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. (SP, SR) \\<in> SRel", "using indRelRSTPO_to_SRel_and_TRel(1)[where SRel=\"SRel\" and TRel=\"TRel\"]\n                      trancl_id[of \"SRel\"]"], ["proof (prove)\nusing this:\n  trans SRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  SP \\<in>S P\n  SR \\<in>S R\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (SP, SQ) \\<in> SRel\\<^sup>+\n  trans SRel \\<Longrightarrow> SRel\\<^sup>+ = SRel\n\ngoal (1 subgoal):\n 1. (SP, SR) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (SP, SR) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmS"], ["proof (chain)\npicking this:\n  sym SRel\n  (SP, SR) \\<in> SRel", "have \"(SR, SP) \\<in> SRel\""], ["proof (prove)\nusing this:\n  sym SRel\n  (SP, SR) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (SR, SP) \\<in> SRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> SRel \\<longrightarrow> (y, x) \\<in> SRel\n  (SP, SR) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (SR, SP) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SR, SP) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A4 A5 A7"], ["proof (chain)\npicking this:\n  (R, P) \\<notin> indRelRSTPO SRel TRel\n  SP \\<in>S P\n  SR \\<in>S R\n  (SR, SP) \\<in> SRel", "show ?thesis"], ["proof (prove)\nusing this:\n  (R, P) \\<notin> indRelRSTPO SRel TRel\n  SP \\<in>S P\n  SR \\<in>S R\n  (SR, SP) \\<in> SRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.source)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TR)"], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "from fullAbs A1 A5 A6"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q", "have \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "using full_abstraction_impl_indRelRSTPO_to_SRel_and_TRel(2)[where SRel=\"SRel\" and\n                       TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  SP \\<in>S P\n  TQ \\<in>T Q\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transT reflT"], ["proof (chain)\npicking this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*", "have \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "using trancl_id[of \"TRel\\<^sup>=\"] reflcl_of_refl_rel[of TRel] trancl_reflcl[of TRel]"], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n  trans (TRel\\<^sup>=) \\<Longrightarrow>\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>=\n  refl TRel \\<Longrightarrow> TRel\\<^sup>= = TRel\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "by auto"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmT"], ["proof (chain)\npicking this:\n  sym TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "have \"(TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  sym TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "moreover"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A7: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with fullAbs A2 A5"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  SP \\<in>S P\n  TR \\<in>T R", "have \"(\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  SP \\<in>S P\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*", "using full_abstraction_impl_indRelRSTPO_to_SRel_and_TRel(2)[where SRel=\"SRel\" and\n                        TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  SP \\<in>S P\n  TR \\<in>T R\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  SP \\<in>S P\n  TR \\<in>T R\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transT reflT"], ["proof (chain)\npicking this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*", "have \"(\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "using trancl_id[of \"TRel\\<^sup>=\"] reflcl_of_refl_rel[of TRel] trancl_reflcl[of TRel]"], ["proof (prove)\nusing this:\n  trans TRel\n  refl TRel\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\\<^sup>*\n  trans (TRel\\<^sup>=) \\<Longrightarrow>\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>=\n  refl TRel \\<Longrightarrow> TRel\\<^sup>= = TRel\n  (TRel\\<^sup>=)\\<^sup>+ = TRel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "by auto"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "ultimately"], ["proof (chain)\npicking this:\n  (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "have \"(TQ, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "using transT"], ["proof (prove)\nusing this:\n  (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TQ, \\<lbrakk>SP\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n  \\<forall>x y z.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T R \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A3 A6 A7"], ["proof (chain)\npicking this:\n  (Q, R) \\<notin> indRelRSTPO SRel TRel\n  TQ \\<in>T Q\n  TR \\<in>T R\n  (TQ, TR) \\<in> TRel", "show ?thesis"], ["proof (prove)\nusing this:\n  (Q, R) \\<notin> indRelRSTPO SRel TRel\n  TQ \\<in>T Q\n  TR \\<in>T R\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.target)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TP)"], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A5: \"TP \\<in>T P\""], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n 2. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A1 A5"], ["proof (chain)\npicking this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  SQ \\<in>S Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "using indRelRSTPO_to_SRel_and_TRel(3)[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  SQ \\<in>S Q\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP SQ. TP \\<in>T ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow> False\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by blast"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "assume A6: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with transT A1 A5"], ["proof (chain)\npicking this:\n  trans TRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  TQ \\<in>T Q", "have \"(TP, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  trans TRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TP, TQ) \\<in> TRel", "using indRelRSTPO_to_SRel_and_TRel(4)[where SRel=\"SRel\" and TRel=\"TRel\"]\n                    trancl_id[of \"TRel\"]"], ["proof (prove)\nusing this:\n  trans TRel\n  P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q\n  TP \\<in>T P\n  TQ \\<in>T Q\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\\<^sup>+\n  trans TRel \\<Longrightarrow> TRel\\<^sup>+ = TRel\n\ngoal (1 subgoal):\n 1. (TP, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with symmT"], ["proof (chain)\npicking this:\n  sym TRel\n  (TP, TQ) \\<in> TRel", "have \"(TQ, TP) \\<in> TRel\""], ["proof (prove)\nusing this:\n  sym TRel\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TP) \\<in> TRel", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TQ, TP) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, TP) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T Q \\<Longrightarrow>\n       Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "with A5 A6"], ["proof (chain)\npicking this:\n  TP \\<in>T P\n  TQ \\<in>T Q\n  (TQ, TP) \\<in> TRel", "show \"Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\""], ["proof (prove)\nusing this:\n  TP \\<in>T P\n  TQ \\<in>T Q\n  (TQ, TP) \\<in> TRel\n\ngoal (1 subgoal):\n 1. Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P", "by (simp add: indRelRSTPO.target)"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n     (Q, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n     (Q, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "from reflS reflT"], ["proof (chain)\npicking this:\n  refl SRel\n  refl TRel", "have \"refl (indRelRSTPO SRel TRel)\""], ["proof (prove)\nusing this:\n  refl SRel\n  refl TRel\n\ngoal (1 subgoal):\n 1. refl (indRelRSTPO SRel TRel)", "using indRelRSTPO_refl[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  refl SRel\n  refl TRel\n  refl SRel \\<and> refl TRel \\<Longrightarrow> refl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. refl (indRelRSTPO SRel TRel)", "by blast"], ["proof (state)\nthis:\n  refl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "moreover"], ["proof (state)\nthis:\n  refl (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "have \"trans (indRelRSTPO SRel TRel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (indRelRSTPO SRel TRel)", "using indRelRSTPO.trans[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<and>\n  ?Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?R \\<Longrightarrow>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?R\n\ngoal (1 subgoal):\n 1. trans (indRelRSTPO SRel TRel)", "unfolding trans_def"], ["proof (prove)\nusing this:\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?Q \\<and>\n  ?Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?R \\<Longrightarrow>\n  ?P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> ?R\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       x \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> y \\<longrightarrow>\n       y \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> z \\<longrightarrow>\n       x \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> z", "by blast"], ["proof (state)\nthis:\n  trans (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     (P, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n     (Q, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n  refl (indRelRSTPO SRel TRel)\n  trans (indRelRSTPO SRel TRel)", "show \"trans (symcl (indRelRSTPO SRel TRel))\""], ["proof (prove)\nusing this:\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     (P, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n     (Q, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n  refl (indRelRSTPO SRel TRel)\n  trans (indRelRSTPO SRel TRel)\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "using symm_closure_of_preorder_is_trans[where Rel=\"indRelRSTPO SRel TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     (P, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R\n  \\<forall>P Q R.\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> Q \\<and>\n     P \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> R \\<and>\n     (Q, R) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n     Q \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P \\<or>\n     R \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> P\n  refl (indRelRSTPO SRel TRel)\n  trans (indRelRSTPO SRel TRel)\n  (\\<forall>a b c.\n      a \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> b \\<and>\n      c \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> b \\<and>\n      (a, c) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n      b \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> a \\<or>\n      b \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> c) \\<and>\n  (\\<forall>a b c.\n      a \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> b \\<and>\n      a \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> c \\<and>\n      (b, c) \\<notin> indRelRSTPO SRel TRel \\<longrightarrow>\n      b \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> a \\<or>\n      c \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> a) \\<and>\n  refl (indRelRSTPO SRel TRel) \\<and>\n  trans (indRelRSTPO SRel TRel) \\<Longrightarrow>\n  trans (symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. trans (symcl (indRelRSTPO SRel TRel))", "by blast"], ["proof (state)\nthis:\n  trans (symcl (indRelRSTPO SRel TRel))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trans (symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     SourceTerm\n      S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   (\\<lbrakk>S\\<rbrakk>)\n  SRel =\n  _Collect (S1, S2)\n   ((SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel))\n  TRel =\n  _Collect (T1, T2)\n   ((TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel))\n  refl (symcl (indRelRSTPO SRel TRel))\n  trans (symcl (indRelRSTPO SRel TRel))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     SourceTerm\n      S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   (\\<lbrakk>S\\<rbrakk>)\n  SRel =\n  _Collect (S1, S2)\n   ((SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel))\n  TRel =\n  _Collect (T1, T2)\n   ((TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel))\n  refl (symcl (indRelRSTPO SRel TRel))\n  trans (symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "unfolding preorder_on_def"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     SourceTerm\n      S \\<lesssim>\\<lbrakk>\\<cdot>\\<rbrakk>R<SRel,TRel> TargetTerm\n                   (\\<lbrakk>S\\<rbrakk>)\n  SRel =\n  _Collect (S1, S2)\n   ((SourceTerm S1, SourceTerm S2) \\<in> symcl (indRelRSTPO SRel TRel))\n  TRel =\n  _Collect (T1, T2)\n   ((TargetTerm T1, TargetTerm T2) \\<in> symcl (indRelRSTPO SRel TRel))\n  refl (symcl (indRelRSTPO SRel TRel))\n  trans (symcl (indRelRSTPO SRel TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       refl (symcl Rel) \\<and> trans (symcl Rel)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     TRel =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) fully_abstract_impl_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract ((symcl (SRel\\<^sup>=))\\<^sup>+) ((symcl (TRel\\<^sup>=))\\<^sup>+)\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> ((symcl (SRel\\<^sup>=))\\<^sup>+) = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> ((symcl (TRel\\<^sup>=))\\<^sup>+) = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"refl ((symcl (TRel\\<^sup>=))\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl ((symcl (TRel\\<^sup>=))\\<^sup>+)", "using refl_symm_trans_closure_is_symm_refl_trans_closure[of TRel]\n            refl_rtrancl[of TRel]"], ["proof (prove)\nusing this:\n  (symcl (TRel\\<^sup>=))\\<^sup>+ = (symcl TRel)\\<^sup>*\n  refl (TRel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. refl ((symcl (TRel\\<^sup>=))\\<^sup>+)", "unfolding sym_def refl_on_def"], ["proof (prove)\nusing this:\n  (symcl (TRel\\<^sup>=))\\<^sup>+ = (symcl TRel)\\<^sup>*\n  TRel\\<^sup>* \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. (symcl (TRel\\<^sup>=))\\<^sup>+ \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "by auto"], ["proof (state)\nthis:\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "moreover"], ["proof (state)\nthis:\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym ((symcl (TRel\\<^sup>=))\\<^sup>+)", "using sym_symcl[of \"TRel\\<^sup>=\"] sym_trancl[of \"symcl (TRel\\<^sup>=)\"]"], ["proof (prove)\nusing this:\n  sym (symcl (TRel\\<^sup>=))\n  sym (symcl (TRel\\<^sup>=)) \\<Longrightarrow>\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. sym ((symcl (TRel\\<^sup>=))\\<^sup>+)", "by simp"], ["proof (state)\nthis:\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "moreover"], ["proof (state)\nthis:\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "have \"trans ((symcl (TRel\\<^sup>=))\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans ((symcl (TRel\\<^sup>=))\\<^sup>+)", "by simp"], ["proof (state)\nthis:\n  trans ((symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "ultimately"], ["proof (chain)\npicking this:\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  trans ((symcl (TRel\\<^sup>=))\\<^sup>+)", "show ?thesis"], ["proof (prove)\nusing this:\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  trans ((symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "using fully_abstract_wrt_equivalences_impl_symcl_source_target_relation_is_preorder[where\n             SRel=\"(symcl (SRel\\<^sup>=))\\<^sup>+\" and TRel=\"(symcl (TRel\\<^sup>=))\\<^sup>+\"] fullAbs\n            refl_symm_closure_is_symm_refl_closure"], ["proof (prove)\nusing this:\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  trans ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)) \\<and>\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+) \\<and>\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+) \\<and>\n  trans ((symcl (TRel\\<^sup>=))\\<^sup>+) \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)\n  symcl (?Rel\\<^sup>=) = (symcl ?Rel)\\<^sup>=\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "unfolding preorder_on_def"], ["proof (prove)\nusing this:\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  trans ((symcl (TRel\\<^sup>=))\\<^sup>+)\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)) \\<and>\n  refl ((symcl (TRel\\<^sup>=))\\<^sup>+) \\<and>\n  sym ((symcl (TRel\\<^sup>=))\\<^sup>+) \\<and>\n  trans ((symcl (TRel\\<^sup>=))\\<^sup>+) \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     refl (symcl Rel) \\<and> trans (symcl Rel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)\n  symcl (?Rel\\<^sup>=) = (symcl ?Rel)\\<^sup>=\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       refl (symcl Rel) \\<and> trans (symcl Rel)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) fully_abstract_wrt_preorders_impl_source_target_relation_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> ((refl SRel \\<and> trans TRel)\n                   \\<longleftrightarrow> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "define Rel where \"Rel = (indRelSTEQ SRel TRel) - ({(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\n                 \\<union> {(P, Q). \\<exists>S1 S2. S1 \\<in>S P \\<and> S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel}\n                 \\<union> {(P, Q). \\<exists>T1 T2. T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel})\""], ["proof (state)\nthis:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))", "have \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n\ngoal (1 subgoal):\n 1. \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "by (simp add: indRelSTEQ.encR[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "moreover"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))", "have \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n\ngoal (1 subgoal):\n 1. SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       (_Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        _Collect (P, Q)\n         (\\<exists>S1.\n             S1 \\<in>S P \\<and>\n             (\\<exists>S2.\n                 S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel)) \\<union>\n        _Collect (P, Q)\n         (\\<exists>T1.\n             T1 \\<in>T P \\<and>\n             (\\<exists>T2.\n                 T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))) \\<and>\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       (_Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        _Collect (P, Q)\n         (\\<exists>S1.\n             S1 \\<in>S P \\<and>\n             (\\<exists>S2.\n                 S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel)) \\<union>\n        _Collect (P, Q)\n         (\\<exists>T1.\n             T1 \\<in>T P \\<and>\n             (\\<exists>T2.\n                 T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))) \\<and>\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       (_Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        _Collect (P, Q)\n         (\\<exists>S1.\n             S1 \\<in>S P \\<and>\n             (\\<exists>S2.\n                 S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel)) \\<union>\n        _Collect (P, Q)\n         (\\<exists>T1.\n             T1 \\<in>T P \\<and>\n             (\\<exists>T2.\n                 T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))) \\<and>\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b", "thus \"SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\""], ["proof (prove)\nusing this:\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2", "by (simp add: indRelSTEQ.source[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "moreover"], ["proof (state)\nthis:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))", "have \"TRel =  {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n\ngoal (1 subgoal):\n 1. TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       (_Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        _Collect (P, Q)\n         (\\<exists>S1.\n             S1 \\<in>S P \\<and>\n             (\\<exists>S2.\n                 S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel)) \\<union>\n        _Collect (P, Q)\n         (\\<exists>T1.\n             T1 \\<in>T P \\<and>\n             (\\<exists>T2.\n                 T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))) \\<and>\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b", "fix T1 T2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       (_Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        _Collect (P, Q)\n         (\\<exists>S1.\n             S1 \\<in>S P \\<and>\n             (\\<exists>S2.\n                 S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel)) \\<union>\n        _Collect (P, Q)\n         (\\<exists>T1.\n             T1 \\<in>T P \\<and>\n             (\\<exists>T2.\n                 T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))) \\<and>\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b", "assume \"(T1, T2) \\<in> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       (_Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        _Collect (P, Q)\n         (\\<exists>S1.\n             S1 \\<in>S P \\<and>\n             (\\<exists>S2.\n                 S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel)) \\<union>\n        _Collect (P, Q)\n         (\\<exists>T1.\n             T1 \\<in>T P \\<and>\n             (\\<exists>T2.\n                 T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))) \\<and>\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b", "thus \"TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\""], ["proof (prove)\nusing this:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2", "by (simp add: indRelSTEQ.target[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "moreover"], ["proof (state)\nthis:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "have \"(refl SRel \\<and> trans TRel) \\<longleftrightarrow> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (refl SRel \\<and> trans TRel) =\n    trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "proof (rule iffI, erule conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. refl SRel \\<and> trans TRel \\<Longrightarrow>\n    trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n 2. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S.\n           \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n           S \\<in>S Q)) \\<Longrightarrow>\n    refl SRel \\<and> trans TRel", "assume reflS: \"refl SRel\" and transT: \"trans TRel\""], ["proof (state)\nthis:\n  refl SRel\n  trans TRel\n\ngoal (2 subgoals):\n 1. refl SRel \\<and> trans TRel \\<Longrightarrow>\n    trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n 2. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S.\n           \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n           S \\<in>S Q)) \\<Longrightarrow>\n    refl SRel \\<and> trans TRel", "have \"Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} = indRelSTEQ SRel TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n    indRelSTEQ SRel TRel", "proof (auto simp add: Rel_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>S.\n       TargetTerm\n        (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                    S\n 2. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 3. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "fix S"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>S.\n       TargetTerm\n        (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                    S\n 2. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 3. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "show \"TargetTerm (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TargetTerm\n     (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                                 S", "by (rule indRelSTEQ.encL)"], ["proof (state)\nthis:\n  TargetTerm\n   (\\<lbrakk>S\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                               S\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 2. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 2. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 2. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "assume \"SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\""], ["proof (state)\nthis:\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 2. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "with fullAbs reflS transT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2", "have \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(1)[where\n                SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow> (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 2. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "moreover"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 2. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "assume \"(S1, S2) \\<notin> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<notin> SRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       SourceTerm\n        S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2 \\<and>\n       (S1, S2) \\<notin> SRel \\<Longrightarrow>\n       False\n 2. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "ultimately"], ["proof (chain)\npicking this:\n  (S1, S2) \\<in> SRel\n  (S1, S2) \\<notin> SRel", "show False"], ["proof (prove)\nusing this:\n  (S1, S2) \\<in> SRel\n  (S1, S2) \\<notin> SRel\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "fix T1 T2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "assume \"TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\""], ["proof (state)\nthis:\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "with fullAbs reflS transT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2", "have \"(T1, T2) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. (T1, T2) \\<in> TRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(5)[where\n                SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T1, T2) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "moreover"], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "assume \"(T1, T2) \\<notin> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<notin> TRel\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2.\n       TargetTerm\n        T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2 \\<and>\n       (T1, T2) \\<notin> TRel \\<Longrightarrow>\n       False", "ultimately"], ["proof (chain)\npicking this:\n  (T1, T2) \\<in> TRel\n  (T1, T2) \\<notin> TRel", "show False"], ["proof (prove)\nusing this:\n  (T1, T2) \\<in> TRel\n  (T1, T2) \\<notin> TRel\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n\ngoal (2 subgoals):\n 1. refl SRel \\<and> trans TRel \\<Longrightarrow>\n    trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n 2. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S.\n           \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n           S \\<in>S Q)) \\<Longrightarrow>\n    refl SRel \\<and> trans TRel", "thus \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (prove)\nusing this:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "using indRelSTEQ_trans[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n  trans (indRelSTEQ SRel TRel)\n\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "unfolding trans_def"], ["proof (prove)\nusing this:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n  \\<forall>x y z.\n     x \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> y \\<longrightarrow>\n     y \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> z \\<longrightarrow>\n     x \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> z\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                  S \\<in>S Q) \\<longrightarrow>\n       (y, z)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                  S \\<in>S Q) \\<longrightarrow>\n       (x, z)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "by blast"], ["proof (state)\nthis:\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S.\n           \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n           S \\<in>S Q)) \\<Longrightarrow>\n    refl SRel \\<and> trans TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S.\n           \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n           S \\<in>S Q)) \\<Longrightarrow>\n    refl SRel \\<and> trans TRel", "assume transR: \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (state)\nthis:\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S.\n           \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n           S \\<in>S Q)) \\<Longrightarrow>\n    refl SRel \\<and> trans TRel", "show \"refl SRel \\<and> trans TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl SRel \\<and> trans TRel", "unfolding trans_def refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n     (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)) \\<and>\n    (\\<forall>x y z.\n        (x, y) \\<in> TRel \\<longrightarrow>\n        (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. (x, x) \\<in> SRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix S"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. (x, x) \\<in> SRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))", "have \"(SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n\ngoal (1 subgoal):\n 1. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "by (simp add: indRelSTEQ.encR)"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (2 subgoals):\n 1. \\<And>x. (x, x) \\<in> SRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (2 subgoals):\n 1. \\<And>x. (x, x) \\<in> SRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "have \"(TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (2 subgoals):\n 1. \\<And>x. (x, x) \\<in> SRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(SourceTerm S, SourceTerm S) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "using transR"], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S, SourceTerm S) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>x. (x, x) \\<in> SRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (SourceTerm S, SourceTerm S) \\<in> Rel", "show \"(S, S) \\<in> SRel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (SourceTerm S, SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (S, S) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S, S) \\<in> SRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix TP TQ TR"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"(TP, TQ) \\<in> TRel\""], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (TP, TQ) \\<in> TRel", "have \"(TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm TP, TargetTerm TQ)\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "by (simp add: indRelSTEQ.target)"], ["proof (state)\nthis:\n  (TargetTerm TP, TargetTerm TQ)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm TP, TargetTerm TQ)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"(TQ, TR) \\<in> TRel\""], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (TQ, TR) \\<in> TRel", "have \"(TargetTerm TQ, TargetTerm TR) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm TQ, TargetTerm TR)\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "by (simp add: indRelSTEQ.target)"], ["proof (state)\nthis:\n  (TargetTerm TQ, TargetTerm TR)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm TP, TargetTerm TQ)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm TQ, TargetTerm TR)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(TargetTerm TP, TargetTerm TR) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (TargetTerm TP, TargetTerm TQ)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm TQ, TargetTerm TR)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm TP, TargetTerm TR) \\<in> Rel", "using transR"], ["proof (prove)\nusing this:\n  (TargetTerm TP, TargetTerm TQ)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm TQ, TargetTerm TR)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. (TargetTerm TP, TargetTerm TR) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TargetTerm TP, TargetTerm TQ)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm TQ, TargetTerm TR)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm TP, TargetTerm TR) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm TP, TargetTerm TR) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (TargetTerm TP, TargetTerm TR) \\<in> Rel", "show \"(TP, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  (_Collect (P, Q)\n    (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n   _Collect (P, Q)\n    (\\<exists>S1 S2.\n        S1 \\<in>S P \\<and>\n        S2 \\<in>S Q \\<and> (S1, S2) \\<notin> SRel) \\<union>\n   _Collect (P, Q)\n    (\\<exists>T1 T2.\n        T1 \\<in>T P \\<and> T2 \\<in>T Q \\<and> (T1, T2) \\<notin> TRel))\n  (TargetTerm TP, TargetTerm TR) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  refl SRel \\<and> trans TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (refl SRel \\<and> trans TRel) =\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (refl SRel \\<and> trans TRel) =\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (refl SRel \\<and> trans TRel) =\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (refl SRel \\<and> trans TRel) =\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     (refl SRel \\<and> trans TRel) =\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) fully_abstract_wrt_preorders_impl_source_target_relation_is_trans_B:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and reflT:   \"refl TRel\"\n      and transT:  \"trans TRel\"\n  shows \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "define Rel where \"Rel = (indRelSTEQ SRel TRel) - {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (state)\nthis:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from fullAbs reflT"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl TRel", "have reflS: \"refl SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl TRel\n\ngoal (1 subgoal):\n 1. refl SRel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  TRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)", "by auto"], ["proof (state)\nthis:\n  refl SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "by (simp add: indRelSTEQ.encR[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "moreover"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b\n 2. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b\n 2. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       (a, b) \\<in> SRel \\<Longrightarrow>\n       SourceTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm b\n 2. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "thus \"SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\""], ["proof (prove)\nusing this:\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2", "by (simp add: indRelSTEQ.source[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "assume \"SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\""], ["proof (state)\nthis:\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       SourceTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> SRel", "with fullAbs transT reflS"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel\n  refl SRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2", "show \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel\n  refl SRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(1)[where SRel=\"SRel\"\n              and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel\n  refl SRel\n  SourceTerm S1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm S2\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP SQ.\n     SP \\<in>S ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow> (SP, SQ) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "moreover"], ["proof (state)\nthis:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"TRel =  {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b\n 2. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "fix T1 T2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b\n 2. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "assume \"(T1, T2) \\<in> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       (a, b) \\<in> TRel \\<Longrightarrow>\n       TargetTerm a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm b\n 2. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "thus \"TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\""], ["proof (prove)\nusing this:\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2", "by (simp add: indRelSTEQ.target[where SRel=\"SRel\" and TRel=\"TRel\"])"], ["proof (state)\nthis:\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "fix T1 T2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "assume \"TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\""], ["proof (state)\nthis:\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       Rel =\n       indRelSTEQ SRel TRel -\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<and>\n       TargetTerm\n        a \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n                b \\<Longrightarrow>\n       (a, b) \\<in> TRel", "with fullAbs transT reflS"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel\n  refl SRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2", "show \"(T1, T2) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel\n  refl SRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n\ngoal (1 subgoal):\n 1. (T1, T2) \\<in> TRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(5)[where SRel=\"SRel\"\n              and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  trans TRel\n  refl SRel\n  TargetTerm T1 \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm T2\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP TQ.\n     TP \\<in>T ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow> (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T1, T2) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "moreover"], ["proof (state)\nthis:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "from Rel_def"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} = indRelSTEQ SRel TRel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n    indRelSTEQ SRel TRel", "by (auto simp add: indRelSTEQ.encL)"], ["proof (state)\nthis:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "hence \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (prove)\nusing this:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "using indRelSTEQ.trans[where SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<and>\n  ?Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R \\<Longrightarrow>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R\n\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "unfolding trans_def"], ["proof (prove)\nusing this:\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) =\n  indRelSTEQ SRel TRel\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<and>\n  ?Q \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R \\<Longrightarrow>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?R\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                  S \\<in>S Q) \\<longrightarrow>\n       (y, z)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                  S \\<in>S Q) \\<longrightarrow>\n       (x, z)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "by auto"], ["proof (state)\nthis:\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Thus an encoding is fully abstract w.r.t. an equivalence SRel on the source and an\n        equivalence TRel on the target iff there exists a relation that relates source terms and\n        their literal translations, whose sym closure is a preorder such that the reduction\n        of this sym closure to source/target terms is SRel/TRel.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_equivalences_iff_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"(fully_abstract SRel TRel \\<and> equivalence TRel) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>S1 S2.\n         ((S1, S2) \\<in> SRel) =\n         ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n     equivalence TRel) =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2)\n         ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n        TRel =\n        _Collect (T1, T2)\n         ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n        preorder (symcl Rel))", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "assume \"fully_abstract SRel TRel \\<and> equivalence TRel\""], ["proof (state)\nthis:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  equivalence TRel\n\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "thus \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\""], ["proof (prove)\nusing this:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  equivalence TRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "using fully_abstract_wrt_equivalences_impl_symcl_source_target_relation_is_preorder[where\n             SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  equivalence TRel\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl TRel \\<and> sym TRel \\<and> trans TRel \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     TRel =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "unfolding equiv_def"], ["proof (prove)\nusing this:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl TRel \\<and> sym TRel \\<and> trans TRel\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl TRel \\<and> sym TRel \\<and> trans TRel \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     TRel =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     TRel =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "assume \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\""], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     TRel =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "from this"], ["proof (chain)\npicking this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     TRel =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)", "obtain Rel\n    where     \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and     \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\"\n      and A1: \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\"\n      and A2: \"preorder (symcl Rel)\""], ["proof (prove)\nusing this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     TRel =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. (\\<And>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2)\n         ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n        TRel =\n        _Collect (T1, T2)\n         ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n        preorder (symcl Rel) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "hence A5: \"fully_abstract SRel TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "using source_target_relation_with_trans_symcl_impl_full_abstraction[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n  trans (symcl Rel) \\<Longrightarrow>\n  \\<forall>S1 S2.\n     ((S1, S2)\n      \\<in> _Collect (S1, S2)\n             ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> _Collect (T1, T2)\n             ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel))\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "unfolding preorder_on_def"], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  refl (symcl Rel) \\<and> trans (symcl Rel)\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n  trans (symcl Rel) \\<Longrightarrow>\n  \\<forall>S1 S2.\n     ((S1, S2)\n      \\<in> _Collect (S1, S2)\n             ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> _Collect (T1, T2)\n             ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel))\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "by blast"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "moreover"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "have \"equivalence TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence TRel", "unfolding trans_def equiv_def sym_def refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (TRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n     (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel)) \\<and>\n    (\\<forall>x y.\n        (x, y) \\<in> TRel \\<longrightarrow> (y, x) \\<in> TRel) \\<and>\n    (\\<forall>x y z.\n        (x, y) \\<in> TRel \\<longrightarrow>\n        (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)", "proof auto"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. (x, x) \\<in> TRel\n 2. \\<And>x y. (x, y) \\<in> TRel \\<Longrightarrow> (y, x) \\<in> TRel\n 3. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix T"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. (x, x) \\<in> TRel\n 2. \\<And>x y. (x, y) \\<in> TRel \\<Longrightarrow> (y, x) \\<in> TRel\n 3. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "from A1 A2"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)", "show \"(T, T) \\<in> TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. (T, T) \\<in> TRel", "unfolding preorder_on_def refl_on_def"], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  (symcl Rel \\<subseteq> UNIV \\<times> UNIV \\<and>\n   (\\<forall>x\\<in>UNIV. (x, x) \\<in> symcl Rel)) \\<and>\n  trans (symcl Rel)\n\ngoal (1 subgoal):\n 1. (T, T) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (T, T) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x y. (x, y) \\<in> TRel \\<Longrightarrow> (y, x) \\<in> TRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. (x, y) \\<in> TRel \\<Longrightarrow> (y, x) \\<in> TRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix T1 T2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. (x, y) \\<in> TRel \\<Longrightarrow> (y, x) \\<in> TRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"(T1, T2) \\<in> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x y. (x, y) \\<in> TRel \\<Longrightarrow> (y, x) \\<in> TRel\n 2. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with A1"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  (T1, T2) \\<in> TRel", "show \"(T2, T1) \\<in> TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  (T1, T2) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T2, T1) \\<in> TRel", "by (auto simp add: symcl_def)"], ["proof (state)\nthis:\n  (T2, T1) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix T1 T2 T3"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"(T1, T2) \\<in> TRel\" and \"(T2, T3) \\<in> TRel\""], ["proof (state)\nthis:\n  (T1, T2) \\<in> TRel\n  (T2, T3) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with A1 A2"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n  (T1, T2) \\<in> TRel\n  (T2, T3) \\<in> TRel", "show \"(T1, T3) \\<in> TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n  (T1, T2) \\<in> TRel\n  (T2, T3) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T1, T3) \\<in> TRel", "unfolding trans_def preorder_on_def"], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  refl (symcl Rel) \\<and>\n  (\\<forall>x y z.\n      (x, y) \\<in> symcl Rel \\<longrightarrow>\n      (y, z) \\<in> symcl Rel \\<longrightarrow> (x, z) \\<in> symcl Rel)\n  (T1, T2) \\<in> TRel\n  (T2, T3) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (T1, T3) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (T1, T3) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  equivalence TRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       TRel =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  equivalence TRel", "show \"fully_abstract SRel TRel \\<and> equivalence TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  equivalence TRel\n\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    equivalence TRel", "by blast"], ["proof (state)\nthis:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  equivalence TRel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) fully_abstract_iff_symcl_source_target_relation_is_preorder:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"fully_abstract ((symcl (SRel\\<^sup>=))\\<^sup>+) ((symcl (TRel\\<^sup>=))\\<^sup>+) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> (symcl (SRel\\<^sup>=))\\<^sup>+ = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> (symcl (TRel\\<^sup>=))\\<^sup>+ = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n         \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)) =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        (symcl (SRel\\<^sup>=))\\<^sup>+ =\n        _Collect (S1, S2)\n         ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n        (symcl (TRel\\<^sup>=))\\<^sup>+ =\n        _Collect (T1, T2)\n         ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n        preorder (symcl Rel))", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+) \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "assume \"fully_abstract ((symcl (SRel\\<^sup>=))\\<^sup>+) ((symcl (TRel\\<^sup>=))\\<^sup>+)\""], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (2 subgoals):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+) \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "thus \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> (symcl (SRel\\<^sup>=))\\<^sup>+ = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> (symcl (TRel\\<^sup>=))\\<^sup>+ = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "using fully_abstract_impl_symcl_source_target_relation_is_preorder[where SRel=\"SRel\" and\n             TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+) \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "assume \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> (symcl (SRel\\<^sup>=))\\<^sup>+ = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\n                \\<and> (symcl (TRel\\<^sup>=))\\<^sup>+ = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\n                \\<and> preorder (symcl Rel)\""], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)", "obtain Rel\n    where     \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and     \"(symcl (SRel\\<^sup>=))\\<^sup>+ = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> symcl Rel}\"\n      and A1: \"(symcl (TRel\\<^sup>=))\\<^sup>+ = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> symcl Rel}\"\n      and A2: \"preorder (symcl Rel)\""], ["proof (prove)\nusing this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     (symcl (SRel\\<^sup>=))\\<^sup>+ =\n     _Collect (S1, S2)\n      ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n     (symcl (TRel\\<^sup>=))\\<^sup>+ =\n     _Collect (T1, T2)\n      ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n     preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. (\\<And>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        (symcl (SRel\\<^sup>=))\\<^sup>+ =\n        _Collect (S1, S2)\n         ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n        (symcl (TRel\\<^sup>=))\\<^sup>+ =\n        _Collect (T1, T2)\n         ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n        preorder (symcl Rel) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (symcl (SRel\\<^sup>=))\\<^sup>+ =\n  _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  (symcl (TRel\\<^sup>=))\\<^sup>+ =\n  _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       (symcl (SRel\\<^sup>=))\\<^sup>+ =\n       _Collect (S1, S2)\n        ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel) \\<and>\n       (symcl (TRel\\<^sup>=))\\<^sup>+ =\n       _Collect (T1, T2)\n        ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel) \\<and>\n       preorder (symcl Rel) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "thus \"fully_abstract ((symcl (SRel\\<^sup>=))\\<^sup>+) ((symcl (TRel\\<^sup>=))\\<^sup>+)\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (symcl (SRel\\<^sup>=))\\<^sup>+ =\n  _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  (symcl (TRel\\<^sup>=))\\<^sup>+ =\n  _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "using source_target_relation_with_trans_symcl_impl_full_abstraction[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (symcl (SRel\\<^sup>=))\\<^sup>+ =\n  _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  (symcl (TRel\\<^sup>=))\\<^sup>+ =\n  _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  preorder (symcl Rel)\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n  trans (symcl Rel) \\<Longrightarrow>\n  \\<forall>S1 S2.\n     ((S1, S2)\n      \\<in> _Collect (S1, S2)\n             ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> _Collect (T1, T2)\n             ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel))\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "unfolding preorder_on_def"], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (symcl (SRel\\<^sup>=))\\<^sup>+ =\n  _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)\n  (symcl (TRel\\<^sup>=))\\<^sup>+ =\n  _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel)\n  refl (symcl Rel) \\<and> trans (symcl Rel)\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n  trans (symcl Rel) \\<Longrightarrow>\n  \\<forall>S1 S2.\n     ((S1, S2)\n      \\<in> _Collect (S1, S2)\n             ((SourceTerm S1, SourceTerm S2) \\<in> symcl Rel)) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> _Collect (T1, T2)\n             ((TargetTerm T1, TargetTerm T2) \\<in> symcl Rel))\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)", "by blast"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> (symcl (SRel\\<^sup>=))\\<^sup>+) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> (symcl (TRel\\<^sup>=))\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Full Abstraction without Relating Translations to their Source Terms\\<close>"], ["", "text \\<open>Let Rel be the result of removing from indRelSTEQ all pairs of two source or two target\n        terms that are not contained in SRel or TRel. Then a fully abstract encoding ensures that\n        Rel is trans iff SRel is refl and TRel is trans.\\<close>"], ["", "lemma (in encoding) full_abstraction_impl_indRelSTEQ_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n    and Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes fullAbs: \"fully_abstract SRel TRel\"\n      and rel:     \"Rel = ((indRelSTEQ SRel TRel)\n                    - {(P, Q). (P \\<in> ProcS \\<and> Q \\<in> ProcS) \\<or> (P \\<in> ProcT \\<and> Q \\<in> ProcT)})\n                    \\<union> {(P, Q). (\\<exists>SP SQ. SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel)\n                        \\<or> (\\<exists>TP TQ. TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel)}\"\n  shows \"(refl SRel \\<and> trans TRel) = trans Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (refl SRel \\<and> trans TRel) = trans Rel", "unfolding trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (refl SRel \\<and>\n     (\\<forall>x y z.\n         (x, y) \\<in> TRel \\<longrightarrow>\n         (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)) =\n    (\\<forall>x y z.\n        (x, y) \\<in> Rel \\<longrightarrow>\n        (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)", "proof auto"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       refl SRel \\<and>\n       (\\<forall>x y.\n           (x, y) \\<in> TRel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> TRel \\<longrightarrow>\n               (x, z) \\<in> TRel)) \\<and>\n       (x, y) \\<in> Rel \\<and> (y, z) \\<in> Rel \\<Longrightarrow>\n       (x, z) \\<in> Rel\n 2. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 3. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix P Q R"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       refl SRel \\<and>\n       (\\<forall>x y.\n           (x, y) \\<in> TRel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> TRel \\<longrightarrow>\n               (x, z) \\<in> TRel)) \\<and>\n       (x, y) \\<in> Rel \\<and> (y, z) \\<in> Rel \\<Longrightarrow>\n       (x, z) \\<in> Rel\n 2. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 3. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume A1: \"refl SRel\" and A2: \"\\<forall>x y. (x, y) \\<in> TRel \\<longrightarrow> (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\"\n     and A3: \"(P, Q) \\<in> Rel\" and A4: \"(Q, R) \\<in> Rel\""], ["proof (state)\nthis:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (P, Q) \\<in> Rel\n  (Q, R) \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       refl SRel \\<and>\n       (\\<forall>x y.\n           (x, y) \\<in> TRel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> TRel \\<longrightarrow>\n               (x, z) \\<in> TRel)) \\<and>\n       (x, y) \\<in> Rel \\<and> (y, z) \\<in> Rel \\<Longrightarrow>\n       (x, z) \\<in> Rel\n 2. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 3. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "from fullAbs rel"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))", "have A5: \"\\<forall>SP SQ. (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n\ngoal (1 subgoal):\n 1. \\<forall>SP SQ.\n       (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>SP SQ.\n     (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       refl SRel \\<and>\n       (\\<forall>x y.\n           (x, y) \\<in> TRel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> TRel \\<longrightarrow>\n               (x, z) \\<in> TRel)) \\<and>\n       (x, y) \\<in> Rel \\<and> (y, z) \\<in> Rel \\<Longrightarrow>\n       (x, z) \\<in> Rel\n 2. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 3. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "from rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))", "have A6: \"\\<forall>TP TQ. (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow> (TP, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n\ngoal (1 subgoal):\n 1. \\<forall>TP TQ.\n       (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n       (TP, TQ) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  \\<forall>TP TQ.\n     (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       refl SRel \\<and>\n       (\\<forall>x y.\n           (x, y) \\<in> TRel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> TRel \\<longrightarrow>\n               (x, z) \\<in> TRel)) \\<and>\n       (x, y) \\<in> Rel \\<and> (y, z) \\<in> Rel \\<Longrightarrow>\n       (x, z) \\<in> Rel\n 2. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 3. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "have A7: \"\\<forall>SP TQ. (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow> (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>SP TQ.\n       (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "fix SP TQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "assume \"(SourceTerm SP, TargetTerm TQ) \\<in> Rel\""], ["proof (state)\nthis:\n  (SourceTerm SP, TargetTerm TQ) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "with rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (SourceTerm SP, TargetTerm TQ) \\<in> Rel", "have \"SourceTerm SP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm TQ\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (SourceTerm SP, TargetTerm TQ) \\<in> Rel\n\ngoal (1 subgoal):\n 1. SourceTerm SP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm TQ", "by simp"], ["proof (state)\nthis:\n  SourceTerm SP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm TQ\n\ngoal (1 subgoal):\n 1. \\<And>SP TQ.\n       (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<Longrightarrow>\n       (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "with A1 A2 fullAbs"], ["proof (chain)\npicking this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  SourceTerm SP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm TQ", "show \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  SourceTerm SP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm TQ\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(3)[where\n              SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  SourceTerm SP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm TQ\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  SourceTerm SP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm TQ\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  (\\<forall>x y z.\n      (x, y) \\<in> TRel \\<longrightarrow>\n      (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel) \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>SP TQ.\n     SP \\<in>S ?P \\<and> TQ \\<in>T ?Q \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>SP TQ.\n     (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       refl SRel \\<and>\n       (\\<forall>x y.\n           (x, y) \\<in> TRel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> TRel \\<longrightarrow>\n               (x, z) \\<in> TRel)) \\<and>\n       (x, y) \\<in> Rel \\<and> (y, z) \\<in> Rel \\<Longrightarrow>\n       (x, z) \\<in> Rel\n 2. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 3. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "have A8: \"\\<forall>TP SQ. (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow> (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>TP SQ.\n       (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>TP SQ.\n       (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<Longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "fix TP SQ"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>TP SQ.\n       (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<Longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "assume \"(TargetTerm TP, SourceTerm SQ) \\<in> Rel\""], ["proof (state)\nthis:\n  (TargetTerm TP, SourceTerm SQ) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>TP SQ.\n       (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<Longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "with rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TargetTerm TP, SourceTerm SQ) \\<in> Rel", "have \"TargetTerm TP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm SQ\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TargetTerm TP, SourceTerm SQ) \\<in> Rel\n\ngoal (1 subgoal):\n 1. TargetTerm TP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm SQ", "by simp"], ["proof (state)\nthis:\n  TargetTerm TP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm SQ\n\ngoal (1 subgoal):\n 1. \\<And>TP SQ.\n       (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<Longrightarrow>\n       (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "with A1 A2 fullAbs"], ["proof (chain)\npicking this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  TargetTerm TP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm SQ", "show \"(TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  TargetTerm TP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm SQ\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "using full_abstraction_wrt_preorders_impl_indRelSTEQ_to_SRel_and_TRel(4)[where\n              SRel=\"SRel\" and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  TargetTerm TP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm SQ\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  trans TRel \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP SQ.\n     TP \\<in>T ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  refl SRel\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  TargetTerm TP \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> SourceTerm SQ\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  (\\<forall>x y z.\n      (x, y) \\<in> TRel \\<longrightarrow>\n      (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel) \\<and>\n  refl SRel \\<and>\n  ?P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> ?Q \\<Longrightarrow>\n  \\<forall>TP SQ.\n     TP \\<in>T ?P \\<and> SQ \\<in>S ?Q \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>TP SQ.\n     (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       refl SRel \\<and>\n       (\\<forall>x y.\n           (x, y) \\<in> TRel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> TRel \\<longrightarrow>\n               (x, z) \\<in> TRel)) \\<and>\n       (x, y) \\<in> Rel \\<and> (y, z) \\<in> Rel \\<Longrightarrow>\n       (x, z) \\<in> Rel\n 2. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 3. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "proof (cases P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S P \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T P \\<Longrightarrow> (P, R) \\<in> Rel", "case (SourceTerm SP)"], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S P \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T P \\<Longrightarrow> (P, R) \\<in> Rel", "assume A9: \"SP \\<in>S P\""], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S P \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T P \\<Longrightarrow> (P, R) \\<in> Rel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "assume A10: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "with A3 A5 A9"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  \\<forall>SP SQ.\n     (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SP \\<in>S P\n  SQ \\<in>S Q", "have A11: \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  \\<forall>SP SQ.\n     (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SP \\<in>S P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "proof (cases R)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (SourceTerm SR)"], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A4 A5 A10"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP SQ.\n     (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SQ \\<in>S Q\n  SR \\<in>S R", "have \"(\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP SQ.\n     (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SQ \\<in>S Q\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"(SP, SR) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (SP, SR) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SP, SR) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with rel A9 A12"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  SP \\<in>S P\n  SR \\<in>S R\n  (SP, SR) \\<in> SRel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  SP \\<in>S P\n  SR \\<in>S R\n  (SP, SR) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (TargetTerm TR)"], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "from A9"], ["proof (chain)\npicking this:\n  SP \\<in>S P", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm (\\<lbrakk>SP\\<rbrakk>)\""], ["proof (prove)\nusing this:\n  SP \\<in>S P\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n            (\\<lbrakk>SP\\<rbrakk>)", "by (simp add: indRelSTEQ.encR)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "from A4 A7 A10 A12"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP TQ.\n     (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SQ \\<in>S Q\n  TR \\<in>T R", "have \"(\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP TQ.\n     (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SQ \\<in>S Q\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "have \"(\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A12"], ["proof (chain)\npicking this:\n  TR \\<in>T R\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "have \"TargetTerm (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\""], ["proof (prove)\nusing this:\n  TR \\<in>T R\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. TargetTerm\n     (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (simp add: indRelSTEQ.target)"], ["proof (state)\nthis:\n  TargetTerm\n   (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel, TRel> R\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (rule indRelSTEQ.trans)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with rel A9 A12"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  SP \\<in>S P\n  TR \\<in>T R\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  SP \\<in>S P\n  TR \\<in>T R\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "assume A10: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "with A3 A7 A9"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  \\<forall>SP TQ.\n     (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SP \\<in>S P\n  TQ \\<in>T Q", "have A11: \"(\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  \\<forall>SP TQ.\n     (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SP \\<in>S P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "proof (cases R)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (SourceTerm SR)"], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A4 A8 A10"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP SQ.\n     (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TQ \\<in>T Q\n  SR \\<in>S R", "have \"(TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP SQ.\n     (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TQ \\<in>T Q\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"(\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with fullAbs"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"(SP, SR) \\<in> SRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (SP, SR) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (SP, SR) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with rel A9 A12"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  SP \\<in>S P\n  SR \\<in>S R\n  (SP, SR) \\<in> SRel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  SP \\<in>S P\n  SR \\<in>S R\n  (SP, SR) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (TargetTerm TR)"], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "from A9"], ["proof (chain)\npicking this:\n  SP \\<in>S P", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm (\\<lbrakk>SP\\<rbrakk>)\""], ["proof (prove)\nusing this:\n  SP \\<in>S P\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n            (\\<lbrakk>SP\\<rbrakk>)", "by (simp add: indRelSTEQ.encR)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "from A4 A6 A10 A12"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP TQ.\n     (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n  TQ \\<in>T Q\n  TR \\<in>T R", "have \"(TQ, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP TQ.\n     (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n  TQ \\<in>T Q\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel", "have \"(\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A12"], ["proof (chain)\npicking this:\n  TR \\<in>T R\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel", "have \"TargetTerm (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\""], ["proof (prove)\nusing this:\n  TR \\<in>T R\n  (\\<lbrakk>SP\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. TargetTerm\n     (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (simp add: indRelSTEQ.target)"], ["proof (state)\nthis:\n  TargetTerm\n   (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SP\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SP\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (rule indRelSTEQ.trans)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A9 A12 rel"], ["proof (chain)\npicking this:\n  SP \\<in>S P\n  TR \\<in>T R\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  SP \\<in>S P\n  TR \\<in>T R\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T P \\<Longrightarrow> (P, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T P \\<Longrightarrow> (P, R) \\<in> Rel", "case (TargetTerm TP)"], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T P \\<Longrightarrow> (P, R) \\<in> Rel", "assume A9: \"TP \\<in>T P\""], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T P \\<Longrightarrow> (P, R) \\<in> Rel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "proof (cases Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "case (SourceTerm SQ)"], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "assume A10: \"SQ \\<in>S Q\""], ["proof (state)\nthis:\n  SQ \\<in>S Q\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "with A3 A8 A9"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  \\<forall>TP SQ.\n     (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TP \\<in>T P\n  SQ \\<in>S Q", "have A11: \"(TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  \\<forall>TP SQ.\n     (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TP \\<in>T P\n  SQ \\<in>S Q\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S Q \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "proof (cases R)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (SourceTerm SR)"], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A4 A5 A10"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP SQ.\n     (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SQ \\<in>S Q\n  SR \\<in>S R", "have \"(\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP SQ.\n     (SourceTerm SP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  SQ \\<in>S Q\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"(TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A9"], ["proof (chain)\npicking this:\n  TP \\<in>T P\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm (\\<lbrakk>SR\\<rbrakk>)\""], ["proof (prove)\nusing this:\n  TP \\<in>T P\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n            (\\<lbrakk>SR\\<rbrakk>)", "by (simp add: indRelSTEQ.target)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "from A12"], ["proof (chain)\npicking this:\n  SR \\<in>S R", "have \"TargetTerm (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\""], ["proof (prove)\nusing this:\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. TargetTerm\n     (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (simp add: indRelSTEQ.encL)"], ["proof (state)\nthis:\n  TargetTerm\n   (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (rule indRelSTEQ.trans)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with rel A9 A12"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  TP \\<in>T P\n  SR \\<in>S R\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  TP \\<in>T P\n  SR \\<in>S R\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (TargetTerm TR)"], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A4 A7 A10"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP TQ.\n     (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SQ \\<in>S Q\n  TR \\<in>T R", "have \"(\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>SP TQ.\n     (SourceTerm SP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (\\<lbrakk>SP\\<rbrakk>, TQ) \\<in> TRel\n  SQ \\<in>S Q\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel", "have \"(TP, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  (\\<lbrakk>SQ\\<rbrakk>, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with rel A9 A12"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  TP \\<in>T P\n  TR \\<in>T R\n  (TP, TR) \\<in> TRel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  TP \\<in>T P\n  TR \\<in>T R\n  (TP, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "case (TargetTerm TQ)"], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "assume A10: \"TQ \\<in>T Q\""], ["proof (state)\nthis:\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "with A3 A6 A9"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  \\<forall>TP TQ.\n     (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n  TP \\<in>T P\n  TQ \\<in>T Q", "have A11: \"(TP, TQ) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  \\<forall>TP TQ.\n     (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n  TP \\<in>T P\n  TQ \\<in>T Q\n\ngoal (1 subgoal):\n 1. (TP, TQ) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T Q \\<Longrightarrow> (P, R) \\<in> Rel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "proof (cases R)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (SourceTerm SR)"], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"SR \\<in>S R\""], ["proof (state)\nthis:\n  SR \\<in>S R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A4 A8 A10"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP SQ.\n     (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TQ \\<in>T Q\n  SR \\<in>S R", "have \"(TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP SQ.\n     (TargetTerm TP, SourceTerm SQ) \\<in> Rel \\<longrightarrow>\n     (TP, \\<lbrakk>SQ\\<rbrakk>) \\<in> TRel\n  TQ \\<in>T Q\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"(TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, TQ) \\<in> TRel\n  (TQ, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A9"], ["proof (chain)\npicking this:\n  TP \\<in>T P\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm (\\<lbrakk>SR\\<rbrakk>)\""], ["proof (prove)\nusing this:\n  TP \\<in>T P\n  (TP, \\<lbrakk>SR\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n            (\\<lbrakk>SR\\<rbrakk>)", "by (simp add: indRelSTEQ.target)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "from A12"], ["proof (chain)\npicking this:\n  SR \\<in>S R", "have \"TargetTerm (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\""], ["proof (prove)\nusing this:\n  SR \\<in>S R\n\ngoal (1 subgoal):\n 1. TargetTerm\n     (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (simp add: indRelSTEQ.encL)"], ["proof (state)\nthis:\n  TargetTerm\n   (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "have \"P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> TargetTerm\n          (\\<lbrakk>SR\\<rbrakk>)\n  TargetTerm\n   (\\<lbrakk>SR\\<rbrakk>) \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "by (rule indRelSTEQ.trans)"], ["proof (state)\nthis:\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (2 subgoals):\n 1. \\<And>x1. x1 \\<in>S R \\<Longrightarrow> (P, R) \\<in> Rel\n 2. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with rel A9 A12"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  TP \\<in>T P\n  SR \\<in>S R\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  TP \\<in>T P\n  SR \\<in>S R\n  P \\<sim>\\<lbrakk>\\<cdot>\\<rbrakk><SRel,TRel> R\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "case (TargetTerm TR)"], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "assume A12: \"TR \\<in>T R\""], ["proof (state)\nthis:\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A4 A6 A10"], ["proof (chain)\npicking this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP TQ.\n     (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n  TQ \\<in>T Q\n  TR \\<in>T R", "have \"(TQ, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  \\<forall>TP TQ.\n     (TargetTerm TP, TargetTerm TQ) \\<in> Rel \\<longrightarrow>\n     (TP, TQ) \\<in> TRel\n  TQ \\<in>T Q\n  TR \\<in>T R\n\ngoal (1 subgoal):\n 1. (TQ, TR) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A2 A11"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel", "have \"(TP, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> TRel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel)\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x2. x2 \\<in>T R \\<Longrightarrow> (P, R) \\<in> Rel", "with A9 A12 rel"], ["proof (chain)\npicking this:\n  TP \\<in>T P\n  TR \\<in>T R\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TP, TR) \\<in> TRel", "show \"(P, R) \\<in> Rel\""], ["proof (prove)\nusing this:\n  TP \\<in>T P\n  TR \\<in>T R\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TP, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, R) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 2. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 2. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume B: \"\\<forall>x y. (x, y) \\<in> Rel \\<longrightarrow> (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\""], ["proof (state)\nthis:\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n\ngoal (2 subgoals):\n 1. \\<forall>x y.\n       (x, y) \\<in> Rel \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> Rel \\<longrightarrow>\n           (x, z) \\<in> Rel) \\<Longrightarrow>\n    refl SRel\n 2. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "thus \"refl SRel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. refl SRel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x y.\n          (x, y) \\<in> Rel \\<longrightarrow>\n          (\\<forall>z.\n              (y, z) \\<in> Rel \\<longrightarrow>\n              (x, z) \\<in> Rel) \\<Longrightarrow>\n       (x, x) \\<in> SRel", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x y.\n          (x, y) \\<in> Rel \\<longrightarrow>\n          (\\<forall>z.\n              (y, z) \\<in> Rel \\<longrightarrow>\n              (x, z) \\<in> Rel) \\<Longrightarrow>\n       (x, x) \\<in> SRel", "from rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))", "have \"(SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n\ngoal (1 subgoal):\n 1. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "by (simp add: indRelSTEQ.encR)"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x y.\n          (x, y) \\<in> Rel \\<longrightarrow>\n          (\\<forall>z.\n              (y, z) \\<in> Rel \\<longrightarrow>\n              (x, z) \\<in> Rel) \\<Longrightarrow>\n       (x, x) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x y.\n          (x, y) \\<in> Rel \\<longrightarrow>\n          (\\<forall>z.\n              (y, z) \\<in> Rel \\<longrightarrow>\n              (x, z) \\<in> Rel) \\<Longrightarrow>\n       (x, x) \\<in> SRel", "from rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))", "have \"(TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "by (simp add: indRelSTEQ.encL)"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x y.\n          (x, y) \\<in> Rel \\<longrightarrow>\n          (\\<forall>z.\n              (y, z) \\<in> Rel \\<longrightarrow>\n              (x, z) \\<in> Rel) \\<Longrightarrow>\n       (x, x) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel", "have \"(SourceTerm S, SourceTerm S) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "using B"], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S, SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x y.\n          (x, y) \\<in> Rel \\<longrightarrow>\n          (\\<forall>z.\n              (y, z) \\<in> Rel \\<longrightarrow>\n              (x, z) \\<in> Rel) \\<Longrightarrow>\n       (x, x) \\<in> SRel", "with rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (SourceTerm S, SourceTerm S) \\<in> Rel", "show \"(S, S) \\<in> SRel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (SourceTerm S, SourceTerm S) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (S, S) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S, S) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  refl SRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix TP TQ TR"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"\\<forall>x y. (x, y) \\<in> Rel \\<longrightarrow> (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\""], ["proof (state)\nthis:\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"(TP, TQ) \\<in> TRel\""], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TP, TQ) \\<in> TRel", "have \"(TargetTerm TP, TargetTerm TQ) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TP, TQ) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm TP, TargetTerm TQ) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (TargetTerm TP, TargetTerm TQ) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm TP, TargetTerm TQ) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"(TQ, TR) \\<in> TRel\""], ["proof (state)\nthis:\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TQ, TR) \\<in> TRel", "have \"(TargetTerm TQ, TargetTerm TR) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm TQ, TargetTerm TR) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (TargetTerm TQ, TargetTerm TR) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n  (TargetTerm TP, TargetTerm TQ) \\<in> Rel\n  (TargetTerm TQ, TargetTerm TR) \\<in> Rel", "have \"(TargetTerm TP, TargetTerm TR) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (\\<forall>z. (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)\n  (TargetTerm TP, TargetTerm TQ) \\<in> Rel\n  (TargetTerm TQ, TargetTerm TR) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm TP, TargetTerm TR) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm TP, TargetTerm TR) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (\\<forall>x y.\n           (x, y) \\<in> Rel \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel)) \\<and>\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with rel"], ["proof (chain)\npicking this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TargetTerm TP, TargetTerm TR) \\<in> Rel", "show \"(TP, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  Rel =\n  indRelSTEQ SRel TRel -\n  _Collect (P, Q)\n   (P \\<in> ProcS \\<and> Q \\<in> ProcS \\<or>\n    P \\<in> ProcT \\<and> Q \\<in> ProcT) \\<union>\n  _Collect (P, Q)\n   ((\\<exists>SP SQ.\n        SP \\<in>S P \\<and> SQ \\<in>S Q \\<and> (SP, SQ) \\<in> SRel) \\<or>\n    (\\<exists>TP TQ.\n        TP \\<in>T P \\<and> TQ \\<in>T Q \\<and> (TP, TQ) \\<in> TRel))\n  (TargetTerm TP, TargetTerm TR) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Whenever an encoding induces a trans relation that includes SRel and TRel and relates\n        source terms to their literal translations in both directions, the encoding is fully\n        abstract w.r.t. SRel and TRel.\\<close>"], ["", "lemma (in encoding) trans_source_target_relation_impl_fully_abstract:\n  fixes Rel  :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n                  \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\"\n      and srel:  \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and trel:  \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"\n      and trans: \"trans Rel\"\n  shows \"fully_abstract SRel TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with srel"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (S1, S2) \\<in> SRel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with enc trans"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with trel"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "show \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "assume \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with trel"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with enc trans"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  trans Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>S.\n     (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n     (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with srel"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "show \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by simp"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Assume TRel is a preorder. Then an encoding is fully abstract w.r.t. SRel and TRel iff\n        there exists a relation that relates add least all source terms to their literal\n        translations, includes SRel and TRel, and whose union with the relation that relates\n        exactly all literal translations to their source terms is trans.\\<close>"], ["", "lemma (in encoding) source_target_relation_with_trans_impl_full_abstraction:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n  assumes enc:   \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and trans: \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\"\n  shows \"fully_abstract {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n          {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2)\n        \\<in> _Collect (S1, S2)\n               ((SourceTerm S1, SourceTerm S2) \\<in> Rel)) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel))", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "define Rel' where \"Rel' = Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (state)\nthis:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "from Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "assume \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "with Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "from enc Rel'_def"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<Longrightarrow>\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel\n 2. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'", "show \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "using trans Rel'_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel'\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "define Rel' where \"Rel' = Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}\""], ["proof (state)\nthis:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "from enc Rel'_def"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "assume \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel\""], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "with Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "from Rel'_def"], ["proof (chain)\npicking this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)", "have \"(TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (TargetTerm (\\<lbrakk>S1\\<rbrakk>),\n        TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n       \\<in> Rel \\<Longrightarrow>\n       (SourceTerm S1, SourceTerm S2) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'", "show \"(SourceTerm S1, SourceTerm S2) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "using trans Rel'_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n  Rel' =\n  Rel \\<union>\n  _Collect (P, Q)\n   (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in encoding) fully_abstract_wrt_preorders_iff_source_target_relation_is_transB:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  assumes preord: \"preorder TRel\"\n  shows \"fully_abstract SRel TRel =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        trans\n         (Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)))", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> TRel) \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S.\n              \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n              S \\<in>S Q)) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "assume \"fully_abstract SRel TRel\""], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (2 subgoals):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n        \\<in> TRel) \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S.\n              \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n              S \\<in>S Q)) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "with preord"], ["proof (chain)\npicking this:\n  preorder TRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "show \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (prove)\nusing this:\n  preorder TRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "using fully_abstract_wrt_preorders_impl_source_target_relation_is_trans[where SRel=\"SRel\"\n            and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  preorder TRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> TRel) \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     (refl SRel \\<and> trans TRel) =\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "unfolding preorder_on_def refl_on_def"], ["proof (prove)\nusing this:\n  (TRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n   (\\<forall>x\\<in>UNIV. (x, x) \\<in> TRel)) \\<and>\n  trans TRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> TRel) \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     ((SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n       (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)) \\<and>\n      trans TRel) =\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "by auto"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S.\n              \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n              S \\<in>S Q)) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S.\n              \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n              S \\<in>S Q)) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "assume \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S.\n              \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n              S \\<in>S Q)) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "obtain Rel\n    where \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"\n      and \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (prove)\nusing this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. (\\<And>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        trans\n         (Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n               S \\<in>S Q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       trans\n        (Rel \\<union>\n         _Collect (P, Q)\n          (\\<exists>S.\n              \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n              S \\<in>S Q)) \\<Longrightarrow>\n    \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "thus \"fully_abstract SRel TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "using source_target_relation_with_trans_impl_full_abstraction[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n  (\\<forall>S.\n      (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S.\n         \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)) \\<Longrightarrow>\n  \\<forall>S1 S2.\n     ((S1, S2)\n      \\<in> _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel))\n\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "by blast"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The same holds if to obtain transitivity the union may contain additional pairs that do\n        neither relate two source nor two target terms.\\<close>"], ["", "lemma (in encoding) fully_abstract_wrt_preorders_iff_source_target_relation_union_is_trans:\n  fixes SRel :: \"('procS \\<times> 'procS) set\"\n    and TRel :: \"('procT \\<times> 'procT) set\"\n  shows \"(fully_abstract SRel TRel \\<and> refl SRel \\<and> trans TRel) =\n         (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n          \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n          \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n          \\<and> (\\<exists>Rel'. (\\<forall>(P, Q) \\<in> Rel'. P \\<in> ProcS \\<longleftrightarrow> Q \\<in> ProcT)\n             \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>S1 S2.\n         ((S1, S2) \\<in> SRel) =\n         ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n     refl SRel \\<and> trans TRel) =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        (\\<exists>Rel'.\n            (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n            trans\n             (Rel \\<union>\n              _Collect (P, Q)\n               (\\<exists>S.\n                   \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n              Rel')))", "proof (rule iffI, (erule conjE)+)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "assume \"fully_abstract SRel TRel\" and \"refl SRel\" and \"trans TRel\""], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "from this"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel", "obtain Rel where A1: \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n                         and A2: \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n                         and A3: \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"\n                         and A4: \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q})\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<And>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        trans\n         (Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n               S \\<in>S Q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using fully_abstract_wrt_preorders_impl_source_target_relation_is_trans[where SRel=\"SRel\"\n            and TRel=\"TRel\"]"], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n      \\<in> TRel) \\<Longrightarrow>\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     (refl SRel \\<and> trans TRel) =\n     trans\n      (Rel \\<union>\n       _Collect (P, Q)\n        (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. (\\<And>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        trans\n         (Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n               S \\<in>S Q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "have \"\\<forall>(P, Q) \\<in> {}. P \\<in> ProcS \\<longleftrightarrow> Q \\<in> ProcT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>(P, Q)\\<in>{}. P \\<in> ProcS = Q \\<in> ProcT", "by simp"], ["proof (state)\nthis:\n  \\<forall>(P, Q)\\<in>{}. P \\<in> ProcS = Q \\<in> ProcT\n\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "moreover"], ["proof (state)\nthis:\n  \\<forall>(P, Q)\\<in>{}. P \\<in> ProcS = Q \\<in> ProcT\n\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "from A4"], ["proof (chain)\npicking this:\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))", "have \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> {})\""], ["proof (prove)\nusing this:\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q))\n\ngoal (1 subgoal):\n 1. trans\n     (Rel \\<union>\n      _Collect (P, Q)\n       (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n      {})", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and>\n                S \\<in>S Q) \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q)\n\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             {} \\<longrightarrow>\n       (y, z)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             {} \\<longrightarrow>\n       (x, z)\n       \\<in> Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             {}", "by blast"], ["proof (state)\nthis:\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    {})\n\ngoal (2 subgoals):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel \\<Longrightarrow>\n    \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))\n 2. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>(P, Q)\\<in>{}. P \\<in> ProcS = Q \\<in> ProcT\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    {})", "show \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n                   \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n                   \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n                   \\<and> (\\<exists>Rel'. (\\<forall>(P, Q) \\<in> Rel'. P \\<in> ProcS \\<longleftrightarrow> Q \\<in> ProcT)\n                      \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'))\""], ["proof (prove)\nusing this:\n  \\<forall>(P, Q)\\<in>{}. P \\<in> ProcS = Q \\<in> ProcT\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    {})\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))", "using A1 A2 A3"], ["proof (prove)\nusing this:\n  \\<forall>(P, Q)\\<in>{}. P \\<in> ProcS = Q \\<in> ProcT\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    {})\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel'))", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     (\\<exists>Rel'.\n         (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n         trans\n          (Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "assume \"\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n          \\<and> SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\n          \\<and> TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\n          \\<and> (\\<exists>Rel'. (\\<forall>(P, Q) \\<in> Rel'. P \\<in> ProcS \\<longleftrightarrow> Q \\<in> ProcT)\n             \\<and> trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'))\""], ["proof (state)\nthis:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     (\\<exists>Rel'.\n         (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n         trans\n          (Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'))\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "from this"], ["proof (chain)\npicking this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     (\\<exists>Rel'.\n         (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n         trans\n          (Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'))", "obtain Rel Rel'\n    where B1: \"\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\"\n      and B2: \"SRel = {(S1, S2). (SourceTerm S1, SourceTerm S2) \\<in> Rel}\"\n      and B3: \"TRel = {(T1, T2). (TargetTerm T1, TargetTerm T2) \\<in> Rel}\"\n      and B4: \"\\<forall>(P, Q) \\<in> Rel'. P \\<in> ProcS \\<longleftrightarrow> Q \\<in> ProcT\"\n      and B5: \"trans (Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel')\""], ["proof (prove)\nusing this:\n  \\<exists>Rel.\n     (\\<forall>S.\n         (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n     SRel =\n     _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n     TRel =\n     _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n     (\\<exists>Rel'.\n         (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n         trans\n          (Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'))\n\ngoal (1 subgoal):\n 1. (\\<And>Rel Rel'.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        SRel =\n        _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n        TRel =\n        _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n        (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n        trans\n         (Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    Rel')\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "have \"fully_abstract SRel TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S1 S2.\n       ((S1, S2) \\<in> SRel) =\n       ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1)\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "assume \"(S1, S2) \\<in> SRel\""], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with B2"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (S1, S2) \\<in> SRel", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  (S1, S2) \\<in> SRel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2)\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "from B1"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "have \"(SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S1, SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel \\<union> Rel'\""], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S1, SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel \\<union> Rel'", "using B5"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S1, SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    Rel')\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel \\<union> Rel'", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), SourceTerm S1)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S1, SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (SourceTerm S2, TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel \\<union> Rel'", "by blast"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>S1 S2.\n       (S1, S2) \\<in> SRel \\<Longrightarrow>\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n 2. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with B3 B4"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union> Rel'", "show \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union> Rel'\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "fix S1 S2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "from B1"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "have \"(SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>)) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>))\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "assume \"(\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\""], ["proof (state)\nthis:\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with B3"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel", "have \"(TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>)) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "have \"(TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2)\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'", "have \"(SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> Rel'\""], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> Rel'", "using B5"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    Rel')\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> Rel'", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S1, TargetTerm (\\<lbrakk>S1\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S1\\<rbrakk>), TargetTerm (\\<lbrakk>S2\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S2\\<rbrakk>), SourceTerm S2)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'\n\ngoal (1 subgoal):\n 1. (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> Rel'", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>S1 S2.\n       (\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>)\n       \\<in> TRel \\<Longrightarrow>\n       (S1, S2) \\<in> SRel", "with B2 B4"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> Rel'", "show \"(S1, S2) \\<in> SRel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  (SourceTerm S1, SourceTerm S2) \\<in> Rel \\<union> Rel'\n\ngoal (1 subgoal):\n 1. (S1, S2) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (S1, S2) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "moreover"], ["proof (state)\nthis:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "have \"refl SRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl SRel", "unfolding refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. SRel \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. (x, x) \\<in> SRel)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "from B1"], ["proof (chain)\npicking this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel", "have \"(SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "moreover"], ["proof (state)\nthis:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "have \"(TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel \\<union> {(P, Q). \\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q} \\<union> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n    \\<in> Rel \\<union>\n          _Collect (P, Q)\n           (\\<exists>S.\n               \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n          Rel'", "by simp"], ["proof (state)\nthis:\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "ultimately"], ["proof (chain)\npicking this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'", "have \"(SourceTerm S, SourceTerm S) \\<in> Rel \\<union> Rel'\""], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel \\<union> Rel'", "using B5"], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    Rel')\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel \\<union> Rel'", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n  \\<in> Rel \\<union>\n        _Collect (P, Q)\n         (\\<exists>S.\n             \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n        Rel'\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'\n\ngoal (1 subgoal):\n 1. (SourceTerm S, SourceTerm S) \\<in> Rel \\<union> Rel'", "by blast"], ["proof (state)\nthis:\n  (SourceTerm S, SourceTerm S) \\<in> Rel \\<union> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>x. (x, x) \\<in> SRel", "with B2 B4"], ["proof (chain)\npicking this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  (SourceTerm S, SourceTerm S) \\<in> Rel \\<union> Rel'", "show \"(S, S) \\<in> SRel\""], ["proof (prove)\nusing this:\n  SRel = _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  (SourceTerm S, SourceTerm S) \\<in> Rel \\<union> Rel'\n\ngoal (1 subgoal):\n 1. (S, S) \\<in> SRel", "by blast"], ["proof (state)\nthis:\n  (S, S) \\<in> SRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  refl SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "moreover"], ["proof (state)\nthis:\n  refl SRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "have \"trans TRel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans TRel", "unfolding trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> TRel \\<longrightarrow>\n       (y, z) \\<in> TRel \\<longrightarrow> (x, z) \\<in> TRel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "fix TP TQ TR"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "assume \"(TP, TQ) \\<in> TRel\" and \"(TQ, TR) \\<in> TRel\""], ["proof (state)\nthis:\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> TRel \\<and> (y, z) \\<in> TRel \\<Longrightarrow>\n       (x, z) \\<in> TRel", "with B3 B4 B5"], ["proof (chain)\npicking this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    Rel')\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel", "show \"(TP, TR) \\<in> TRel\""], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  trans\n   (Rel \\<union>\n    _Collect (P, Q)\n     (\\<exists>S. \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n    Rel')\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  TRel = _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel)\n  \\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT\n  \\<forall>x y z.\n     (x, y)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (y, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel' \\<longrightarrow>\n     (x, z)\n     \\<in> Rel \\<union>\n           _Collect (P, Q)\n            (\\<exists>S.\n                \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n           Rel'\n  (TP, TQ) \\<in> TRel\n  (TQ, TR) \\<in> TRel\n\ngoal (1 subgoal):\n 1. (TP, TR) \\<in> TRel", "by blast"], ["proof (state)\nthis:\n  (TP, TR) \\<in> TRel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  trans TRel\n\ngoal (1 subgoal):\n 1. \\<exists>Rel.\n       (\\<forall>S.\n           (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n           \\<in> Rel) \\<and>\n       SRel =\n       _Collect (S1, S2) ((SourceTerm S1, SourceTerm S2) \\<in> Rel) \\<and>\n       TRel =\n       _Collect (T1, T2) ((TargetTerm T1, TargetTerm T2) \\<in> Rel) \\<and>\n       (\\<exists>Rel'.\n           (\\<forall>(P, Q)\\<in>Rel'. P \\<in> ProcS = Q \\<in> ProcT) \\<and>\n           trans\n            (Rel \\<union>\n             _Collect (P, Q)\n              (\\<exists>S.\n                  \\<lbrakk>S\\<rbrakk> \\<in>T P \\<and> S \\<in>S Q) \\<union>\n             Rel')) \\<Longrightarrow>\n    (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel", "show \"fully_abstract SRel TRel \\<and> refl SRel \\<and> trans TRel\""], ["proof (prove)\nusing this:\n  \\<forall>S1 S2.\n     ((S1, S2) \\<in> SRel) =\n     ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)\n  refl SRel\n  trans TRel\n\ngoal (1 subgoal):\n 1. (\\<forall>S1 S2.\n        ((S1, S2) \\<in> SRel) =\n        ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n    refl SRel \\<and> trans TRel", "by blast"], ["proof (state)\nthis:\n  (\\<forall>S1 S2.\n      ((S1, S2) \\<in> SRel) =\n      ((\\<lbrakk>S1\\<rbrakk>, \\<lbrakk>S2\\<rbrakk>) \\<in> TRel)) \\<and>\n  refl SRel \\<and> trans TRel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}