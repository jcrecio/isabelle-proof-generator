{"file_name": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi/DivergenceReflection.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi", "problem_names": ["lemma (in encoding) divergence_preservation_cond:\n  shows \"enc_preserves_divergence = (\\<forall>S. S \\<longmapsto>(Source)\\<omega> \\<longrightarrow> \\<lbrakk>S\\<rbrakk> \\<longmapsto>(Target)\\<omega>)\"", "lemma (in encoding) divergence_reflection_cond:\n  shows \"enc_reflects_divergence = (\\<forall>S. \\<lbrakk>S\\<rbrakk> \\<longmapsto>(Target)\\<omega> \\<longrightarrow> S \\<longmapsto>(Source)\\<omega>)\"", "lemma (in encoding) divergence_respection_cond:\n  shows \"enc_respects_divergence = (\\<forall>S. \\<lbrakk>S\\<rbrakk> \\<longmapsto>(Target)\\<omega> \\<longleftrightarrow> S \\<longmapsto>(Source)\\<omega>)\"", "lemma (in encoding) divergence_preservation_iff_source_target_rel_preserves_divergence:\n  shows \"enc_preserves_divergence\n         = (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n            \\<and> rel_preserves_divergence Rel (STCal Source Target))\"", "lemma (in encoding) divergence_preservation_iff_source_target_rel_reflects_divergence:\n  shows \"enc_preserves_divergence\n         = (\\<exists>Rel. (\\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n            \\<and> rel_reflects_divergence Rel (STCal Source Target))\"", "lemma (in encoding) divergence_reflection_iff_source_target_rel_reflects_divergence:\n  shows \"enc_reflects_divergence\n         = (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n            \\<and> rel_reflects_divergence Rel (STCal Source Target))\"", "lemma (in encoding) divergence_reflection_iff_source_target_rel_preserves_divergence:\n  shows \"enc_reflects_divergence\n         = (\\<exists>Rel. (\\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n            \\<and> rel_preserves_divergence Rel (STCal Source Target))\"", "lemma (in encoding) divergence_respection_iff_source_target_rel_respects_divergence:\n  shows \"enc_respects_divergence = (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n         \\<and> rel_respects_divergence Rel (STCal Source Target))\"\n  and   \"enc_respects_divergence = (\\<exists>Rel.\n         (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n         \\<and> rel_respects_divergence Rel (STCal Source Target))\""], "translations": [["", "lemma (in encoding) divergence_preservation_cond:\n  shows \"enc_preserves_divergence = (\\<forall>S. S \\<longmapsto>(Source)\\<omega> \\<longrightarrow> \\<lbrakk>S\\<rbrakk> \\<longmapsto>(Target)\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_preserves_divergence =\n    (\\<forall>S.\n        S \\<longmapsto>Source\\<omega> \\<longrightarrow>\n        \\<lbrakk>S\\<rbrakk> \\<longmapsto>Target\\<omega>)", "by simp"], ["", "abbreviation (in encoding) enc_reflects_divergence :: \"bool\" where\n  \"enc_reflects_divergence \\<equiv> enc_reflects_pred (\\<lambda>P. P \\<longmapsto>ST\\<omega>)\""], ["", "lemma (in encoding) divergence_reflection_cond:\n  shows \"enc_reflects_divergence = (\\<forall>S. \\<lbrakk>S\\<rbrakk> \\<longmapsto>(Target)\\<omega> \\<longrightarrow> S \\<longmapsto>(Source)\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_reflects_divergence =\n    (\\<forall>S.\n        \\<lbrakk>S\\<rbrakk> \\<longmapsto>Target\\<omega> \\<longrightarrow>\n        S \\<longmapsto>Source\\<omega>)", "by simp"], ["", "abbreviation rel_preserves_divergence\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"rel_preserves_divergence Rel Cal \\<equiv> rel_preserves_pred Rel (\\<lambda>P. P \\<longmapsto>(Cal)\\<omega>)\""], ["", "abbreviation rel_reflects_divergence\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"rel_reflects_divergence Rel Cal \\<equiv> rel_reflects_pred Rel (\\<lambda>P. P \\<longmapsto>(Cal)\\<omega>)\""], ["", "text \\<open>Apart from divergence reflection we consider divergence respection. An encoding respects\n        divergence if each divergent source term is translated into a divergent target term and\n        each divergent target term result from the translation of a divergent source term.\\<close>"], ["", "abbreviation (in encoding) enc_respects_divergence :: \"bool\" where\n  \"enc_respects_divergence \\<equiv> enc_respects_pred (\\<lambda>P. P \\<longmapsto>ST\\<omega>)\""], ["", "lemma (in encoding) divergence_respection_cond:\n  shows \"enc_respects_divergence = (\\<forall>S. \\<lbrakk>S\\<rbrakk> \\<longmapsto>(Target)\\<omega> \\<longleftrightarrow> S \\<longmapsto>(Source)\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<forall>S.\n        \\<lbrakk>S\\<rbrakk> \\<longmapsto>Target\\<omega> =\n        S \\<longmapsto>Source\\<omega>)", "by auto"], ["", "abbreviation rel_respects_divergence\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"rel_respects_divergence Rel Cal \\<equiv> rel_respects_pred Rel (\\<lambda>P. P \\<longmapsto>(Cal)\\<omega>)\""], ["", "text \\<open>An encoding preserves divergence iff\n        (1) there exists a relation that relates source terms and their literal translations and\n            preserves divergence, or\n        (2) there exists a relation that relates literal translations and their source terms and\n            reflects divergence.\\<close>"], ["", "lemma (in encoding) divergence_preservation_iff_source_target_rel_preserves_divergence:\n  shows \"enc_preserves_divergence\n         = (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n            \\<and> rel_preserves_divergence Rel (STCal Source Target))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_preserves_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target))", "using enc_preserves_pred_iff_source_target_rel_preserves_pred(1)[where Pred=\"\\<lambda>P. P \\<longmapsto>ST\\<omega>\"]\n            divergentST_STCal_divergent"], ["proof (prove)\nusing this:\n  enc_preserves_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n      rel_preserves_pred Rel divergentST)\n  ?P \\<longmapsto>STCal Source Target\\<omega> = ?P \\<longmapsto>ST\\<omega>\n\ngoal (1 subgoal):\n 1. enc_preserves_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target))", "by simp"], ["", "lemma (in encoding) divergence_preservation_iff_source_target_rel_reflects_divergence:\n  shows \"enc_preserves_divergence\n         = (\\<exists>Rel. (\\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n            \\<and> rel_reflects_divergence Rel (STCal Source Target))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_preserves_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "using enc_preserves_pred_iff_source_target_rel_reflects_pred(1)[where Pred=\"\\<lambda>P. P \\<longmapsto>ST\\<omega>\"]\n            divergentST_STCal_divergent"], ["proof (prove)\nusing this:\n  enc_preserves_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n      rel_reflects_pred Rel divergentST)\n  ?P \\<longmapsto>STCal Source Target\\<omega> = ?P \\<longmapsto>ST\\<omega>\n\ngoal (1 subgoal):\n 1. enc_preserves_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "by simp"], ["", "text \\<open>An encoding reflects divergence iff\n        (1) there exists a relation that relates source terms and their literal translations and\n            reflects divergence, or\n        (2) there exists a relation that relates literal translations and their source terms and\n            preserves divergence.\\<close>"], ["", "lemma (in encoding) divergence_reflection_iff_source_target_rel_reflects_divergence:\n  shows \"enc_reflects_divergence\n         = (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n            \\<and> rel_reflects_divergence Rel (STCal Source Target))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_reflects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "using enc_reflects_pred_iff_source_target_rel_reflects_pred[where Pred=\"\\<lambda>P. P \\<longmapsto>ST\\<omega>\"]\n            divergentST_STCal_divergent"], ["proof (prove)\nusing this:\n  enc_reflects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n      rel_reflects_pred Rel divergentST)\n  enc_reflects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n      rel_reflects_pred Rel divergentST \\<and> preorder Rel)\n  ?P \\<longmapsto>STCal Source Target\\<omega> = ?P \\<longmapsto>ST\\<omega>\n\ngoal (1 subgoal):\n 1. enc_reflects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "by simp"], ["", "lemma (in encoding) divergence_reflection_iff_source_target_rel_preserves_divergence:\n  shows \"enc_reflects_divergence\n         = (\\<exists>Rel. (\\<forall>S. (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n            \\<and> rel_preserves_divergence Rel (STCal Source Target))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_reflects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target))", "using enc_reflects_pred_iff_source_target_rel_preserves_pred[where Pred=\"\\<lambda>P. P \\<longmapsto>ST\\<omega>\"]\n            divergentST_STCal_divergent"], ["proof (prove)\nusing this:\n  enc_reflects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n      rel_preserves_pred Rel divergentST)\n  ?P \\<longmapsto>STCal Source Target\\<omega> = ?P \\<longmapsto>ST\\<omega>\n\ngoal (1 subgoal):\n 1. enc_reflects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target))", "by simp"], ["", "text \\<open>An encoding respects divergence iff there exists a relation that relates source terms and\n        their literal translations in both directions and respects divergence.\\<close>"], ["", "lemma (in encoding) divergence_respection_iff_source_target_rel_respects_divergence:\n  shows \"enc_respects_divergence = (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n         \\<and> rel_respects_divergence Rel (STCal Source Target))\"\n  and   \"enc_respects_divergence = (\\<exists>Rel.\n         (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n         \\<and> rel_respects_divergence Rel (STCal Source Target))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target)) &&&\n    enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))\n 2. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "show \"enc_respects_divergence = (\\<exists>Rel. (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel)\n        \\<and> rel_respects_divergence Rel (STCal Source Target))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "using enc_respects_pred_iff_source_target_rel_respects_pred_encR[where Pred=\"\\<lambda>P. P \\<longmapsto>ST\\<omega>\"]\n            divergentST_STCal_divergent"], ["proof (prove)\nusing this:\n  enc_respects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n      rel_respects_pred Rel divergentST)\n  enc_respects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n      rel_respects_pred Rel divergentST \\<and> preorder Rel)\n  ?P \\<longmapsto>STCal Source Target\\<omega> = ?P \\<longmapsto>ST\\<omega>\n\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "by simp"], ["proof (state)\nthis:\n  enc_respects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel) \\<and>\n      rel_preserves_divergence Rel (STCal Source Target) \\<and>\n      rel_reflects_divergence Rel (STCal Source Target))\n\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "show \"enc_respects_divergence = (\\<exists>Rel.\n        (\\<forall>S. (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and> (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel)\n        \\<and> rel_respects_divergence Rel (STCal Source Target))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "using enc_respects_pred_iff_source_target_rel_respects_pred_encRL[where Pred=\"\\<lambda>P. P \\<longmapsto>ST\\<omega>\"]\n            divergentST_STCal_divergent"], ["proof (prove)\nusing this:\n  enc_respects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n          (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n      rel_respects_pred Rel divergentST)\n  ?P \\<longmapsto>STCal Source Target\\<omega> = ?P \\<longmapsto>ST\\<omega>\n\ngoal (1 subgoal):\n 1. enc_respects_divergence =\n    (\\<exists>Rel.\n        (\\<forall>S.\n            (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>))\n            \\<in> Rel \\<and>\n            (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S)\n            \\<in> Rel) \\<and>\n        rel_preserves_divergence Rel (STCal Source Target) \\<and>\n        rel_reflects_divergence Rel (STCal Source Target))", "by simp"], ["proof (state)\nthis:\n  enc_respects_divergence =\n  (\\<exists>Rel.\n      (\\<forall>S.\n          (SourceTerm S, TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<in> Rel \\<and>\n          (TargetTerm (\\<lbrakk>S\\<rbrakk>), SourceTerm S) \\<in> Rel) \\<and>\n      rel_preserves_divergence Rel (STCal Source Target) \\<and>\n      rel_reflects_divergence Rel (STCal Source Target))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}