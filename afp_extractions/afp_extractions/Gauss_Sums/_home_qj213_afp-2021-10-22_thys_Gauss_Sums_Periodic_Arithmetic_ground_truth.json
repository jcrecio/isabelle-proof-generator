{"file_name": "/home/qj213/afp-2021-10-22/thys/Gauss_Sums/Periodic_Arithmetic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gauss_Sums", "problem_names": ["lemma const_periodic_arithmetic: \"periodic_arithmetic (\\<lambda>x. y) k\"", "lemma add_periodic_arithmetic:\n  fixes f g :: \"nat \\<Rightarrow> complex\"\n  assumes \"periodic_arithmetic f k\"\n  assumes \"periodic_arithmetic g k\"\n  shows \"periodic_arithmetic (\\<lambda>n. f n + g n) k\"", "lemma mult_periodic_arithmetic:\n  fixes f g :: \"nat \\<Rightarrow> complex\"\n  assumes \"periodic_arithmetic f k\"\n  assumes \"periodic_arithmetic g k\"\n  shows \"periodic_arithmetic (\\<lambda>n. f n * g n) k\"", "lemma scalar_mult_periodic_arithmetic:\n  fixes f :: \"nat \\<Rightarrow> complex\" and a :: complex\n  assumes \"periodic_arithmetic f k\"\n  shows \"periodic_arithmetic (\\<lambda>n. a * f n) k\"", "lemma fin_sum_periodic_arithmetic_set:\n  fixes f g :: \"nat \\<Rightarrow> complex\" \n  assumes \"\\<forall>i\\<in>A. periodic_arithmetic (h i) k\"\n  shows \"periodic_arithmetic (\\<lambda>n. \\<Sum>i \\<in> A. h i n) k\"", "lemma mult_period:\n  assumes \"periodic_arithmetic g k\"\n  shows \"periodic_arithmetic g (k*q)\"", "lemma unique_periodic_arithmetic_extension:\n  assumes \"k > 0\"\n  assumes \"\\<forall>j<k. g j = h j\"\n  assumes \"periodic_arithmetic g k\" and \"periodic_arithmetic h k\"\n  shows \"g i = h i\"", "lemma periodic_arithmetic_sum_periodic_arithmetic:\n  assumes \"periodic_arithmetic f k\"\n  shows \"(\\<Sum>l \\<in> {m..n}. f l) = (\\<Sum>l \\<in> {m+k..n+k}. f l)\"", "lemma mod_periodic_arithmetic:\n  fixes n m :: nat\n  assumes \"periodic_arithmetic f k\"\n  assumes \"n mod k = m mod k\"\n  shows \"f n = f m\"", "lemma cong_periodic_arithmetic:\n  assumes \"periodic_arithmetic f k\" \"[a = b] (mod k)\"\n  shows   \"f a = f b\"", "lemma cong_nat_imp_eq:\n  fixes m :: nat\n  assumes \"m > 0\" \"x \\<in> {a..<a+m}\" \"y \\<in> {a..<a+m}\" \"[x = y] (mod m)\"\n  shows   \"x = y\"", "lemma inj_on_mod_nat:\n  fixes m :: nat\n  assumes \"m > 0\"\n  shows   \"inj_on (\\<lambda>x. x mod m) {a..<a+m}\"", "lemma bij_betw_mod_nat_atLeastLessThan:\n  fixes k d :: nat\n  assumes \"k > 0\"\n  defines \"g \\<equiv> (\\<lambda>i. nat ((int i - int d) mod int k) + d)\"\n  shows   \"bij_betw (\\<lambda>i. i mod k) {d..<d+k} {..<k}\"", "lemma periodic_arithmetic_sum_periodic_arithmetic_shift:\n  fixes k d :: nat\n  assumes \"periodic_arithmetic f k\" \"k > 0\" \"d > 0\"\n  shows \"(\\<Sum>l \\<in> {0..k-1}. f l) = (\\<Sum>l \\<in> {d..d+k-1}. f l)\"", "lemma self_bij_0_k:\n  fixes a k :: nat\n  assumes \"coprime a k\" \"[a*i = 1] (mod k)\" \"k > 0\" \n  shows \"bij_betw (\\<lambda>r. r*a mod k) {0..k-1} {0..k-1}\"", "lemma periodic_arithmetic_homothecy:\n  assumes \"periodic_arithmetic f k\"\n  shows   \"periodic_arithmetic (\\<lambda>l. f (l*a)) k\"", "theorem periodic_arithmetic_remove_homothecy:\n  assumes \"coprime a k\" \"periodic_arithmetic f k\" \"k > 0\" \n  shows \"(\\<Sum>l=1..k. f l) = (\\<Sum>l=1..k. f (l*a))\""], "translations": [["", "lemma const_periodic_arithmetic: \"periodic_arithmetic (\\<lambda>x. y) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>x. y) k", "unfolding periodic_arithmetic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. y = y", "by blast"], ["", "lemma add_periodic_arithmetic:\n  fixes f g :: \"nat \\<Rightarrow> complex\"\n  assumes \"periodic_arithmetic f k\"\n  assumes \"periodic_arithmetic g k\"\n  shows \"periodic_arithmetic (\\<lambda>n. f n + g n) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. f n + g n) k", "using assms"], ["proof (prove)\nusing this:\n  periodic_arithmetic f k\n  periodic_arithmetic g k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. f n + g n) k", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. f (n + k) = f n\n  \\<forall>n. g (n + k) = g n\n\ngoal (1 subgoal):\n 1. \\<forall>n. f (n + k) + g (n + k) = f n + g n", "by simp"], ["", "lemma mult_periodic_arithmetic:\n  fixes f g :: \"nat \\<Rightarrow> complex\"\n  assumes \"periodic_arithmetic f k\"\n  assumes \"periodic_arithmetic g k\"\n  shows \"periodic_arithmetic (\\<lambda>n. f n * g n) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. f n * g n) k", "using assms"], ["proof (prove)\nusing this:\n  periodic_arithmetic f k\n  periodic_arithmetic g k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. f n * g n) k", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. f (n + k) = f n\n  \\<forall>n. g (n + k) = g n\n\ngoal (1 subgoal):\n 1. \\<forall>n. f (n + k) * g (n + k) = f n * g n", "by simp"], ["", "lemma scalar_mult_periodic_arithmetic:\n  fixes f :: \"nat \\<Rightarrow> complex\" and a :: complex\n  assumes \"periodic_arithmetic f k\"\n  shows \"periodic_arithmetic (\\<lambda>n. a * f n) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. a * f n) k", "using mult_periodic_arithmetic[OF const_periodic_arithmetic[of a k] assms(1)]"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>n. a * f n) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. a * f n) k", "by simp"], ["", "lemma fin_sum_periodic_arithmetic_set:\n  fixes f g :: \"nat \\<Rightarrow> complex\" \n  assumes \"\\<forall>i\\<in>A. periodic_arithmetic (h i) k\"\n  shows \"periodic_arithmetic (\\<lambda>n. \\<Sum>i \\<in> A. h i n) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. \\<Sum>i\\<in>A. h i n) k", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>A. periodic_arithmetic (h i) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>n. \\<Sum>i\\<in>A. h i n) k", "by (simp add: periodic_arithmetic_def)"], ["", "lemma mult_period:\n  assumes \"periodic_arithmetic g k\"\n  shows \"periodic_arithmetic g (k*q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic g (k * q)", "using assms"], ["proof (prove)\nusing this:\n  periodic_arithmetic g k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic g (k * q)", "proof (induction q)"], ["proof (state)\ngoal (2 subgoals):\n 1. periodic_arithmetic g k \\<Longrightarrow> periodic_arithmetic g (k * 0)\n 2. \\<And>q.\n       \\<lbrakk>periodic_arithmetic g k \\<Longrightarrow>\n                periodic_arithmetic g (k * q);\n        periodic_arithmetic g k\\<rbrakk>\n       \\<Longrightarrow> periodic_arithmetic g (k * Suc q)", "case 0"], ["proof (state)\nthis:\n  periodic_arithmetic g k\n\ngoal (2 subgoals):\n 1. periodic_arithmetic g k \\<Longrightarrow> periodic_arithmetic g (k * 0)\n 2. \\<And>q.\n       \\<lbrakk>periodic_arithmetic g k \\<Longrightarrow>\n                periodic_arithmetic g (k * q);\n        periodic_arithmetic g k\\<rbrakk>\n       \\<Longrightarrow> periodic_arithmetic g (k * Suc q)", "then"], ["proof (chain)\npicking this:\n  periodic_arithmetic g k", "show ?case"], ["proof (prove)\nusing this:\n  periodic_arithmetic g k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic g (k * 0)", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. g (n + k) = g n\n\ngoal (1 subgoal):\n 1. \\<forall>n. g (n + k * 0) = g n", "by simp"], ["proof (state)\nthis:\n  periodic_arithmetic g (k * 0)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>periodic_arithmetic g k \\<Longrightarrow>\n                periodic_arithmetic g (k * q);\n        periodic_arithmetic g k\\<rbrakk>\n       \\<Longrightarrow> periodic_arithmetic g (k * Suc q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>periodic_arithmetic g k \\<Longrightarrow>\n                periodic_arithmetic g (k * q);\n        periodic_arithmetic g k\\<rbrakk>\n       \\<Longrightarrow> periodic_arithmetic g (k * Suc q)", "case (Suc m)"], ["proof (state)\nthis:\n  periodic_arithmetic g k \\<Longrightarrow> periodic_arithmetic g (k * m)\n  periodic_arithmetic g k\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>periodic_arithmetic g k \\<Longrightarrow>\n                periodic_arithmetic g (k * q);\n        periodic_arithmetic g k\\<rbrakk>\n       \\<Longrightarrow> periodic_arithmetic g (k * Suc q)", "then"], ["proof (chain)\npicking this:\n  periodic_arithmetic g k \\<Longrightarrow> periodic_arithmetic g (k * m)\n  periodic_arithmetic g k", "show ?case"], ["proof (prove)\nusing this:\n  periodic_arithmetic g k \\<Longrightarrow> periodic_arithmetic g (k * m)\n  periodic_arithmetic g k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic g (k * Suc m)", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. g (n + k) = g n \\<Longrightarrow>\n  \\<forall>n. g (n + k * m) = g n\n  \\<forall>n. g (n + k) = g n\n\ngoal (1 subgoal):\n 1. \\<forall>n. g (n + k * Suc m) = g n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "have \"g (n + k * Suc m) = g (n + k +  k * m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (n + k * Suc m) = g (n + k + k * m)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  g (n + k * Suc m) = g (n + k + k * m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "also"], ["proof (state)\nthis:\n  g (n + k * Suc m) = g (n + k + k * m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "have \"\\<dots> = g(n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (n + k + k * m) = g n", "using Suc.IH[OF Suc.prems] assms"], ["proof (prove)\nusing this:\n  periodic_arithmetic g (k * m)\n  periodic_arithmetic g k\n\ngoal (1 subgoal):\n 1. g (n + k + k * m) = g n", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. g (n + k * m) = g n\n  \\<forall>n. g (n + k) = g n\n\ngoal (1 subgoal):\n 1. g (n + k + k * m) = g n", "by simp"], ["proof (state)\nthis:\n  g (n + k + k * m) = g n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "finally"], ["proof (chain)\npicking this:\n  g (n + k * Suc m) = g n", "have \"g (n + k * Suc m) = g(n)\""], ["proof (prove)\nusing this:\n  g (n + k * Suc m) = g n\n\ngoal (1 subgoal):\n 1. g (n + k * Suc m) = g n", "by blast"], ["proof (state)\nthis:\n  g (n + k * Suc m) = g n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "}"], ["proof (state)\nthis:\n  g (?n2 + k * Suc m) = g ?n2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. g (n + k) = g n \\<Longrightarrow>\n             \\<forall>n. g (n + k * m) = g n;\n     \\<forall>n. g (n + k) = g n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. g (n + k * Suc m) = g n", "then"], ["proof (chain)\npicking this:\n  g (?n2 + k * Suc m) = g ?n2", "show \"\\<forall>n. g (n + k * Suc m) = g n\""], ["proof (prove)\nusing this:\n  g (?n2 + k * Suc m) = g ?n2\n\ngoal (1 subgoal):\n 1. \\<forall>n. g (n + k * Suc m) = g n", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. g (n + k * Suc m) = g n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  periodic_arithmetic g (k * Suc m)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_periodic_arithmetic_extension:\n  assumes \"k > 0\"\n  assumes \"\\<forall>j<k. g j = h j\"\n  assumes \"periodic_arithmetic g k\" and \"periodic_arithmetic h k\"\n  shows \"g i = h i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i = h i", "proof (cases \"i < k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < k \\<Longrightarrow> g i = h i\n 2. \\<not> i < k \\<Longrightarrow> g i = h i", "case True"], ["proof (state)\nthis:\n  i < k\n\ngoal (2 subgoals):\n 1. i < k \\<Longrightarrow> g i = h i\n 2. \\<not> i < k \\<Longrightarrow> g i = h i", "then"], ["proof (chain)\npicking this:\n  i < k", "show ?thesis"], ["proof (prove)\nusing this:\n  i < k\n\ngoal (1 subgoal):\n 1. g i = h i", "using assms"], ["proof (prove)\nusing this:\n  i < k\n  0 < k\n  \\<forall>j<k. g j = h j\n  periodic_arithmetic g k\n  periodic_arithmetic h k\n\ngoal (1 subgoal):\n 1. g i = h i", "by simp"], ["proof (state)\nthis:\n  g i = h i\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "case False"], ["proof (state)\nthis:\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "then"], ["proof (chain)\npicking this:\n  \\<not> i < k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. g i = h i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "have \"k * (i div k) + (i mod k) = i \\<and> (i mod k) < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (i div k) + i mod k = i \\<and> i mod k < k", "by (simp add: assms(1) algebra_simps)"], ["proof (state)\nthis:\n  k * (i div k) + i mod k = i \\<and> i mod k < k\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "then"], ["proof (chain)\npicking this:\n  k * (i div k) + i mod k = i \\<and> i mod k < k", "obtain q r where euclid_div: \"k*q + r = i \\<and> r < k\""], ["proof (prove)\nusing this:\n  k * (i div k) + i mod k = i \\<and> i mod k < k\n\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        k * q + r = i \\<and> r < k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using mult.commute"], ["proof (prove)\nusing this:\n  k * (i div k) + i mod k = i \\<and> i mod k < k\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        k * q + r = i \\<and> r < k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k * q + r = i \\<and> r < k\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "from assms(3) assms(4)"], ["proof (chain)\npicking this:\n  periodic_arithmetic g k\n  periodic_arithmetic h k", "have  \"periodic_arithmetic g (k*q)\" \"periodic_arithmetic h (k*q)\""], ["proof (prove)\nusing this:\n  periodic_arithmetic g k\n  periodic_arithmetic h k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic g (k * q) &&& periodic_arithmetic h (k * q)", "using mult_period"], ["proof (prove)\nusing this:\n  periodic_arithmetic g k\n  periodic_arithmetic h k\n  periodic_arithmetic ?g ?k \\<Longrightarrow>\n  periodic_arithmetic ?g (?k * ?q)\n\ngoal (1 subgoal):\n 1. periodic_arithmetic g (k * q) &&& periodic_arithmetic h (k * q)", "by simp+"], ["proof (state)\nthis:\n  periodic_arithmetic g (k * q)\n  periodic_arithmetic h (k * q)\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "have \"g(k*q+r) = g(r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (k * q + r) = g r", "using \\<open>periodic_arithmetic g (k*q)\\<close>"], ["proof (prove)\nusing this:\n  periodic_arithmetic g (k * q)\n\ngoal (1 subgoal):\n 1. g (k * q + r) = g r", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. g (n + k * q) = g n\n\ngoal (1 subgoal):\n 1. g (k * q + r) = g r", "using add.commute[of \"k*q\" r]"], ["proof (prove)\nusing this:\n  \\<forall>n. g (n + k * q) = g n\n  k * q + r = r + k * q\n\ngoal (1 subgoal):\n 1. g (k * q + r) = g r", "by presburger"], ["proof (state)\nthis:\n  g (k * q + r) = g r\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "also"], ["proof (state)\nthis:\n  g (k * q + r) = g r\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "have \"\\<dots> = h(r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g r = h r", "using euclid_div assms(2)"], ["proof (prove)\nusing this:\n  k * q + r = i \\<and> r < k\n  \\<forall>j<k. g j = h j\n\ngoal (1 subgoal):\n 1. g r = h r", "by simp"], ["proof (state)\nthis:\n  g r = h r\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "also"], ["proof (state)\nthis:\n  g r = h r\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "have \"\\<dots> = h(k*q+r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h r = h (k * q + r)", "using \\<open>periodic_arithmetic h (k*q)\\<close> add.commute[of \"k*q\" r]"], ["proof (prove)\nusing this:\n  periodic_arithmetic h (k * q)\n  k * q + r = r + k * q\n\ngoal (1 subgoal):\n 1. h r = h (k * q + r)", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. h (n + k * q) = h n\n  k * q + r = r + k * q\n\ngoal (1 subgoal):\n 1. h r = h (k * q + r)", "by presburger"], ["proof (state)\nthis:\n  h r = h (k * q + r)\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "also"], ["proof (state)\nthis:\n  h r = h (k * q + r)\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "have \"\\<dots> = h(i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (k * q + r) = h i", "using euclid_div"], ["proof (prove)\nusing this:\n  k * q + r = i \\<and> r < k\n\ngoal (1 subgoal):\n 1. h (k * q + r) = h i", "by simp"], ["proof (state)\nthis:\n  h (k * q + r) = h i\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> g i = h i", "finally"], ["proof (chain)\npicking this:\n  g (k * q + r) = h i", "show \"g(i) = h(i)\""], ["proof (prove)\nusing this:\n  g (k * q + r) = h i\n\ngoal (1 subgoal):\n 1. g i = h i", "using euclid_div"], ["proof (prove)\nusing this:\n  g (k * q + r) = h i\n  k * q + r = i \\<and> r < k\n\ngoal (1 subgoal):\n 1. g i = h i", "by simp"], ["proof (state)\nthis:\n  g i = h i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g i = h i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_arithmetic_sum_periodic_arithmetic:\n  assumes \"periodic_arithmetic f k\"\n  shows \"(\\<Sum>l \\<in> {m..n}. f l) = (\\<Sum>l \\<in> {m+k..n+k}. f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {m..n} = sum f {m + k..n + k}", "using periodic_arithmetic_def assms"], ["proof (prove)\nusing this:\n  periodic_arithmetic ?f ?k = (\\<forall>n. ?f (n + ?k) = ?f n)\n  periodic_arithmetic f k\n\ngoal (1 subgoal):\n 1. sum f {m..n} = sum f {m + k..n + k}", "by (intro sum.reindex_bij_witness\n         [of \"{m..n}\" \"\\<lambda>l. l-k\" \"\\<lambda>l. l+k\" \"{m+k..n+k}\" f f])\n      auto"], ["", "lemma mod_periodic_arithmetic:\n  fixes n m :: nat\n  assumes \"periodic_arithmetic f k\"\n  assumes \"n mod k = m mod k\"\n  shows \"f n = f m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n = f m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f n = f m", "obtain q where 1: \"n = q*k+(n mod k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        n = q * k + n mod k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using div_mult_mod_eq[of n k,symmetric]"], ["proof (prove)\nusing this:\n  n = n div k * k + n mod k\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        n = q * k + n mod k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n = q * k + n mod k\n\ngoal (1 subgoal):\n 1. f n = f m", "obtain q' where 2: \"m = q'*k+(m mod k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q'.\n        m = q' * k + m mod k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using div_mult_mod_eq[of m k,symmetric]"], ["proof (prove)\nusing this:\n  m = m div k * k + m mod k\n\ngoal (1 subgoal):\n 1. (\\<And>q'.\n        m = q' * k + m mod k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  m = q' * k + m mod k\n\ngoal (1 subgoal):\n 1. f n = f m", "from 1"], ["proof (chain)\npicking this:\n  n = q * k + n mod k", "have \"f n = f (q*k+(n mod k))\""], ["proof (prove)\nusing this:\n  n = q * k + n mod k\n\ngoal (1 subgoal):\n 1. f n = f (q * k + n mod k)", "by auto"], ["proof (state)\nthis:\n  f n = f (q * k + n mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "also"], ["proof (state)\nthis:\n  f n = f (q * k + n mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "have \"\\<dots> = f (n mod k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (q * k + n mod k) = f (n mod k)", "using mult_period[of f k q] assms(1) periodic_arithmetic_def[of f \"k*q\"]"], ["proof (prove)\nusing this:\n  periodic_arithmetic f k \\<Longrightarrow> periodic_arithmetic f (k * q)\n  periodic_arithmetic f k\n  periodic_arithmetic f (k * q) = (\\<forall>n. f (n + k * q) = f n)\n\ngoal (1 subgoal):\n 1. f (q * k + n mod k) = f (n mod k)", "by (simp add: algebra_simps,subst add.commute,blast)"], ["proof (state)\nthis:\n  f (q * k + n mod k) = f (n mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "also"], ["proof (state)\nthis:\n  f (q * k + n mod k) = f (n mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "have \"\\<dots> = f (m mod k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (n mod k) = f (m mod k)", "using assms(2)"], ["proof (prove)\nusing this:\n  n mod k = m mod k\n\ngoal (1 subgoal):\n 1. f (n mod k) = f (m mod k)", "by auto"], ["proof (state)\nthis:\n  f (n mod k) = f (m mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "also"], ["proof (state)\nthis:\n  f (n mod k) = f (m mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "have \"\\<dots> = f (q'*k+(m mod k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (m mod k) = f (q' * k + m mod k)", "using mult_period[of f k q'] assms(1) periodic_arithmetic_def[of f \"k*q'\"]"], ["proof (prove)\nusing this:\n  periodic_arithmetic f k \\<Longrightarrow> periodic_arithmetic f (k * q')\n  periodic_arithmetic f k\n  periodic_arithmetic f (k * q') = (\\<forall>n. f (n + k * q') = f n)\n\ngoal (1 subgoal):\n 1. f (m mod k) = f (q' * k + m mod k)", "by (simp add: algebra_simps,subst add.commute,presburger)"], ["proof (state)\nthis:\n  f (m mod k) = f (q' * k + m mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "also"], ["proof (state)\nthis:\n  f (m mod k) = f (q' * k + m mod k)\n\ngoal (1 subgoal):\n 1. f n = f m", "have \"\\<dots> = f m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (q' * k + m mod k) = f m", "using 2"], ["proof (prove)\nusing this:\n  m = q' * k + m mod k\n\ngoal (1 subgoal):\n 1. f (q' * k + m mod k) = f m", "by auto"], ["proof (state)\nthis:\n  f (q' * k + m mod k) = f m\n\ngoal (1 subgoal):\n 1. f n = f m", "finally"], ["proof (chain)\npicking this:\n  f n = f m", "show \"f n = f m\""], ["proof (prove)\nusing this:\n  f n = f m\n\ngoal (1 subgoal):\n 1. f n = f m", "by simp"], ["proof (state)\nthis:\n  f n = f m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cong_periodic_arithmetic:\n  assumes \"periodic_arithmetic f k\" \"[a = b] (mod k)\"\n  shows   \"f a = f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a = f b", "using assms mod_periodic_arithmetic[of f k a b]"], ["proof (prove)\nusing this:\n  periodic_arithmetic f k\n  [a = b] (mod k)\n  \\<lbrakk>periodic_arithmetic f k; a mod k = b mod k\\<rbrakk>\n  \\<Longrightarrow> f a = f b\n\ngoal (1 subgoal):\n 1. f a = f b", "by (auto simp: cong_def)"], ["", "lemma cong_nat_imp_eq:\n  fixes m :: nat\n  assumes \"m > 0\" \"x \\<in> {a..<a+m}\" \"y \\<in> {a..<a+m}\" \"[x = y] (mod m)\"\n  shows   \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n  x \\<in> {a..<a + m}\n  y \\<in> {a..<a + m}\n  [x = y] (mod m)\n\ngoal (1 subgoal):\n 1. x = y", "proof (induction x y rule: linorder_wlog)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa b.\n       \\<lbrakk>aa \\<le> b; 0 < m; aa \\<in> {a..<a + m};\n        b \\<in> {a..<a + m}; [aa = b] (mod m)\\<rbrakk>\n       \\<Longrightarrow> aa = b\n 2. \\<And>aa b.\n       \\<lbrakk>\\<lbrakk>0 < m; b \\<in> {a..<a + m}; aa \\<in> {a..<a + m};\n                 [b = aa] (mod m)\\<rbrakk>\n                \\<Longrightarrow> b = aa;\n        0 < m; aa \\<in> {a..<a + m}; b \\<in> {a..<a + m};\n        [aa = b] (mod m)\\<rbrakk>\n       \\<Longrightarrow> aa = b", "case (le x y)"], ["proof (state)\nthis:\n  x \\<le> y\n  0 < m\n  x \\<in> {a..<a + m}\n  y \\<in> {a..<a + m}\n  [x = y] (mod m)\n\ngoal (2 subgoals):\n 1. \\<And>aa b.\n       \\<lbrakk>aa \\<le> b; 0 < m; aa \\<in> {a..<a + m};\n        b \\<in> {a..<a + m}; [aa = b] (mod m)\\<rbrakk>\n       \\<Longrightarrow> aa = b\n 2. \\<And>aa b.\n       \\<lbrakk>\\<lbrakk>0 < m; b \\<in> {a..<a + m}; aa \\<in> {a..<a + m};\n                 [b = aa] (mod m)\\<rbrakk>\n                \\<Longrightarrow> b = aa;\n        0 < m; aa \\<in> {a..<a + m}; b \\<in> {a..<a + m};\n        [aa = b] (mod m)\\<rbrakk>\n       \\<Longrightarrow> aa = b", "have \"[y - x = 0] (mod m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y - x = 0] (mod m)", "using cong_diff_iff_cong_0_nat cong_sym le"], ["proof (prove)\nusing this:\n  ?b \\<le> ?a \\<Longrightarrow> [?a - ?b = 0] (mod ?m) = [?a = ?b] (mod ?m)\n  [?b = ?c] (mod ?a) \\<Longrightarrow> [?c = ?b] (mod ?a)\n  x \\<le> y\n  0 < m\n  x \\<in> {a..<a + m}\n  y \\<in> {a..<a + m}\n  [x = y] (mod m)\n\ngoal (1 subgoal):\n 1. [y - x = 0] (mod m)", "by blast"], ["proof (state)\nthis:\n  [y - x = 0] (mod m)\n\ngoal (2 subgoals):\n 1. \\<And>aa b.\n       \\<lbrakk>aa \\<le> b; 0 < m; aa \\<in> {a..<a + m};\n        b \\<in> {a..<a + m}; [aa = b] (mod m)\\<rbrakk>\n       \\<Longrightarrow> aa = b\n 2. \\<And>aa b.\n       \\<lbrakk>\\<lbrakk>0 < m; b \\<in> {a..<a + m}; aa \\<in> {a..<a + m};\n                 [b = aa] (mod m)\\<rbrakk>\n                \\<Longrightarrow> b = aa;\n        0 < m; aa \\<in> {a..<a + m}; b \\<in> {a..<a + m};\n        [aa = b] (mod m)\\<rbrakk>\n       \\<Longrightarrow> aa = b", "thus \"x = y\""], ["proof (prove)\nusing this:\n  [y - x = 0] (mod m)\n\ngoal (1 subgoal):\n 1. x = y", "using le"], ["proof (prove)\nusing this:\n  [y - x = 0] (mod m)\n  x \\<le> y\n  0 < m\n  x \\<in> {a..<a + m}\n  y \\<in> {a..<a + m}\n  [x = y] (mod m)\n\ngoal (1 subgoal):\n 1. x = y", "by (auto simp: cong_def)"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>aa b.\n       \\<lbrakk>\\<lbrakk>0 < m; b \\<in> {a..<a + m}; aa \\<in> {a..<a + m};\n                 [b = aa] (mod m)\\<rbrakk>\n                \\<Longrightarrow> b = aa;\n        0 < m; aa \\<in> {a..<a + m}; b \\<in> {a..<a + m};\n        [aa = b] (mod m)\\<rbrakk>\n       \\<Longrightarrow> aa = b", "qed (auto simp: cong_sym)"], ["", "lemma inj_on_mod_nat:\n  fixes m :: nat\n  assumes \"m > 0\"\n  shows   \"inj_on (\\<lambda>x. x mod m) {a..<a+m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. x mod m) {a..<a + m}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..<a + m}; y \\<in> {a..<a + m};\n        x mod m = y mod m\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..<a + m}; y \\<in> {a..<a + m};\n        x mod m = y mod m\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume xy: \"x \\<in> {a..<a+m}\" \"y \\<in> {a..<a+m}\" and eq: \"x mod m = y mod m\""], ["proof (state)\nthis:\n  x \\<in> {a..<a + m}\n  y \\<in> {a..<a + m}\n  x mod m = y mod m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..<a + m}; y \\<in> {a..<a + m};\n        x mod m = y mod m\\<rbrakk>\n       \\<Longrightarrow> x = y", "from \\<open>m > 0\\<close> and xy"], ["proof (chain)\npicking this:\n  0 < m\n  x \\<in> {a..<a + m}\n  y \\<in> {a..<a + m}", "show \"x = y\""], ["proof (prove)\nusing this:\n  0 < m\n  x \\<in> {a..<a + m}\n  y \\<in> {a..<a + m}\n\ngoal (1 subgoal):\n 1. x = y", "by (rule cong_nat_imp_eq) (use eq in \\<open>simp_all add: cong_def\\<close>)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_betw_mod_nat_atLeastLessThan:\n  fixes k d :: nat\n  assumes \"k > 0\"\n  defines \"g \\<equiv> (\\<lambda>i. nat ((int i - int d) mod int k) + d)\"\n  shows   \"bij_betw (\\<lambda>i. i mod k) {d..<d+k} {..<k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>i. i mod k) {d..<d + k} {..<k}", "unfolding bij_betw_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. i mod k) {d..<d + k} \\<and>\n    (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>i. i mod k) {d..<d + k}\n 2. (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}", "show inj: \"inj_on (\\<lambda>i. i mod k) {d..<d + k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. i mod k) {d..<d + k}", "by (rule inj_on_mod_nat) fact+"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. i mod k) {d..<d + k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}", "have \"(\\<lambda>i. i mod k) ` {d..<d + k} \\<subseteq> {..<k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. i mod k) ` {d..<d + k} \\<subseteq> {..<k}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i. i mod k) ` {d..<d + k} \\<subseteq> {..<k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. i mod k) ` {d..<d + k} \\<subseteq> {..<k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}", "have \"card ((\\<lambda>i. i mod k) ` {d..<d + k}) = card {..<k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>i. i mod k) ` {d..<d + k}) = card {..<k}", "using inj"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. i mod k) {d..<d + k}\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>i. i mod k) ` {d..<d + k}) = card {..<k}", "by (subst card_image) auto"], ["proof (state)\nthis:\n  card ((\\<lambda>i. i mod k) ` {d..<d + k}) = card {..<k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. i mod k) ` {d..<d + k} \\<subseteq> {..<k}\n  card ((\\<lambda>i. i mod k) ` {d..<d + k}) = card {..<k}", "show \"(\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. i mod k) ` {d..<d + k} \\<subseteq> {..<k}\n  card ((\\<lambda>i. i mod k) ` {d..<d + k}) = card {..<k}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}", "by (intro card_subset_eq) auto"], ["proof (state)\nthis:\n  (\\<lambda>i. i mod k) ` {d..<d + k} = {..<k}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_arithmetic_sum_periodic_arithmetic_shift:\n  fixes k d :: nat\n  assumes \"periodic_arithmetic f k\" \"k > 0\" \"d > 0\"\n  shows \"(\\<Sum>l \\<in> {0..k-1}. f l) = (\\<Sum>l \\<in> {d..d+k-1}. f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "have \"(\\<Sum>l \\<in> {0..k-1}. f l) = (\\<Sum>l \\<in> {0..<k}. f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {0..<k}", "using assms(2)"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {0..<k}", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  sum f {0..k - 1} = sum f {0..<k}\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "also"], ["proof (state)\nthis:\n  sum f {0..k - 1} = sum f {0..<k}\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "have \"\\<dots> = (\\<Sum>l \\<in> {d..<d+k}. f (l mod k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {0..<k} = (\\<Sum>l = d..<d + k. f (l mod k))", "using assms(2)"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. sum f {0..<k} = (\\<Sum>l = d..<d + k. f (l mod k))", "by (simp add: sum.reindex_bij_betw[OF bij_betw_mod_nat_atLeastLessThan[of k d]] \n                  lessThan_atLeast0)"], ["proof (state)\nthis:\n  sum f {0..<k} = (\\<Sum>l = d..<d + k. f (l mod k))\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "also"], ["proof (state)\nthis:\n  sum f {0..<k} = (\\<Sum>l = d..<d + k. f (l mod k))\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "have \"\\<dots> = (\\<Sum>l \\<in> {d..<d+k}. f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>l = d..<d + k. f (l mod k)) = sum f {d..<d + k}", "using mod_periodic_arithmetic[of f k] assms(1) sum.cong"], ["proof (prove)\nusing this:\n  \\<lbrakk>periodic_arithmetic f k; ?n mod k = ?m mod k\\<rbrakk>\n  \\<Longrightarrow> f ?n = f ?m\n  periodic_arithmetic f k\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = d..<d + k. f (l mod k)) = sum f {d..<d + k}", "by (meson mod_mod_trivial)"], ["proof (state)\nthis:\n  (\\<Sum>l = d..<d + k. f (l mod k)) = sum f {d..<d + k}\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "also"], ["proof (state)\nthis:\n  (\\<Sum>l = d..<d + k. f (l mod k)) = sum f {d..<d + k}\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "have \"\\<dots> = (\\<Sum>l \\<in> {d..d+k-1}. f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {d..<d + k} = sum f {d..d + k - 1}", "using assms(2,3)"], ["proof (prove)\nusing this:\n  0 < k\n  0 < d\n\ngoal (1 subgoal):\n 1. sum f {d..<d + k} = sum f {d..d + k - 1}", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  sum f {d..<d + k} = sum f {d..d + k - 1}\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "finally"], ["proof (chain)\npicking this:\n  sum f {0..k - 1} = sum f {d..d + k - 1}", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f {0..k - 1} = sum f {d..d + k - 1}\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = sum f {d..d + k - 1}", "by auto"], ["proof (state)\nthis:\n  sum f {0..k - 1} = sum f {d..d + k - 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma self_bij_0_k:\n  fixes a k :: nat\n  assumes \"coprime a k\" \"[a*i = 1] (mod k)\" \"k > 0\" \n  shows \"bij_betw (\\<lambda>r. r*a mod k) {0..k-1} {0..k-1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>r. r * a mod k) {0..k - 1} {0..k - 1}", "unfolding bij_betw_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1} \\<and>\n    (\\<lambda>r. r * a mod k) ` {0..k - 1} = {0..k - 1}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}\n 2. (\\<lambda>r. r * a mod k) ` {0..k - 1} = {0..k - 1}", "show \"inj_on (\\<lambda>r. r*a mod k) {0..k-1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "fix r1 r2"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "assume in_k: \"r1 \\<in> {0..k-1}\" \"r2 \\<in> {0..k-1}\""], ["proof (state)\nthis:\n  r1 \\<in> {0..k - 1}\n  r2 \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "assume as: \"[r1*a = r2*a] (mod k)\""], ["proof (state)\nthis:\n  [r1 * a = r2 * a] (mod k)\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "then"], ["proof (chain)\npicking this:\n  [r1 * a = r2 * a] (mod k)", "have \"[r1*a*i = r2*a*i] (mod k)\""], ["proof (prove)\nusing this:\n  [r1 * a = r2 * a] (mod k)\n\ngoal (1 subgoal):\n 1. [r1 * a * i = r2 * a * i] (mod k)", "using cong_scalar_right"], ["proof (prove)\nusing this:\n  [r1 * a = r2 * a] (mod k)\n  [?b = ?c] (mod ?a) \\<Longrightarrow> [?b * ?d = ?c * ?d] (mod ?a)\n\ngoal (1 subgoal):\n 1. [r1 * a * i = r2 * a * i] (mod k)", "by blast"], ["proof (state)\nthis:\n  [r1 * a * i = r2 * a * i] (mod k)\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "then"], ["proof (chain)\npicking this:\n  [r1 * a * i = r2 * a * i] (mod k)", "have \"[r1 = r2] (mod k)\""], ["proof (prove)\nusing this:\n  [r1 * a * i = r2 * a * i] (mod k)\n\ngoal (1 subgoal):\n 1. [r1 = r2] (mod k)", "using cong_mult_rcancel_nat as assms(1)"], ["proof (prove)\nusing this:\n  [r1 * a * i = r2 * a * i] (mod k)\n  coprime ?k ?m \\<Longrightarrow>\n  [?a * ?k = ?b * ?k] (mod ?m) = [?a = ?b] (mod ?m)\n  [r1 * a = r2 * a] (mod k)\n  coprime a k\n\ngoal (1 subgoal):\n 1. [r1 = r2] (mod k)", "by simp"], ["proof (state)\nthis:\n  [r1 = r2] (mod k)\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "then"], ["proof (chain)\npicking this:\n  [r1 = r2] (mod k)", "have \"r1 = r2\""], ["proof (prove)\nusing this:\n  [r1 = r2] (mod k)\n\ngoal (1 subgoal):\n 1. r1 = r2", "using in_k"], ["proof (prove)\nusing this:\n  [r1 = r2] (mod k)\n  r1 \\<in> {0..k - 1}\n  r2 \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. r1 = r2", "using assms(3) cong_less_modulus_unique_nat"], ["proof (prove)\nusing this:\n  [r1 = r2] (mod k)\n  r1 \\<in> {0..k - 1}\n  r2 \\<in> {0..k - 1}\n  0 < k\n  \\<lbrakk>[?x = ?y] (mod ?m); ?x < ?m; ?y < ?m\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. r1 = r2", "by auto"], ["proof (state)\nthis:\n  r1 = r2\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?r1.2 \\<in> {0..k - 1}; ?r2.2 \\<in> {0..k - 1};\n   [?r1.2 * a = ?r2.2 * a] (mod k)\\<rbrakk>\n  \\<Longrightarrow> ?r1.2 = ?r2.2\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "note eq = this"], ["proof (state)\nthis:\n  \\<lbrakk>?r1.2 \\<in> {0..k - 1}; ?r2.2 \\<in> {0..k - 1};\n   [?r1.2 * a = ?r2.2 * a] (mod k)\\<rbrakk>\n  \\<Longrightarrow> ?r1.2 = ?r2.2\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>r. r * a mod k) {0..k - 1}", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{0..k - 1}.\n       \\<forall>y\\<in>{0..k - 1}.\n          x * a mod k = y * a mod k \\<longrightarrow> x = y", "by (safe, simp add: eq cong_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>r. r * a mod k) {0..k - 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>r. r * a mod k) {0..k - 1}\n\ngoal (1 subgoal):\n 1. (\\<lambda>r. r * a mod k) ` {0..k - 1} = {0..k - 1}", "define f where \"f = (\\<lambda>r. r * a mod k)\""], ["proof (state)\nthis:\n  f = (\\<lambda>r. r * a mod k)\n\ngoal (1 subgoal):\n 1. (\\<lambda>r. r * a mod k) ` {0..k - 1} = {0..k - 1}", "show \"f ` {0..k - 1} = {0..k - 1} \""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {0..k - 1} = {0..k - 1}", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} = {0..k - 1}", "proof (standard)"], ["proof (state)\ngoal (2 subgoals):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}\n 2. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "show \"{y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "assume \"y \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\""], ["proof (state)\nthis:\n  y \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "then"], ["proof (chain)\npicking this:\n  y \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "obtain x where \"y = f x\""], ["proof (prove)\nusing this:\n  y \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\n\ngoal (1 subgoal):\n 1. (\\<And>x. y = f x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  y = f x\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "then"], ["proof (chain)\npicking this:\n  y = f x", "have \"y \\<in> {0..k-1}\""], ["proof (prove)\nusing this:\n  y = f x\n\ngoal (1 subgoal):\n 1. y \\<in> {0..k - 1}", "unfolding f_def"], ["proof (prove)\nusing this:\n  y = x * a mod k\n\ngoal (1 subgoal):\n 1. y \\<in> {0..k - 1}", "using Suc_pred assms(3) lessThan_Suc_atMost"], ["proof (prove)\nusing this:\n  y = x * a mod k\n  0 < ?n \\<Longrightarrow> Suc (?n - Suc 0) = ?n\n  0 < k\n  {..<Suc ?k} = {..?k}\n\ngoal (1 subgoal):\n 1. y \\<in> {0..k - 1}", "by fastforce"], ["proof (state)\nthis:\n  y \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "}"], ["proof (state)\nthis:\n  ?y2 \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<Longrightarrow>\n  ?y2 \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "then"], ["proof (chain)\npicking this:\n  ?y2 \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<Longrightarrow>\n  ?y2 \\<in> {0..k - 1}", "show ?thesis"], ["proof (prove)\nusing this:\n  ?y2 \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<Longrightarrow>\n  ?y2 \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}", "by blast"], ["proof (state)\nthis:\n  {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y. \\<exists>x\\<in>{0..k - 1}. y = f x} \\<subseteq> {0..k - 1}\n\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "show \"{0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "assume ass: \"x \\<in> {0..k-1}\""], ["proof (state)\nthis:\n  x \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "then"], ["proof (chain)\npicking this:\n  x \\<in> {0..k - 1}", "have \"x * i mod k \\<in> {0..k-1}\""], ["proof (prove)\nusing this:\n  x \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {0..k - 1} \\<Longrightarrow> x * i mod k \\<in> {0..k - 1}", "have \"x * i mod k \\<in> {0..<k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..<k}", "by (simp add: assms(3))"], ["proof (state)\nthis:\n  x * i mod k \\<in> {0..<k}\n\ngoal (1 subgoal):\n 1. x \\<in> {0..k - 1} \\<Longrightarrow> x * i mod k \\<in> {0..k - 1}", "have \"{0..<k} = {0..k-1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<k} = {0..k - 1}", "using Suc_diff_1 assms(3)"], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow> Suc (?n - 1) = ?n\n  0 < k\n\ngoal (1 subgoal):\n 1. {0..<k} = {0..k - 1}", "by auto"], ["proof (state)\nthis:\n  {0..<k} = {0..k - 1}\n\ngoal (1 subgoal):\n 1. x \\<in> {0..k - 1} \\<Longrightarrow> x * i mod k \\<in> {0..k - 1}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1}", "using \\<open>x * i mod k \\<in> {0..<k}\\<close> \\<open>{0..<k} = {0..k-1}\\<close>"], ["proof (prove)\nusing this:\n  x * i mod k \\<in> {0..<k}\n  {0..<k} = {0..k - 1}\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1}", "by blast"], ["proof (state)\nthis:\n  x * i mod k \\<in> {0..k - 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x * i mod k \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "then"], ["proof (chain)\npicking this:\n  x * i mod k \\<in> {0..k - 1}", "have \"f (x * i mod k) = x\""], ["proof (prove)\nusing this:\n  x * i mod k \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. f (x * i mod k) = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "have \"f (x * i mod k) = (x * i mod k) * a mod k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x * i mod k) = x * i mod k * a mod k", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x * i mod k * a mod k = x * i mod k * a mod k", "by blast"], ["proof (state)\nthis:\n  f (x * i mod k) = x * i mod k * a mod k\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "also"], ["proof (state)\nthis:\n  f (x * i mod k) = x * i mod k * a mod k\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "have \"\\<dots> = (x*i*a) mod k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * i mod k * a mod k = x * i * a mod k", "by (simp add: mod_mult_left_eq)"], ["proof (state)\nthis:\n  x * i mod k * a mod k = x * i * a mod k\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "also"], ["proof (state)\nthis:\n  x * i mod k * a mod k = x * i * a mod k\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "have \"\\<dots> = (x*1) mod k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * i * a mod k = x * 1 mod k", "using assms(2)"], ["proof (prove)\nusing this:\n  [a * i = 1] (mod k)\n\ngoal (1 subgoal):\n 1. x * i * a mod k = x * 1 mod k", "unfolding cong_def"], ["proof (prove)\nusing this:\n  a * i mod k = 1 mod k\n\ngoal (1 subgoal):\n 1. x * i * a mod k = x * 1 mod k", "by (subst mult.assoc, subst (2) mult.commute,\n               subst mod_mult_right_eq[symmetric],simp)"], ["proof (state)\nthis:\n  x * i * a mod k = x * 1 mod k\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "also"], ["proof (state)\nthis:\n  x * i * a mod k = x * 1 mod k\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "have \"\\<dots> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * 1 mod k = x", "using ass assms(3)"], ["proof (prove)\nusing this:\n  x \\<in> {0..k - 1}\n  0 < k\n\ngoal (1 subgoal):\n 1. x * 1 mod k = x", "by auto"], ["proof (state)\nthis:\n  x * 1 mod k = x\n\ngoal (1 subgoal):\n 1. x * i mod k \\<in> {0..k - 1} \\<Longrightarrow> f (x * i mod k) = x", "finally"], ["proof (chain)\npicking this:\n  f (x * i mod k) = x", "show ?thesis"], ["proof (prove)\nusing this:\n  f (x * i mod k) = x\n\ngoal (1 subgoal):\n 1. f (x * i mod k) = x", "."], ["proof (state)\nthis:\n  f (x * i mod k) = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (x * i mod k) = x\n\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "then"], ["proof (chain)\npicking this:\n  f (x * i mod k) = x", "have \"x \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\""], ["proof (prove)\nusing this:\n  f (x * i mod k) = x\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "using \\<open>x * i mod k \\<in> {0..k-1}\\<close>"], ["proof (prove)\nusing this:\n  f (x * i mod k) = x\n  x * i mod k \\<in> {0..k - 1}\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "by force"], ["proof (state)\nthis:\n  x \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\n\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> {0..k - 1} \\<Longrightarrow>\n  ?x2 \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\n\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "then"], ["proof (chain)\npicking this:\n  ?x2 \\<in> {0..k - 1} \\<Longrightarrow>\n  ?x2 \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x2 \\<in> {0..k - 1} \\<Longrightarrow>\n  ?x2 \\<in> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\n\ngoal (1 subgoal):\n 1. {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}", "by blast"], ["proof (state)\nthis:\n  {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {0..k - 1} \\<subseteq> {y. \\<exists>x\\<in>{0..k - 1}. y = f x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ` {0..k - 1} = {0..k - 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_arithmetic_homothecy:\n  assumes \"periodic_arithmetic f k\"\n  shows   \"periodic_arithmetic (\\<lambda>l. f (l*a)) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>l. f (l * a)) k", "unfolding periodic_arithmetic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. f ((n + k) * a) = f (n * a)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. f ((n + k) * a) = f (n * a)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. f ((n + k) * a) = f (n * a)", "have \"f ((n + k) * a) = f(n*a+k*a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ((n + k) * a) = f (n * a + k * a)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  f ((n + k) * a) = f (n * a + k * a)\n\ngoal (1 subgoal):\n 1. \\<And>n. f ((n + k) * a) = f (n * a)", "also"], ["proof (state)\nthis:\n  f ((n + k) * a) = f (n * a + k * a)\n\ngoal (1 subgoal):\n 1. \\<And>n. f ((n + k) * a) = f (n * a)", "have \"\\<dots> = f(n*a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (n * a + k * a) = f (n * a)", "using mult_period[OF assms]"], ["proof (prove)\nusing this:\n  periodic_arithmetic f (k * ?q)\n\ngoal (1 subgoal):\n 1. f (n * a + k * a) = f (n * a)", "unfolding periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  \\<forall>n. f (n + k * ?q) = f n\n\ngoal (1 subgoal):\n 1. f (n * a + k * a) = f (n * a)", "by simp"], ["proof (state)\nthis:\n  f (n * a + k * a) = f (n * a)\n\ngoal (1 subgoal):\n 1. \\<And>n. f ((n + k) * a) = f (n * a)", "finally"], ["proof (chain)\npicking this:\n  f ((n + k) * a) = f (n * a)", "show \"f ((n + k) * a) = f (n * a)\""], ["proof (prove)\nusing this:\n  f ((n + k) * a) = f (n * a)\n\ngoal (1 subgoal):\n 1. f ((n + k) * a) = f (n * a)", "by simp"], ["proof (state)\nthis:\n  f ((n + k) * a) = f (n * a)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem periodic_arithmetic_remove_homothecy:\n  assumes \"coprime a k\" \"periodic_arithmetic f k\" \"k > 0\" \n  shows \"(\\<Sum>l=1..k. f l) = (\\<Sum>l=1..k. f (l*a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "obtain i where inv: \"[a*i = 1] (mod k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        [a * i = 1] (mod k) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1) coprime_iff_invertible_nat[of a k]"], ["proof (prove)\nusing this:\n  coprime a k\n  coprime a k = (\\<exists>x. [a * x = Suc 0] (mod k))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        [a * i = 1] (mod k) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  [a * i = 1] (mod k)\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "from this self_bij_0_k assms"], ["proof (chain)\npicking this:\n  [a * i = 1] (mod k)\n  \\<lbrakk>coprime ?a ?k; [?a * ?i = 1] (mod ?k); 0 < ?k\\<rbrakk>\n  \\<Longrightarrow> bij_betw (\\<lambda>r. r * ?a mod ?k) {0..?k - 1}\n                     {0..?k - 1}\n  coprime a k\n  periodic_arithmetic f k\n  0 < k", "have bij: \"bij_betw (\\<lambda>r. r * a mod k) {0..k - 1} {0..k - 1}\""], ["proof (prove)\nusing this:\n  [a * i = 1] (mod k)\n  \\<lbrakk>coprime ?a ?k; [?a * ?i = 1] (mod ?k); 0 < ?k\\<rbrakk>\n  \\<Longrightarrow> bij_betw (\\<lambda>r. r * ?a mod ?k) {0..?k - 1}\n                     {0..?k - 1}\n  coprime a k\n  periodic_arithmetic f k\n  0 < k\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>r. r * a mod k) {0..k - 1} {0..k - 1}", "by blast"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>r. r * a mod k) {0..k - 1} {0..k - 1}\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "have \"(\\<Sum>l = 1..k. f(l)) = (\\<Sum>l = 0..k-1. f(l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {1..k} = sum f {0..k - 1}", "using periodic_arithmetic_sum_periodic_arithmetic_shift[of f k 1] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>periodic_arithmetic f k; 0 < k; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> sum f {0..k - 1} = sum f {1..1 + k - 1}\n  coprime a k\n  periodic_arithmetic f k\n  0 < k\n\ngoal (1 subgoal):\n 1. sum f {1..k} = sum f {0..k - 1}", "by simp"], ["proof (state)\nthis:\n  sum f {1..k} = sum f {0..k - 1}\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "also"], ["proof (state)\nthis:\n  sum f {1..k} = sum f {0..k - 1}\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "have \"\\<dots> = (\\<Sum>l = 0..k-1. f(l*a mod k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = (\\<Sum>l = 0..k - 1. f (l * a mod k))", "using sum.reindex_bij_betw[OF bij,symmetric]"], ["proof (prove)\nusing this:\n  sum ?g {0..k - 1} = (\\<Sum>x = 0..k - 1. ?g (x * a mod k))\n\ngoal (1 subgoal):\n 1. sum f {0..k - 1} = (\\<Sum>l = 0..k - 1. f (l * a mod k))", "by blast"], ["proof (state)\nthis:\n  sum f {0..k - 1} = (\\<Sum>l = 0..k - 1. f (l * a mod k))\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "also"], ["proof (state)\nthis:\n  sum f {0..k - 1} = (\\<Sum>l = 0..k - 1. f (l * a mod k))\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "have \"\\<dots> = (\\<Sum>l = 0..k-1. f(l*a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. f (l * a mod k)) = (\\<Sum>l = 0..k - 1. f (l * a))", "by (intro sum.cong refl) (use mod_periodic_arithmetic[OF assms(2)] mod_mod_trivial in blast)"], ["proof (state)\nthis:\n  (\\<Sum>l = 0..k - 1. f (l * a mod k)) = (\\<Sum>l = 0..k - 1. f (l * a))\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "also"], ["proof (state)\nthis:\n  (\\<Sum>l = 0..k - 1. f (l * a mod k)) = (\\<Sum>l = 0..k - 1. f (l * a))\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "have \"\\<dots> = (\\<Sum>l = 1..k. f(l*a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. f (l * a)) = (\\<Sum>l = 1..k. f (l * a))", "using periodic_arithmetic_sum_periodic_arithmetic_shift[of \"(\\<lambda>l. f(l*a))\" k 1]\n          periodic_arithmetic_homothecy[OF assms(2)] assms(3)"], ["proof (prove)\nusing this:\n  \\<lbrakk>periodic_arithmetic (\\<lambda>l. f (l * a)) k; 0 < k;\n   0 < 1\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>l = 0..k - 1. f (l * a)) =\n                    (\\<Sum>l = 1..1 + k - 1. f (l * a))\n  periodic_arithmetic (\\<lambda>l. f (l * ?a)) k\n  0 < k\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. f (l * a)) = (\\<Sum>l = 1..k. f (l * a))", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sum>l = 0..k - 1. f (l * a)) = (\\<Sum>l = 1..k. f (l * a))\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "finally"], ["proof (chain)\npicking this:\n  sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))\n\ngoal (1 subgoal):\n 1. sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))", "by blast"], ["proof (state)\nthis:\n  sum f {1..k} = (\\<Sum>l = 1..k. f (l * a))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}