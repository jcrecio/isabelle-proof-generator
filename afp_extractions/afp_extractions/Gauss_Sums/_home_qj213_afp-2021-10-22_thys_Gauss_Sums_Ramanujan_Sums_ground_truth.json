{"file_name": "/home/qj213/afp-2021-10-22/thys/Gauss_Sums/Ramanujan_Sums.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gauss_Sums", "problem_names": ["lemma ramanujan_sum_0_n [simp]: \"c 0 n = 0\"", "lemma sum_coprime_conv_dirichlet_prod_moebius_mu:\n  fixes F S :: \"nat \\<Rightarrow> complex\" and f :: \"nat \\<Rightarrow> nat \\<Rightarrow> complex\"\n  defines \"F \\<equiv> (\\<lambda>n. (\\<Sum>k \\<in> {1..n}. f k n))\"\n  defines \"S \\<equiv> (\\<lambda>n. (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n . f k n))\"\n  assumes \"\\<And>a b d. d dvd a \\<Longrightarrow> d dvd b \\<Longrightarrow> f (a div d) (b div d) = f a b\" \n  shows \"S n = dirichlet_prod moebius_mu F n\"", "lemma dirichlet_prod_neutral_sum:\n  \"dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n k)\" for n :: nat", "lemma moebius_coprime_sum:\n  \"moebius_mu n = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n . unity_root n (int k))\"", "lemma ramanujan_sum_dvd_eq_totient:\n  assumes \"k dvd n\"\n    shows \"c k n = totient k\"", "lemma gen_ramanujan_sum_k_1: \"s f g k 1 = f 1 * g k\"", "lemma gen_ramanujan_sum_1_n: \"s f g 1 n = f 1 * g 1\"", "lemma gen_ramanujan_sum_periodic: \"periodic_arithmetic (s f g k) k\"", "theorem gen_ramanujan_sum_fourier_expansion:\n  fixes f g :: \"nat \\<Rightarrow> complex\" and a :: \"nat \\<Rightarrow> nat \\<Rightarrow> complex\"\n  assumes \"k > 0\" \n  defines \"a \\<equiv> (\\<lambda>k m. (1/k) * (\\<Sum>d| d dvd (gcd m k). g d * f (k div d) * d))\"\n  shows \"s f g k n = (\\<Sum>m\\<le>k-1. a k m * unity_root k (m*n))\"", "theorem ramanujan_sum_dirichlet_form:\n  fixes k n :: nat\n  assumes \"k > 0\"\n  shows \"c k n = (\\<Sum>d | d dvd gcd n k. d * moebius_mu (k div d))\"", "theorem gen_ramanujan_sum_distrib:\n  fixes f g :: \"nat \\<Rightarrow> complex\"\n  assumes \"a > 0\" \"b > 0\" \"m > 0\" \"k > 0\" (* remove cond. on m,n *)\n  assumes \"coprime a k\" \"coprime b m\" \"coprime k m\"\n  assumes \"multiplicative_function f\" and \n          \"multiplicative_function g\"\n  shows \"s f g (m*k) (a*b) = s f g m a * s f g k b\"", "lemma dirichlet_prod_completely_multiplicative_left:\n  fixes f h :: \"nat \\<Rightarrow> complex\" and k :: nat\n  defines \"g \\<equiv> (\\<lambda>k. moebius_mu k * h k)\" \n  defines \"F \\<equiv> dirichlet_prod f g\"\n  assumes \"k > 0\"\n  assumes \"completely_multiplicative_function f\" \n          \"multiplicative_function h\" \n  assumes \"\\<And>p. prime p \\<Longrightarrow> f(p) \\<noteq> 0 \\<and> f(p) \\<noteq> h(p)\" \n  shows \"F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\"", "theorem gen_ramanujan_sum_dirichlet_expr:\n  fixes f h :: \"nat \\<Rightarrow> complex\" and n k :: nat\n  defines \"g \\<equiv> (\\<lambda>k. moebius_mu k * h k)\" \n  defines \"F \\<equiv> dirichlet_prod f g\"\n  defines \"N \\<equiv> k div gcd n k\" \n  assumes \"completely_multiplicative_function f\" \n          \"multiplicative_function h\" \n  assumes \"\\<And>p. prime p \\<Longrightarrow> f(p) \\<noteq> 0 \\<and> f(p) \\<noteq> h(p)\" \n  assumes \"k > 0\" \"n > 0\"  \n  shows \"s f g k n = (F(k)*g(N)) div (F(N))\"", "lemma totient_conv_moebius_mu_of_nat:\n  \"of_nat (totient n) = dirichlet_prod moebius_mu of_nat n\""], "translations": [["", "lemma ramanujan_sum_0_n [simp]: \"c 0 n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 n = 0", "unfolding ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..0} \\<and> coprime m 0.\n       unity_root 0 (int (m * n))) =\n    0", "by simp"], ["", "lemma sum_coprime_conv_dirichlet_prod_moebius_mu:\n  fixes F S :: \"nat \\<Rightarrow> complex\" and f :: \"nat \\<Rightarrow> nat \\<Rightarrow> complex\"\n  defines \"F \\<equiv> (\\<lambda>n. (\\<Sum>k \\<in> {1..n}. f k n))\"\n  defines \"S \\<equiv> (\\<lambda>n. (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n . f k n))\"\n  assumes \"\\<And>a b d. d dvd a \\<Longrightarrow> d dvd b \\<Longrightarrow> f (a div d) (b div d) = f a b\" \n  shows \"S n = dirichlet_prod moebius_mu F n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S n = dirichlet_prod moebius_mu F n", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n\n 2. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n\n 2. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. S n = dirichlet_prod moebius_mu F n", "using assms(2)"], ["proof (prove)\nusing this:\n  n = 0\n  S \\<equiv> \\<lambda>n. \\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n\n\ngoal (1 subgoal):\n 1. S n = dirichlet_prod moebius_mu F n", "unfolding dirichlet_prod_def"], ["proof (prove)\nusing this:\n  n = 0\n  S \\<equiv> \\<lambda>n. \\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n\n\ngoal (1 subgoal):\n 1. S n = (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))", "by fastforce"], ["proof (state)\nthis:\n  S n = dirichlet_prod moebius_mu F n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"S(n) = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n . (f k n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S n = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n)", "using assms"], ["proof (prove)\nusing this:\n  F \\<equiv> \\<lambda>n. \\<Sum>k = 1..n. f k n\n  S \\<equiv> \\<lambda>n. \\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n\n  \\<lbrakk>?d dvd ?a; ?d dvd ?b\\<rbrakk>\n  \\<Longrightarrow> f (?a div ?d) (?b div ?d) = f ?a ?b\n\ngoal (1 subgoal):\n 1. S n = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n)", "by blast"], ["proof (state)\nthis:\n  S n = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  S n = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>k \\<in> {1..n}. (f k n)* dirichlet_prod_neutral (gcd k n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n) =\n    (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n))", "using dirichlet_prod_neutral_intro"], ["proof (prove)\nusing this:\n  (\\<Sum>k | k \\<in> {1..?n} \\<and> coprime k ?n. ?f k ?n) =\n  (\\<Sum>k = 1..?n. ?f k ?n * dirichlet_prod_neutral (gcd k ?n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n) =\n    (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n) =\n  (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. f k n) =\n  (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>k \\<in> {1..n}. (f k n)* (\\<Sum>d | d dvd (gcd k n). moebius_mu d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "have \"dirichlet_prod_neutral (gcd k n) = (if gcd k n = 1 then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod_neutral (gcd k n) =\n    (if gcd k n = 1 then 1::'a else (0::'a))", "using dirichlet_prod_neutral_def[of \"gcd k n\"]"], ["proof (prove)\nusing this:\n  dirichlet_prod_neutral (gcd k n) =\n  (if gcd k n = 1 then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. dirichlet_prod_neutral (gcd k n) =\n    (if gcd k n = 1 then 1::'a else (0::'a))", "by blast"], ["proof (state)\nthis:\n  dirichlet_prod_neutral (gcd k n) =\n  (if gcd k n = 1 then 1::?'a1 else (0::?'a1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "also"], ["proof (state)\nthis:\n  dirichlet_prod_neutral (gcd k n) =\n  (if gcd k n = 1 then 1::?'a1 else (0::?'a1))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "have \"\\<dots> = (\\<Sum>d | d dvd gcd k n. moebius_mu d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if gcd k n = 1 then 1::'a else (0::'a)) =\n    (\\<Sum>d | d dvd gcd k n. moebius_mu d)", "using sum_moebius_mu_divisors'[of \"gcd k n\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>d | d dvd gcd k n. moebius_mu d) =\n  (if gcd k n = 1 then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. (if gcd k n = 1 then 1::'a else (0::'a)) =\n    (\\<Sum>d | d dvd gcd k n. moebius_mu d)", "by auto"], ["proof (state)\nthis:\n  (if gcd k n = 1 then 1::?'a2 else (0::?'a2)) =\n  (\\<Sum>d | d dvd gcd k n. moebius_mu d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "finally"], ["proof (chain)\npicking this:\n  dirichlet_prod_neutral (gcd k n) = (\\<Sum>d | d dvd gcd k n. moebius_mu d)", "have \"dirichlet_prod_neutral (gcd k n) = (\\<Sum>d | d dvd gcd k n. moebius_mu d)\""], ["proof (prove)\nusing this:\n  dirichlet_prod_neutral (gcd k n) = (\\<Sum>d | d dvd gcd k n. moebius_mu d)\n\ngoal (1 subgoal):\n 1. dirichlet_prod_neutral (gcd k n) =\n    (\\<Sum>d | d dvd gcd k n. moebius_mu d)", "by auto"], ["proof (state)\nthis:\n  dirichlet_prod_neutral (gcd k n) = (\\<Sum>d | d dvd gcd k n. moebius_mu d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "}"], ["proof (state)\nthis:\n  dirichlet_prod_neutral (gcd ?k6 n) =\n  (\\<Sum>d | d dvd gcd ?k6 n. moebius_mu d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "note summand = this"], ["proof (state)\nthis:\n  dirichlet_prod_neutral (gcd ?k6 n) =\n  (\\<Sum>d | d dvd gcd ?k6 n. moebius_mu d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "then"], ["proof (chain)\npicking this:\n  dirichlet_prod_neutral (gcd ?k6 n) =\n  (\\<Sum>d | d dvd gcd ?k6 n. moebius_mu d)", "show ?thesis"], ["proof (prove)\nusing this:\n  dirichlet_prod_neutral (gcd ?k6 n) =\n  (\\<Sum>d | d dvd gcd ?k6 n. moebius_mu d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n    (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))", "by (simp add: summand)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n  (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n  (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. f k n * dirichlet_prod_neutral (gcd k n)) =\n  (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>k = 1..n. (\\<Sum>d | d dvd gcd k n. (f k n) *  moebius_mu d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d)) =\n    (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd k n. f k n * moebius_mu d)", "by (simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d)) =\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd k n. f k n * moebius_mu d)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. f k n * (\\<Sum>d | d dvd gcd k n. moebius_mu d)) =\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd k n. f k n * moebius_mu d)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>k = 1..n. (\\<Sum>d | d dvd gcd n k. (f k n) *  moebius_mu d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd k n. f k n * moebius_mu d) =\n    (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d)", "using gcd.commute[of _ n]"], ["proof (prove)\nusing this:\n  gcd ?a n = gcd n ?a\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd k n. f k n * moebius_mu d) =\n    (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd k n. f k n * moebius_mu d) =\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd k n. f k n * moebius_mu d) =\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>d | d dvd n. \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. (f k n) * moebius_mu d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d) =\n    (\\<Sum>d | d dvd n.\n       \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n * moebius_mu d)", "using sum.swap_restrict[of \"{1..n}\" \"{d. d dvd n}\"\n             \"\\<lambda>k d. (f k n)*moebius_mu d\" \"\\<lambda>k d. d dvd k\"] False"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {1..n}; finite {d. d dvd n}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x = 1..n.\n                        \\<Sum>d\\<in>{y \\<in> {d. d dvd n}. y dvd x}.\n                          f x n * moebius_mu d) =\n                    (\\<Sum>y\\<in>{d. d dvd n}.\n                       \\<Sum>x | x \\<in> {1..n} \\<and> y dvd x.\n                         f x n * moebius_mu y)\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d) =\n    (\\<Sum>d | d dvd n.\n       \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n * moebius_mu d)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d) =\n  (\\<Sum>d | d dvd n.\n     \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n * moebius_mu d)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. \\<Sum>d | d dvd gcd n k. f k n * moebius_mu d) =\n  (\\<Sum>d | d dvd n.\n     \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n * moebius_mu d)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>d | d dvd n. moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. (f k n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n * moebius_mu d) =\n    (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n))", "by (simp add: sum_distrib_left mult.commute)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n * moebius_mu d) =\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     \\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n * moebius_mu d) =\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>d | d dvd n. moebius_mu d * (\\<Sum>q \\<in> {1..n div d}. (f q (n div d))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n)) =\n    (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n)) =\n    (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d)))", "have st: \"\n      (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. (f k n)) =\n        (\\<Sum>q \\<in> {1..n div d}. (f q (n div d)))\" \n      if \"d dvd n\" \"d > 0\" for d :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n) =\n    (\\<Sum>q = 1..n div d. f q (n div d))", "by (rule sum.reindex_bij_witness[of _ \"\\<lambda>k. k * d\" \"\\<lambda>k. k div d\"])\n         (use assms(3) that in \\<open>fastforce simp: div_le_mono\\<close>)+"], ["proof (state)\nthis:\n  \\<lbrakk>?d dvd n; 0 < ?d\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>k | k \\<in> {1..n} \\<and> ?d dvd k. f k n) =\n                    (\\<Sum>q = 1..n div ?d. f q (n div ?d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n)) =\n    (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n)) =\n    (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d)))", "by (intro sum.cong) (use st False in fastforce)+"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n)) =\n  (\\<Sum>d | d dvd n. moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n)) =\n  (\\<Sum>d | d dvd n. moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>k | k \\<in> {1..n} \\<and> d dvd k. f k n)) =\n  (\\<Sum>d | d dvd n. moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = (\\<Sum>d | d dvd n. moebius_mu d * F(n div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d))) =\n    (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d))) =\n    (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))", "have \"F (n div d) = (\\<Sum>q \\<in> {1..n div d}. (f q (n div d)))\" \n      if \"d dvd n\" for d"], ["proof (prove)\ngoal (1 subgoal):\n 1. F (n div d) = (\\<Sum>q = 1..n div d. f q (n div d))", "by (simp add: F_def real_of_nat_div that)"], ["proof (state)\nthis:\n  ?d dvd n \\<Longrightarrow>\n  F (n div ?d) = (\\<Sum>q = 1..n div ?d. f q (n div ?d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d))) =\n    (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))", "then"], ["proof (chain)\npicking this:\n  ?d dvd n \\<Longrightarrow>\n  F (n div ?d) = (\\<Sum>q = 1..n div ?d. f q (n div ?d))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?d dvd n \\<Longrightarrow>\n  F (n div ?d) = (\\<Sum>q = 1..n div ?d. f q (n div ?d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d))) =\n    (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d))) =\n  (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d))) =\n  (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     moebius_mu d * (\\<Sum>q = 1..n div d. f q (n div d))) =\n  (\\<Sum>d | d dvd n. moebius_mu d * F (n div d))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "have \"\\<dots> = dirichlet_prod moebius_mu F n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n. moebius_mu d * F (n div d)) =\n    dirichlet_prod moebius_mu F n", "by (simp add: dirichlet_prod_def)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. moebius_mu d * F (n div d)) =\n  dirichlet_prod moebius_mu F n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> S n = dirichlet_prod moebius_mu F n", "finally"], ["proof (chain)\npicking this:\n  S n = dirichlet_prod moebius_mu F n", "show ?thesis"], ["proof (prove)\nusing this:\n  S n = dirichlet_prod moebius_mu F n\n\ngoal (1 subgoal):\n 1. S n = dirichlet_prod moebius_mu F n", "by simp"], ["proof (state)\nthis:\n  S n = dirichlet_prod moebius_mu F n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dirichlet_prod_neutral_sum:\n  \"dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n k)\" for n :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "unfolding dirichlet_prod_neutral_def"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (if n = 1 then 1 else 0) = (\\<Sum>k = 1..n. unity_root n (int k))", "by simp"], ["proof (state)\nthis:\n  dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "have 1: \"unity_root n 0 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unity_root n 0 = 1", "by simp"], ["proof (state)\nthis:\n  unity_root n 0 = 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "have 2: \"unity_root n n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unity_root n (int n) = 1", "using unity_periodic_arithmetic[of n] add.left_neutral"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n\n  (0::?'a) + ?a = ?a\n\ngoal (1 subgoal):\n 1. unity_root n (int n) = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n;\n     \\<And>a. (0::?'a1) + a = a\\<rbrakk>\n    \\<Longrightarrow> unity_root n (int n) = 1", "have \"1 = unity_root n (int 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = unity_root n (int 0)", "using 1"], ["proof (prove)\nusing this:\n  unity_root n 0 = 1\n\ngoal (1 subgoal):\n 1. 1 = unity_root n (int 0)", "by auto"], ["proof (state)\nthis:\n  1 = unity_root n (int 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n;\n     \\<And>a. (0::?'a1) + a = a\\<rbrakk>\n    \\<Longrightarrow> unity_root n (int n) = 1", "also"], ["proof (state)\nthis:\n  1 = unity_root n (int 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n;\n     \\<And>a. (0::?'a1) + a = a\\<rbrakk>\n    \\<Longrightarrow> unity_root n (int n) = 1", "have \"unity_root n (int 0) = unity_root n (int (0 + n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unity_root n (int 0) = unity_root n (int (0 + n))", "using unity_periodic_arithmetic[of n] periodic_arithmetic_def"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n\n  periodic_arithmetic ?f ?k = (\\<forall>n. ?f (n + ?k) = ?f n)\n\ngoal (1 subgoal):\n 1. unity_root n (int 0) = unity_root n (int (0 + n))", "by algebra"], ["proof (state)\nthis:\n  unity_root n (int 0) = unity_root n (int (0 + n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n;\n     \\<And>a. (0::?'a1) + a = a\\<rbrakk>\n    \\<Longrightarrow> unity_root n (int n) = 1", "also"], ["proof (state)\nthis:\n  unity_root n (int 0) = unity_root n (int (0 + n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n;\n     \\<And>a. (0::?'a1) + a = a\\<rbrakk>\n    \\<Longrightarrow> unity_root n (int n) = 1", "have \"\\<dots> = unity_root n (int n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unity_root n (int (0 + n)) = unity_root n (int n)", "by simp"], ["proof (state)\nthis:\n  unity_root n (int (0 + n)) = unity_root n (int n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>periodic_arithmetic (\\<lambda>x. unity_root n (int x)) n;\n     \\<And>a. (0::?'a1) + a = a\\<rbrakk>\n    \\<Longrightarrow> unity_root n (int n) = 1", "finally"], ["proof (chain)\npicking this:\n  1 = unity_root n (int n)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 = unity_root n (int n)\n\ngoal (1 subgoal):\n 1. unity_root n (int n) = 1", "by auto"], ["proof (state)\nthis:\n  unity_root n (int n) = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unity_root n (int n) = 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "have \"(\\<Sum>k = 1..n. unity_root n k) = (\\<Sum>k = 0..n. unity_root n k) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. unity_root n (int k)) =\n    (\\<Sum>k = 0..n. unity_root n (int k)) - 1", "by (simp add: sum.atLeast_Suc_atMost sum.atLeast0_atMost_Suc_shift 1)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. unity_root n (int k)) =\n  (\\<Sum>k = 0..n. unity_root n (int k)) - 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. unity_root n (int k)) =\n  (\\<Sum>k = 0..n. unity_root n (int k)) - 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "have \"\\<dots> = ((\\<Sum>k = 0..n-1. unity_root n k)+1) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. unity_root n (int k)) - 1 =\n    (\\<Sum>k = 0..n - 1. unity_root n (int k)) + 1 - 1", "using sum.atLeast0_atMost_Suc[of \"(\\<lambda>k. unity_root n k)\" \"n-1\"] False"], ["proof (prove)\nusing this:\n  (\\<Sum>x = 0..Suc (n - 1). unity_root n (int x)) =\n  (\\<Sum>x = 0..n - 1. unity_root n (int x)) +\n  unity_root n (int (Suc (n - 1)))\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n. unity_root n (int k)) - 1 =\n    (\\<Sum>k = 0..n - 1. unity_root n (int k)) + 1 - 1", "by (simp add: 2)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. unity_root n (int k)) - 1 =\n  (\\<Sum>k = 0..n - 1. unity_root n (int k)) + 1 - 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n. unity_root n (int k)) - 1 =\n  (\\<Sum>k = 0..n - 1. unity_root n (int k)) + 1 - 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "have \"\\<dots> = (\\<Sum>k = 0..n-1. unity_root n k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n - 1. unity_root n (int k)) + 1 - 1 =\n    (\\<Sum>k = 0..n - 1. unity_root n (int k))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n - 1. unity_root n (int k)) + 1 - 1 =\n  (\\<Sum>k = 0..n - 1. unity_root n (int k))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n - 1. unity_root n (int k)) + 1 - 1 =\n  (\\<Sum>k = 0..n - 1. unity_root n (int k))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "have \"\\<dots> = unity_root_sum n 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n - 1. unity_root n (int k)) = unity_root_sum n 1", "unfolding unity_root_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n - 1. unity_root n (int k)) =\n    (\\<Sum>m<n. unity_root n (1 * int m))", "using \\<open>n \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..n - 1. unity_root n (int k)) =\n    (\\<Sum>m<n. unity_root n (1 * int m))", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n - 1. unity_root n (int k)) = unity_root_sum n 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..n - 1. unity_root n (int k)) = unity_root_sum n 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "have \"\\<dots> = dirichlet_prod_neutral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unity_root_sum n 1 = dirichlet_prod_neutral n", "using unity_root_sum[of n 1] False"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> n; is_unit (int n)\\<rbrakk>\n  \\<Longrightarrow> unity_root_sum n 1 = of_nat n\n  \\<lbrakk>1 \\<le> n; \\<not> is_unit (int n)\\<rbrakk>\n  \\<Longrightarrow> unity_root_sum n 1 = 0\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. unity_root_sum n 1 = dirichlet_prod_neutral n", "by (cases \"n = 1\",auto simp add: False dirichlet_prod_neutral_def)"], ["proof (state)\nthis:\n  unity_root_sum n 1 = dirichlet_prod_neutral n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 1..n. unity_root n (int k)) = dirichlet_prod_neutral n", "have 3: \"dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n k)\""], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..n. unity_root n (int k)) = dirichlet_prod_neutral n\n\ngoal (1 subgoal):\n 1. dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "by auto"], ["proof (state)\nthis:\n  dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "then"], ["proof (chain)\npicking this:\n  dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "show ?thesis"], ["proof (prove)\nusing this:\n  dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))\n\ngoal (1 subgoal):\n 1. dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))", "by blast"], ["proof (state)\nthis:\n  dirichlet_prod_neutral n = (\\<Sum>k = 1..n. unity_root n (int k))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma moebius_coprime_sum:\n  \"moebius_mu n = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n . unity_root n (int k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "let ?f = \"(\\<lambda>k n. unity_root n k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "from div_dvd_div"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a dvd ?b; ?a dvd ?c\\<rbrakk>\n  \\<Longrightarrow> (?b div ?a dvd ?c div ?a) = (?b dvd ?c)", "have \" \n      d dvd a \\<Longrightarrow> d dvd b \\<Longrightarrow>\n      unity_root (a div d) (b div d) = \n      unity_root a b\" for a b d :: nat"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a dvd ?b; ?a dvd ?c\\<rbrakk>\n  \\<Longrightarrow> (?b div ?a dvd ?c div ?a) = (?b dvd ?c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>d dvd a; d dvd b\\<rbrakk>\n    \\<Longrightarrow> unity_root (a div d) (int (b div d)) =\n                      unity_root a (int b)", "using unity_root_def real_of_nat_div"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a dvd ?b; ?a dvd ?c\\<rbrakk>\n  \\<Longrightarrow> (?b div ?a dvd ?c div ?a) = (?b dvd ?c)\n  unity_root ?k ?n = cis (2 * pi * real_of_int ?n / real ?k)\n  ?d dvd ?n \\<Longrightarrow> real (?n div ?d) = real ?n / real ?d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>d dvd a; d dvd b\\<rbrakk>\n    \\<Longrightarrow> unity_root (a div d) (int (b div d)) =\n                      unity_root a (int b)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>?d dvd ?a; ?d dvd ?b\\<rbrakk>\n  \\<Longrightarrow> unity_root (?a div ?d) (int (?b div ?d)) =\n                    unity_root ?a (int ?b)\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?d dvd ?a; ?d dvd ?b\\<rbrakk>\n  \\<Longrightarrow> unity_root (?a div ?d) (int (?b div ?d)) =\n                    unity_root ?a (int ?b)", "have \"(\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. ?f k n) =\n        dirichlet_prod moebius_mu (\\<lambda>n. \\<Sum>k = 1..n. ?f k n) n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?d dvd ?a; ?d dvd ?b\\<rbrakk>\n  \\<Longrightarrow> unity_root (?a div ?d) (int (?b div ?d)) =\n                    unity_root ?a (int ?b)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x)) =\n    dirichlet_prod moebius_mu\n     (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n", "using sum_coprime_conv_dirichlet_prod_moebius_mu[of ?f n]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?d dvd ?a; ?d dvd ?b\\<rbrakk>\n  \\<Longrightarrow> unity_root (?a div ?d) (int (?b div ?d)) =\n                    unity_root ?a (int ?b)\n  (\\<And>a b d.\n      \\<lbrakk>d dvd a; d dvd b\\<rbrakk>\n      \\<Longrightarrow> unity_root (b div d) (int (a div d)) =\n                        unity_root b (int a)) \\<Longrightarrow>\n  (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k)) =\n  dirichlet_prod moebius_mu\n   (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x)) =\n    dirichlet_prod moebius_mu\n     (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x)) =\n  dirichlet_prod moebius_mu\n   (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x)) =\n  dirichlet_prod moebius_mu\n   (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "have \"\\<dots> = dirichlet_prod moebius_mu dirichlet_prod_neutral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod moebius_mu\n     (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n =\n    dirichlet_prod moebius_mu dirichlet_prod_neutral n", "by (simp add: dirichlet_prod_neutral_sum)"], ["proof (state)\nthis:\n  dirichlet_prod moebius_mu\n   (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n =\n  dirichlet_prod moebius_mu dirichlet_prod_neutral n\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "also"], ["proof (state)\nthis:\n  dirichlet_prod moebius_mu\n   (\\<lambda>n. \\<Sum>k = 1..n. unity_root n (int k)) n =\n  dirichlet_prod moebius_mu dirichlet_prod_neutral n\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "have \"\\<dots> = moebius_mu n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod moebius_mu dirichlet_prod_neutral n = moebius_mu n", "by (cases \"n = 0\") (simp_all add: dirichlet_prod_neutral_right_neutral)"], ["proof (state)\nthis:\n  dirichlet_prod moebius_mu dirichlet_prod_neutral n = moebius_mu n\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x)) =\n  moebius_mu n", "have \"moebius_mu n = (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. ?f k n)\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x)) =\n  moebius_mu n\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x))", "by argo"], ["proof (state)\nthis:\n  moebius_mu n =\n  (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x))\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "then"], ["proof (chain)\npicking this:\n  moebius_mu n =\n  (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x))", "show ?thesis"], ["proof (prove)\nusing this:\n  moebius_mu n =\n  (\\<Sum>x\\<in>{k \\<in> {1..n}. coprime k n}. unity_root n (int x))\n\ngoal (1 subgoal):\n 1. moebius_mu n =\n    (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))", "by blast"], ["proof (state)\nthis:\n  moebius_mu n =\n  (\\<Sum>k | k \\<in> {1..n} \\<and> coprime k n. unity_root n (int k))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ramanujan_sum_1_right [simp]: \"c k (Suc 0) = moebius_mu k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c k (Suc 0) = moebius_mu k", "unfolding ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * Suc 0))) =\n    moebius_mu k", "using moebius_coprime_sum[of k]"], ["proof (prove)\nusing this:\n  moebius_mu k =\n  (\\<Sum>k | k \\<in> {1..k} \\<and> coprime k k. unity_root k (int k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * Suc 0))) =\n    moebius_mu k", "by simp"], ["", "lemma ramanujan_sum_dvd_eq_totient:\n  assumes \"k dvd n\"\n    shows \"c k n = totient k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c k n = of_nat (totient k)", "unfolding ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "have \"unity_root k (m*n) = 1\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. unity_root k (int (m * n)) = 1", "using assms"], ["proof (prove)\nusing this:\n  k dvd n\n\ngoal (1 subgoal):\n 1. unity_root k (int (m * n)) = 1", "by (cases \"k = 0\") (auto simp: unity_root_eq_1_iff_int)"], ["proof (state)\nthis:\n  unity_root k (int (?m * n)) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "then"], ["proof (chain)\npicking this:\n  unity_root k (int (?m * n)) = 1", "have \"(\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. unity_root k (m * n)) = \n               (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. 1)\""], ["proof (prove)\nusing this:\n  unity_root k (int (?m * n)) = 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. 1)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int (m * n))) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. 1)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int (m * n))) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. 1)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "have \"\\<dots> = card {m. m \\<in> {1..k} \\<and> coprime m k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. 1) =\n    of_nat (card {m \\<in> {1..k}. coprime m k})", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. 1) =\n  of_nat (card {m \\<in> {1..k}. coprime m k})\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. 1) =\n  of_nat (card {m \\<in> {1..k}. coprime m k})\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "have \"\\<dots> = totient k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (card {m \\<in> {1..k}. coprime m k}) = of_nat (totient k)", "unfolding totient_def totatives_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (card {m \\<in> {1..k}. coprime m k}) =\n    of_nat (card {ka \\<in> {0<..k}. coprime ka k})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_nat (card {m \\<in> {1..k}. coprime m k}) =\n    of_nat (card {ka \\<in> {0<..k}. coprime ka k})", "have \"{1..k} = {0<..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..k} = {0<..k}", "by auto"], ["proof (state)\nthis:\n  {1..k} = {0<..k}\n\ngoal (1 subgoal):\n 1. of_nat (card {m \\<in> {1..k}. coprime m k}) =\n    of_nat (card {ka \\<in> {0<..k}. coprime ka k})", "then"], ["proof (chain)\npicking this:\n  {1..k} = {0<..k}", "show \" of_nat (card {m \\<in> {1..k}. coprime m k}) =\n              of_nat (card {ka \\<in> {0<..k}. coprime ka k})\""], ["proof (prove)\nusing this:\n  {1..k} = {0<..k}\n\ngoal (1 subgoal):\n 1. of_nat (card {m \\<in> {1..k}. coprime m k}) =\n    of_nat (card {ka \\<in> {0<..k}. coprime ka k})", "by auto"], ["proof (state)\nthis:\n  of_nat (card {m \\<in> {1..k}. coprime m k}) =\n  of_nat (card {ka \\<in> {0<..k}. coprime ka k})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_nat (card {m \\<in> {1..k}. coprime m k}) = of_nat (totient k)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int (m * n))) =\n  of_nat (totient k)", "show \"(\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k. unity_root k (m * n)) = totient k\""], ["proof (prove)\nusing this:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int (m * n))) =\n  of_nat (totient k)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n))) =\n    of_nat (totient k)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int (m * n))) =\n  of_nat (totient k)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Generalised sums\\<close>"], ["", "definition gen_ramanujan_sum :: \"(nat \\<Rightarrow> complex) \\<Rightarrow> (nat \\<Rightarrow> complex) \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> complex\" where\n  \"gen_ramanujan_sum f g = (\\<lambda>k n. \\<Sum>d | d dvd gcd n k. f d * g (k div d))\""], ["", "notation gen_ramanujan_sum (\"s\")"], ["", "lemma gen_ramanujan_sum_k_1: \"s f g k 1 = f 1 * g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g k 1 = f 1 * g k", "unfolding gen_ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd 1 k. f d * g (k div d)) = f 1 * g k", "by auto"], ["", "lemma gen_ramanujan_sum_1_n: \"s f g 1 n = f 1 * g 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g 1 n = f 1 * g 1", "unfolding gen_ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd n 1. f d * g (1 div d)) = f 1 * g 1", "by simp"], ["", "lemma gen_ramanujan_sum_periodic: \"periodic_arithmetic (s f g k) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (s f g k) k", "unfolding gen_ramanujan_sum_def periodic_arithmetic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       (\\<Sum>d | d dvd gcd (n + k) k. f d * g (k div d)) =\n       (\\<Sum>d | d dvd gcd n k. f d * g (k div d))", "by simp"], ["", "text \\<open>Theorem 8.5\\<close>"], ["", "theorem gen_ramanujan_sum_fourier_expansion:\n  fixes f g :: \"nat \\<Rightarrow> complex\" and a :: \"nat \\<Rightarrow> nat \\<Rightarrow> complex\"\n  assumes \"k > 0\" \n  defines \"a \\<equiv> (\\<lambda>k m. (1/k) * (\\<Sum>d| d dvd (gcd m k). g d * f (k div d) * d))\"\n  shows \"s f g k n = (\\<Sum>m\\<le>k-1. a k m * unity_root k (m*n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "let ?g = \"(\\<lambda>x. 1 / of_nat k * (\\<Sum>m<k. s f g k m * unity_root k (-x*m)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "fix m :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "let ?h = \"\\<lambda>n d. f d * g (k div d) * unity_root k (- m * int n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"(\\<Sum>l<k. s f g k l * unity_root k (-m*l)) =\n               (\\<Sum>l \\<in> {0..k-1}. s f g k l * unity_root k (-m*l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>l<k. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l))", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. (\\<Sum>l<k. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l))", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>l<k. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>l<k. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>l \\<in> {1..k}. s f g k l * unity_root k (-m*l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "have \"periodic_arithmetic (\\<lambda>l. unity_root k (-m*l)) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>l. unity_root k (- int m * int l)) k", "using unity_periodic_arithmetic_mult"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>n. unity_root ?k (?m * int n)) ?k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>l. unity_root k (- int m * int l)) k", "by blast"], ["proof (state)\nthis:\n  periodic_arithmetic (\\<lambda>l. unity_root k (- int m * int l)) k\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "then"], ["proof (chain)\npicking this:\n  periodic_arithmetic (\\<lambda>l. unity_root k (- int m * int l)) k", "have \"periodic_arithmetic (\\<lambda>l. s f g k l * unity_root k (-m*l)) k\""], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>l. unity_root k (- int m * int l)) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>l. s f g k l * unity_root k (- int m * int l)) k", "using gen_ramanujan_sum_periodic mult_periodic_arithmetic"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>l. unity_root k (- int m * int l)) k\n  periodic_arithmetic (s ?f ?g ?k) ?k\n  \\<lbrakk>periodic_arithmetic ?f ?k; periodic_arithmetic ?g ?k\\<rbrakk>\n  \\<Longrightarrow> periodic_arithmetic (\\<lambda>n. ?f n * ?g n) ?k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>l. s f g k l * unity_root k (- int m * int l)) k", "by blast"], ["proof (state)\nthis:\n  periodic_arithmetic\n   (\\<lambda>l. s f g k l * unity_root k (- int m * int l)) k\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "from this periodic_arithmetic_sum_periodic_arithmetic_shift[of _ k 1  ]"], ["proof (chain)\npicking this:\n  periodic_arithmetic\n   (\\<lambda>l. s f g k l * unity_root k (- int m * int l)) k\n  \\<lbrakk>periodic_arithmetic ?f k; 0 < k; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> sum ?f {0..k - 1} = sum ?f {1..1 + k - 1}", "have \"sum (\\<lambda>l. s f g k l * unity_root k (-m*l)) {0..k - 1} = \n          sum (\\<lambda>l. s f g k l * unity_root k (-m*l)) {1..k}\""], ["proof (prove)\nusing this:\n  periodic_arithmetic\n   (\\<lambda>l. s f g k l * unity_root k (- int m * int l)) k\n  \\<lbrakk>periodic_arithmetic ?f k; 0 < k; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> sum ?f {0..k - 1} = sum ?f {1..1 + k - 1}\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "using assms(1) zero_less_one"], ["proof (prove)\nusing this:\n  periodic_arithmetic\n   (\\<lambda>l. s f g k l * unity_root k (- int m * int l)) k\n  \\<lbrakk>periodic_arithmetic ?f k; 0 < k; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> sum ?f {0..k - 1} = sum ?f {1..1 + k - 1}\n  0 < k\n  (0::?'a) < (1::?'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))\n\ngoal (1 subgoal):\n 1. (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))", "by argo"], ["proof (state)\nthis:\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>l = 0..k - 1. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>n\\<in>{1..k}. (\\<Sum>d | d dvd (gcd n k). f(d) * g(k div d)) * unity_root k (-m*n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l)) =\n    (\\<Sum>n = 1..k.\n        (\\<Sum>d | d dvd gcd n k. f d * g (k div d)) *\n        unity_root k (- int m * int n))", "by (simp add: gen_ramanujan_sum_def)"], ["proof (state)\nthis:\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>n = 1..k.\n      (\\<Sum>d | d dvd gcd n k. f d * g (k div d)) *\n      unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>l = 1..k. s f g k l * unity_root k (- int m * int l)) =\n  (\\<Sum>n = 1..k.\n      (\\<Sum>d | d dvd gcd n k. f d * g (k div d)) *\n      unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>n\\<in>{1..k}. (\\<Sum>d | d dvd (gcd n k). f(d) * g(k div d) * unity_root k (-m*n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        (\\<Sum>d | d dvd gcd n k. f d * g (k div d)) *\n        unity_root k (- int m * int n)) =\n    (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n))", "by (simp add: sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      (\\<Sum>d | d dvd gcd n k. f d * g (k div d)) *\n      unity_root k (- int m * int n)) =\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      (\\<Sum>d | d dvd gcd n k. f d * g (k div d)) *\n      unity_root k (- int m * int n)) =\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd k. \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n. ?h n d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "have \"(\\<Sum>n = 1..k. \\<Sum>d | d dvd gcd n k. ?h n d) =\n          (\\<Sum>n = 1..k. \\<Sum>d | d dvd k \\<and> d dvd n . ?h n d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd k \\<and> d dvd n.\n          f d * g (k div d) * unity_root k (- int m * int n))", "using gcd.commute[of _ k]"], ["proof (prove)\nusing this:\n  gcd ?a k = gcd k ?a\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd k \\<and> d dvd n.\n          f d * g (k div d) * unity_root k (- int m * int n))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd k \\<and> d dvd n.\n        f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd k \\<and> d dvd n.\n        f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd k. \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n. ?h n d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd k \\<and> d dvd n.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "using sum.swap_restrict[of \"{1..k}\" \"{d. d dvd k}\"\n                            _ \"\\<lambda>n d. d dvd n\"] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {1..k}; finite {d. d dvd k}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x = 1..k.\n                        sum (?g x) {y \\<in> {d. d dvd k}. y dvd x}) =\n                    (\\<Sum>y\\<in>{d. d dvd k}.\n                       \\<Sum>x | x \\<in> {1..k} \\<and> y dvd x. ?g x y)\n  0 < k\n  a \\<equiv>\n  \\<lambda>k m.\n     1 / of_nat k * (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd k \\<and> d dvd n.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd k \\<and> d dvd n.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))", "have \"\n      (\\<Sum>n = 1..k. \\<Sum>d | d dvd gcd n k. ?h n d) = \n      (\\<Sum>d | d dvd k. \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n. ?h n d)\""], ["proof (prove)\nusing this:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..k.\n        \\<Sum>d | d dvd gcd n k.\n          f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..k.\n      \\<Sum>d | d dvd gcd n k.\n        f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd k. f(d)*g(k div d)*\n             (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n. unity_root k (- m * int n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n         f d * g (k div d) * unity_root k (- int m * int n)) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n          unity_root k (- int m * int n)))", "by (simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n        unity_root k (- int m * int n)))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     \\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n       f d * g (k div d) * unity_root k (- int m * int n)) =\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n        unity_root k (- int m * int n)))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd k. f(d)*g(k div d)*\n             (\\<Sum>e \\<in> {1..k div d}. unity_root k (- m * (e*d))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n          unity_root k (- int m * int n))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d))))", "using assms(1) sum_div_reduce div_greater_zero_iff dvd_div_gt0"], ["proof (prove)\nusing this:\n  0 < k\n  \\<lbrakk>?d dvd ?k; 0 < ?d\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>n | n \\<in> {1..?k} \\<and> ?d dvd n. ?f n) =\n                    (\\<Sum>c = 1..?k div ?d. ?f (c * ?d))\n  (0 < ?m div ?n) = (?n \\<le> ?m \\<and> 0 < ?n)\n  \\<lbrakk>?d dvd ?n; 0 < ?n\\<rbrakk> \\<Longrightarrow> 0 < ?n div ?d\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n          unity_root k (- int m * int n))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d))))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n        unity_root k (- int m * int n))) =\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d))))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>n | n \\<in> {1..k} \\<and> d dvd n.\n        unity_root k (- int m * int n))) =\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d))))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd k. f(d)*g(k div d)*\n             (\\<Sum>e \\<in> {1..k div d}. unity_root (k div d) (- m * e)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "fix d e"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "assume \"d dvd k\""], ["proof (state)\nthis:\n  d dvd k\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "hence \"2 * pi * real_of_int (- int m * int (e * d)) / real k =\n              2 * pi * real_of_int (- int m * int e) / real (k div d)\""], ["proof (prove)\nusing this:\n  d dvd k\n\ngoal (1 subgoal):\n 1. 2 * pi * real_of_int (- int m * int (e * d)) / real k =\n    2 * pi * real_of_int (- int m * int e) / real (k div d)", "by auto"], ["proof (state)\nthis:\n  2 * pi * real_of_int (- int m * int (e * d)) / real k =\n  2 * pi * real_of_int (- int m * int e) / real (k div d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "hence \"unity_root k (- m * (e * d)) = unity_root (k div d) (- m * e)\""], ["proof (prove)\nusing this:\n  2 * pi * real_of_int (- int m * int (e * d)) / real k =\n  2 * pi * real_of_int (- int m * int e) / real (k div d)\n\ngoal (1 subgoal):\n 1. unity_root k (- int m * int (e * d)) =\n    unity_root (k div d) (- int m * int e)", "unfolding unity_root_def"], ["proof (prove)\nusing this:\n  2 * pi * real_of_int (- int m * int (e * d)) / real k =\n  2 * pi * real_of_int (- int m * int e) / real (k div d)\n\ngoal (1 subgoal):\n 1. cis (2 * pi * real_of_int (- int m * int (e * d)) / real k) =\n    cis (2 * pi * real_of_int (- int m * int e) / real (k div d))", "by simp"], ["proof (state)\nthis:\n  unity_root k (- int m * int (e * d)) =\n  unity_root (k div d) (- int m * int e)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "}"], ["proof (state)\nthis:\n  ?d2 dvd k \\<Longrightarrow>\n  unity_root k (- int m * int (?e2 * ?d2)) =\n  unity_root (k div ?d2) (- int m * int ?e2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "then"], ["proof (chain)\npicking this:\n  ?d2 dvd k \\<Longrightarrow>\n  unity_root k (- int m * int (?e2 * ?d2)) =\n  unity_root (k div ?d2) (- int m * int ?e2)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?d2 dvd k \\<Longrightarrow>\n  unity_root k (- int m * int (?e2 * ?d2)) =\n  unity_root (k div ?d2) (- int m * int ?e2)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root k (- int m * int (e * d)))) =\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = dirichlet_prod (\\<lambda>d. f(d)*g(k div d))\n                    (\\<lambda>d. (\\<Sum>e \\<in> {1..d}. unity_root d (- m * e))) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e))) =\n    dirichlet_prod (\\<lambda>d. f d * g (k div d))\n     (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) k", "unfolding dirichlet_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e))) =\n    (\\<Sum>d | d dvd k.\n       f d * g (k div d) *\n       (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e)))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e))) =\n  dirichlet_prod (\\<lambda>d. f d * g (k div d))\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) k\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     f d * g (k div d) *\n     (\\<Sum>e = 1..k div d. unity_root (k div d) (- int m * int e))) =\n  dirichlet_prod (\\<lambda>d. f d * g (k div d))\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) k\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = dirichlet_prod (\\<lambda>d. (\\<Sum>e \\<in> {1..d}. unity_root d (- m * e)))\n                    (\\<lambda>d. f(d)*g(k div d)) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod (\\<lambda>d. f d * g (k div d))\n     (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) k =\n    dirichlet_prod\n     (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n     (\\<lambda>d. f d * g (k div d)) k", "using dirichlet_prod_commutes[of \n            \"(\\<lambda>d. f(d)*g(k div d))\"\n            \"(\\<lambda>d. (\\<Sum>e \\<in> {1..d}. unity_root d (- m * e)))\"]"], ["proof (prove)\nusing this:\n  dirichlet_prod (\\<lambda>d. f d * g (k div d))\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n  dirichlet_prod\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n   (\\<lambda>d. f d * g (k div d))\n\ngoal (1 subgoal):\n 1. dirichlet_prod (\\<lambda>d. f d * g (k div d))\n     (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) k =\n    dirichlet_prod\n     (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n     (\\<lambda>d. f d * g (k div d)) k", "by argo"], ["proof (state)\nthis:\n  dirichlet_prod (\\<lambda>d. f d * g (k div d))\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) k =\n  dirichlet_prod\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n   (\\<lambda>d. f d * g (k div d)) k\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  dirichlet_prod (\\<lambda>d. f d * g (k div d))\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e)) k =\n  dirichlet_prod\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n   (\\<lambda>d. f d * g (k div d)) k\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd k.\n             (\\<Sum>e \\<in> {1..(d::nat)}. unity_root d (- m * e))*(f(k div d)*g(k div (k div d))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod\n     (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n     (\\<lambda>d. f d * g (k div d)) k =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d))))", "unfolding dirichlet_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d))))", "by blast"], ["proof (state)\nthis:\n  dirichlet_prod\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n   (\\<lambda>d. f d * g (k div d)) k =\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g (k div (k div d))))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  dirichlet_prod\n   (\\<lambda>d. \\<Sum>e = 1..d. unity_root d (- int m * int e))\n   (\\<lambda>d. f d * g (k div d)) k =\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g (k div (k div d))))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd k. (\\<Sum>e \\<in> {1..(d::nat)}.\n                      unity_root d (- m * e))*(f(k div d)*g(d)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "fix d :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "assume \"d dvd k\""], ["proof (state)\nthis:\n  d dvd k\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "then"], ["proof (chain)\npicking this:\n  d dvd k", "have \"k div (k div d) = d\""], ["proof (prove)\nusing this:\n  d dvd k\n\ngoal (1 subgoal):\n 1. k div (k div d) = d", "by (simp add: assms(1) div_div_eq_right)"], ["proof (state)\nthis:\n  k div (k div d) = d\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "}"], ["proof (state)\nthis:\n  ?d2 dvd k \\<Longrightarrow> k div (k div ?d2) = ?d2\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "then"], ["proof (chain)\npicking this:\n  ?d2 dvd k \\<Longrightarrow> k div (k div ?d2) = ?d2", "show ?thesis"], ["proof (prove)\nusing this:\n  ?d2 dvd k \\<Longrightarrow> k div (k div ?d2) = ?d2\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g (k div (k div d)))) =\n    (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g (k div (k div d)))) =\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) * (f (k div d) * g d))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g (k div (k div d)))) =\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g (k div (k div d)))) =\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>(d::nat) | d dvd k \\<and> d dvd m. d*(f(k div d)*g(d)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "assume \"d dvd k\""], ["proof (state)\nthis:\n  d dvd k\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "with assms"], ["proof (chain)\npicking this:\n  0 < k\n  a \\<equiv>\n  \\<lambda>k m.\n     1 / of_nat k * (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)\n  d dvd k", "have \"d > 0\""], ["proof (prove)\nusing this:\n  0 < k\n  a \\<equiv>\n  \\<lambda>k m.\n     1 / of_nat k * (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)\n  d dvd k\n\ngoal (1 subgoal):\n 1. 0 < d", "by (intro Nat.gr0I) auto"], ["proof (state)\nthis:\n  0 < d\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "have \"periodic_arithmetic (\\<lambda>x. unity_root d (- m * int x)) d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>x. unity_root d (- int m * int x)) d", "using unity_periodic_arithmetic_mult"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>n. unity_root ?k (?m * int n)) ?k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>x. unity_root d (- int m * int x)) d", "by blast"], ["proof (state)\nthis:\n  periodic_arithmetic (\\<lambda>x. unity_root d (- int m * int x)) d\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "then"], ["proof (chain)\npicking this:\n  periodic_arithmetic (\\<lambda>x. unity_root d (- int m * int x)) d", "have \"(\\<Sum>e \\<in> {1..d}. unity_root d (- m * e)) = \n            (\\<Sum>e \\<in> {0..d-1}. unity_root d (- m * e))\""], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>x. unity_root d (- int m * int x)) d\n\ngoal (1 subgoal):\n 1. (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n    (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e))", "using periodic_arithmetic_sum_periodic_arithmetic_shift[of \"\\<lambda>e. unity_root d (- m * e)\"  d 1] assms \\<open>d dvd k\\<close>"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>x. unity_root d (- int m * int x)) d\n  \\<lbrakk>periodic_arithmetic (\\<lambda>e. unity_root d (- int m * int e))\n            d;\n   0 < d; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>l = 0..d - 1. unity_root d (- int m * int l)) =\n                    (\\<Sum>l = 1..1 + d - 1. unity_root d (- int m * int l))\n  0 < k\n  a \\<equiv>\n  \\<lambda>k m.\n     1 / of_nat k * (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)\n  d dvd k\n\ngoal (1 subgoal):\n 1. (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n    (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e))", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n  (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n  (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "have \"\\<dots> = unity_root_sum d (-m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e)) =\n    unity_root_sum d (- int m)", "unfolding unity_root_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e)) =\n    (\\<Sum>ma<d. unity_root d (- int m * int ma))", "using \\<open>d > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e)) =\n    (\\<Sum>ma<d. unity_root d (- int m * int ma))", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>e = 0..d - 1. unity_root d (- int m * int e)) =\n  unity_root_sum d (- int m)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n  unity_root_sum d (- int m)", "have \n        \"(\\<Sum>e \\<in> {1..d}. unity_root d (- m * e)) = unity_root_sum d (-m)\""], ["proof (prove)\nusing this:\n  (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n  unity_root_sum d (- int m)\n\ngoal (1 subgoal):\n 1. (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n    unity_root_sum d (- int m)", "by argo"], ["proof (state)\nthis:\n  (\\<Sum>e = 1..d. unity_root d (- int m * int e)) =\n  unity_root_sum d (- int m)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "}"], ["proof (state)\nthis:\n  ?d2 dvd k \\<Longrightarrow>\n  (\\<Sum>e = 1..?d2. unity_root ?d2 (- int m * int e)) =\n  unity_root_sum ?d2 (- int m)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "then"], ["proof (chain)\npicking this:\n  ?d2 dvd k \\<Longrightarrow>\n  (\\<Sum>e = 1..?d2. unity_root ?d2 (- int m * int e)) =\n  unity_root_sum ?d2 (- int m)", "have \"\n      (\\<Sum>d | d dvd k. (\\<Sum>e = 1..d. unity_root d (- m * int e)) * (f (k div d) * g d)) = \n      (\\<Sum>d | d dvd k. unity_root_sum d (-m) * (f (k div d) * g d))\""], ["proof (prove)\nusing this:\n  ?d2 dvd k \\<Longrightarrow>\n  (\\<Sum>e = 1..?d2. unity_root ?d2 (- int m * int e)) =\n  unity_root_sum ?d2 (- int m)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k. unity_root_sum d (- int m) * (f (k div d) * g d))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k. unity_root_sum d (- int m) * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k. unity_root_sum d (- int m) * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "have \"\\<dots> = (\\<Sum>d | d dvd k \\<and> d dvd m. unity_root_sum d (-m) * (f (k div d) * g d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k. unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d))", "proof (intro sum.mono_neutral_right,simp add: \\<open>k > 0\\<close>,blast,standard)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m} \\<Longrightarrow>\n       unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m} \\<Longrightarrow>\n       unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "assume as: \"i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m}\""], ["proof (state)\nthis:\n  i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m} \\<Longrightarrow>\n       unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "then"], ["proof (chain)\npicking this:\n  i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m}", "have \"i \\<ge> 1\""], ["proof (prove)\nusing this:\n  i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m}\n\ngoal (1 subgoal):\n 1. 1 \\<le> i", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m}\n  0 < k\n\ngoal (1 subgoal):\n 1. 1 \\<le> i", "by auto"], ["proof (state)\nthis:\n  1 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m} \\<Longrightarrow>\n       unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "have \"k \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> k", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. 1 \\<le> k", "by auto"], ["proof (state)\nthis:\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m} \\<Longrightarrow>\n       unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "have \"\\<not> i dvd (-m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> int i dvd - int m", "using as"], ["proof (prove)\nusing this:\n  i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m}\n\ngoal (1 subgoal):\n 1. \\<not> int i dvd - int m", "by auto"], ["proof (state)\nthis:\n  \\<not> int i dvd - int m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> {d. d dvd k} - {d. d dvd k \\<and> d dvd m} \\<Longrightarrow>\n       unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "thus \"unity_root_sum i (- int m) * (f (k div i) * g i) = 0\""], ["proof (prove)\nusing this:\n  \\<not> int i dvd - int m\n\ngoal (1 subgoal):\n 1. unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "using \\<open>i \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  \\<not> int i dvd - int m\n  1 \\<le> i\n\ngoal (1 subgoal):\n 1. unity_root_sum i (- int m) * (f (k div i) * g i) = 0", "by (subst unity_root_sum(2)) auto"], ["proof (state)\nthis:\n  unity_root_sum i (- int m) * (f (k div i) * g i) = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k. unity_root_sum d (- int m) * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m.\n     unity_root_sum d (- int m) * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k. unity_root_sum d (- int m) * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m.\n     unity_root_sum d (- int m) * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "have \"\\<dots> = (\\<Sum>d | d dvd k \\<and> d dvd m. d * (f (k div d) * g d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "fix d :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "assume 1: \"d dvd m\""], ["proof (state)\nthis:\n  d dvd m\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "assume 2: \"d dvd k\""], ["proof (state)\nthis:\n  d dvd k\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "then"], ["proof (chain)\npicking this:\n  d dvd k", "have \"unity_root_sum d (-m) = d\""], ["proof (prove)\nusing this:\n  d dvd k\n\ngoal (1 subgoal):\n 1. unity_root_sum d (- int m) = of_nat d", "using unity_root_sum[of d \"(-m)\"] assms(1) 1 2"], ["proof (prove)\nusing this:\n  d dvd k\n  \\<lbrakk>1 \\<le> d; int d dvd - int m\\<rbrakk>\n  \\<Longrightarrow> unity_root_sum d (- int m) = of_nat d\n  \\<lbrakk>1 \\<le> d; \\<not> int d dvd - int m\\<rbrakk>\n  \\<Longrightarrow> unity_root_sum d (- int m) = 0\n  0 < k\n  d dvd m\n  d dvd k\n\ngoal (1 subgoal):\n 1. unity_root_sum d (- int m) = of_nat d", "by auto"], ["proof (state)\nthis:\n  unity_root_sum d (- int m) = of_nat d\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?d2 dvd m; ?d2 dvd k\\<rbrakk>\n  \\<Longrightarrow> unity_root_sum ?d2 (- int m) = of_nat ?d2\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?d2 dvd m; ?d2 dvd k\\<rbrakk>\n  \\<Longrightarrow> unity_root_sum ?d2 (- int m) = of_nat ?d2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?d2 dvd m; ?d2 dvd k\\<rbrakk>\n  \\<Longrightarrow> unity_root_sum ?d2 (- int m) = of_nat ?d2\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m.\n       unity_root_sum d (- int m) * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k \\<and> d dvd m.\n     unity_root_sum d (- int m) * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k \\<and> d dvd m.\n     unity_root_sum d (- int m) * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k.\n       (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n       (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))", "by argo"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k.\n     (\\<Sum>e = 1..d. unity_root d (- int m * int e)) *\n     (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd gcd m k. of_nat d * (f (k div d) * g d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd gcd m k. of_nat d * (f (k div d) * g d))", "by (simp add: gcd.commute)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd gcd m k. of_nat d * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k \\<and> d dvd m. of_nat d * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd gcd m k. of_nat d * (f (k div d) * g d))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd m k. of_nat d * (f (k div d) * g d)) =\n    (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)", "by (simp add: algebra_simps sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd m k. of_nat d * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd m k. of_nat d * (f (k div d) * g d)) =\n  (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"1 / k * \\<dots> = a k m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (1 / real k) *\n    (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d) =\n    a k m", "using a_def"], ["proof (prove)\nusing this:\n  a \\<equiv>\n  \\<lambda>k m.\n     1 / of_nat k * (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d)\n\ngoal (1 subgoal):\n 1. complex_of_real (1 / real k) *\n    (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d) =\n    a k m", "by auto"], ["proof (state)\nthis:\n  complex_of_real (1 / real k) *\n  (\\<Sum>d | d dvd gcd m k. g d * f (k div d) * of_nat d) =\n  a k m\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (1 / real k) *\n  (\\<Sum>l<k. s f g k l * unity_root k (- int m * int l)) =\n  a k m", "have \"?g m = a k m\""], ["proof (prove)\nusing this:\n  complex_of_real (1 / real k) *\n  (\\<Sum>l<k. s f g k l * unity_root k (- int m * int l)) =\n  a k m\n\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>ma<k. s f g k ma * unity_root k (- int m * int ma)) =\n    a k m", "by simp"], ["proof (state)\nthis:\n  1 / of_nat k *\n  (\\<Sum>ma<k. s f g k ma * unity_root k (- int m * int ma)) =\n  a k m\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "}"], ["proof (state)\nthis:\n  1 / of_nat k * (\\<Sum>m<k. s f g k m * unity_root k (- int ?m2 * int m)) =\n  a k ?m2\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "note a_eq_g = this"], ["proof (state)\nthis:\n  1 / of_nat k * (\\<Sum>m<k. s f g k m * unity_root k (- int ?m2 * int m)) =\n  a k ?m2\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "{"], ["proof (state)\nthis:\n  1 / of_nat k * (\\<Sum>m<k. s f g k m * unity_root k (- int ?m2 * int m)) =\n  a k ?m2\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "from fourier_expansion_periodic_arithmetic(2)[of k \"s f g k\" ] gen_ramanujan_sum_periodic assms(1)"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < k; periodic_arithmetic (s f g k) k\\<rbrakk>\n  \\<Longrightarrow> s f g k ?m =\n                    (\\<Sum>n<k.\n                        1 / of_nat k *\n                        (\\<Sum>m<k.\n                            s f g k m * unity_root k (- int n * int m)) *\n                        unity_root k (int ?m * int n))\n  periodic_arithmetic (s ?f ?g ?k) ?k\n  0 < k", "have \"s f g k m = (\\<Sum>n<k. ?g n * unity_root k (int m * n))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < k; periodic_arithmetic (s f g k) k\\<rbrakk>\n  \\<Longrightarrow> s f g k ?m =\n                    (\\<Sum>n<k.\n                        1 / of_nat k *\n                        (\\<Sum>m<k.\n                            s f g k m * unity_root k (- int n * int m)) *\n                        unity_root k (int ?m * int n))\n  periodic_arithmetic (s ?f ?g ?k) ?k\n  0 < k\n\ngoal (1 subgoal):\n 1. s f g k m =\n    (\\<Sum>n<k.\n        1 / of_nat k *\n        (\\<Sum>m<k. s f g k m * unity_root k (- int n * int m)) *\n        unity_root k (int m * int n))", "by blast"], ["proof (state)\nthis:\n  s f g k m =\n  (\\<Sum>n<k.\n      1 / of_nat k *\n      (\\<Sum>m<k. s f g k m * unity_root k (- int n * int m)) *\n      unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  s f g k m =\n  (\\<Sum>n<k.\n      1 / of_nat k *\n      (\\<Sum>m<k. s f g k m * unity_root k (- int n * int m)) *\n      unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>n<k. a k n * unity_root k (int m * n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<k.\n        1 / of_nat k *\n        (\\<Sum>m<k. s f g k m * unity_root k (- int n * int m)) *\n        unity_root k (int m * int n)) =\n    (\\<Sum>n<k. a k n * unity_root k (int m * int n))", "using a_eq_g"], ["proof (prove)\nusing this:\n  1 / of_nat k * (\\<Sum>m<k. s f g k m * unity_root k (- int ?m2 * int m)) =\n  a k ?m2\n\ngoal (1 subgoal):\n 1. (\\<Sum>n<k.\n        1 / of_nat k *\n        (\\<Sum>m<k. s f g k m * unity_root k (- int n * int m)) *\n        unity_root k (int m * int n)) =\n    (\\<Sum>n<k. a k n * unity_root k (int m * int n))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>n<k.\n      1 / of_nat k *\n      (\\<Sum>m<k. s f g k m * unity_root k (- int n * int m)) *\n      unity_root k (int m * int n)) =\n  (\\<Sum>n<k. a k n * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "also"], ["proof (state)\nthis:\n  (\\<Sum>n<k.\n      1 / of_nat k *\n      (\\<Sum>m<k. s f g k m * unity_root k (- int n * int m)) *\n      unity_root k (int m * int n)) =\n  (\\<Sum>n<k. a k n * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "have \"\\<dots> = (\\<Sum>n\\<le>k-1. a k n * unity_root k (int m * n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<k. a k n * unity_root k (int m * int n)) =\n    (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int m * int n))", "using \\<open>k > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. (\\<Sum>n<k. a k n * unity_root k (int m * int n)) =\n    (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int m * int n))", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>n<k. a k n * unity_root k (int m * int n)) =\n  (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "finally"], ["proof (chain)\npicking this:\n  s f g k m = (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int m * int n))", "have \"s f g k m =\n      (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int n * int m))\""], ["proof (prove)\nusing this:\n  s f g k m = (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. s f g k m = (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int n * int m))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  s f g k m = (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int n * int m))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "}"], ["proof (state)\nthis:\n  s f g k ?m2 = (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int n * int ?m2))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "then"], ["proof (chain)\npicking this:\n  s f g k ?m2 = (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int n * int ?m2))", "show ?thesis"], ["proof (prove)\nusing this:\n  s f g k ?m2 = (\\<Sum>n\\<le>k - 1. a k n * unity_root k (int n * int ?m2))\n\ngoal (1 subgoal):\n 1. s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "by blast"], ["proof (state)\nthis:\n  s f g k n = (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 8.6\\<close>"], ["", "theorem ramanujan_sum_dirichlet_form:\n  fixes k n :: nat\n  assumes \"k > 0\"\n  shows \"c k n = (\\<Sum>d | d dvd gcd n k. d * moebius_mu (k div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "define a :: \"nat \\<Rightarrow> nat \\<Rightarrow> complex\" \n    where \"a  =  (\\<lambda>k m.\n   1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d))\""], ["proof (state)\nthis:\n  a =\n  (\\<lambda>k m.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "{"], ["proof (state)\nthis:\n  a =\n  (\\<lambda>k m.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"a k m = (if gcd m k = 1 then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "have \"a k m = 1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k m =\n    1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d)", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d)", "by blast"], ["proof (state)\nthis:\n  a k m =\n  1 / of_nat k *\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "also"], ["proof (state)\nthis:\n  a k m =\n  1 / of_nat k *\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "have 2: \"\\<dots> = 1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "fix d :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "assume dvd: \"d dvd gcd m k\""], ["proof (state)\nthis:\n  d dvd gcd m k\n\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "have \"moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k", "have \"(k div d) * d = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k div d * d = k", "using dvd"], ["proof (prove)\nusing this:\n  d dvd gcd m k\n\ngoal (1 subgoal):\n 1. k div d * d = k", "by auto"], ["proof (state)\nthis:\n  k div d * d = k\n\ngoal (1 subgoal):\n 1. moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k", "then"], ["proof (chain)\npicking this:\n  k div d * d = k", "show \"moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k\""], ["proof (prove)\nusing this:\n  k div d * d = k\n\ngoal (1 subgoal):\n 1. moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k", "by (simp add: algebra_simps,subst of_nat_mult[symmetric],simp)"], ["proof (state)\nthis:\n  moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_mu d * of_nat (k div d) * of_nat d = moebius_mu d * of_nat k\n\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "}"], ["proof (state)\nthis:\n  ?d4 dvd gcd m k \\<Longrightarrow>\n  moebius_mu ?d4 * of_nat (k div ?d4) * of_nat ?d4 =\n  moebius_mu ?d4 * of_nat k\n\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "note eq = this"], ["proof (state)\nthis:\n  ?d4 dvd gcd m k \\<Longrightarrow>\n  moebius_mu ?d4 * of_nat (k div ?d4) * of_nat ?d4 =\n  moebius_mu ?d4 * of_nat k\n\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "using sum.cong"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. 1 / of_nat k *\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n    1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)", "by (simp add: eq)"], ["proof (state)\nthis:\n  1 / of_nat k *\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n  1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 / of_nat k *\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n  1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "also"], ["proof (state)\nthis:\n  1 / of_nat k *\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d) =\n  1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "have 3: \"\\<dots> = (\\<Sum>d | d dvd gcd m k. moebius_mu d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k) =\n    (\\<Sum>d | d dvd gcd m k. moebius_mu d)", "by (simp add: sum_distrib_left assms)"], ["proof (state)\nthis:\n  1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k) =\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "also"], ["proof (state)\nthis:\n  1 / of_nat k * (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat k) =\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "have 4: \"\\<dots> =  (if gcd m k = 1 then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd m k. moebius_mu d) = (if gcd m k = 1 then 1 else 0)", "using sum_moebius_mu_divisors'"], ["proof (prove)\nusing this:\n  (\\<Sum>d | d dvd ?n. moebius_mu d) = (if ?n = 1 then 1::?'a else (0::?'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd m k. moebius_mu d) = (if gcd m k = 1 then 1 else 0)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd m k. moebius_mu d) = (if gcd m k = 1 then 1 else 0)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "finally"], ["proof (chain)\npicking this:\n  a k m = (if gcd m k = 1 then 1 else 0)", "show \"a k m  = (if gcd m k = 1 then 1 else 0)\""], ["proof (prove)\nusing this:\n  a k m = (if gcd m k = 1 then 1 else 0)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "using coprime_def"], ["proof (prove)\nusing this:\n  a k m = (if gcd m k = 1 then 1 else 0)\n  coprime ?a ?b =\n  (\\<forall>c.\n      c dvd ?a \\<longrightarrow> c dvd ?b \\<longrightarrow> is_unit c)\n\ngoal (1 subgoal):\n 1. a k m = (if gcd m k = 1 then 1 else 0)", "by blast"], ["proof (state)\nthis:\n  a k m = (if gcd m k = 1 then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a k m = (if gcd m k = 1 then 1 else 0)\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "}"], ["proof (state)\nthis:\n  a k ?m2 = (if gcd ?m2 k = 1 then 1 else 0)\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "note a_expr = this"], ["proof (state)\nthis:\n  a k ?m2 = (if gcd ?m2 k = 1 then 1 else 0)\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "let ?f = \"(\\<lambda>m. (if gcd m k = 1 then 1 else 0) *\n                 unity_root k (int m * n))\""], ["proof (state)\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "from gen_ramanujan_sum_fourier_expansion[of k id moebius_mu n] assms"], ["proof (chain)\npicking this:\n  0 < k \\<Longrightarrow>\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n =\n  (\\<Sum>m\\<le>k - 1.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k.\n         moebius_mu d * of_nat (id (k div d)) * of_nat d) *\n      unity_root k (int m * int n))\n  0 < k", "have \"s (\\<lambda>x. of_nat (id x)) moebius_mu k n =\n  (\\<Sum>m\\<le>k - 1.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k.\n         moebius_mu d * of_nat (k div d) * of_nat d) *\n      unity_root k (int m * n))\""], ["proof (prove)\nusing this:\n  0 < k \\<Longrightarrow>\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n =\n  (\\<Sum>m\\<le>k - 1.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k.\n         moebius_mu d * of_nat (id (k div d)) * of_nat d) *\n      unity_root k (int m * int n))\n  0 < k\n\ngoal (1 subgoal):\n 1. s (\\<lambda>x. of_nat (id x)) moebius_mu k n =\n    (\\<Sum>m\\<le>k - 1.\n        1 / of_nat k *\n        (\\<Sum>d | d dvd gcd m k.\n           moebius_mu d * of_nat (k div d) * of_nat d) *\n        unity_root k (int m * int n))", "by simp"], ["proof (state)\nthis:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n =\n  (\\<Sum>m\\<le>k - 1.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k.\n         moebius_mu d * of_nat (k div d) * of_nat d) *\n      unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "also"], ["proof (state)\nthis:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n =\n  (\\<Sum>m\\<le>k - 1.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k.\n         moebius_mu d * of_nat (k div d) * of_nat d) *\n      unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"\\<dots> = (\\<Sum>m\\<le>k - 1.\n      a k m *\n      unity_root k (int m * n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1.\n        1 / of_nat k *\n        (\\<Sum>d | d dvd gcd m k.\n           moebius_mu d * of_nat (k div d) * of_nat d) *\n        unity_root k (int m * int n)) =\n    (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "using a_def"], ["proof (prove)\nusing this:\n  a =\n  (\\<lambda>k m.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k. moebius_mu d * of_nat (k div d) * of_nat d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1.\n        1 / of_nat k *\n        (\\<Sum>d | d dvd gcd m k.\n           moebius_mu d * of_nat (k div d) * of_nat d) *\n        unity_root k (int m * int n)) =\n    (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>m\\<le>k - 1.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k.\n         moebius_mu d * of_nat (k div d) * of_nat d) *\n      unity_root k (int m * int n)) =\n  (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m\\<le>k - 1.\n      1 / of_nat k *\n      (\\<Sum>d | d dvd gcd m k.\n         moebius_mu d * of_nat (k div d) * of_nat d) *\n      unity_root k (int m * int n)) =\n  (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"\\<dots> = (\\<Sum>m\\<le>k - 1.\n      (if gcd m k = 1 then 1 else 0) *\n      unity_root k (int m * n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n)) =\n    (\\<Sum>m\\<le>k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "using a_expr"], ["proof (prove)\nusing this:\n  a k ?m2 = (if gcd ?m2 k = 1 then 1 else 0)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n)) =\n    (\\<Sum>m\\<le>k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n)) =\n  (\\<Sum>m\\<le>k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m\\<le>k - 1. a k m * unity_root k (int m * int n)) =\n  (\\<Sum>m\\<le>k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"\\<dots> = (\\<Sum>m \\<in> {1..k}.\n      (if gcd m k = 1 then 1 else 0) *\n      unity_root k (int m * n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "have \"periodic_arithmetic (\\<lambda>m. (if gcd m k = 1 then 1 else 0) *\n                 unity_root k (int m * n)) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>m.\n         (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n     k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>m.\n         (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n     k", "have \"periodic_arithmetic (\\<lambda>m. if gcd m k = 1 then 1 else 0) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>m. if gcd m k = 1 then 1 else 0) k", "by (simp add: periodic_arithmetic_def)"], ["proof (state)\nthis:\n  periodic_arithmetic (\\<lambda>m. if gcd m k = 1 then 1 else 0) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>m.\n         (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n     k", "moreover"], ["proof (state)\nthis:\n  periodic_arithmetic (\\<lambda>m. if gcd m k = 1 then 1 else 0) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>m.\n         (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n     k", "have \"periodic_arithmetic (\\<lambda>m. unity_root k (int m * n)) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>m. unity_root k (int m * int n)) k", "using unity_periodic_arithmetic_mult[of k n]"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>na. unity_root k (int n * int na)) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic (\\<lambda>m. unity_root k (int m * int n)) k", "by (subst mult.commute,simp)"], ["proof (state)\nthis:\n  periodic_arithmetic (\\<lambda>m. unity_root k (int m * int n)) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>m.\n         (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n     k", "ultimately"], ["proof (chain)\npicking this:\n  periodic_arithmetic (\\<lambda>m. if gcd m k = 1 then 1 else 0) k\n  periodic_arithmetic (\\<lambda>m. unity_root k (int m * int n)) k", "show \"periodic_arithmetic ?f k\""], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>m. if gcd m k = 1 then 1 else 0) k\n  periodic_arithmetic (\\<lambda>m. unity_root k (int m * int n)) k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>m.\n         (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n     k", "using mult_periodic_arithmetic"], ["proof (prove)\nusing this:\n  periodic_arithmetic (\\<lambda>m. if gcd m k = 1 then 1 else 0) k\n  periodic_arithmetic (\\<lambda>m. unity_root k (int m * int n)) k\n  \\<lbrakk>periodic_arithmetic ?f ?k; periodic_arithmetic ?g ?k\\<rbrakk>\n  \\<Longrightarrow> periodic_arithmetic (\\<lambda>n. ?f n * ?g n) ?k\n\ngoal (1 subgoal):\n 1. periodic_arithmetic\n     (\\<lambda>m.\n         (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n     k", "by simp"], ["proof (state)\nthis:\n  periodic_arithmetic\n   (\\<lambda>m.\n       (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n   k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  periodic_arithmetic\n   (\\<lambda>m.\n       (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n   k\n\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "then"], ["proof (chain)\npicking this:\n  periodic_arithmetic\n   (\\<lambda>m.\n       (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n   k", "have \"sum ?f {0..k - 1} = sum ?f {1..k}\""], ["proof (prove)\nusing this:\n  periodic_arithmetic\n   (\\<lambda>m.\n       (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n   k\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 0..k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "using periodic_arithmetic_sum_periodic_arithmetic_shift[of ?f k 1]"], ["proof (prove)\nusing this:\n  periodic_arithmetic\n   (\\<lambda>m.\n       (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n   k\n  \\<lbrakk>periodic_arithmetic\n            (\\<lambda>m.\n                (if gcd m k = 1 then 1 else 0) *\n                unity_root k (int m * int n))\n            k;\n   0 < k; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>l = 0..k - 1.\n                        (if gcd l k = 1 then 1 else 0) *\n                        unity_root k (int l * int n)) =\n                    (\\<Sum>l = 1..1 + k - 1.\n                        (if gcd l k = 1 then 1 else 0) *\n                        unity_root k (int l * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 0..k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "by force"], ["proof (state)\nthis:\n  (\\<Sum>m = 0..k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>m = 0..k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>m = 0..k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m\\<le>k - 1.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "by (simp add: atMost_atLeast0)"], ["proof (state)\nthis:\n  (\\<Sum>m\\<le>k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>m\\<le>k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m\\<le>k - 1.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"\\<dots> = (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n                  (if gcd m k = 1 then 1 else 0) *     \n                  unity_root k (int m * int n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..k.\n        (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n       (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))", "by (intro sum.mono_neutral_right,auto)"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..k.\n      (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"\\<dots> = (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n                  unity_root k (int m * int n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n       (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n    (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n       unity_root k (int m * int n))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     (if gcd m k = 1 then 1 else 0) * unity_root k (int m * int n)) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"\\<dots> = (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n                  unity_root k (int m * int n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n       unity_root k (int m * int n)) =\n    (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int m * int n))", "using coprime_iff_gcd_eq_1"], ["proof (prove)\nusing this:\n  coprime ?a ?b = (gcd ?a ?b = (1::?'a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n       unity_root k (int m * int n)) =\n    (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int m * int n))", "by presburger"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     unity_root k (int m * int n)) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> gcd m k = 1.\n     unity_root k (int m * int n)) =\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int m * int n))\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "have \"\\<dots> = c k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int m * int n)) =\n    c k n", "unfolding ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int m * int n)) =\n    (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n       unity_root k (int (m * n)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>m | m \\<in> {1..k} \\<and> coprime m k.\n     unity_root k (int m * int n)) =\n  c k n\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "finally"], ["proof (chain)\npicking this:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n = c k n", "show ?thesis"], ["proof (prove)\nusing this:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n = c k n\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "unfolding gen_ramanujan_sum_def"], ["proof (prove)\nusing this:\n  (\\<Sum>d | d dvd gcd n k. of_nat (id d) * moebius_mu (k div d)) = c k n\n\ngoal (1 subgoal):\n 1. c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))", "by auto"], ["proof (state)\nthis:\n  c k n = (\\<Sum>d | d dvd gcd n k. of_nat d * moebius_mu (k div d))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ramanujan_sum_conv_gen_ramanujan_sum:\n \"k > 0 \\<Longrightarrow> c k n = s id moebius_mu k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    c k n = s (\\<lambda>x. of_nat (id x)) moebius_mu k n", "using ramanujan_sum_dirichlet_form"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow>\n  c ?k ?n = (\\<Sum>d | d dvd gcd ?n ?k. of_nat d * moebius_mu (?k div d))\n\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    c k n = s (\\<lambda>x. of_nat (id x)) moebius_mu k n", "unfolding gen_ramanujan_sum_def"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow>\n  c ?k ?n = (\\<Sum>d | d dvd gcd ?n ?k. of_nat d * moebius_mu (?k div d))\n\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    c k n = (\\<Sum>d | d dvd gcd n k. of_nat (id d) * moebius_mu (k div d))", "by simp"], ["", "text \\<open>Theorem 8.7\\<close>"], ["", "theorem gen_ramanujan_sum_distrib:\n  fixes f g :: \"nat \\<Rightarrow> complex\"\n  assumes \"a > 0\" \"b > 0\" \"m > 0\" \"k > 0\" (* remove cond. on m,n *)\n  assumes \"coprime a k\" \"coprime b m\" \"coprime k m\"\n  assumes \"multiplicative_function f\" and \n          \"multiplicative_function g\"\n  shows \"s f g (m*k) (a*b) = s f g m a * s f g k b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "from assms(1-6)"], ["proof (chain)\npicking this:\n  0 < a\n  0 < b\n  0 < m\n  0 < k\n  coprime a k\n  coprime b m", "have eq: \"gcd (m*k) (a*b) = gcd a m * gcd k b\""], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n  0 < m\n  0 < k\n  coprime a k\n  coprime b m\n\ngoal (1 subgoal):\n 1. gcd (m * k) (a * b) = gcd a m * gcd k b", "by (simp add: linear_gcd  gcd.commute mult.commute)"], ["proof (state)\nthis:\n  gcd (m * k) (a * b) = gcd a m * gcd k b\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"s f g (m*k) (a*b) = \n        (\\<Sum>d | d dvd gcd (m*k) (a*b). f(d) * g((m*k) div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) =\n    (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d))", "unfolding gen_ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd (a * b) (m * k). f d * g (m * k div d)) =\n    (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d))", "by (rule sum.cong, simp add: gcd.commute,blast)"], ["proof (state)\nthis:\n  s f g (m * k) (a * b) =\n  (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  s f g (m * k) (a * b) =\n  (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = \n     (\\<Sum>d | d dvd gcd a m * gcd k b. f(d) * g((m*k) div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d)) =\n    (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))", "using eq"], ["proof (prove)\nusing this:\n  gcd (m * k) (a * b) = gcd a m * gcd k b\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d)) =\n    (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d)) =\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd (m * k) (a * b). f d * g (m * k div d)) =\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = \n     (\\<Sum>(d1,d2) | d1 dvd gcd a m \\<and>  d2 dvd gcd k b. \n          f(d1*d2) * g((m*k) div (d1*d2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n    (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n    (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2)))", "have b: \"bij_betw (\\<lambda>(d1, d2). d1 * d2)\n   {(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}\n   {d. d dvd gcd a m * gcd k b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>(d1, d2). d1 * d2)\n     {(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}\n     {d. d dvd gcd a m * gcd k b}", "using assms(5) reindex_product_bij"], ["proof (prove)\nusing this:\n  coprime a k\n  coprime ?a ?k \\<Longrightarrow>\n  bij_betw (\\<lambda>(d1, d2). d1 * d2)\n   {(d1, d2). d1 dvd gcd ?a ?m \\<and> d2 dvd gcd ?k ?b}\n   {d. d dvd gcd ?a ?m * gcd ?k ?b}\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>(d1, d2). d1 * d2)\n     {(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}\n     {d. d dvd gcd a m * gcd k b}", "by blast"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>(d1, d2). d1 * d2)\n   {(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}\n   {d. d dvd gcd a m * gcd k b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n    (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2)))", "have \"(\\<Sum>(d1, d2) | d1 dvd gcd a m \\<and> d2 dvd gcd k b.\n     f (d1 * d2) * g (m * k div (d1 * d2))) = \n      (\\<Sum>x\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (case x of (d1, d2) \\<Rightarrow> d1 * d2)*\n       g (m * k div (case x of (d1, d2) \\<Rightarrow> d1 * d2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2))) =\n    (\\<Sum>x\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (case x of (d1, d2) \\<Rightarrow> d1 * d2) *\n       g (m * k div (case x of (d1, d2) \\<Rightarrow> d1 * d2)))", "by (rule sum.cong,auto)"], ["proof (state)\nthis:\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>x\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (case x of (d1, d2) \\<Rightarrow> d1 * d2) *\n     g (m * k div (case x of (d1, d2) \\<Rightarrow> d1 * d2)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n    (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>x\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (case x of (d1, d2) \\<Rightarrow> d1 * d2) *\n     g (m * k div (case x of (d1, d2) \\<Rightarrow> d1 * d2)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n    (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2)))", "have \"\\<dots> = (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (case x of (d1, d2) \\<Rightarrow> d1 * d2) *\n       g (m * k div (case x of (d1, d2) \\<Rightarrow> d1 * d2))) =\n    (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))", "using b"], ["proof (prove)\nusing this:\n  bij_betw (\\<lambda>(d1, d2). d1 * d2)\n   {(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}\n   {d. d dvd gcd a m * gcd k b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (case x of (d1, d2) \\<Rightarrow> d1 * d2) *\n       g (m * k div (case x of (d1, d2) \\<Rightarrow> d1 * d2))) =\n    (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))", "by (rule sum.reindex_bij_betw[of \"\\<lambda>(d1,d2). d1*d2\" ])"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (case x of (d1, d2) \\<Rightarrow> d1 * d2) *\n     g (m * k div (case x of (d1, d2) \\<Rightarrow> d1 * d2))) =\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n    (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n    (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2)))", "by argo"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd gcd a m * gcd k b. f d * g (m * k div d)) =\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = (\\<Sum>d1 | d1 dvd gcd a m. \\<Sum>d2 | d2 dvd gcd k b. \n                     f (d1*d2) * g ((m*k) div (d1*d2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n       f (d1 * d2) * g (m * k div (d1 * d2))) =\n    (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b. f (d1 * d2) * g (m * k div (d1 * d2)))", "by (simp add: sum.cartesian_product) (rule sum.cong,auto)"], ["proof (state)\nthis:\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f (d1 * d2) * g (m * k div (d1 * d2)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  (\\<Sum>(d1, d2)\\<in>{(d1, d2). d1 dvd gcd a m \\<and> d2 dvd gcd k b}.\n     f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f (d1 * d2) * g (m * k div (d1 * d2)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = (\\<Sum>d1 | d1 dvd gcd a m. \\<Sum>d2 | d2 dvd gcd k b. \n                      f d1 * f d2 * g ((m*k) div (d1*d2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b. f (d1 * d2) * g (m * k div (d1 * d2))) =\n    (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m * k div (d1 * d2)))", "using assms(5) assms(8) multiplicative_function.mult_coprime"], ["proof (prove)\nusing this:\n  coprime a k\n  multiplicative_function f\n  \\<lbrakk>multiplicative_function ?f; coprime ?a ?b\\<rbrakk>\n  \\<Longrightarrow> ?f (?a * ?b) = ?f ?a * ?f ?b\n\ngoal (1 subgoal):\n 1. (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b. f (d1 * d2) * g (m * k div (d1 * d2))) =\n    (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m * k div (d1 * d2)))", "by (intro sum.cong refl) fastforce+"], ["proof (state)\nthis:\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m * k div (d1 * d2)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f (d1 * d2) * g (m * k div (d1 * d2))) =\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m * k div (d1 * d2)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = (\\<Sum>d1 | d1 dvd gcd a m. \\<Sum>d2 | d2 dvd gcd k b.\n                      f d1 * f d2* g (m div d1) * g (k div d2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m * k div (d1 * d2))) =\n    (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m div d1) * g (k div d2))", "proof (intro sum.cong refl, clarify, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x dvd gcd a m; xa dvd gcd k b\\<rbrakk>\n       \\<Longrightarrow> f x * f xa * g (m * k div (x * xa)) =\n                         f x * f xa * g (m div x) * g (k div xa)", "case (1 d1 d2)"], ["proof (state)\nthis:\n  d1 dvd gcd a m\n  d2 dvd gcd k b\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x dvd gcd a m; xa dvd gcd k b\\<rbrakk>\n       \\<Longrightarrow> f x * f xa * g (m * k div (x * xa)) =\n                         f x * f xa * g (m div x) * g (k div xa)", "hence \"g (m * k div (d1 * d2)) = g (m div d1) * g (k div d2)\""], ["proof (prove)\nusing this:\n  d1 dvd gcd a m\n  d2 dvd gcd k b\n\ngoal (1 subgoal):\n 1. g (m * k div (d1 * d2)) = g (m div d1) * g (k div d2)", "using assms(7,9) multipl_div"], ["proof (prove)\nusing this:\n  d1 dvd gcd a m\n  d2 dvd gcd k b\n  coprime k m\n  multiplicative_function g\n  \\<lbrakk>multiplicative_function ?f; ?d1.0 dvd ?m; ?d2.0 dvd ?k;\n   coprime ?m ?k\\<rbrakk>\n  \\<Longrightarrow> ?f (?m * ?k div (?d1.0 * ?d2.0)) =\n                    ?f (?m div ?d1.0) * ?f (?k div ?d2.0)\n\ngoal (1 subgoal):\n 1. g (m * k div (d1 * d2)) = g (m div d1) * g (k div d2)", "by (meson coprime_commute dvd_gcdD1 dvd_gcdD2)"], ["proof (state)\nthis:\n  g (m * k div (d1 * d2)) = g (m div d1) * g (k div d2)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x dvd gcd a m; xa dvd gcd k b\\<rbrakk>\n       \\<Longrightarrow> f x * f xa * g (m * k div (x * xa)) =\n                         f x * f xa * g (m div x) * g (k div xa)", "thus ?case"], ["proof (prove)\nusing this:\n  g (m * k div (d1 * d2)) = g (m div d1) * g (k div d2)\n\ngoal (1 subgoal):\n 1. f d1 * f d2 * g (m * k div (d1 * d2)) =\n    f d1 * f d2 * g (m div d1) * g (k div d2)", "by simp"], ["proof (state)\nthis:\n  f d1 * f d2 * g (m * k div (d1 * d2)) =\n  f d1 * f d2 * g (m div d1) * g (k div d2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m * k div (d1 * d2))) =\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m div d1) * g (k div d2))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m * k div (d1 * d2))) =\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m div d1) * g (k div d2))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = (\\<Sum>i\\<in>{d1. d1 dvd gcd a m}. \\<Sum>j\\<in>{d2. d2 dvd gcd k b}.\n                      f i * g (m div i) * (f j * g (k div j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d1 | d1 dvd gcd a m.\n       \\<Sum>d2 | d2 dvd gcd k b.\n         f d1 * f d2 * g (m div d1) * g (k div d2)) =\n    (\\<Sum>i\\<in>{d1. d1 dvd gcd a m}.\n       \\<Sum>j\\<in>{d2. d2 dvd gcd k b}.\n         f i * g (m div i) * (f j * g (k div j)))", "by (rule sum.cong,blast,rule sum.cong,blast,simp)"], ["proof (state)\nthis:\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m div d1) * g (k div d2)) =\n  (\\<Sum>i\\<in>{d1. d1 dvd gcd a m}.\n     \\<Sum>j\\<in>{d2. d2 dvd gcd k b}.\n       f i * g (m div i) * (f j * g (k div j)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  (\\<Sum>d1 | d1 dvd gcd a m.\n     \\<Sum>d2 | d2 dvd gcd k b. f d1 * f d2 * g (m div d1) * g (k div d2)) =\n  (\\<Sum>i\\<in>{d1. d1 dvd gcd a m}.\n     \\<Sum>j\\<in>{d2. d2 dvd gcd k b}.\n       f i * g (m div i) * (f j * g (k div j)))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = (\\<Sum>d1 | d1 dvd gcd a m. f d1 * g (m div d1)) *\n                      (\\<Sum>d2 | d2 dvd gcd k b. f d2 * g (k div d2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{d1. d1 dvd gcd a m}.\n       \\<Sum>j\\<in>{d2. d2 dvd gcd k b}.\n         f i * g (m div i) * (f j * g (k div j))) =\n    (\\<Sum>d1 | d1 dvd gcd a m. f d1 * g (m div d1)) *\n    (\\<Sum>d2 | d2 dvd gcd k b. f d2 * g (k div d2))", "by (simp add: sum_product)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{d1. d1 dvd gcd a m}.\n     \\<Sum>j\\<in>{d2. d2 dvd gcd k b}.\n       f i * g (m div i) * (f j * g (k div j))) =\n  (\\<Sum>d1 | d1 dvd gcd a m. f d1 * g (m div d1)) *\n  (\\<Sum>d2 | d2 dvd gcd k b. f d2 * g (k div d2))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{d1. d1 dvd gcd a m}.\n     \\<Sum>j\\<in>{d2. d2 dvd gcd k b}.\n       f i * g (m div i) * (f j * g (k div j))) =\n  (\\<Sum>d1 | d1 dvd gcd a m. f d1 * g (m div d1)) *\n  (\\<Sum>d2 | d2 dvd gcd k b. f d2 * g (k div d2))\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "have \"\\<dots> = s f g m a * s f g k b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d1 | d1 dvd gcd a m. f d1 * g (m div d1)) *\n    (\\<Sum>d2 | d2 dvd gcd k b. f d2 * g (k div d2)) =\n    s f g m a * s f g k b", "unfolding gen_ramanujan_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d1 | d1 dvd gcd a m. f d1 * g (m div d1)) *\n    (\\<Sum>d2 | d2 dvd gcd k b. f d2 * g (k div d2)) =\n    (\\<Sum>d | d dvd gcd a m. f d * g (m div d)) *\n    (\\<Sum>d | d dvd gcd b k. f d * g (k div d))", "by (simp add: gcd.commute)"], ["proof (state)\nthis:\n  (\\<Sum>d1 | d1 dvd gcd a m. f d1 * g (m div d1)) *\n  (\\<Sum>d2 | d2 dvd gcd k b. f d2 * g (k div d2)) =\n  s f g m a * s f g k b\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "finally"], ["proof (chain)\npicking this:\n  s f g (m * k) (a * b) = s f g m a * s f g k b", "show ?thesis"], ["proof (prove)\nusing this:\n  s f g (m * k) (a * b) = s f g m a * s f g k b\n\ngoal (1 subgoal):\n 1. s f g (m * k) (a * b) = s f g m a * s f g k b", "by blast"], ["proof (state)\nthis:\n  s f g (m * k) (a * b) = s f g m a * s f g k b\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary gen_ramanujan_sum_distrib_right:\n fixes f g :: \"nat \\<Rightarrow> complex\"\n assumes \"a > 0\" and \"b > 0\" and \"m > 0\" (* TODO: remove cond. on m,n *)\n assumes \"coprime b m\"\n assumes \"multiplicative_function f\" and \n         \"multiplicative_function g\"\n shows \"s f g m (a * b) = s f g m a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "have \"s f g m (a*b) = s f g m a * s f g 1 b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a * s f g 1 b", "using assms gen_ramanujan_sum_distrib[of a b m 1 f g]"], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n  0 < m\n  coprime b m\n  multiplicative_function f\n  multiplicative_function g\n  \\<lbrakk>0 < a; 0 < b; 0 < m; 0 < 1; coprime a 1; coprime b m;\n   coprime 1 m; multiplicative_function f;\n   multiplicative_function g\\<rbrakk>\n  \\<Longrightarrow> s f g (m * 1) (a * b) = s f g m a * s f g 1 b\n\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a * s f g 1 b", "by simp"], ["proof (state)\nthis:\n  s f g m (a * b) = s f g m a * s f g 1 b\n\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "also"], ["proof (state)\nthis:\n  s f g m (a * b) = s f g m a * s f g 1 b\n\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "have \"\\<dots> = s f g m a * f 1 * g 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g m a * s f g 1 b = s f g m a * f 1 * g 1", "using gen_ramanujan_sum_1_n"], ["proof (prove)\nusing this:\n  s ?f ?g 1 ?n = ?f 1 * ?g 1\n\ngoal (1 subgoal):\n 1. s f g m a * s f g 1 b = s f g m a * f 1 * g 1", "by auto"], ["proof (state)\nthis:\n  s f g m a * s f g 1 b = s f g m a * f 1 * g 1\n\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "also"], ["proof (state)\nthis:\n  s f g m a * s f g 1 b = s f g m a * f 1 * g 1\n\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "have \"\\<dots> = s f g m a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g m a * f 1 * g 1 = s f g m a", "using  assms(5-6)"], ["proof (prove)\nusing this:\n  multiplicative_function f\n  multiplicative_function g\n\ngoal (1 subgoal):\n 1. s f g m a * f 1 * g 1 = s f g m a", "by (simp add: multiplicative_function_def)"], ["proof (state)\nthis:\n  s f g m a * f 1 * g 1 = s f g m a\n\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "finally"], ["proof (chain)\npicking this:\n  s f g m (a * b) = s f g m a", "show \"s f g m (a*b) = s f g m a\""], ["proof (prove)\nusing this:\n  s f g m (a * b) = s f g m a\n\ngoal (1 subgoal):\n 1. s f g m (a * b) = s f g m a", "by blast"], ["proof (state)\nthis:\n  s f g m (a * b) = s f g m a\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary gen_ramanujan_sum_distrib_left:\n fixes f g :: \"nat \\<Rightarrow> complex\"\n assumes \"a > 0\" and \"k > 0\" and \"m > 0\" (* TODO: remove cond. on m,n *)\n assumes \"coprime a k\" and \"coprime k m\"\n assumes \"multiplicative_function f\" and \n         \"multiplicative_function g\"\n shows \"s f g (m*k) a = s f g m a * g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "have \"s f g (m*k) a = s f g m a * s f g k 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * s f g k 1", "using assms gen_ramanujan_sum_distrib[of a 1 m k f g]"], ["proof (prove)\nusing this:\n  0 < a\n  0 < k\n  0 < m\n  coprime a k\n  coprime k m\n  multiplicative_function f\n  multiplicative_function g\n  \\<lbrakk>0 < a; 0 < 1; 0 < m; 0 < k; coprime a k; coprime 1 m;\n   coprime k m; multiplicative_function f;\n   multiplicative_function g\\<rbrakk>\n  \\<Longrightarrow> s f g (m * k) (a * 1) = s f g m a * s f g k 1\n\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * s f g k 1", "by simp"], ["proof (state)\nthis:\n  s f g (m * k) a = s f g m a * s f g k 1\n\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "also"], ["proof (state)\nthis:\n  s f g (m * k) a = s f g m a * s f g k 1\n\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "have \"\\<dots> = s f g m a * f(1) * g(k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g m a * s f g k 1 = s f g m a * f 1 * g k", "using gen_ramanujan_sum_k_1"], ["proof (prove)\nusing this:\n  s ?f ?g ?k 1 = ?f 1 * ?g ?k\n\ngoal (1 subgoal):\n 1. s f g m a * s f g k 1 = s f g m a * f 1 * g k", "by auto"], ["proof (state)\nthis:\n  s f g m a * s f g k 1 = s f g m a * f 1 * g k\n\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "also"], ["proof (state)\nthis:\n  s f g m a * s f g k 1 = s f g m a * f 1 * g k\n\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "have \"\\<dots> = s f g m a *  g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g m a * f 1 * g k = s f g m a * g k", "using assms(6)"], ["proof (prove)\nusing this:\n  multiplicative_function f\n\ngoal (1 subgoal):\n 1. s f g m a * f 1 * g k = s f g m a * g k", "by (simp add: multiplicative_function_def)"], ["proof (state)\nthis:\n  s f g m a * f 1 * g k = s f g m a * g k\n\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "finally"], ["proof (chain)\npicking this:\n  s f g (m * k) a = s f g m a * g k", "show ?thesis"], ["proof (prove)\nusing this:\n  s f g (m * k) a = s f g m a * g k\n\ngoal (1 subgoal):\n 1. s f g (m * k) a = s f g m a * g k", "by blast"], ["proof (state)\nthis:\n  s f g (m * k) a = s f g m a * g k\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ramanujan_sum_distrib:\n assumes \"a > 0\" and \"k > 0\" and \"m > 0\" and \"b > 0\" (* TODO: remove cond. on m,n *)\n assumes \"coprime a k\" \"coprime b m\" \"coprime m k\"\n shows \"c (m*k) (a*b) = c m a * c k b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "have \"c (m*k) (a*b) = s id moebius_mu (m*k) (a*b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c (m * k) (a * b) =\n    s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b)", "using ramanujan_sum_conv_gen_ramanujan_sum assms(2,3)"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow>\n  c ?k ?n = s (\\<lambda>x. of_nat (id x)) moebius_mu ?k ?n\n  0 < k\n  0 < m\n\ngoal (1 subgoal):\n 1. c (m * k) (a * b) =\n    s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b)", "by simp"], ["proof (state)\nthis:\n  c (m * k) (a * b) =\n  s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b)\n\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "also"], ["proof (state)\nthis:\n  c (m * k) (a * b) =\n  s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b)\n\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "have \"\\<dots> = (s id moebius_mu m a) * (s id moebius_mu k b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b) =\n    s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n    s (\\<lambda>x. of_nat (id x)) moebius_mu k b", "using gen_ramanujan_sum_distrib[of a b m k id moebius_mu]\n          assms mult_id mult_moebius mult_of_nat         \n          coprime_commute[of m k]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < a; 0 < b; 0 < m; 0 < k; coprime a k; coprime b m;\n   coprime k m; multiplicative_function (\\<lambda>x. of_nat (id x));\n   multiplicative_function moebius_mu\\<rbrakk>\n  \\<Longrightarrow> s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k)\n                     (a * b) =\n                    s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n                    s (\\<lambda>x. of_nat (id x)) moebius_mu k b\n  0 < a\n  0 < k\n  0 < m\n  0 < b\n  coprime a k\n  coprime b m\n  coprime m k\n  multiplicative_function id\n  multiplicative_function moebius_mu\n  multiplicative_function of_nat\n  coprime m k = coprime k m\n\ngoal (1 subgoal):\n 1. s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b) =\n    s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n    s (\\<lambda>x. of_nat (id x)) moebius_mu k b", "by auto"], ["proof (state)\nthis:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b) =\n  s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k b\n\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "also"], ["proof (state)\nthis:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu (m * k) (a * b) =\n  s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k b\n\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "have \"\\<dots> = c m a * c k b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n    s (\\<lambda>x. of_nat (id x)) moebius_mu k b =\n    c m a * c k b", "using ramanujan_sum_conv_gen_ramanujan_sum assms"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow>\n  c ?k ?n = s (\\<lambda>x. of_nat (id x)) moebius_mu ?k ?n\n  0 < a\n  0 < k\n  0 < m\n  0 < b\n  coprime a k\n  coprime b m\n  coprime m k\n\ngoal (1 subgoal):\n 1. s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n    s (\\<lambda>x. of_nat (id x)) moebius_mu k b =\n    c m a * c k b", "by simp"], ["proof (state)\nthis:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu m a *\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k b =\n  c m a * c k b\n\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "finally"], ["proof (chain)\npicking this:\n  c (m * k) (a * b) = c m a * c k b", "show ?thesis"], ["proof (prove)\nusing this:\n  c (m * k) (a * b) = c m a * c k b\n\ngoal (1 subgoal):\n 1. c (m * k) (a * b) = c m a * c k b", "by simp"], ["proof (state)\nthis:\n  c (m * k) (a * b) = c m a * c k b\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ramanujan_sum_distrib_right:\n assumes \"a > 0\" and \"k > 0\" and \"m > 0\" and \"b > 0\" (* remove cond. on m,n *)\n assumes \"coprime b m\" \n shows \"c m (a*b) = c m a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c m (a * b) = c m a", "using assms ramanujan_sum_conv_gen_ramanujan_sum mult_id mult_moebius \n        mult_of_nat gen_ramanujan_sum_distrib_right"], ["proof (prove)\nusing this:\n  0 < a\n  (0::'a) < k\n  0 < m\n  0 < b\n  coprime b m\n  0 < ?k \\<Longrightarrow>\n  c ?k ?n = s (\\<lambda>x. of_nat (id x)) moebius_mu ?k ?n\n  multiplicative_function id\n  multiplicative_function moebius_mu\n  multiplicative_function of_nat\n  \\<lbrakk>0 < ?a; 0 < ?b; 0 < ?m; coprime ?b ?m;\n   multiplicative_function ?f; multiplicative_function ?g\\<rbrakk>\n  \\<Longrightarrow> s ?f ?g ?m (?a * ?b) = s ?f ?g ?m ?a\n\ngoal (1 subgoal):\n 1. c m (a * b) = c m a", "by auto"], ["", "corollary ramanujan_sum_distrib_left:\n assumes \"a > 0\" \"k > 0\" \"m > 0\"  (* remove cond. on m,n *)\n assumes \"coprime a k\" \"coprime m k\" \n shows \"c (m*k) a = c m a * moebius_mu k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c (m * k) a = c m a * moebius_mu k", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n  0 < k\n  0 < m\n  coprime a k\n  coprime m k\n\ngoal (1 subgoal):\n 1. c (m * k) a = c m a * moebius_mu k", "by (simp add: ramanujan_sum_conv_gen_ramanujan_sum, subst gen_ramanujan_sum_distrib_left)\n     (auto simp: coprime_commute mult_of_nat mult_moebius)"], ["", "lemma dirichlet_prod_completely_multiplicative_left:\n  fixes f h :: \"nat \\<Rightarrow> complex\" and k :: nat\n  defines \"g \\<equiv> (\\<lambda>k. moebius_mu k * h k)\" \n  defines \"F \\<equiv> dirichlet_prod f g\"\n  assumes \"k > 0\"\n  assumes \"completely_multiplicative_function f\" \n          \"multiplicative_function h\" \n  assumes \"\\<And>p. prime p \\<Longrightarrow> f(p) \\<noteq> 0 \\<and> f(p) \\<noteq> h(p)\" \n  shows \"F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "have 1: \"multiplicative_function (\\<lambda>p. h(p) div f(p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function (\\<lambda>p. h p / f p)", "using multiplicative_function_divide\n          comp_to_mult assms(4,5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>multiplicative_function ?f; multiplicative_function ?g\\<rbrakk>\n  \\<Longrightarrow> multiplicative_function (\\<lambda>n. ?f n / ?g n)\n  completely_multiplicative_function ?f \\<Longrightarrow>\n  multiplicative_function ?f\n  completely_multiplicative_function f\n  multiplicative_function h\n\ngoal (1 subgoal):\n 1. multiplicative_function (\\<lambda>p. h p / f p)", "by blast"], ["proof (state)\nthis:\n  multiplicative_function (\\<lambda>p. h p / f p)\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "have \"F k = dirichlet_prod g f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F k = dirichlet_prod g f k", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod f g k = dirichlet_prod g f k", "using dirichlet_prod_commutes[of f g]"], ["proof (prove)\nusing this:\n  dirichlet_prod f g = dirichlet_prod g f\n\ngoal (1 subgoal):\n 1. dirichlet_prod f g k = dirichlet_prod g f k", "by auto"], ["proof (state)\nthis:\n  F k = dirichlet_prod g f k\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "also"], ["proof (state)\nthis:\n  F k = dirichlet_prod g f k\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "have \"\\<dots> = (\\<Sum>d | d dvd k. moebius_mu d * h d * f(k div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod g f k =\n    (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d))", "unfolding g_def dirichlet_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d)) =\n    (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d))", "by blast"], ["proof (state)\nthis:\n  dirichlet_prod g f k =\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d))\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "also"], ["proof (state)\nthis:\n  dirichlet_prod g f k =\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d))\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "have \"\\<dots> = (\\<Sum>d | d dvd k. moebius_mu d * h d * (f(k) div f(d)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d)) =\n    (\\<Sum>d | d dvd k. moebius_mu d * h d * (f k / f d))", "using multipl_div_mono[of f _ k] assms(4,6)"], ["proof (prove)\nusing this:\n  \\<lbrakk>completely_multiplicative_function f; ?d dvd k; 0 < ?d;\n   \\<And>p. prime p \\<Longrightarrow> f p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> f (k div ?d) = f k / f ?d\n  completely_multiplicative_function f\n  prime ?p \\<Longrightarrow> f ?p \\<noteq> 0 \\<and> f ?p \\<noteq> h ?p\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d)) =\n    (\\<Sum>d | d dvd k. moebius_mu d * h d * (f k / f d))", "by (intro sum.cong,auto,force)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d)) =\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * (f k / f d))\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * f (k div d)) =\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * (f k / f d))\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "have \"\\<dots> = f k * (\\<Sum>d | d dvd k. moebius_mu d * (h d div f(d)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k. moebius_mu d * h d * (f k / f d)) =\n    f k * (\\<Sum>d | d dvd k. moebius_mu d * (h d / f d))", "by (simp add: sum_distrib_left algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * (f k / f d)) =\n  f k * (\\<Sum>d | d dvd k. moebius_mu d * (h d / f d))\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd k. moebius_mu d * h d * (f k / f d)) =\n  f k * (\\<Sum>d | d dvd k. moebius_mu d * (h d / f d))\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "have \"\\<dots> = f k * (\\<Prod>p\\<in>prime_factors k. 1 - (h p div f p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k * (\\<Sum>d | d dvd k. moebius_mu d * (h d / f d)) =\n    f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "using sum_divisors_moebius_mu_times_multiplicative[of \"\\<lambda>p. h p div f p\" k] 1\n          assms(3)"], ["proof (prove)\nusing this:\n  \\<lbrakk>multiplicative_function (\\<lambda>p. h p / f p); 0 < k\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>d | d dvd k. moebius_mu d * (h d / f d)) =\n                    (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\n  multiplicative_function (\\<lambda>p. h p / f p)\n  0 < k\n\ngoal (1 subgoal):\n 1. f k * (\\<Sum>d | d dvd k. moebius_mu d * (h d / f d)) =\n    f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "by simp"], ["proof (state)\nthis:\n  f k * (\\<Sum>d | d dvd k. moebius_mu d * (h d / f d)) =\n  f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "finally"], ["proof (chain)\npicking this:\n  F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "show F_eq: \"F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - (h p div f p))\""], ["proof (prove)\nusing this:\n  F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "by blast"], ["proof (state)\nthis:\n  F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 8.8\\<close>"], ["", "theorem gen_ramanujan_sum_dirichlet_expr:\n  fixes f h :: \"nat \\<Rightarrow> complex\" and n k :: nat\n  defines \"g \\<equiv> (\\<lambda>k. moebius_mu k * h k)\" \n  defines \"F \\<equiv> dirichlet_prod f g\"\n  defines \"N \\<equiv> k div gcd n k\" \n  assumes \"completely_multiplicative_function f\" \n          \"multiplicative_function h\" \n  assumes \"\\<And>p. prime p \\<Longrightarrow> f(p) \\<noteq> 0 \\<and> f(p) \\<noteq> h(p)\" \n  assumes \"k > 0\" \"n > 0\"  \n  shows \"s f g k n = (F(k)*g(N)) div (F(N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "define a where \"a \\<equiv> gcd n k\""], ["proof (state)\nthis:\n  a \\<equiv> gcd n k\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have 2: \"k = a*N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = a * N", "unfolding a_def N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. k = gcd n k * (k div gcd n k)", "by auto"], ["proof (state)\nthis:\n  k = a * N\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have 3: \"a > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a", "using a_def assms(7,8)"], ["proof (prove)\nusing this:\n  a \\<equiv> gcd n k\n  0 < k\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < a", "by simp"], ["proof (state)\nthis:\n  0 < a\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have Ngr0: \"N > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < N", "using assms(7,8) 2 N_def"], ["proof (prove)\nusing this:\n  0 < k\n  0 < n\n  k = a * N\n  N \\<equiv> k div gcd n k\n\ngoal (1 subgoal):\n 1. 0 < N", "by fastforce"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have f_k_not_z: \"f k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k \\<noteq> 0", "using completely_multiplicative_nonzero assms(4,6,7)"], ["proof (prove)\nusing this:\n  \\<lbrakk>completely_multiplicative_function ?f; ?d \\<noteq> 0;\n   \\<And>p. prime p \\<Longrightarrow> ?f p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ?f ?d \\<noteq> 0\n  completely_multiplicative_function f\n  prime ?p \\<Longrightarrow> f ?p \\<noteq> 0 \\<and> f ?p \\<noteq> h ?p\n  0 < k\n\ngoal (1 subgoal):\n 1. f k \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  f k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have f_N_not_z: \"f N \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f N \\<noteq> 0", "using completely_multiplicative_nonzero assms(4,6) Ngr0"], ["proof (prove)\nusing this:\n  \\<lbrakk>completely_multiplicative_function ?f; ?d \\<noteq> 0;\n   \\<And>p. prime p \\<Longrightarrow> ?f p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ?f ?d \\<noteq> 0\n  completely_multiplicative_function f\n  prime ?p \\<Longrightarrow> f ?p \\<noteq> 0 \\<and> f ?p \\<noteq> h ?p\n  0 < N\n\ngoal (1 subgoal):\n 1. f N \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  f N \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have bij: \"bij_betw (\\<lambda>d. a div d) {d. d dvd a} {d. d dvd a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((div) a) {d. d dvd a} {d. d dvd a}", "unfolding bij_betw_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((div) a) {d. d dvd a} \\<and>\n    (div) a ` {d. d dvd a} = {d. d dvd a}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on ((div) a) {d. d dvd a}\n 2. (div) a ` {d. d dvd a} = {d. d dvd a}", "show inj: \"inj_on (\\<lambda>d. a div d) {d. d dvd a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((div) a) {d. d dvd a}", "using inj_on_def \"3\" dvd_div_eq_2"], ["proof (prove)\nusing this:\n  inj_on ?f ?A =\n  (\\<forall>x\\<in>?A.\n      \\<forall>y\\<in>?A. ?f x = ?f y \\<longrightarrow> x = y)\n  0 < a\n  \\<lbrakk>0 < ?c; ?a dvd ?c; ?b dvd ?c; ?c div ?a = ?c div ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. inj_on ((div) a) {d. d dvd a}", "by blast"], ["proof (state)\nthis:\n  inj_on ((div) a) {d. d dvd a}\n\ngoal (1 subgoal):\n 1. (div) a ` {d. d dvd a} = {d. d dvd a}", "show surj: \"(\\<lambda>d. a div d) ` {d. d dvd a} = {d. d dvd a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (div) a ` {d. d dvd a} = {d. d dvd a}", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x} = {d. d dvd a}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x} \\<subseteq> {d. d dvd a}\n 2. {d. d dvd a} \\<subseteq> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "show \" {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x} \\<subseteq> {d. d dvd a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x} \\<subseteq> {d. d dvd a}", "by auto"], ["proof (state)\nthis:\n  {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x} \\<subseteq> {d. d dvd a}\n\ngoal (1 subgoal):\n 1. {d. d dvd a} \\<subseteq> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "show \"{d. d dvd a} \\<subseteq> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {d. d dvd a} \\<subseteq> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a} \\<Longrightarrow>\n       x \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a} \\<Longrightarrow>\n       x \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "assume a: \"d \\<in> {d. d dvd a}\""], ["proof (state)\nthis:\n  d \\<in> {d. d dvd a}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a} \\<Longrightarrow>\n       x \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "from a"], ["proof (chain)\npicking this:\n  d \\<in> {d. d dvd a}", "have 1: \"(a div d) \\<in> {d. d dvd a}\""], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a}\n\ngoal (1 subgoal):\n 1. a div d \\<in> {d. d dvd a}", "by auto"], ["proof (state)\nthis:\n  a div d \\<in> {d. d dvd a}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a} \\<Longrightarrow>\n       x \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "from a"], ["proof (chain)\npicking this:\n  d \\<in> {d. d dvd a}", "have 2: \"d = a div (a div d)\""], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a}\n\ngoal (1 subgoal):\n 1. d = a div (a div d)", "using 3"], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a}\n  0 < a\n\ngoal (1 subgoal):\n 1. d = a div (a div d)", "by auto"], ["proof (state)\nthis:\n  d = a div (a div d)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a} \\<Longrightarrow>\n       x \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "from 1 2"], ["proof (chain)\npicking this:\n  a div d \\<in> {d. d dvd a}\n  d = a div (a div d)", "show \"d \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x} \""], ["proof (prove)\nusing this:\n  a div d \\<in> {d. d dvd a}\n  d = a div (a div d)\n\ngoal (1 subgoal):\n 1. d \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}", "by blast"], ["proof (state)\nthis:\n  d \\<in> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {d. d dvd a} \\<subseteq> {y. \\<exists>x\\<in>{d. d dvd a}. y = a div x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (div) a ` {d. d dvd a} = {d. d dvd a}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw ((div) a) {d. d dvd a} {d. d dvd a}\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"s f g k n = (\\<Sum>d | d dvd a. f(d)*moebius_mu(k div d)*h(k div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s f g k n =\n    (\\<Sum>d | d dvd a. f d * moebius_mu (k div d) * h (k div d))", "unfolding gen_ramanujan_sum_def g_def a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd gcd n k. f d * (moebius_mu (k div d) * h (k div d))) =\n    (\\<Sum>d | d dvd gcd n k. f d * moebius_mu (k div d) * h (k div d))", "by (simp add: mult.assoc)"], ["proof (state)\nthis:\n  s f g k n = (\\<Sum>d | d dvd a. f d * moebius_mu (k div d) * h (k div d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  s f g k n = (\\<Sum>d | d dvd a. f d * moebius_mu (k div d) * h (k div d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = (\\<Sum>d | d dvd a. f(d) * moebius_mu(a*N div d)*h(a*N div d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (k div d) * h (k div d)) =\n    (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d))", "using 2"], ["proof (prove)\nusing this:\n  k = a * N\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (k div d) * h (k div d)) =\n    (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f d * moebius_mu (k div d) * h (k div d)) =\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f d * moebius_mu (k div d) * h (k div d)) =\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = (\\<Sum>d | d dvd a. f(a div d) * moebius_mu(N*d)*h(N*d))\"\n    (is \"?a = ?b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "define f_aux where \"f_aux \\<equiv> (\\<lambda>d. f d * moebius_mu (a * N div d) * h (a * N div d))\""], ["proof (state)\nthis:\n  f_aux \\<equiv>\n  \\<lambda>d. f d * moebius_mu (a * N div d) * h (a * N div d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "have 1: \"?a = (\\<Sum>d | d dvd a. f_aux d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f_aux d)", "using f_aux_def"], ["proof (prove)\nusing this:\n  f_aux \\<equiv>\n  \\<lambda>d. f d * moebius_mu (a * N div d) * h (a * N div d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f_aux d)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n  (\\<Sum>d | d dvd a. f_aux d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "{"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n  (\\<Sum>d | d dvd a. f_aux d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "fix d :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "assume \"d dvd a\""], ["proof (state)\nthis:\n  d dvd a\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "then"], ["proof (chain)\npicking this:\n  d dvd a", "have \"N * a div (a div d) = N * d\""], ["proof (prove)\nusing this:\n  d dvd a\n\ngoal (1 subgoal):\n 1. N * a div (a div d) = N * d", "using 3"], ["proof (prove)\nusing this:\n  d dvd a\n  0 < a\n\ngoal (1 subgoal):\n 1. N * a div (a div d) = N * d", "by force"], ["proof (state)\nthis:\n  N * a div (a div d) = N * d\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "}"], ["proof (state)\nthis:\n  ?d2 dvd a \\<Longrightarrow> N * a div (a div ?d2) = N * ?d2\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "then"], ["proof (chain)\npicking this:\n  ?d2 dvd a \\<Longrightarrow> N * a div (a div ?d2) = N * ?d2", "have 2: \"?b = (\\<Sum>d | d dvd a. f_aux (a div d))\""], ["proof (prove)\nusing this:\n  ?d2 dvd a \\<Longrightarrow> N * a div (a div ?d2) = N * ?d2\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    (\\<Sum>d | d dvd a. f_aux (a div d))", "unfolding f_aux_def"], ["proof (prove)\nusing this:\n  ?d2 dvd a \\<Longrightarrow> N * a div (a div ?d2) = N * ?d2\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    (\\<Sum>d | d dvd a.\n       f (a div d) * moebius_mu (a * N div (a div d)) *\n       h (a * N div (a div d)))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  (\\<Sum>d | d dvd a. f_aux (a div d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "show \"?a = ?b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "using bij 1 2"], ["proof (prove)\nusing this:\n  bij_betw ((div) a) {d. d dvd a} {d. d dvd a}\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n  (\\<Sum>d | d dvd a. f_aux d)\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  (\\<Sum>d | d dvd a. f_aux (a div d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n    (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))", "by (simp add: sum.reindex_bij_betw[of \"((div) a)\" \"{d. d dvd a}\" \"{d. d dvd a}\"])"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f d * moebius_mu (a * N div d) * h (a * N div d)) =\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = moebius_mu N * h N * f a * (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d div f d))\"\n   (is \"?a = ?b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "have \"?a = (\\<Sum>d | d dvd a \\<and> coprime N d. f(a div d) * moebius_mu (N*d) * h (N*d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    (\\<Sum>d | d dvd a \\<and> coprime N d.\n       f (a div d) * moebius_mu (N * d) * h (N * d))", "by (rule sum.mono_neutral_right)(auto simp add: moebius_prod_not_coprime 3)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     f (a div d) * moebius_mu (N * d) * h (N * d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     f (a div d) * moebius_mu (N * d) * h (N * d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "have \"\\<dots> = (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu N * h N * f(a div d) * moebius_mu d * h d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a \\<and> coprime N d.\n       f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    (\\<Sum>d | d dvd a \\<and> coprime N d.\n       moebius_mu N * h N * f (a div d) * moebius_mu d * h d)", "proof (rule sum.cong,simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a \\<and> coprime N d} \\<Longrightarrow>\n       f (a div x) * moebius_mu (N * x) * h (N * x) =\n       moebius_mu N * h N * f (a div x) * moebius_mu x * h x", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a \\<and> coprime N d} \\<Longrightarrow>\n       f (a div x) * moebius_mu (N * x) * h (N * x) =\n       moebius_mu N * h N * f (a div x) * moebius_mu x * h x", "assume a: \"d \\<in> {d. d dvd a \\<and> coprime N d}\""], ["proof (state)\nthis:\n  d \\<in> {d. d dvd a \\<and> coprime N d}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a \\<and> coprime N d} \\<Longrightarrow>\n       f (a div x) * moebius_mu (N * x) * h (N * x) =\n       moebius_mu N * h N * f (a div x) * moebius_mu x * h x", "then"], ["proof (chain)\npicking this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}", "have 1: \"moebius_mu (N*d) = moebius_mu N * moebius_mu d\""], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}\n\ngoal (1 subgoal):\n 1. moebius_mu (N * d) = moebius_mu N * moebius_mu d", "using mult_moebius"], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}\n  multiplicative_function moebius_mu\n\ngoal (1 subgoal):\n 1. moebius_mu (N * d) = moebius_mu N * moebius_mu d", "unfolding multiplicative_function_def"], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}\n  moebius_mu 0 = (0::?'a) \\<and>\n  moebius_mu 1 = (1::?'a) \\<and>\n  (\\<forall>a b.\n      1 < a \\<longrightarrow>\n      1 < b \\<longrightarrow>\n      coprime a b \\<longrightarrow>\n      moebius_mu (a * b) = moebius_mu a * moebius_mu b)\n\ngoal (1 subgoal):\n 1. moebius_mu (N * d) = moebius_mu N * moebius_mu d", "by (simp add: moebius_mu.mult_coprime)"], ["proof (state)\nthis:\n  moebius_mu (N * d) = moebius_mu N * moebius_mu d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a \\<and> coprime N d} \\<Longrightarrow>\n       f (a div x) * moebius_mu (N * x) * h (N * x) =\n       moebius_mu N * h N * f (a div x) * moebius_mu x * h x", "from a"], ["proof (chain)\npicking this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}", "have 2: \"h (N*d) = h N * h d\""], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}\n\ngoal (1 subgoal):\n 1. h (N * d) = h N * h d", "using assms(5)"], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}\n  multiplicative_function h\n\ngoal (1 subgoal):\n 1. h (N * d) = h N * h d", "unfolding multiplicative_function_def"], ["proof (prove)\nusing this:\n  d \\<in> {d. d dvd a \\<and> coprime N d}\n  h 0 = 0 \\<and>\n  h 1 = 1 \\<and>\n  (\\<forall>a b.\n      1 < a \\<longrightarrow>\n      1 < b \\<longrightarrow>\n      coprime a b \\<longrightarrow> h (a * b) = h a * h b)\n\ngoal (1 subgoal):\n 1. h (N * d) = h N * h d", "by (simp add: assms(5) multiplicative_function.mult_coprime)"], ["proof (state)\nthis:\n  h (N * d) = h N * h d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {d. d dvd a \\<and> coprime N d} \\<Longrightarrow>\n       f (a div x) * moebius_mu (N * x) * h (N * x) =\n       moebius_mu N * h N * f (a div x) * moebius_mu x * h x", "show \"f (a div d) * moebius_mu (N * d) * h (N * d) =\n         moebius_mu N * h N * f (a div d) * moebius_mu d * h d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (a div d) * moebius_mu (N * d) * h (N * d) =\n    moebius_mu N * h N * f (a div d) * moebius_mu d * h d", "by (simp add: divide_simps 1 2)"], ["proof (state)\nthis:\n  f (a div d) * moebius_mu (N * d) * h (N * d) =\n  moebius_mu N * h N * f (a div d) * moebius_mu d * h d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     moebius_mu N * h N * f (a div d) * moebius_mu d * h d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     moebius_mu N * h N * f (a div d) * moebius_mu d * h d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "have \"\\<dots> = (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu N * h N * (f a div f d) * moebius_mu d * h d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a \\<and> coprime N d.\n       moebius_mu N * h N * f (a div d) * moebius_mu d * h d) =\n    (\\<Sum>d | d dvd a \\<and> coprime N d.\n       moebius_mu N * h N * (f a / f d) * moebius_mu d * h d)", "by (intro sum.cong refl) (use multipl_div_mono[of f _ a] assms(4,6-8) 3 in force)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     moebius_mu N * h N * f (a div d) * moebius_mu d * h d) =\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     moebius_mu N * h N * (f a / f d) * moebius_mu d * h d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     moebius_mu N * h N * f (a div d) * moebius_mu d * h d) =\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     moebius_mu N * h N * (f a / f d) * moebius_mu d * h d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "have \"\\<dots> = moebius_mu N * h N * f a * (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d div f d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a \\<and> coprime N d.\n       moebius_mu N * h N * (f a / f d) * moebius_mu d * h d) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "by (simp add: sum_distrib_left algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a \\<and> coprime N d.\n     moebius_mu N * h N * (f a / f d) * moebius_mu d * h d) =\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n    moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a. f (a div d) * moebius_mu (N * d) * h (N * d)) =\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> =\n           moebius_mu N * h N * f a * (\\<Prod>p\\<in>{p. p \\<in> prime_factors a \\<and> \\<not> (p dvd N)}. 1 - (h p div f p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n    moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n    moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p)", "have \"multiplicative_function (\\<lambda>d. h d div f d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function (\\<lambda>d. h d / f d)", "using multiplicative_function_divide \n             comp_to_mult \n             assms(4,5)"], ["proof (prove)\nusing this:\n  \\<lbrakk>multiplicative_function ?f; multiplicative_function ?g\\<rbrakk>\n  \\<Longrightarrow> multiplicative_function (\\<lambda>n. ?f n / ?g n)\n  completely_multiplicative_function ?f \\<Longrightarrow>\n  multiplicative_function ?f\n  completely_multiplicative_function f\n  multiplicative_function h\n\ngoal (1 subgoal):\n 1. multiplicative_function (\\<lambda>d. h d / f d)", "by blast"], ["proof (state)\nthis:\n  multiplicative_function (\\<lambda>d. h d / f d)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n    moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p)", "then"], ["proof (chain)\npicking this:\n  multiplicative_function (\\<lambda>d. h d / f d)", "have \"(\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d div f d)) =\n    (\\<Prod>p\\<in>{p. p \\<in> prime_factors a \\<and> \\<not> (p dvd N)}. 1 - (h p div f p))\""], ["proof (prove)\nusing this:\n  multiplicative_function (\\<lambda>d. h d / f d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p)", "using sum_divisors_moebius_mu_times_multiplicative_revisited[\n         of \"(\\<lambda>d. h d div f d)\" a N]         \n           assms(8) Ngr0 3"], ["proof (prove)\nusing this:\n  multiplicative_function (\\<lambda>d. h d / f d)\n  \\<lbrakk>multiplicative_function (\\<lambda>d. h d / f d); 0 < a;\n   0 < N\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>d | d dvd a \\<and> coprime N d.\n                       moebius_mu d * (h d / f d)) =\n                    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and>\n\\<not> p dvd N}.\n                       1 - h p / f p)\n  0 < n\n  0 < N\n  0 < a\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n    moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p)", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n    moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p)", "by argo"], ["proof (state)\nthis:\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n  moebius_mu N * h N * f a *\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n  moebius_mu N * h N * f a *\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  moebius_mu N * h N * f a *\n  (\\<Sum>d | d dvd a \\<and> coprime N d. moebius_mu d * (h d / f d)) =\n  moebius_mu N * h N * f a *\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = f(a) * moebius_mu(N) * h(N) * \n     ((\\<Prod>p\\<in>{p. p \\<in> prime_factors (a*N)}. 1 - (h p div f p)) div\n     (\\<Prod>p\\<in>{p. p \\<in> prime_factors N}. 1 - (h p div f p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "have \"{p. p \\<in>prime_factors a \\<and> \\<not> p dvd N} = \n          ({p. p \\<in>prime_factors (a*N)} - {p. p \\<in>prime_factors N})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N} =\n    {p. p \\<in># prime_factorization (a * N)} -\n    {p. p \\<in># prime_factorization N}", "using p_div_set[of a N]"], ["proof (prove)\nusing this:\n  {p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N} =\n  {p. p \\<in># prime_factorization (a * N)} -\n  {p. p \\<in># prime_factorization N}\n\ngoal (1 subgoal):\n 1. {p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N} =\n    {p. p \\<in># prime_factorization (a * N)} -\n    {p. p \\<in># prime_factorization N}", "by blast"], ["proof (state)\nthis:\n  {p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N} =\n  {p. p \\<in># prime_factorization (a * N)} -\n  {p. p \\<in># prime_factorization N}\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "then"], ["proof (chain)\npicking this:\n  {p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N} =\n  {p. p \\<in># prime_factorization (a * N)} -\n  {p. p \\<in># prime_factorization N}", "have eq2: \"(\\<Prod>p\\<in>{p. p \\<in>prime_factors a \\<and> \\<not> p dvd N}. 1 - h p / f p) = \n          prod (\\<lambda>p. 1 - h p / f p) ({p. p \\<in>prime_factors (a*N)} - {p. p \\<in>prime_factors N})\""], ["proof (prove)\nusing this:\n  {p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N} =\n  {p. p \\<in># prime_factorization (a * N)} -\n  {p. p \\<in># prime_factorization N}\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                  {p. p \\<in># prime_factorization N}.\n       1 - h p / f p)", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                {p. p \\<in># prime_factorization N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                {p. p \\<in># prime_factorization N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "have eq: \"\\<dots> = prod (\\<lambda>p. 1 - h p / f p) {p. p \\<in>prime_factors (a*N)} div\n                     prod (\\<lambda>p. 1 - h p / f p) {p. p \\<in>prime_factors N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                  {p. p \\<in># prime_factorization N}.\n       1 - h p / f p) =\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n       1 - h p / f p) /\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)", "proof (intro prod_div_sub,simp,simp,simp add: \"3\" Ngr0 dvd_prime_factors,simp,standard)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># prime_factorization N \\<Longrightarrow>\n       f b = 0 \\<or> h b \\<noteq> f b", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># prime_factorization N \\<Longrightarrow>\n       f b = 0 \\<or> h b \\<noteq> f b", "assume \"b \\<in># prime_factorization N\""], ["proof (state)\nthis:\n  b \\<in># prime_factorization N\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># prime_factorization N \\<Longrightarrow>\n       f b = 0 \\<or> h b \\<noteq> f b", "then"], ["proof (chain)\npicking this:\n  b \\<in># prime_factorization N", "have p_b: \"prime b\""], ["proof (prove)\nusing this:\n  b \\<in># prime_factorization N\n\ngoal (1 subgoal):\n 1. prime b", "using in_prime_factors_iff"], ["proof (prove)\nusing this:\n  b \\<in># prime_factorization N\n  (?p \\<in># prime_factorization ?x) =\n  (?x \\<noteq> (0::?'a) \\<and> ?p dvd ?x \\<and> prime ?p)\n\ngoal (1 subgoal):\n 1. prime b", "by blast"], ["proof (state)\nthis:\n  prime b\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># prime_factorization N \\<Longrightarrow>\n       f b = 0 \\<or> h b \\<noteq> f b", "then"], ["proof (chain)\npicking this:\n  prime b", "show \"f b = 0 \\<or> h b \\<noteq> f b\""], ["proof (prove)\nusing this:\n  prime b\n\ngoal (1 subgoal):\n 1. f b = 0 \\<or> h b \\<noteq> f b", "using assms(6)[OF p_b]"], ["proof (prove)\nusing this:\n  prime b\n  f b \\<noteq> 0 \\<and> f b \\<noteq> h b\n\ngoal (1 subgoal):\n 1. f b = 0 \\<or> h b \\<noteq> f b", "by auto"], ["proof (state)\nthis:\n  f b = 0 \\<or> h b \\<noteq> f b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                {p. p \\<in># prime_factorization N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                {p. p \\<in># prime_factorization N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "have \"\\<dots> = (\\<Prod>p\\<in>{p. p \\<in> prime_factors (a*N)}. 1 - (h p div f p)) div\n     (\\<Prod>p\\<in>{p. p \\<in> prime_factors N}. 1 - (h p div f p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n       1 - h p / f p) /\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p) =\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n       1 - h p / f p) /\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)", "by blast"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)", "have \"(\\<Prod>p\\<in>{p. p \\<in>prime_factors a \\<and> \\<not> p dvd N}. 1 - h p / f p) = \n        (\\<Prod>p\\<in>{p. p \\<in> prime_factors (a*N)}. 1 - (h p div f p)) div\n     (\\<Prod>p\\<in>{p. p \\<in> prime_factors N}. 1 - (h p div f p))\""], ["proof (prove)\nusing this:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n       1 - h p / f p) /\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)", "using eq eq2"], ["proof (prove)\nusing this:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p)\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                {p. p \\<in># prime_factorization N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)} -\n                {p. p \\<in># prime_factorization N}.\n     1 - h p / f p)\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n       1 - h p / f p) /\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "then"], ["proof (chain)\npicking this:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * f a *\n    (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n       1 - h p / f p) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))", "by simp"], ["proof (state)\nthis:\n  moebius_mu N * h N * f a *\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_mu N * h N * f a *\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  moebius_mu N * h N * f a *\n  (\\<Prod>p\\<in>{p. p \\<in># prime_factorization a \\<and> \\<not> p dvd N}.\n     1 - h p / f p) =\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = f(a) * moebius_mu(N) * h(N) * (F(k) div f(k)) * (f(N) div F(N))\"\n   (is \"?a = ?b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "have \"F(N) = (f N) *(\\<Prod>p\\<in> prime_factors N. 1 - (h p div f p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F N = f N * (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)", "unfolding F_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod f (\\<lambda>k. moebius_mu k * h k) N =\n    f N * (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)", "by (intro dirichlet_prod_completely_multiplicative_left) (auto simp add: Ngr0 assms(4-6))"], ["proof (state)\nthis:\n  F N = f N * (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "then"], ["proof (chain)\npicking this:\n  F N = f N * (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)", "have eq_1: \"(\\<Prod>p\\<in> prime_factors N. 1 - (h p div f p)) = \n               F N div f N\""], ["proof (prove)\nusing this:\n  F N = f N * (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p) = F N / f N", "using 2 f_N_not_z"], ["proof (prove)\nusing this:\n  F N = f N * (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)\n  k = a * N\n  f N \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p) = F N / f N", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p) = F N / f N\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "have \"F(k) = (f k) * (\\<Prod>p\\<in> prime_factors k. 1 - (h p div f p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "unfolding F_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod f (\\<lambda>k. moebius_mu k * h k) k =\n    f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "by (intro dirichlet_prod_completely_multiplicative_left) (auto simp add: assms(4-7))"], ["proof (state)\nthis:\n  F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "then"], ["proof (chain)\npicking this:\n  F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)", "have eq_2: \"(\\<Prod>p\\<in> prime_factors k. 1 - (h p div f p)) = \n               F k div f k\""], ["proof (prove)\nusing this:\n  F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) = F k / f k", "using 2 f_k_not_z"], ["proof (prove)\nusing this:\n  F k = f k * (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p)\n  k = a * N\n  f k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) = F k / f k", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) = F k / f k\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "have \"?a = f a * moebius_mu N * h N * \n           ((\\<Prod>p\\<in> prime_factors k. 1 - (h p div f p)) div\n           (\\<Prod>p\\<in> prime_factors N. 1 - (h p div f p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) /\n     (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p))", "using 2"], ["proof (prove)\nusing this:\n  k = a * N\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) /\n     (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) /\n   (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p))\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "also"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) /\n   (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p))\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "have  \"\\<dots> = f a * moebius_mu N * h N * ((F k div f k) div (F N div f N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) /\n     (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k / (F N / f N))", "by (simp add: eq_1 eq_2)"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>prime_factors k. 1 - h p / f p) /\n   (\\<Prod>p\\<in>prime_factors N. 1 - h p / f p)) =\n  f a * moebius_mu N * h N * (F k / f k / (F N / f N))\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "finally"], ["proof (chain)\npicking this:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n  f a * moebius_mu N * h N * (F k / f k / (F N / f N))", "show ?thesis"], ["proof (prove)\nusing this:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n  f a * moebius_mu N * h N * (F k / f k / (F N / f N))\n\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N *\n    ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}.\n        1 - h p / f p) /\n     (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n    f a * moebius_mu N * h N * (F k / f k) * (f N / F N)", "by simp"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n  f a * moebius_mu N * h N * (F k / f k) * (f N / F N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n  f a * moebius_mu N * h N * (F k / f k) * (f N / F N)\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N *\n  ((\\<Prod>p\\<in>{p. p \\<in># prime_factorization (a * N)}. 1 - h p / f p) /\n   (\\<Prod>p\\<in>{p. p \\<in># prime_factorization N}. 1 - h p / f p)) =\n  f a * moebius_mu N * h N * (F k / f k) * (f N / F N)\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = moebius_mu N * h N * ((F k * f a * f N) div (F N * f k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * moebius_mu N * h N * (F k / f k) * (f N / F N) =\n    moebius_mu N * h N * (F k * f a * f N / (F N * f k))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N * (F k / f k) * (f N / F N) =\n  moebius_mu N * h N * (F k * f a * f N / (F N * f k))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  f a * moebius_mu N * h N * (F k / f k) * (f N / F N) =\n  moebius_mu N * h N * (F k * f a * f N / (F N * f k))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = moebius_mu N * h N * ((F k * f(a*N)) div (F N * f k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f a * f N / (F N * f k)) =\n    moebius_mu N * h N * (F k * f (a * N) / (F N * f k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f a * f N / (F N * f k)) =\n    moebius_mu N * h N * (F k * f (a * N) / (F N * f k))", "have \"f a * f N = f (a*N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a * f N = f (a * N)", "proof (cases \"a = 1 \\<or> N = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = 1 \\<or> N = 1 \\<Longrightarrow> f a * f N = f (a * N)\n 2. \\<not> (a = 1 \\<or> N = 1) \\<Longrightarrow> f a * f N = f (a * N)", "case True"], ["proof (state)\nthis:\n  a = 1 \\<or> N = 1\n\ngoal (2 subgoals):\n 1. a = 1 \\<or> N = 1 \\<Longrightarrow> f a * f N = f (a * N)\n 2. \\<not> (a = 1 \\<or> N = 1) \\<Longrightarrow> f a * f N = f (a * N)", "then"], ["proof (chain)\npicking this:\n  a = 1 \\<or> N = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  a = 1 \\<or> N = 1\n\ngoal (1 subgoal):\n 1. f a * f N = f (a * N)", "using assms(4) completely_multiplicative_function_def[of f]"], ["proof (prove)\nusing this:\n  a = 1 \\<or> N = 1\n  completely_multiplicative_function f\n  completely_multiplicative_function f \\<equiv>\n  f 0 = 0 \\<and>\n  f (Suc 0) = 1 \\<and>\n  (\\<forall>a b.\n      1 < a \\<longrightarrow> 1 < b \\<longrightarrow> f (a * b) = f a * f b)\n\ngoal (1 subgoal):\n 1. f a * f N = f (a * N)", "by auto"], ["proof (state)\nthis:\n  f a * f N = f (a * N)\n\ngoal (1 subgoal):\n 1. \\<not> (a = 1 \\<or> N = 1) \\<Longrightarrow> f a * f N = f (a * N)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (a = 1 \\<or> N = 1) \\<Longrightarrow> f a * f N = f (a * N)", "case False"], ["proof (state)\nthis:\n  \\<not> (a = 1 \\<or> N = 1)\n\ngoal (1 subgoal):\n 1. \\<not> (a = 1 \\<or> N = 1) \\<Longrightarrow> f a * f N = f (a * N)", "then"], ["proof (chain)\npicking this:\n  \\<not> (a = 1 \\<or> N = 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (a = 1 \\<or> N = 1)\n\ngoal (1 subgoal):\n 1. f a * f N = f (a * N)", "using 2 assms(4) completely_multiplicative_function_def[of f] \n             Ngr0 3"], ["proof (prove)\nusing this:\n  \\<not> (a = 1 \\<or> N = 1)\n  k = a * N\n  completely_multiplicative_function f\n  completely_multiplicative_function f \\<equiv>\n  f 0 = 0 \\<and>\n  f (Suc 0) = 1 \\<and>\n  (\\<forall>a b.\n      1 < a \\<longrightarrow> 1 < b \\<longrightarrow> f (a * b) = f a * f b)\n  0 < N\n  0 < a\n\ngoal (1 subgoal):\n 1. f a * f N = f (a * N)", "by auto"], ["proof (state)\nthis:\n  f a * f N = f (a * N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f a * f N = f (a * N)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f a * f N / (F N * f k)) =\n    moebius_mu N * h N * (F k * f (a * N) / (F N * f k))", "then"], ["proof (chain)\npicking this:\n  f a * f N = f (a * N)", "show ?thesis"], ["proof (prove)\nusing this:\n  f a * f N = f (a * N)\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f a * f N / (F N * f k)) =\n    moebius_mu N * h N * (F k * f (a * N) / (F N * f k))", "by simp"], ["proof (state)\nthis:\n  moebius_mu N * h N * (F k * f a * f N / (F N * f k)) =\n  moebius_mu N * h N * (F k * f (a * N) / (F N * f k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_mu N * h N * (F k * f a * f N / (F N * f k)) =\n  moebius_mu N * h N * (F k * f (a * N) / (F N * f k))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  moebius_mu N * h N * (F k * f a * f N / (F N * f k)) =\n  moebius_mu N * h N * (F k * f (a * N) / (F N * f k))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = moebius_mu N * h N * ((F k * f(k)) div (F N * f k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f (a * N) / (F N * f k)) =\n    moebius_mu N * h N * (F k * f k / (F N * f k))", "using 2"], ["proof (prove)\nusing this:\n  k = a * N\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f (a * N) / (F N * f k)) =\n    moebius_mu N * h N * (F k * f k / (F N * f k))", "by blast"], ["proof (state)\nthis:\n  moebius_mu N * h N * (F k * f (a * N) / (F N * f k)) =\n  moebius_mu N * h N * (F k * f k / (F N * f k))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  moebius_mu N * h N * (F k * f (a * N) / (F N * f k)) =\n  moebius_mu N * h N * (F k * f k / (F N * f k))\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = g(N) * (F k div F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f k / (F N * f k)) = g N * (F k / F N)", "using f_k_not_z g_def"], ["proof (prove)\nusing this:\n  f k \\<noteq> 0\n  g \\<equiv> \\<lambda>k. moebius_mu k * h k\n\ngoal (1 subgoal):\n 1. moebius_mu N * h N * (F k * f k / (F N * f k)) = g N * (F k / F N)", "by simp"], ["proof (state)\nthis:\n  moebius_mu N * h N * (F k * f k / (F N * f k)) = g N * (F k / F N)\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "also"], ["proof (state)\nthis:\n  moebius_mu N * h N * (F k * f k / (F N * f k)) = g N * (F k / F N)\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "have \"\\<dots> = (F(k)*g(N)) div (F(N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g N * (F k / F N) = F k * g N / F N", "by auto"], ["proof (state)\nthis:\n  g N * (F k / F N) = F k * g N / F N\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "finally"], ["proof (chain)\npicking this:\n  s f g k n = F k * g N / F N", "show ?thesis"], ["proof (prove)\nusing this:\n  s f g k n = F k * g N / F N\n\ngoal (1 subgoal):\n 1. s f g k n = F k * g N / F N", "by simp"], ["proof (state)\nthis:\n  s f g k n = F k * g N / F N\n\ngoal:\nNo subgoals!", "qed"], ["", "(*TODO remove this and substitute \n the theorem totient_conv_moebius_mu in More_totient by \n this version: int \\<rightarrow> of_nat*)"], ["", "lemma totient_conv_moebius_mu_of_nat:\n  \"of_nat (totient n) = dirichlet_prod moebius_mu of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (totient n) = dirichlet_prod moebius_mu of_nat n", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    of_nat (totient n) = dirichlet_prod moebius_mu of_nat n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    of_nat (totient n) = dirichlet_prod moebius_mu of_nat n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    of_nat (totient n) = dirichlet_prod moebius_mu of_nat n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    of_nat (totient n) = dirichlet_prod moebius_mu of_nat n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (totient n) = dirichlet_prod moebius_mu of_nat n", "by (rule moebius_inversion)\n       (insert False, simp_all add: of_nat_sum [symmetric] totient_divisor_sum del: of_nat_sum)"], ["proof (state)\nthis:\n  of_nat (totient n) = dirichlet_prod moebius_mu of_nat n\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow>\n    of_nat (totient n) = dirichlet_prod moebius_mu of_nat n", "qed simp_all"], ["", "corollary ramanujan_sum_k_n_dirichlet_expr:\n fixes k n :: nat\n assumes \"k > 0\" \"n > 0\" \n shows \"c k n = of_nat (totient k) * \n                moebius_mu (k div gcd n k) div \n                of_nat (totient (k div gcd n k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "define f :: \"nat \\<Rightarrow> complex\" \n    where \"f \\<equiv> of_nat\""], ["proof (state)\nthis:\n  f \\<equiv> of_nat\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "define F :: \"nat \\<Rightarrow> complex\"\n    where \"F \\<equiv> (\\<lambda>d. dirichlet_prod f moebius_mu d)\""], ["proof (state)\nthis:\n  F \\<equiv> dirichlet_prod f moebius_mu\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "define g :: \"nat \\<Rightarrow> complex \"\n    where \"g \\<equiv> (\\<lambda>l. moebius_mu l)\""], ["proof (state)\nthis:\n  g \\<equiv> moebius_mu\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "define N where \"N \\<equiv> k div gcd n k\""], ["proof (state)\nthis:\n  N \\<equiv> k div gcd n k\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "define h :: \"nat \\<Rightarrow> complex\"\n    where \"h \\<equiv> (\\<lambda>x. (if x = 0 then 0 else 1))\""], ["proof (state)\nthis:\n  h \\<equiv> \\<lambda>x. if x = 0 then 0 else 1\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "have F_is_totient_k: \"F k = totient k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F k = of_nat (totient k)", "by (simp add: F_def f_def dirichlet_prod_commutes totient_conv_moebius_mu_of_nat[of k])"], ["proof (state)\nthis:\n  F k = of_nat (totient k)\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "have F_is_totient_N: \"F N = totient N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F N = of_nat (totient N)", "by (simp add: F_def f_def dirichlet_prod_commutes totient_conv_moebius_mu_of_nat[of N])"], ["proof (state)\nthis:\n  F N = of_nat (totient N)\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "have \"c k n = s id moebius_mu k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c k n = s (\\<lambda>x. of_nat (id x)) moebius_mu k n", "using ramanujan_sum_conv_gen_ramanujan_sum assms"], ["proof (prove)\nusing this:\n  0 < ?k \\<Longrightarrow>\n  c ?k ?n = s (\\<lambda>x. of_nat (id x)) moebius_mu ?k ?n\n  0 < k\n  0 < n\n\ngoal (1 subgoal):\n 1. c k n = s (\\<lambda>x. of_nat (id x)) moebius_mu k n", "by blast"], ["proof (state)\nthis:\n  c k n = s (\\<lambda>x. of_nat (id x)) moebius_mu k n\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "also"], ["proof (state)\nthis:\n  c k n = s (\\<lambda>x. of_nat (id x)) moebius_mu k n\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "have \"\\<dots> =  s f g k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s (\\<lambda>x. of_nat (id x)) moebius_mu k n = s f g k n", "unfolding f_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s (\\<lambda>x. of_nat (id x)) moebius_mu k n = s of_nat moebius_mu k n", "by auto"], ["proof (state)\nthis:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n = s f g k n\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "also"], ["proof (state)\nthis:\n  s (\\<lambda>x. of_nat (id x)) moebius_mu k n = s f g k n\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "have \"g = (\\<lambda>k. moebius_mu k * h k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = (\\<lambda>k. moebius_mu k * h k)", "by (simp add: fun_eq_iff h_def g_def)"], ["proof (state)\nthis:\n  g = (\\<lambda>k. moebius_mu k * h k)\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "also"], ["proof (state)\nthis:\n  g = (\\<lambda>k. moebius_mu k * h k)\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "have \"multiplicative_function h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function h", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function (\\<lambda>x. if x = 0 then 0 else 1)", "by standard auto"], ["proof (state)\nthis:\n  multiplicative_function h\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "hence \"s f (\\<lambda>k. moebius_mu k * h k) k n =\n           dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n           (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n           dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k)\""], ["proof (prove)\nusing this:\n  multiplicative_function h\n\ngoal (1 subgoal):\n 1. s f (\\<lambda>k. moebius_mu k * h k) k n =\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n    (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k)", "unfolding f_def"], ["proof (prove)\nusing this:\n  multiplicative_function h\n\ngoal (1 subgoal):\n 1. s of_nat (\\<lambda>k. moebius_mu k * h k) k n =\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n    (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k)", "using assms mult_of_nat_c"], ["proof (prove)\nusing this:\n  multiplicative_function h\n  0 < k\n  0 < n\n  completely_multiplicative_function of_nat\n\ngoal (1 subgoal):\n 1. s of_nat (\\<lambda>k. moebius_mu k * h k) k n =\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n    (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k)", "by (intro gen_ramanujan_sum_dirichlet_expr) (auto simp: h_def)"], ["proof (state)\nthis:\n  s f (\\<lambda>k. moebius_mu k * h k) k n =\n  dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n  (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n  dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k)\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "also"], ["proof (state)\nthis:\n  s f (\\<lambda>k. moebius_mu k * h k) k n =\n  dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n  (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n  dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k)\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "have \"\\<dots> = of_nat (totient k) * moebius_mu (k div gcd n k) / of_nat (totient (k div gcd n k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n    (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k) =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "using F_is_totient_k F_is_totient_N"], ["proof (prove)\nusing this:\n  F k = of_nat (totient k)\n  F N = of_nat (totient N)\n\ngoal (1 subgoal):\n 1. dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n    (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n    dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k) =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "by (auto simp: h_def F_def N_def f_def)"], ["proof (state)\nthis:\n  dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) k *\n  (moebius_mu (k div gcd n k) * h (k div gcd n k)) /\n  dirichlet_prod of_nat (\\<lambda>k. moebius_mu k * h k) (k div gcd n k) =\n  of_nat (totient k) * moebius_mu (k div gcd n k) /\n  of_nat (totient (k div gcd n k))\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "finally"], ["proof (chain)\npicking this:\n  c k n =\n  of_nat (totient k) * moebius_mu (k div gcd n k) /\n  of_nat (totient (k div gcd n k))", "show ?thesis"], ["proof (prove)\nusing this:\n  c k n =\n  of_nat (totient k) * moebius_mu (k div gcd n k) /\n  of_nat (totient (k div gcd n k))\n\ngoal (1 subgoal):\n 1. c k n =\n    of_nat (totient k) * moebius_mu (k div gcd n k) /\n    of_nat (totient (k div gcd n k))", "."], ["proof (state)\nthis:\n  c k n =\n  of_nat (totient k) * moebius_mu (k div gcd n k) /\n  of_nat (totient (k div gcd n k))\n\ngoal:\nNo subgoals!", "qed"], ["", "no_notation ramanujan_sum (\"c\")"], ["", "no_notation gen_ramanujan_sum (\"s\")"], ["", "end"]]}