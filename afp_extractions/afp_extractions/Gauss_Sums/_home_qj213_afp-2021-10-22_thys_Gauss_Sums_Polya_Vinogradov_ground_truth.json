{"file_name": "/home/qj213/afp-2021-10-22/thys/Gauss_Sums/Polya_Vinogradov.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gauss_Sums", "problem_names": ["lemma ln_add_one_self_less_self:\n  fixes x :: real\n  assumes \"x > 0\" \n  shows \"ln (1 + x) < x\"", "lemma exp_1_bounds:\n  assumes \"x > (0::real)\"\n  shows   \"exp 1 > (1 + 1 / x) powr x\" and \"exp 1 < (1 + 1 / x) powr (x+1)\"", "lemma harm_aux_ineq_1:\n  fixes k :: real\n  assumes \"k > 1\"\n  shows \"1 / k < ln (1 + 1 / (k - 1))\"", "lemma harm_aux_ineq_2_lemma:\n  assumes \"x \\<ge> (0::real)\"\n  shows   \"1 < (x + 1) * ln (1 + 2 / (2 * x + 1))\"", "lemma harm_aux_ineq_2:\n  fixes k :: real\n  assumes \"k \\<ge> 1\"\n  shows   \"1 / (k + 1) < ln (1 + 2 / (2 * k + 1))\"", "lemma nat_0_1_induct [case_names 0 1 step]:\n  assumes \"P 0\" \"P 1\" \"\\<And>n. n \\<ge> 1 \\<Longrightarrow> P n \\<Longrightarrow> P (Suc n)\"\n  shows   \"P n\"", "lemma harm_less_ln:\n  fixes m :: nat\n  assumes \"m > 0\"\n  shows   \"harm m < ln (2 * m + 1)\"", "theorem (in primitive_dchar) polya_vinogradov_inequality_primitive:\n  fixes x :: nat\n  shows \"norm (\\<Sum>m=1..x. \\<chi> m) < sqrt n * ln n\"", "theorem (in dcharacter) polya_vinogradov_inequality_explicit:\n  assumes nonprincipal: \"\\<chi> \\<noteq> principal_dchar n\"\n  shows   \"norm (sum \\<chi> {1..x}) < sqrt conductor * ln conductor * divisor_count (n div conductor)\"", "lemma divisor_count_upper_bound_aux:\n  fixes n :: nat\n  shows \"divisor_count n \\<le> 2 * card {d. d dvd n \\<and> d \\<le> sqrt n}\"", "lemma divisor_count_upper_bound:\n  fixes n :: nat\n  shows \"divisor_count n \\<le> 2 * nat \\<lfloor>sqrt n\\<rfloor>\"", "lemma divisor_count_upper_bound':\n  fixes n :: nat\n  shows \"real (divisor_count n) \\<le> 2 * sqrt n\"", "theorem (in dcharacter) polya_vinogradov_inequality:\n  assumes nonprincipal: \"\\<chi> \\<noteq> principal_dchar n\"\n  shows   \"norm (\\<Sum>m=1..x. \\<chi> m) < 2 * sqrt n * ln n\""], "translations": [["", "lemma ln_add_one_self_less_self:\n  fixes x :: real\n  assumes \"x > 0\" \n  shows \"ln (1 + x) < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "have \"0 \\<le> x\" \"0 < x\" \"exp x > 0\" \"1+x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> x &&& 0 < x) &&& 0 < exp x &&& 0 < 1 + x", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (0 \\<le> x &&& 0 < x) &&& 0 < exp x &&& 0 < 1 + x", "by simp+"], ["proof (state)\nthis:\n  0 \\<le> x\n  0 < x\n  0 < exp x\n  0 < 1 + x\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "have \"1 + x < 1 + x + x\\<^sup>2 / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x < 1 + x + x\\<^sup>2 / 2", "using \\<open>0 < x\\<close>"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. 1 + x < 1 + x + x\\<^sup>2 / 2", "by auto"], ["proof (state)\nthis:\n  1 + x < 1 + x + x\\<^sup>2 / 2\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "also"], ["proof (state)\nthis:\n  1 + x < 1 + x + x\\<^sup>2 / 2\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "have \"\\<dots> \\<le> exp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + x + x\\<^sup>2 / 2 \\<le> exp x", "using exp_lower_Taylor_quadratic[OF \\<open>0 \\<le> x\\<close>]"], ["proof (prove)\nusing this:\n  1 + x + x\\<^sup>2 / 2 \\<le> exp x\n\ngoal (1 subgoal):\n 1. 1 + x + x\\<^sup>2 / 2 \\<le> exp x", "by blast"], ["proof (state)\nthis:\n  1 + x + x\\<^sup>2 / 2 \\<le> exp x\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "finally"], ["proof (chain)\npicking this:\n  1 + x < exp x", "have \"1 + x < exp (x)\""], ["proof (prove)\nusing this:\n  1 + x < exp x\n\ngoal (1 subgoal):\n 1. 1 + x < exp x", "by blast"], ["proof (state)\nthis:\n  1 + x < exp x\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "then"], ["proof (chain)\npicking this:\n  1 + x < exp x", "have \"ln (1 + x) < ln (exp (x))\""], ["proof (prove)\nusing this:\n  1 + x < exp x\n\ngoal (1 subgoal):\n 1. ln (1 + x) < ln (exp x)", "using ln_less_cancel_iff[OF \\<open>1+x > 0\\<close> \\<open>exp(x) > 0\\<close>]"], ["proof (prove)\nusing this:\n  1 + x < exp x\n  (ln (1 + x) < ln (exp x)) = (1 + x < exp x)\n\ngoal (1 subgoal):\n 1. ln (1 + x) < ln (exp x)", "by auto"], ["proof (state)\nthis:\n  ln (1 + x) < ln (exp x)\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "also"], ["proof (state)\nthis:\n  ln (1 + x) < ln (exp x)\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "have \"\\<dots> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (exp x) = x", "using ln_exp"], ["proof (prove)\nusing this:\n  ln (exp ?x) = ?x\n\ngoal (1 subgoal):\n 1. ln (exp x) = x", "by blast"], ["proof (state)\nthis:\n  ln (exp x) = x\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "finally"], ["proof (chain)\npicking this:\n  ln (1 + x) < x", "show ?thesis"], ["proof (prove)\nusing this:\n  ln (1 + x) < x\n\ngoal (1 subgoal):\n 1. ln (1 + x) < x", "by auto"], ["proof (state)\nthis:\n  ln (1 + x) < x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_1_bounds:\n  assumes \"x > (0::real)\"\n  shows   \"exp 1 > (1 + 1 / x) powr x\" and \"exp 1 < (1 + 1 / x) powr (x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 + 1 / x) powr x < exp 1 &&& exp 1 < (1 + 1 / x) powr (x + 1)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (1 + 1 / x) powr x < exp 1\n 2. exp 1 < (1 + 1 / x) powr (x + 1)", "have \"ln (1 + 1 / x) < 1 / x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (1 + 1 / x) < 1 / x", "using ln_add_one_self_less_self assms"], ["proof (prove)\nusing this:\n  0 < ?x \\<Longrightarrow> ln (1 + ?x) < ?x\n  0 < x\n\ngoal (1 subgoal):\n 1. ln (1 + 1 / x) < 1 / x", "by simp"], ["proof (state)\nthis:\n  ln (1 + 1 / x) < 1 / x\n\ngoal (2 subgoals):\n 1. (1 + 1 / x) powr x < exp 1\n 2. exp 1 < (1 + 1 / x) powr (x + 1)", "thus \"exp 1 > (1 + 1 / x) powr x\""], ["proof (prove)\nusing this:\n  ln (1 + 1 / x) < 1 / x\n\ngoal (1 subgoal):\n 1. (1 + 1 / x) powr x < exp 1", "using assms"], ["proof (prove)\nusing this:\n  ln (1 + 1 / x) < 1 / x\n  0 < x\n\ngoal (1 subgoal):\n 1. (1 + 1 / x) powr x < exp 1", "by (simp add: field_simps powr_def)"], ["proof (state)\nthis:\n  (1 + 1 / x) powr x < exp 1\n\ngoal (1 subgoal):\n 1. exp 1 < (1 + 1 / x) powr (x + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. exp 1 < (1 + 1 / x) powr (x + 1)", "have \"1 < (x + 1) * ln ((x + 1) / x)\" (is \"_ < ?f x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < (x + 1) * ln ((x + 1) / x)", "proof (rule DERIV_neg_imp_decreasing_at_top[where ?f = ?f])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) \\<longlongrightarrow> 1)\n     at_top", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) \\<longlongrightarrow> 1)\n     at_top", "assume t: \"x \\<le> t\""], ["proof (state)\nthis:\n  x \\<le> t\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) \\<longlongrightarrow> 1)\n     at_top", "have \"(?f has_field_derivative (ln (1 + 1 / t) - 1 / t)) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative\n     ln (1 + 1 / t) - 1 / t)\n     (at t)", "using t assms"], ["proof (prove)\nusing this:\n  x \\<le> t\n  0 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative\n     ln (1 + 1 / t) - 1 / t)\n     (at t)", "by (auto intro!: derivative_eq_intros simp:divide_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative\n   ln (1 + 1 / t) - 1 / t)\n   (at t)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) \\<longlongrightarrow> 1)\n     at_top", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative\n   ln (1 + 1 / t) - 1 / t)\n   (at t)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) \\<longlongrightarrow> 1)\n     at_top", "have \"ln (1 + 1 / t) - 1 / t < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (1 + 1 / t) - 1 / t < 0", "using ln_add_one_self_less_self[of \"1 / t\"] t assms"], ["proof (prove)\nusing this:\n  0 < 1 / t \\<Longrightarrow> ln (1 + 1 / t) < 1 / t\n  x \\<le> t\n  0 < x\n\ngoal (1 subgoal):\n 1. ln (1 + 1 / t) - 1 / t < 0", "by auto"], ["proof (state)\nthis:\n  ln (1 + 1 / t) - 1 / t < 0\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) \\<longlongrightarrow> 1)\n     at_top", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative\n   ln (1 + 1 / t) - 1 / t)\n   (at t)\n  ln (1 + 1 / t) - 1 / t < 0", "show \"\\<exists>y. ((\\<lambda>t. (t + 1) * ln ((t + 1) / t)) has_real_derivative y) (at t) \\<and> y < 0\""], ["proof (prove)\nusing this:\n  ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) has_real_derivative\n   ln (1 + 1 / t) - 1 / t)\n   (at t)\n  ln (1 + 1 / t) - 1 / t < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       ((\\<lambda>t. (t + 1) * ln ((t + 1) / t)) has_real_derivative y)\n        (at t) \\<and>\n       y < 0", "by blast"], ["proof (state)\nthis:\n  \\<exists>y.\n     ((\\<lambda>t. (t + 1) * ln ((t + 1) / t)) has_real_derivative y)\n      (at t) \\<and>\n     y < 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. (a + 1) * ln ((a + 1) / a)) \\<longlongrightarrow> 1)\n     at_top", "qed real_asymp"], ["proof (state)\nthis:\n  1 < (x + 1) * ln ((x + 1) / x)\n\ngoal (1 subgoal):\n 1. exp 1 < (1 + 1 / x) powr (x + 1)", "thus \"exp 1 < (1 + 1 / x) powr (x + 1)\""], ["proof (prove)\nusing this:\n  1 < (x + 1) * ln ((x + 1) / x)\n\ngoal (1 subgoal):\n 1. exp 1 < (1 + 1 / x) powr (x + 1)", "using assms"], ["proof (prove)\nusing this:\n  1 < (x + 1) * ln ((x + 1) / x)\n  0 < x\n\ngoal (1 subgoal):\n 1. exp 1 < (1 + 1 / x) powr (x + 1)", "by (simp add: powr_def field_simps)"], ["proof (state)\nthis:\n  exp 1 < (1 + 1 / x) powr (x + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_aux_ineq_1:\n  fixes k :: real\n  assumes \"k > 1\"\n  shows \"1 / k < ln (1 + 1 / (k - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "have \"k-1 > 0\" \\<open>k > 0\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k - 1 &&& 0 < k", "using assms"], ["proof (prove)\nusing this:\n  1 < k\n\ngoal (1 subgoal):\n 1. 0 < k - 1 &&& 0 < k", "by simp+"], ["proof (state)\nthis:\n  0 < k - 1\n  0 < k\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "from exp_1_bounds(2)[OF \\<open>k-1 > 0\\<close>]"], ["proof (chain)\npicking this:\n  exp 1 < (1 + 1 / (k - 1)) powr (k - 1 + 1)", "have \"exp 1 < (1 + 1 / (k - 1)) powr k\""], ["proof (prove)\nusing this:\n  exp 1 < (1 + 1 / (k - 1)) powr (k - 1 + 1)\n\ngoal (1 subgoal):\n 1. exp 1 < (1 + 1 / (k - 1)) powr k", "by simp"], ["proof (state)\nthis:\n  exp 1 < (1 + 1 / (k - 1)) powr k\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "then"], ["proof (chain)\npicking this:\n  exp 1 < (1 + 1 / (k - 1)) powr k", "have n_z: \"(1 + 1 / (k - 1)) powr k > 0\""], ["proof (prove)\nusing this:\n  exp 1 < (1 + 1 / (k - 1)) powr k\n\ngoal (1 subgoal):\n 1. 0 < (1 + 1 / (k - 1)) powr k", "using assms not_exp_less_zero"], ["proof (prove)\nusing this:\n  exp 1 < (1 + 1 / (k - 1)) powr k\n  1 < k\n  \\<not> exp ?x < 0\n\ngoal (1 subgoal):\n 1. 0 < (1 + 1 / (k - 1)) powr k", "by auto"], ["proof (state)\nthis:\n  0 < (1 + 1 / (k - 1)) powr k\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "have \"(1::real) = ln (exp(1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = ln (exp 1)", "using ln_exp"], ["proof (prove)\nusing this:\n  ln (exp ?x) = ?x\n\ngoal (1 subgoal):\n 1. 1 = ln (exp 1)", "by auto"], ["proof (state)\nthis:\n  1 = ln (exp 1)\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "also"], ["proof (state)\nthis:\n  1 = ln (exp 1)\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "have \"\\<dots> < ln ((1 + 1 / (k - 1)) powr k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (exp 1) < ln ((1 + 1 / (k - 1)) powr k)", "using ln_less_cancel_iff[of \"exp(1)\",simplified,OF \\<open>(1 + 1 / (k - 1)) powr k > 0\\<close>]\n          exp_1_bounds[OF \\<open>k - 1 > 0\\<close>]"], ["proof (prove)\nusing this:\n  (1 < ln ((1 + 1 / (k - 1)) powr k)) = (exp 1 < (1 + 1 / (k - 1)) powr k)\n  (1 + 1 / (k - 1)) powr (k - 1) < exp 1\n  exp 1 < (1 + 1 / (k - 1)) powr (k - 1 + 1)\n\ngoal (1 subgoal):\n 1. ln (exp 1) < ln ((1 + 1 / (k - 1)) powr k)", "by simp"], ["proof (state)\nthis:\n  ln (exp 1) < ln ((1 + 1 / (k - 1)) powr k)\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "also"], ["proof (state)\nthis:\n  ln (exp 1) < ln ((1 + 1 / (k - 1)) powr k)\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "have \"\\<dots> = k * ln (1 + 1 / (k - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln ((1 + 1 / (k - 1)) powr k) = k * ln (1 + 1 / (k - 1))", "using ln_powr n_z"], ["proof (prove)\nusing this:\n  ?x \\<noteq> 0 \\<Longrightarrow> ln (?x powr ?y) = ?y * ln ?x\n  0 < (1 + 1 / (k - 1)) powr k\n\ngoal (1 subgoal):\n 1. ln ((1 + 1 / (k - 1)) powr k) = k * ln (1 + 1 / (k - 1))", "by simp"], ["proof (state)\nthis:\n  ln ((1 + 1 / (k - 1)) powr k) = k * ln (1 + 1 / (k - 1))\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "finally"], ["proof (chain)\npicking this:\n  1 < k * ln (1 + 1 / (k - 1))", "have \"1 < k * ln (1 + 1 / (k - 1))\""], ["proof (prove)\nusing this:\n  1 < k * ln (1 + 1 / (k - 1))\n\ngoal (1 subgoal):\n 1. 1 < k * ln (1 + 1 / (k - 1))", "by blast"], ["proof (state)\nthis:\n  1 < k * ln (1 + 1 / (k - 1))\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "then"], ["proof (chain)\npicking this:\n  1 < k * ln (1 + 1 / (k - 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  1 < k * ln (1 + 1 / (k - 1))\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "using assms"], ["proof (prove)\nusing this:\n  1 < k * ln (1 + 1 / (k - 1))\n  1 < k\n\ngoal (1 subgoal):\n 1. 1 / k < ln (1 + 1 / (k - 1))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 / k < ln (1 + 1 / (k - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_aux_ineq_2_lemma:\n  assumes \"x \\<ge> (0::real)\"\n  shows   \"1 < (x + 1) * ln (1 + 2 / (2 * x + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < (x + 1) * ln (1 + 2 / (2 * x + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < (x + 1) * ln (1 + 2 / (2 * x + 1))", "have \"0 < ln (1+2/(2*x+1)) - 1 / (x + 1)\" (is \"_ < ?f x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ln (1 + 2 / (2 * x + 1)) - 1 / (x + 1)", "proof (rule DERIV_neg_imp_decreasing_at_top[where ?f = ?f])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "assume t: \"x \\<le> t\""], ["proof (state)\nthis:\n  x \\<le> t\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "from assms t"], ["proof (chain)\npicking this:\n  0 \\<le> x\n  x \\<le> t", "have \"3 + 8 * t + 4 * t^2 > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n  x \\<le> t\n\ngoal (1 subgoal):\n 1. 0 < 3 + 8 * t + 4 * t\\<^sup>2", "by (intro add_pos_nonneg) auto"], ["proof (state)\nthis:\n  0 < 3 + 8 * t + 4 * t\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "hence *: \"3 + 8 * t + 4 * t^2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < 3 + 8 * t + 4 * t\\<^sup>2\n\ngoal (1 subgoal):\n 1. 3 + 8 * t + 4 * t\\<^sup>2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  3 + 8 * t + 4 * t\\<^sup>2 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "have \"(?f has_field_derivative (-1 / ((1 + t)^2 * (3 + 8 * t + 4 * t ^ 2)))) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n     - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)))\n     (at t)", "apply (insert assms t *, (rule derivative_eq_intros refl | simp add: add_pos_pos)+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> x; x \\<le> t;\n     3 + 8 * t + 4 * t\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 1 / ((t + 1) * (t + 1)) -\n                      4 /\n                      ((1 + 2 / (2 * t + 1)) *\n                       ((2 * t + 1) * (2 * t + 1))) =\n                      - (1 /\n                         ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)))", "apply (auto simp: divide_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> x; x \\<le> t;\n     3 + 8 * t + 4 * t\\<^sup>2 \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> ((3 + 2 * t) * (2 * t + 1) -\n                       4 * ((t + 1) * (t + 1))) *\n                      ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)) =\n                      - ((t + 1) * (t + 1) * ((3 + 2 * t) * (2 * t + 1)))", "apply (auto simp: algebra_simps power2_eq_square)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>a. ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n   - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)))\n   (at t)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>a. ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n   - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)))\n   (at t)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "have \"-1 / ((1 + t)^2 * (3 + 8 * t + 4 * t^2)) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)) < 0", "using t assms"], ["proof (prove)\nusing this:\n  x \\<le> t\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)) < 0", "by (intro divide_neg_pos mult_pos_pos add_pos_nonneg) auto"], ["proof (state)\nthis:\n  - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)) < 0\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       x \\<le> xa \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<lambda>a.\n               ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n           y)\n           (at xa) \\<and>\n          y < 0\n 2. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>a. ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n   - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)))\n   (at t)\n  - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)) < 0", "show \"\\<exists>y. (?f has_real_derivative y) (at t) \\<and> y < 0\""], ["proof (prove)\nusing this:\n  ((\\<lambda>a. ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n   - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)))\n   (at t)\n  - 1 / ((1 + t)\\<^sup>2 * (3 + 8 * t + 4 * t\\<^sup>2)) < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       ((\\<lambda>a.\n            ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n        y)\n        (at t) \\<and>\n       y < 0", "by blast"], ["proof (state)\nthis:\n  \\<exists>y.\n     ((\\<lambda>a.\n          ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) has_real_derivative\n      y)\n      (at t) \\<and>\n     y < 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a.\n         ln (1 + 2 / (2 * a + 1)) - 1 / (a + 1)) \\<longlongrightarrow>\n     0)\n     at_top", "qed real_asymp"], ["proof (state)\nthis:\n  0 < ln (1 + 2 / (2 * x + 1)) - 1 / (x + 1)\n\ngoal (1 subgoal):\n 1. 1 < (x + 1) * ln (1 + 2 / (2 * x + 1))", "thus \"1 < (x + 1) * ln (1+2/(2*x+1))\""], ["proof (prove)\nusing this:\n  0 < ln (1 + 2 / (2 * x + 1)) - 1 / (x + 1)\n\ngoal (1 subgoal):\n 1. 1 < (x + 1) * ln (1 + 2 / (2 * x + 1))", "using assms"], ["proof (prove)\nusing this:\n  0 < ln (1 + 2 / (2 * x + 1)) - 1 / (x + 1)\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 < (x + 1) * ln (1 + 2 / (2 * x + 1))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 < (x + 1) * ln (1 + 2 / (2 * x + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_aux_ineq_2:\n  fixes k :: real\n  assumes \"k \\<ge> 1\"\n  shows   \"1 / (k + 1) < ln (1 + 2 / (2 * k + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (k + 1) < ln (1 + 2 / (2 * k + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / (k + 1) < ln (1 + 2 / (2 * k + 1))", "have \"k > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. 0 < k", "by auto"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. 1 / (k + 1) < ln (1 + 2 / (2 * k + 1))", "have \"1 < (k + 1) * ln (1 + 2 / (2 * k + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < (k + 1) * ln (1 + 2 / (2 * k + 1))", "using harm_aux_ineq_2_lemma assms"], ["proof (prove)\nusing this:\n  0 \\<le> ?x \\<Longrightarrow> 1 < (?x + 1) * ln (1 + 2 / (2 * ?x + 1))\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. 1 < (k + 1) * ln (1 + 2 / (2 * k + 1))", "by simp"], ["proof (state)\nthis:\n  1 < (k + 1) * ln (1 + 2 / (2 * k + 1))\n\ngoal (1 subgoal):\n 1. 1 / (k + 1) < ln (1 + 2 / (2 * k + 1))", "then"], ["proof (chain)\npicking this:\n  1 < (k + 1) * ln (1 + 2 / (2 * k + 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  1 < (k + 1) * ln (1 + 2 / (2 * k + 1))\n\ngoal (1 subgoal):\n 1. 1 / (k + 1) < ln (1 + 2 / (2 * k + 1))", "by (simp add: \\<open>0 < k\\<close> add_pos_pos mult.commute mult_imp_div_pos_less)"], ["proof (state)\nthis:\n  1 / (k + 1) < ln (1 + 2 / (2 * k + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_0_1_induct [case_names 0 1 step]:\n  assumes \"P 0\" \"P 1\" \"\\<And>n. n \\<ge> 1 \\<Longrightarrow> P n \\<Longrightarrow> P (Suc n)\"\n  shows   \"P n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P n", "proof (induction n rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (\\<And>y. y < x \\<Longrightarrow> P y) \\<Longrightarrow> P x", "case (less n)"], ["proof (state)\nthis:\n  ?y < n \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. \\<And>x. (\\<And>y. y < x \\<Longrightarrow> P y) \\<Longrightarrow> P x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P n", "using assms(3)[OF _ less.IH[of \"n - 1\"]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> n - 1; n - 1 < n\\<rbrakk>\n  \\<Longrightarrow> P (Suc (n - 1))\n\ngoal (1 subgoal):\n 1. P n", "by (cases \"n \\<le> 1\")\n      (insert assms(1-2),auto simp: eval_nat_numeral le_Suc_eq)"], ["proof (state)\nthis:\n  P n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma harm_less_ln:\n  fixes m :: nat\n  assumes \"m > 0\"\n  shows   \"harm m < ln (2 * m + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm m < ln (real (2 * m + 1))", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. harm m < ln (real (2 * m + 1))", "proof (induct m rule: nat_0_1_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < 0 \\<Longrightarrow> harm 0 < ln (real (2 * 0 + 1))\n 2. 0 < 1 \\<Longrightarrow> harm 1 < ln (real (2 * 1 + 1))\n 3. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "case 0"], ["proof (state)\nthis:\n  0 < 0\n\ngoal (3 subgoals):\n 1. 0 < 0 \\<Longrightarrow> harm 0 < ln (real (2 * 0 + 1))\n 2. 0 < 1 \\<Longrightarrow> harm 1 < ln (real (2 * 1 + 1))\n 3. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "then"], ["proof (chain)\npicking this:\n  0 < 0", "show ?case"], ["proof (prove)\nusing this:\n  0 < 0\n\ngoal (1 subgoal):\n 1. harm 0 < ln (real (2 * 0 + 1))", "by blast"], ["proof (state)\nthis:\n  harm 0 < ln (real (2 * 0 + 1))\n\ngoal (2 subgoals):\n 1. 0 < 1 \\<Longrightarrow> harm 1 < ln (real (2 * 1 + 1))\n 2. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 1 \\<Longrightarrow> harm 1 < ln (real (2 * 1 + 1))\n 2. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "case 1"], ["proof (state)\nthis:\n  0 < 1\n\ngoal (2 subgoals):\n 1. 0 < 1 \\<Longrightarrow> harm 1 < ln (real (2 * 1 + 1))\n 2. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "have \"harm 1 = (1::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm 1 = 1", "unfolding harm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..1. inverse (real k)) = 1", "by simp"], ["proof (state)\nthis:\n  harm 1 = 1\n\ngoal (2 subgoals):\n 1. 0 < 1 \\<Longrightarrow> harm 1 < ln (real (2 * 1 + 1))\n 2. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "have \"harm 1 < ln (3::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm 1 < ln 3", "by (subst \\<open>harm 1 = 1\\<close>,subst ln3_gt_1,simp)"], ["proof (state)\nthis:\n  harm 1 < ln 3\n\ngoal (2 subgoals):\n 1. 0 < 1 \\<Longrightarrow> harm 1 < ln (real (2 * 1 + 1))\n 2. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "then"], ["proof (chain)\npicking this:\n  harm 1 < ln 3", "show ?case"], ["proof (prove)\nusing this:\n  harm 1 < ln 3\n\ngoal (1 subgoal):\n 1. harm 1 < ln (real (2 * 1 + 1))", "by simp"], ["proof (state)\nthis:\n  harm 1 < ln (real (2 * 1 + 1))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "case (step n)"], ["proof (state)\nthis:\n  1 \\<le> n\n  0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1))\n  0 < Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "have \"harm (n+1) = harm n + 1/(n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm (n + 1) = harm n + 1 / real (n + 1)", "by ((subst Suc_eq_plus1[symmetric])+,subst harm_Suc,subst inverse_eq_divide,blast)"], ["proof (state)\nthis:\n  harm (n + 1) = harm n + 1 / real (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "also"], ["proof (state)\nthis:\n  harm (n + 1) = harm n + 1 / real (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "have \"\\<dots> < ln (real (2 * n + 1)) + 1/(n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. harm n + 1 / real (n + 1) < ln (real (2 * n + 1)) + 1 / real (n + 1)", "using step(1-2)"], ["proof (prove)\nusing this:\n  1 \\<le> n\n  0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1))\n\ngoal (1 subgoal):\n 1. harm n + 1 / real (n + 1) < ln (real (2 * n + 1)) + 1 / real (n + 1)", "by auto"], ["proof (state)\nthis:\n  harm n + 1 / real (n + 1) < ln (real (2 * n + 1)) + 1 / real (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "also"], ["proof (state)\nthis:\n  harm n + 1 / real (n + 1) < ln (real (2 * n + 1)) + 1 / real (n + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "have \"\\<dots> < ln (real (2 * n + 1)) + ln (1+2/(2*n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1)) + 1 / real (n + 1)\n    < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1)) + 1 / real (n + 1)\n    < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))", "from step(1)"], ["proof (chain)\npicking this:\n  1 \\<le> n", "have \"real n \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. 1 \\<le> real n", "by simp"], ["proof (state)\nthis:\n  1 \\<le> real n\n\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1)) + 1 / real (n + 1)\n    < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))", "have \"1 / real (n + 1) < ln (1 + 2 / real (2 * n + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (n + 1) < ln (1 + 2 / real (2 * n + 1))", "using harm_aux_ineq_2[OF \\<open>1 \\<le> (real n)\\<close>]"], ["proof (prove)\nusing this:\n  1 / (real n + 1) < ln (1 + 2 / (2 * real n + 1))\n\ngoal (1 subgoal):\n 1. 1 / real (n + 1) < ln (1 + 2 / real (2 * n + 1))", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  1 / real (n + 1) < ln (1 + 2 / real (2 * n + 1))\n\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1)) + 1 / real (n + 1)\n    < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))", "then"], ["proof (chain)\npicking this:\n  1 / real (n + 1) < ln (1 + 2 / real (2 * n + 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / real (n + 1) < ln (1 + 2 / real (2 * n + 1))\n\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1)) + 1 / real (n + 1)\n    < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))", "by auto"], ["proof (state)\nthis:\n  ln (real (2 * n + 1)) + 1 / real (n + 1)\n  < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ln (real (2 * n + 1)) + 1 / real (n + 1)\n  < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "also"], ["proof (state)\nthis:\n  ln (real (2 * n + 1)) + 1 / real (n + 1)\n  < ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "have \"\\<dots> = ln ((2 * n + 1) * (1+2/(2*n+1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1)) =\n    ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1)))", "by (rule ln_mult[symmetric],simp,simp add: field_simps)"], ["proof (state)\nthis:\n  ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1)) =\n  ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "also"], ["proof (state)\nthis:\n  ln (real (2 * n + 1)) + ln (1 + 2 / real (2 * n + 1)) =\n  ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "have \"\\<dots> = ln (2*(n+1)+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1))) =\n    ln (real (2 * (n + 1) + 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1))) =\n    ln (real (2 * (n + 1) + 1))", "have \"(2 * n + 1) * (1+2/(2*n+1)) = 2*(n+1)+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (2 * n + 1) * (1 + 2 / real (2 * n + 1)) = real (2 * (n + 1) + 1)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  real (2 * n + 1) * (1 + 2 / real (2 * n + 1)) = real (2 * (n + 1) + 1)\n\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1))) =\n    ln (real (2 * (n + 1) + 1))", "then"], ["proof (chain)\npicking this:\n  real (2 * n + 1) * (1 + 2 / real (2 * n + 1)) = real (2 * (n + 1) + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (2 * n + 1) * (1 + 2 / real (2 * n + 1)) = real (2 * (n + 1) + 1)\n\ngoal (1 subgoal):\n 1. ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1))) =\n    ln (real (2 * (n + 1) + 1))", "by presburger"], ["proof (state)\nthis:\n  ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1))) =\n  ln (real (2 * (n + 1) + 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ln (real (2 * n + 1) * (1 + 2 / real (2 * n + 1))) =\n  ln (real (2 * (n + 1) + 1))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>1 \\<le> n;\n        0 < n \\<Longrightarrow> harm n < ln (real (2 * n + 1));\n        0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> harm (Suc n) < ln (real (2 * Suc n + 1))", "finally"], ["proof (chain)\npicking this:\n  harm (n + 1) < ln (real (2 * (n + 1) + 1))", "show ?case"], ["proof (prove)\nusing this:\n  harm (n + 1) < ln (real (2 * (n + 1) + 1))\n\ngoal (1 subgoal):\n 1. harm (Suc n) < ln (real (2 * Suc n + 1))", "by simp"], ["proof (state)\nthis:\n  harm (Suc n) < ln (real (2 * Suc n + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* END TODO *)"], ["", "text\\<open>Theorem 8.21\\<close>"], ["", "theorem (in primitive_dchar) polya_vinogradov_inequality_primitive:\n  fixes x :: nat\n  shows \"norm (\\<Sum>m=1..x. \\<chi> m) < sqrt n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "define \\<tau> :: complex where \"\\<tau> = gauss_sum 1 div sqrt n\""], ["proof (state)\nthis:\n  \\<tau> = gauss_sum 1 / complex_of_real (sqrt (real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \\<tau>_mod: \"norm \\<tau> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod \\<tau> = 1", "using fourier_primitive(2)"], ["proof (prove)\nusing this:\n  cmod (gauss_sum 1 / complex_of_real (sqrt (real n))) = 1\n\ngoal (1 subgoal):\n 1. cmod \\<tau> = 1", "by (simp add: \\<tau>_def)"], ["proof (state)\nthis:\n  cmod \\<tau> = 1\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "{"], ["proof (state)\nthis:\n  cmod \\<tau> = 1\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<chi> m = (\\<tau> div sqrt n) * (\\<Sum>k = 1..n. (cnj (\\<chi> k)) * unity_root n (-m*k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> m =\n    \\<tau> / complex_of_real (sqrt (real n)) *\n    (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k))", "using fourier_primitive(1)[of m] \\<tau>_def"], ["proof (prove)\nusing this:\n  \\<chi> m =\n  gauss_sum 1 / complex_of_real (sqrt (real n)) /\n  complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k))\n  \\<tau> = gauss_sum 1 / complex_of_real (sqrt (real n))\n\ngoal (1 subgoal):\n 1. \\<chi> m =\n    \\<tau> / complex_of_real (sqrt (real n)) *\n    (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k))", "by blast"], ["proof (state)\nthis:\n  \\<chi> m =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "}"], ["proof (state)\nthis:\n  \\<chi> ?m2 =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int ?m2 * int k))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "note chi_expr = this"], ["proof (state)\nthis:\n  \\<chi> ?m2 =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int ?m2 * int k))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"(\\<Sum>m = 1..x. \\<chi>(m)) = (\\<Sum>m = 1..x. (\\<tau> div sqrt n) * (\\<Sum>k = 1..n. (cnj (\\<chi> k)) * unity_root n (-m*k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum \\<chi> {1..x} =\n    (\\<Sum>m = 1..x.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k)))", "by(rule sum.cong[OF refl]) (use chi_expr in blast)"], ["proof (state)\nthis:\n  sum \\<chi> {1..x} =\n  (\\<Sum>m = 1..x.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sum \\<chi> {1..x} =\n  (\\<Sum>m = 1..x.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<Sum>m = 1..x. (\\<Sum>k = 1..n. (\\<tau> div sqrt n) * ((cnj (\\<chi> k)) * unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n    (\\<Sum>m = 1..x.\n        \\<Sum>k = 1..n.\n           \\<tau> / complex_of_real (sqrt (real n)) *\n           (cnj (\\<chi> k) * unity_root n (- int m * int k)))", "by (rule sum.cong,simp,simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n  (\\<Sum>m = 1..x.\n      \\<Sum>k = 1..n.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (\\<Sum>k = 1..n. cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n  (\\<Sum>m = 1..x.\n      \\<Sum>k = 1..n.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<Sum>k = 1..n. (\\<Sum>m = 1..x. (\\<tau> div sqrt n) * ((cnj (\\<chi> k)) * unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x.\n        \\<Sum>k = 1..n.\n           \\<tau> / complex_of_real (sqrt (real n)) *\n           (cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n    (\\<Sum>k = 1..n.\n        \\<Sum>m = 1..x.\n           \\<tau> / complex_of_real (sqrt (real n)) *\n           (cnj (\\<chi> k) * unity_root n (- int m * int k)))", "by (rule sum.swap)"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x.\n      \\<Sum>k = 1..n.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n  (\\<Sum>k = 1..n.\n      \\<Sum>m = 1..x.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x.\n      \\<Sum>k = 1..n.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n  (\\<Sum>k = 1..n.\n      \\<Sum>m = 1..x.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<Sum>k = 1..n. (\\<tau> div sqrt n) *  (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n.\n        \\<Sum>m = 1..x.\n           \\<tau> / complex_of_real (sqrt (real n)) *\n           (cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n    (\\<Sum>k = 1..n.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "by (rule sum.cong,simp,simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n.\n      \\<Sum>m = 1..x.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n  (\\<Sum>k = 1..n.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n.\n      \\<Sum>m = 1..x.\n         \\<tau> / complex_of_real (sqrt (real n)) *\n         (cnj (\\<chi> k) * unity_root n (- int m * int k))) =\n  (\\<Sum>k = 1..n.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<Sum>k = 1..<n. (\\<tau> div sqrt n) * (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (cnj (\\<chi> k) *\n         (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n    (\\<Sum>k = 1..<n.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (cnj (\\<chi> k) *\n         (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n    (\\<Sum>k = 1..<n.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "by (intro sum.mono_neutral_right) (auto intro: eq_zero)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n  (\\<Sum>k = 1..<n.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n  (\\<Sum>k = 1..<n.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<tau> div sqrt n) * (\\<Sum>k = 1..<n. (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        \\<tau> / complex_of_real (sqrt (real n)) *\n        (cnj (\\<chi> k) *\n         (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n    \\<tau> / complex_of_real (sqrt (real n)) *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "by (simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n.\n      \\<tau> / complex_of_real (sqrt (real n)) *\n      (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..<n.\n      cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  sum \\<chi> {1..x} =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..<n.\n      cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "have \"(\\<Sum>m = 1..x. \\<chi>(m)) = (\\<tau> div sqrt n) * (\\<Sum>k = 1..<n. (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\nusing this:\n  sum \\<chi> {1..x} =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..<n.\n      cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. sum \\<chi> {1..x} =\n    \\<tau> / complex_of_real (sqrt (real n)) *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "by blast"], ["proof (state)\nthis:\n  sum \\<chi> {1..x} =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..<n.\n      cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "hence eq: \"sqrt n * (\\<Sum>m=1..x. \\<chi>(m)) = \\<tau> * (\\<Sum>k=1..<n. (cnj (\\<chi> k) * (\\<Sum>m=1..x. unity_root n (-m*k))))\""], ["proof (prove)\nusing this:\n  sum \\<chi> {1..x} =\n  \\<tau> / complex_of_real (sqrt (real n)) *\n  (\\<Sum>k = 1..<n.\n      cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. complex_of_real (sqrt (real n)) * sum \\<chi> {1..x} =\n    \\<tau> *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "by auto"], ["proof (state)\nthis:\n  complex_of_real (sqrt (real n)) * sum \\<chi> {1..x} =\n  \\<tau> *\n  (\\<Sum>k = 1..<n.\n      cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "define f where \"f = (\\<lambda>k. (\\<Sum>m = 1..x. unity_root n (-m*k)))\""], ["proof (state)\nthis:\n  f = (\\<lambda>k. \\<Sum>m = 1..x. unity_root n (- int m * k))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "hence \"(sqrt n) * norm(\\<Sum>m = 1..x. \\<chi>(m)) = norm(\\<tau> * (\\<Sum>k=1..<n. (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (-m*k)))))\""], ["proof (prove)\nusing this:\n  f = (\\<lambda>k. \\<Sum>m = 1..x. unity_root n (- int m * k))\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f =\n    (\\<lambda>k.\n        \\<Sum>m = 1..x. unity_root n (- int m * k)) \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "have \"norm(sqrt n * (\\<Sum>m=1..x. \\<chi>(m))) = norm (sqrt n) * norm((\\<Sum>m = 1..x. \\<chi>(m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n    norm (sqrt (real n)) * cmod (sum \\<chi> {1..x})", "by (simp add: norm_mult)"], ["proof (state)\nthis:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  norm (sqrt (real n)) * cmod (sum \\<chi> {1..x})\n\ngoal (1 subgoal):\n 1. f =\n    (\\<lambda>k.\n        \\<Sum>m = 1..x. unity_root n (- int m * k)) \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "also"], ["proof (state)\nthis:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  norm (sqrt (real n)) * cmod (sum \\<chi> {1..x})\n\ngoal (1 subgoal):\n 1. f =\n    (\\<lambda>k.\n        \\<Sum>m = 1..x. unity_root n (- int m * k)) \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "have \"\\<dots> = (sqrt n) * norm((\\<Sum>m = 1..x. \\<chi>(m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (sqrt (real n)) * cmod (sum \\<chi> {1..x}) =\n    sqrt (real n) * cmod (sum \\<chi> {1..x})", "by simp"], ["proof (state)\nthis:\n  norm (sqrt (real n)) * cmod (sum \\<chi> {1..x}) =\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n\ngoal (1 subgoal):\n 1. f =\n    (\\<lambda>k.\n        \\<Sum>m = 1..x. unity_root n (- int m * k)) \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "finally"], ["proof (chain)\npicking this:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  sqrt (real n) * cmod (sum \\<chi> {1..x})", "have 1: \"norm((sqrt n) * (\\<Sum>m = 1..x. \\<chi>(m))) = (sqrt n) * norm((\\<Sum>m = 1..x. \\<chi>(m)))\""], ["proof (prove)\nusing this:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n    sqrt (real n) * cmod (sum \\<chi> {1..x})", "by blast"], ["proof (state)\nthis:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n\ngoal (1 subgoal):\n 1. f =\n    (\\<lambda>k.\n        \\<Sum>m = 1..x. unity_root n (- int m * k)) \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "then"], ["proof (chain)\npicking this:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  sqrt (real n) * cmod (sum \\<chi> {1..x})", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "using eq"], ["proof (prove)\nusing this:\n  cmod (complex_of_real (sqrt (real n)) * sum \\<chi> {1..x}) =\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  complex_of_real (sqrt (real n)) * sum \\<chi> {1..x} =\n  \\<tau> *\n  (\\<Sum>k = 1..<n.\n      cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n    cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "by algebra"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n  cmod\n   (\\<tau> *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n  cmod\n   (\\<tau> *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) =\n  cmod\n   (\\<tau> *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = norm (\\<Sum>k = 1..<n. (cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (\\<tau> *\n      (\\<Sum>k = 1..<n.\n          cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n    cmod\n     (\\<Sum>k = 1..<n.\n         cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "by (simp add: norm_mult \\<tau>_mod)"], ["proof (state)\nthis:\n  cmod\n   (\\<tau> *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) *\n        (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n  cmod\n   (\\<Sum>k = 1..<n.\n       cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod\n   (\\<tau> *\n    (\\<Sum>k = 1..<n.\n        cnj (\\<chi> k) *\n        (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n  cmod\n   (\\<Sum>k = 1..<n.\n       cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> \\<le> (\\<Sum>k = 1..<n. norm (cnj (\\<chi> k) * (\\<Sum> m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>k = 1..<n.\n         cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n    \\<le> (\\<Sum>k = 1..<n.\n              cmod\n               (cnj (\\<chi> k) *\n                (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "using norm_sum"], ["proof (prove)\nusing this:\n  norm (sum ?f ?A) \\<le> (\\<Sum>i\\<in>?A. norm (?f i))\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>k = 1..<n.\n         cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n    \\<le> (\\<Sum>k = 1..<n.\n              cmod\n               (cnj (\\<chi> k) *\n                (\\<Sum>m = 1..x. unity_root n (- int m * int k))))", "by blast"], ["proof (state)\nthis:\n  cmod\n   (\\<Sum>k = 1..<n.\n       cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n  \\<le> (\\<Sum>k = 1..<n.\n            cmod\n             (cnj (\\<chi> k) *\n              (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod\n   (\\<Sum>k = 1..<n.\n       cnj (\\<chi> k) * (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n  \\<le> (\\<Sum>k = 1..<n.\n            cmod\n             (cnj (\\<chi> k) *\n              (\\<Sum>m = 1..x. unity_root n (- int m * int k))))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<Sum>k = 1..<n. norm (cnj (\\<chi> k)) * norm((\\<Sum> m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        cmod\n         (cnj (\\<chi> k) *\n          (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n    (\\<Sum>k = 1..<n.\n        cmod (cnj (\\<chi> k)) *\n        cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "by (rule sum.cong,simp, simp add: norm_mult)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n.\n      cmod\n       (cnj (\\<chi> k) *\n        (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n  (\\<Sum>k = 1..<n.\n      cmod (cnj (\\<chi> k)) *\n      cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n.\n      cmod\n       (cnj (\\<chi> k) *\n        (\\<Sum>m = 1..x. unity_root n (- int m * int k)))) =\n  (\\<Sum>k = 1..<n.\n      cmod (cnj (\\<chi> k)) *\n      cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> \\<le> (\\<Sum>k = 1..<n. norm((\\<Sum>m = 1..x. unity_root n (-m*k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        cmod (cnj (\\<chi> k)) *\n        cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n    \\<le> (\\<Sum>k = 1..<n.\n              cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        cmod (cnj (\\<chi> k)) *\n        cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n    \\<le> (\\<Sum>k = 1..<n.\n              cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        cmod (cnj (\\<chi> k)) *\n        cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n    \\<le> (\\<Sum>k = 1..<n.\n              cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))", "proof (rule sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..<n} \\<Longrightarrow>\n       cmod (cnj (\\<chi> k)) *\n       cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n       \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..<n} \\<Longrightarrow>\n       cmod (cnj (\\<chi> k)) *\n       cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n       \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "assume \"k \\<in> {1..<n}\""], ["proof (state)\nthis:\n  k \\<in> {1..<n}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..<n} \\<Longrightarrow>\n       cmod (cnj (\\<chi> k)) *\n       cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n       \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "define sum_aux :: real where \"sum_aux = norm (\\<Sum>m=1..x. unity_root n (- int m * int k))\""], ["proof (state)\nthis:\n  sum_aux = cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..<n} \\<Longrightarrow>\n       cmod (cnj (\\<chi> k)) *\n       cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n       \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "have \"sum_aux \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sum_aux", "unfolding sum_aux_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> sum_aux\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..<n} \\<Longrightarrow>\n       cmod (cnj (\\<chi> k)) *\n       cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n       \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "have \"norm (cnj (\\<chi> k)) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (cnj (\\<chi> k)) \\<le> 1", "using norm_le_1[of k]"], ["proof (prove)\nusing this:\n  cmod (\\<chi> k) \\<le> 1\n\ngoal (1 subgoal):\n 1. cmod (cnj (\\<chi> k)) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  cmod (cnj (\\<chi> k)) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..<n} \\<Longrightarrow>\n       cmod (cnj (\\<chi> k)) *\n       cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n       \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "then"], ["proof (chain)\npicking this:\n  cmod (cnj (\\<chi> k)) \\<le> 1", "have \"norm (cnj (\\<chi> k)) * sum_aux \\<le> 1 * sum_aux\""], ["proof (prove)\nusing this:\n  cmod (cnj (\\<chi> k)) \\<le> 1\n\ngoal (1 subgoal):\n 1. cmod (cnj (\\<chi> k)) * sum_aux \\<le> 1 * sum_aux", "using \\<open>sum_aux \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  cmod (cnj (\\<chi> k)) \\<le> 1\n  0 \\<le> sum_aux\n\ngoal (1 subgoal):\n 1. cmod (cnj (\\<chi> k)) * sum_aux \\<le> 1 * sum_aux", "by (simp add: mult_left_le_one_le)"], ["proof (state)\nthis:\n  cmod (cnj (\\<chi> k)) * sum_aux \\<le> 1 * sum_aux\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..<n} \\<Longrightarrow>\n       cmod (cnj (\\<chi> k)) *\n       cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n       \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "then"], ["proof (chain)\npicking this:\n  cmod (cnj (\\<chi> k)) * sum_aux \\<le> 1 * sum_aux", "show \" norm (cnj (\\<chi> k)) *\n           norm (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n           \\<le> norm (\\<Sum>m = 1..x. unity_root n (- int m * int k))\""], ["proof (prove)\nusing this:\n  cmod (cnj (\\<chi> k)) * sum_aux \\<le> 1 * sum_aux\n\ngoal (1 subgoal):\n 1. cmod (cnj (\\<chi> k)) *\n    cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n    \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "unfolding sum_aux_def"], ["proof (prove)\nusing this:\n  cmod (cnj (\\<chi> k)) *\n  cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n  \\<le> 1 * cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n\ngoal (1 subgoal):\n 1. cmod (cnj (\\<chi> k)) *\n    cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n    \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))", "by argo"], ["proof (state)\nthis:\n  cmod (cnj (\\<chi> k)) *\n  cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n  \\<le> cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n.\n      cmod (cnj (\\<chi> k)) *\n      cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n  \\<le> (\\<Sum>k = 1..<n.\n            cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n.\n      cmod (cnj (\\<chi> k)) *\n      cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n  \\<le> (\\<Sum>k = 1..<n.\n            cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n.\n      cmod (cnj (\\<chi> k)) *\n      cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n  \\<le> (\\<Sum>k = 1..<n.\n            cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<Sum>k = 1..<n. norm(f k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))) =\n    (\\<Sum>k = 1..<n. cmod (f (int k)))", "using f_def"], ["proof (prove)\nusing this:\n  f = (\\<lambda>k. \\<Sum>m = 1..x. unity_root n (- int m * k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))) =\n    (\\<Sum>k = 1..<n. cmod (f (int k)))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n. cmod (\\<Sum>m = 1..x. unity_root n (- int m * int k))) =\n  (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))", "have 24: \"(sqrt n) * norm(\\<Sum>m = 1..x. \\<chi>(m)) \\<le> (\\<Sum>k = 1..<n. norm(f k))\""], ["proof (prove)\nusing this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x})\n    \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))", "by blast"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "{"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "fix k :: int"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"f(n-k) = cnj(f(k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "have \"f(n-k) = (\\<Sum>m = 1..x. unity_root n (-m*(n-k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (int n - k) = (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k)))", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k))) =\n    (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k)))", "by blast"], ["proof (state)\nthis:\n  f (int n - k) = (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k)))\n\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "also"], ["proof (state)\nthis:\n  f (int n - k) = (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k)))\n\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "have \"\\<dots> = (\\<Sum>m = 1..x. unity_root n (m*k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k))) =\n    (\\<Sum>m = 1..x. unity_root n (int m * k))", "proof (rule sum.cong,simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {1..x} \\<Longrightarrow>\n       unity_root n (- int xa * (int n - k)) = unity_root n (int xa * k)", "fix xa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {1..x} \\<Longrightarrow>\n       unity_root n (- int xa * (int n - k)) = unity_root n (int xa * k)", "assume \"xa \\<in> {1..x}\""], ["proof (state)\nthis:\n  xa \\<in> {1..x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {1..x} \\<Longrightarrow>\n       unity_root n (- int xa * (int n - k)) = unity_root n (int xa * k)", "have \"(k * int xa - int n * int xa) mod int n = (k * int xa - 0) mod int n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k * int xa - int n * int xa) mod int n = (k * int xa - 0) mod int n", "by (intro mod_diff_cong) auto"], ["proof (state)\nthis:\n  (k * int xa - int n * int xa) mod int n = (k * int xa - 0) mod int n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {1..x} \\<Longrightarrow>\n       unity_root n (- int xa * (int n - k)) = unity_root n (int xa * k)", "thus \"unity_root n (-int xa * (int n - k)) = unity_root n (int xa * k)\""], ["proof (prove)\nusing this:\n  (k * int xa - int n * int xa) mod int n = (k * int xa - 0) mod int n\n\ngoal (1 subgoal):\n 1. unity_root n (- int xa * (int n - k)) = unity_root n (int xa * k)", "unfolding ring_distribs"], ["proof (prove)\nusing this:\n  (k * int xa - int n * int xa) mod int n = (k * int xa - 0) mod int n\n\ngoal (1 subgoal):\n 1. unity_root n (- int xa * int n - - int xa * k) =\n    unity_root n (int xa * k)", "by (intro unity_root_cong) (auto simp: cong_def algebra_simps)"], ["proof (state)\nthis:\n  unity_root n (- int xa * (int n - k)) = unity_root n (int xa * k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k))) =\n  (\\<Sum>m = 1..x. unity_root n (int m * k))\n\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. unity_root n (- int m * (int n - k))) =\n  (\\<Sum>m = 1..x. unity_root n (int m * k))\n\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "have \"\\<dots> = cnj(f(k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "have \"cnj(f(k)) = cnj (\\<Sum>m = 1..x. unity_root n (- int m * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (f k) = cnj (\\<Sum>m = 1..x. unity_root n (- int m * k))", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (\\<Sum>m = 1..x. unity_root n (- int m * k)) =\n    cnj (\\<Sum>m = 1..x. unity_root n (- int m * k))", "by blast"], ["proof (state)\nthis:\n  cnj (f k) = cnj (\\<Sum>m = 1..x. unity_root n (- int m * k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "also"], ["proof (state)\nthis:\n  cnj (f k) = cnj (\\<Sum>m = 1..x. unity_root n (- int m * k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "have \"cnj (\\<Sum>m = 1..x. unity_root n (- int m * k)) = \n                (\\<Sum>m = 1..x. cnj(unity_root n (- int m * k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (\\<Sum>m = 1..x. unity_root n (- int m * k)) =\n    (\\<Sum>m = 1..x. cnj (unity_root n (- int m * k)))", "by (rule cnj_sum)"], ["proof (state)\nthis:\n  cnj (\\<Sum>m = 1..x. unity_root n (- int m * k)) =\n  (\\<Sum>m = 1..x. cnj (unity_root n (- int m * k)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "also"], ["proof (state)\nthis:\n  cnj (\\<Sum>m = 1..x. unity_root n (- int m * k)) =\n  (\\<Sum>m = 1..x. cnj (unity_root n (- int m * k)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "have \"\\<dots> = (\\<Sum>m = 1..x. unity_root n (int m * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. cnj (unity_root n (- int m * k))) =\n    (\\<Sum>m = 1..x. unity_root n (int m * k))", "by (intro sum.cong) (auto simp: unity_root_uminus)"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. cnj (unity_root n (- int m * k))) =\n  (\\<Sum>m = 1..x. unity_root n (int m * k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "finally"], ["proof (chain)\npicking this:\n  cnj (f k) = (\\<Sum>m = 1..x. unity_root n (int m * k))", "show ?thesis"], ["proof (prove)\nusing this:\n  cnj (f k) = (\\<Sum>m = 1..x. unity_root n (int m * k))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. unity_root n (int m * k)) = cnj (f k)\n\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "finally"], ["proof (chain)\npicking this:\n  f (int n - k) = cnj (f k)", "show \"f(n-k) = cnj(f(k))\""], ["proof (prove)\nusing this:\n  f (int n - k) = cnj (f k)\n\ngoal (1 subgoal):\n 1. f (int n - k) = cnj (f k)", "by blast"], ["proof (state)\nthis:\n  f (int n - k) = cnj (f k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (int n - k) = cnj (f k)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "hence \"norm(f(n-k)) = norm(cnj(f(k)))\""], ["proof (prove)\nusing this:\n  f (int n - k) = cnj (f k)\n\ngoal (1 subgoal):\n 1. cmod (f (int n - k)) = cmod (cnj (f k))", "by simp"], ["proof (state)\nthis:\n  cmod (f (int n - k)) = cmod (cnj (f k))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "hence \"norm(f(n-k)) = norm(f(k))\""], ["proof (prove)\nusing this:\n  cmod (f (int n - k)) = cmod (cnj (f k))\n\ngoal (1 subgoal):\n 1. cmod (f (int n - k)) = cmod (f k)", "by auto"], ["proof (state)\nthis:\n  cmod (f (int n - k)) = cmod (f k)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "}"], ["proof (state)\nthis:\n  cmod (f (int n - ?k2)) = cmod (f ?k2)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "note eq = this"], ["proof (state)\nthis:\n  cmod (f (int n - ?k2)) = cmod (f ?k2)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have 25: \n      \"odd n \\<Longrightarrow> (\\<Sum>k = 1..n - 1. norm (f (int k))) \\<le>\n                    2 * (\\<Sum>k = 1..(n-1) div 2. norm (f (int k)))\" \n      \"even n \\<Longrightarrow> (\\<Sum>k = 1..n - 1. norm (f (int k))) \\<le>\n                    2 * (\\<Sum>k = 1..(n-2) div 2. norm (f (int k))) + norm(f(n div 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (odd n \\<Longrightarrow>\n     (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n     \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))) &&&\n    (even n \\<Longrightarrow>\n     (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n     \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n           cmod (f (int (n div 2))))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "assume \"odd n\""], ["proof (state)\nthis:\n  odd n\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "define g where \"g = (\\<lambda>k. norm (f k))\""], ["proof (state)\nthis:\n  g = (\\<lambda>k. cmod (f k))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(n-1) div 2  = n div 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - 1) div 2 = n div 2", "using \\<open>odd n\\<close> n"], ["proof (prove)\nusing this:\n  odd n\n  1 < n\n\ngoal (1 subgoal):\n 1. (n - 1) div 2 = n div 2", "using div_mult_self1_is_m[OF pos2,of \"n-1\"] \n              odd_two_times_div_two_nat[OF \\<open>odd n\\<close>]"], ["proof (prove)\nusing this:\n  odd n\n  1 < n\n  2 * (n - 1) div 2 = n - 1\n  2 * (n div 2) = n - 1\n\ngoal (1 subgoal):\n 1. (n - 1) div 2 = n div 2", "by linarith"], ["proof (state)\nthis:\n  (n - 1) div 2 = n div 2\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(\\<Sum>i=1..n-1. g i) = (\\<Sum>i\\<in>{1..n div 2}\\<union>{n div 2<..n-1}. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i)) =\n    (\\<Sum>i\\<in>{1..n div 2} \\<union> {n div 2<..n - 1}. g (int i))", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i)) =\n    (\\<Sum>i\\<in>{1..n div 2} \\<union> {n div 2<..n - 1}. g (int i))", "by (intro sum.cong,auto)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i)) =\n  (\\<Sum>i\\<in>{1..n div 2} \\<union> {n div 2<..n - 1}. g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i)) =\n  (\\<Sum>i\\<in>{1..n div 2} \\<union> {n div 2<..n - 1}. g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> = (\\<Sum>i\\<in>{1..n div 2}. g i) + (\\<Sum>i\\<in>{n div 2<..n-1}. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{1..n div 2} \\<union> {n div 2<..n - 1}. g (int i)) =\n    (\\<Sum>i = 1..n div 2. g (int i)) +\n    (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i))", "by (subst sum.union_disjoint,auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{1..n div 2} \\<union> {n div 2<..n - 1}. g (int i)) =\n  (\\<Sum>i = 1..n div 2. g (int i)) +\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{1..n div 2} \\<union> {n div 2<..n - 1}. g (int i)) =\n  (\\<Sum>i = 1..n div 2. g (int i)) +\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(\\<Sum>i\\<in>{n div 2<..n-1}. g i) = (\\<Sum>i\\<in>{1..n - (n div 2 + 1)}. g (n - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) =\n    (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))", "by (rule sum.reindex_bij_witness[of _ \"\\<lambda>i. n - i\" \"\\<lambda>i. n - i\"],auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) =\n  (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) =\n  (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> \\<le> (\\<Sum>i\\<in>{1..n div 2}. g (n - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n    \\<le> (\\<Sum>i = 1..n div 2. g (int (n - i)))", "by (intro sum_mono2,simp,auto simp add: g_def)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n  \\<le> (\\<Sum>i = 1..n div 2. g (int (n - i)))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (\\<Sum>i = 1..n div 2. g (int i)) + x\n      \\<le> (\\<Sum>i = 1..n div 2. g (int i)) + y) \\<Longrightarrow>\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..n div 2. g (int i)) +\n        (\\<Sum>i = 1..n div 2. g (int (n - i)))", "have 1: \"(\\<Sum>i=1..n-1. g i) \\<le> (\\<Sum>i=1..n div 2. g i + g (n - i))\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (\\<Sum>i = 1..n div 2. g (int i)) + x\n      \\<le> (\\<Sum>i = 1..n div 2. g (int i)) + y) \\<Longrightarrow>\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..n div 2. g (int i)) +\n        (\\<Sum>i = 1..n div 2. g (int (n - i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i)))", "by (simp add: sum.distrib)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i)))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(\\<Sum>i=1..n div 2. g i + g (n - i)) = (\\<Sum>i=1..n div 2. 2 * g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n    (\\<Sum>i = 1..n div 2. 2 * g (int i))", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n div 2. cmod (f (int i)) + cmod (f (int (n - i)))) =\n    (\\<Sum>i = 1..n div 2. 2 * cmod (f (int i)))", "apply(rule sum.cong,simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n div 2} \\<Longrightarrow>\n       cmod (f (int x)) + cmod (f (int (n - x))) = 2 * cmod (f (int x))", "using eq int_ops(6)"], ["proof (prove)\nusing this:\n  cmod (f (int n - ?k2)) = cmod (f ?k2)\n  int (?a - ?b) = (if int ?a < int ?b then 0 else int ?a - int ?b)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..n div 2} \\<Longrightarrow>\n       cmod (f (int x)) + cmod (f (int (n - x))) = 2 * cmod (f (int x))", "by force"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n  (\\<Sum>i = 1..n div 2. 2 * g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n  (\\<Sum>i = 1..n div 2. 2 * g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> = 2 * (\\<Sum>i=1..n div 2. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n div 2. 2 * g (int i)) =\n    2 * (\\<Sum>i = 1..n div 2. g (int i))", "by (rule sum_distrib_left[symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n div 2. 2 * g (int i)) =\n  2 * (\\<Sum>i = 1..n div 2. g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..n div 2. g (int i))", "have 2: \"(\\<Sum>i=1..n div 2. g i + g (n - i)) = 2 * (\\<Sum>i=1..n div 2. g i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..n div 2. g (int i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n    2 * (\\<Sum>i = 1..n div 2. g (int i))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..n div 2. g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "from 1 2"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i)))\n  (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..n div 2. g (int i))", "have \"(\\<Sum>i=1..n-1. g i) \\<le> 2 * (\\<Sum>i=1..n div 2. g i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i)))\n  (\\<Sum>i = 1..n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..n div 2. g (int i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..n div 2. g (int i))", "by algebra"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..n div 2. g (int i))\n\ngoal (2 subgoals):\n 1. odd n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n 2. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..n div 2. g (int i))", "show \"(\\<Sum>n = 1..n - 1. norm (f (int n))) \\<le> 2 * (\\<Sum>n = 1..(n-1) div 2. norm (f (int n)))\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..n div 2. g (int i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..n - 1. cmod (f (int n)))\n    \\<le> 2 * (\\<Sum>n = 1..(n - 1) div 2. cmod (f (int n)))", "unfolding g_def \\<open>(n-1) div 2 = n div 2\\<close>"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n - 1. cmod (f (int i)))\n  \\<le> 2 * (\\<Sum>i = 1..n div 2. cmod (f (int i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..n - 1. cmod (f (int n)))\n    \\<le> 2 * (\\<Sum>n = 1..n div 2. cmod (f (int n)))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..n - 1. cmod (f (int n)))\n  \\<le> 2 * (\\<Sum>n = 1..(n - 1) div 2. cmod (f (int n)))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "assume \"even n\""], ["proof (state)\nthis:\n  even n\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "define g where \"g = (\\<lambda>n. norm (f (n)))\""], ["proof (state)\nthis:\n  g = (\\<lambda>n. cmod (f n))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(n-2) div 2 = n div 2 - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n - 2) div 2 = n div 2 - 1", "using \\<open>even n\\<close> n"], ["proof (prove)\nusing this:\n  even n\n  1 < n\n\ngoal (1 subgoal):\n 1. (n - 2) div 2 = n div 2 - 1", "by simp"], ["proof (state)\nthis:\n  (n - 2) div 2 = n div 2 - 1\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(\\<Sum>i=1..n-1. g i) = (\\<Sum>i\\<in>{1..<n div 2}\\<union> {n div 2} \\<union> {n div 2<..n-1}. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i)) =\n    (\\<Sum>i\\<in>{1..<n div 2} \\<union> {n div 2} \\<union>\n                 {n div 2<..n - 1}.\n       g (int i))", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i)) =\n    (\\<Sum>i\\<in>{1..<n div 2} \\<union> {n div 2} \\<union>\n                 {n div 2<..n - 1}.\n       g (int i))", "by (intro sum.cong,auto)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i)) =\n  (\\<Sum>i\\<in>{1..<n div 2} \\<union> {n div 2} \\<union> {n div 2<..n - 1}.\n     g (int i))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i)) =\n  (\\<Sum>i\\<in>{1..<n div 2} \\<union> {n div 2} \\<union> {n div 2<..n - 1}.\n     g (int i))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> = (\\<Sum>i\\<in>{1..<n div 2}. g i) + (\\<Sum>i\\<in>{n div 2<..n-1}. g i) + g(n div 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{1..<n div 2} \\<union> {n div 2} \\<union>\n                 {n div 2<..n - 1}.\n       g (int i)) =\n    (\\<Sum>i = 1..<n div 2. g (int i)) +\n    (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) +\n    g (int (n div 2))", "by (subst sum.union_disjoint,auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{1..<n div 2} \\<union> {n div 2} \\<union> {n div 2<..n - 1}.\n     g (int i)) =\n  (\\<Sum>i = 1..<n div 2. g (int i)) +\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) +\n  g (int (n div 2))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{1..<n div 2} \\<union> {n div 2} \\<union> {n div 2<..n - 1}.\n     g (int i)) =\n  (\\<Sum>i = 1..<n div 2. g (int i)) +\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) +\n  g (int (n div 2))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(\\<Sum>i\\<in>{n div 2<..n-1}. g i) = (\\<Sum>i\\<in>{1..n - (n div 2+1)}. g (n - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) =\n    (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))", "by (rule sum.reindex_bij_witness[of _ \"\\<lambda>i. n - i\" \"\\<lambda>i. n - i\"],auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) =\n  (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{n div 2<..n - 1}. g (int i)) =\n  (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> \\<le> (\\<Sum>i\\<in>{1..<n div 2}. g (n - i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n    \\<le> (\\<Sum>i = 1..<n div 2. g (int (n - i)))", "proof (intro sum_mono2,simp)"], ["proof (state)\ngoal (2 subgoals):\n 1. {1..n - (n div 2 + 1)} \\<subseteq> {1..<n div 2}\n 2. \\<And>b.\n       b \\<in> {1..<n div 2} - {1..n - (n div 2 + 1)} \\<Longrightarrow>\n       0 \\<le> g (int (n - b))", "have \"n - n div 2 = n div 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n - n div 2 = n div 2", "using \\<open>even n\\<close> n"], ["proof (prove)\nusing this:\n  even n\n  1 < n\n\ngoal (1 subgoal):\n 1. n - n div 2 = n div 2", "by auto"], ["proof (state)\nthis:\n  n - n div 2 = n div 2\n\ngoal (2 subgoals):\n 1. {1..n - (n div 2 + 1)} \\<subseteq> {1..<n div 2}\n 2. \\<And>b.\n       b \\<in> {1..<n div 2} - {1..n - (n div 2 + 1)} \\<Longrightarrow>\n       0 \\<le> g (int (n - b))", "then"], ["proof (chain)\npicking this:\n  n - n div 2 = n div 2", "have \"n - (n div 2 + 1) < n div 2\""], ["proof (prove)\nusing this:\n  n - n div 2 = n div 2\n\ngoal (1 subgoal):\n 1. n - (n div 2 + 1) < n div 2", "using n"], ["proof (prove)\nusing this:\n  n - n div 2 = n div 2\n  1 < n\n\ngoal (1 subgoal):\n 1. n - (n div 2 + 1) < n div 2", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  n - (n div 2 + 1) < n div 2\n\ngoal (2 subgoals):\n 1. {1..n - (n div 2 + 1)} \\<subseteq> {1..<n div 2}\n 2. \\<And>b.\n       b \\<in> {1..<n div 2} - {1..n - (n div 2 + 1)} \\<Longrightarrow>\n       0 \\<le> g (int (n - b))", "then"], ["proof (chain)\npicking this:\n  n - (n div 2 + 1) < n div 2", "show \"{1..n - (n div 2 + 1)} \\<subseteq> {1..<n div 2}\""], ["proof (prove)\nusing this:\n  n - (n div 2 + 1) < n div 2\n\ngoal (1 subgoal):\n 1. {1..n - (n div 2 + 1)} \\<subseteq> {1..<n div 2}", "by fastforce"], ["proof (state)\nthis:\n  {1..n - (n div 2 + 1)} \\<subseteq> {1..<n div 2}\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> {1..<n div 2} - {1..n - (n div 2 + 1)} \\<Longrightarrow>\n       0 \\<le> g (int (n - b))", "qed auto"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - (n div 2 + 1). g (int (n - i)))\n  \\<le> (\\<Sum>i = 1..<n div 2. g (int (n - i)))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (\\<Sum>i = 1..<n div 2. g (int i)) + x + g (int (n div 2))\n      \\<le> (\\<Sum>i = 1..<n div 2. g (int i)) + y +\n            g (int (n div 2))) \\<Longrightarrow>\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..<n div 2. g (int i)) +\n        (\\<Sum>i = 1..<n div 2. g (int (n - i))) +\n        g (int (n div 2))", "have 1: \"(\\<Sum>i=1..n-1. g i) \\<le> (\\<Sum>i=1..<n div 2. g i + g (n - i)) + g(n div 2)\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (\\<Sum>i = 1..<n div 2. g (int i)) + x + g (int (n div 2))\n      \\<le> (\\<Sum>i = 1..<n div 2. g (int i)) + y +\n            g (int (n div 2))) \\<Longrightarrow>\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..<n div 2. g (int i)) +\n        (\\<Sum>i = 1..<n div 2. g (int (n - i))) +\n        g (int (n div 2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) +\n          g (int (n div 2))", "by (simp add: sum.distrib)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) +\n        g (int (n div 2))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"(\\<Sum>i=1..<n div 2. g i + g (n - i)) = (\\<Sum>i=1..<n div 2. 2 * g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n    (\\<Sum>i = 1..<n div 2. 2 * g (int i))", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n div 2. cmod (f (int i)) + cmod (f (int (n - i)))) =\n    (\\<Sum>i = 1..<n div 2. 2 * cmod (f (int i)))", "apply(rule sum.cong,simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..<n div 2} \\<Longrightarrow>\n       cmod (f (int x)) + cmod (f (int (n - x))) = 2 * cmod (f (int x))", "using eq int_ops(6)"], ["proof (prove)\nusing this:\n  cmod (f (int n - ?k2)) = cmod (f ?k2)\n  int (?a - ?b) = (if int ?a < int ?b then 0 else int ?a - int ?b)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {1..<n div 2} \\<Longrightarrow>\n       cmod (f (int x)) + cmod (f (int (n - x))) = 2 * cmod (f (int x))", "by force"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n  (\\<Sum>i = 1..<n div 2. 2 * g (int i))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n  (\\<Sum>i = 1..<n div 2. 2 * g (int i))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> = 2 * (\\<Sum>i=1..<n div 2. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n div 2. 2 * g (int i)) =\n    2 * (\\<Sum>i = 1..<n div 2. g (int i))", "by (rule sum_distrib_left[symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n div 2. 2 * g (int i)) =\n  2 * (\\<Sum>i = 1..<n div 2. g (int i))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..<n div 2. g (int i))", "have 2: \"(\\<Sum>i=1..<n div 2. g i + g (n - i)) = 2 * (\\<Sum>i=1..<n div 2. g i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..<n div 2. g (int i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n    2 * (\\<Sum>i = 1..<n div 2. g (int i))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..<n div 2. g (int i))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "from 1 2"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) +\n        g (int (n div 2))\n  (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..<n div 2. g (int i))", "have 3: \"(\\<Sum>i=1..n-1. g i) \\<le> 2 * (\\<Sum>i=1..<n div 2. g i) + g(n div 2)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) +\n        g (int (n div 2))\n  (\\<Sum>i = 1..<n div 2. g (int i) + g (int (n - i))) =\n  2 * (\\<Sum>i = 1..<n div 2. g (int i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) + g (int (n div 2))", "by algebra"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) + g (int (n div 2))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) + g (int (n div 2))", "have \"(\\<Sum>i=1..n-1. g i) \\<le> 2 * (\\<Sum>i=1..(n-2) div 2. g i) + g(n div 2)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) + g (int (n div 2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) +\n          g (int (n div 2)) \\<Longrightarrow>\n    (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))", "have \"{1..<n div 2} = {1..(n-2) div 2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..<n div 2} = {1..(n - 2) div 2}", "by auto"], ["proof (state)\nthis:\n  {1..<n div 2} = {1..(n - 2) div 2}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) +\n          g (int (n div 2)) \\<Longrightarrow>\n    (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))", "then"], ["proof (chain)\npicking this:\n  {1..<n div 2} = {1..(n - 2) div 2}", "have \"(\\<Sum>i=1..<n div 2. g i) = (\\<Sum>i=1..(n-2) div 2. g i)\""], ["proof (prove)\nusing this:\n  {1..<n div 2} = {1..(n - 2) div 2}\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..<n div 2. g (int i)) =\n    (\\<Sum>i = 1..(n - 2) div 2. g (int i))", "by (rule sum.cong,simp)"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..<n div 2. g (int i)) =\n  (\\<Sum>i = 1..(n - 2) div 2. g (int i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) +\n          g (int (n div 2)) \\<Longrightarrow>\n    (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..<n div 2. g (int i)) =\n  (\\<Sum>i = 1..(n - 2) div 2. g (int i))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..<n div 2. g (int i)) =\n  (\\<Sum>i = 1..(n - 2) div 2. g (int i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))", "using 3"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..<n div 2. g (int i)) =\n  (\\<Sum>i = 1..(n - 2) div 2. g (int i))\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..<n div 2. g (int i)) + g (int (n div 2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 1..n - 1. g (int i))\n    \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))", "by presburger"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))\n\ngoal (1 subgoal):\n 1. even n \\<Longrightarrow>\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))", "show \"(\\<Sum>k = 1..n - 1. norm (f (int k))) \\<le> 2 * (\\<Sum>n = 1..(n-2) div 2. norm (f (int n))) + g(n div 2)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n - 1. g (int i))\n  \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. g (int i)) + g (int (n div 2))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>n = 1..(n - 2) div 2. cmod (f (int n))) +\n          g (int (n div 2))", "unfolding g_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 1..n - 1. cmod (f (int i)))\n  \\<le> 2 * (\\<Sum>i = 1..(n - 2) div 2. cmod (f (int i))) +\n        cmod (f (int (n div 2)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>n = 1..(n - 2) div 2. cmod (f (int n))) +\n          cmod (f (int (n div 2)))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>n = 1..(n - 2) div 2. cmod (f (int n))) +\n        g (int (n div 2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  odd n \\<Longrightarrow>\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  even n \\<Longrightarrow>\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n        cmod (f (int (n div 2)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "(* expression for each f(n) *)"], ["proof (state)\nthis:\n  odd n \\<Longrightarrow>\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  even n \\<Longrightarrow>\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n        cmod (f (int (n div 2)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "{"], ["proof (state)\nthis:\n  odd n \\<Longrightarrow>\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  even n \\<Longrightarrow>\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n        cmod (f (int (n div 2)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "fix k :: int"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "assume \"1 \\<le> k\" \"k \\<le> n div 2\""], ["proof (state)\nthis:\n  1 \\<le> k\n  k \\<le> int (n div 2)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"k \\<le> n - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> int (n - 1)", "using \\<open>k \\<le> n div 2\\<close> n"], ["proof (prove)\nusing this:\n  k \\<le> int (n div 2)\n  1 < n\n\ngoal (1 subgoal):\n 1. k \\<le> int (n - 1)", "by linarith"], ["proof (state)\nthis:\n  k \\<le> int (n - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "define y where \"y = unity_root n (-k)\""], ["proof (state)\nthis:\n  y = unity_root n (- k)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "define z where \"z = exp (-(pi*k/n)* \\<i>)\""], ["proof (state)\nthis:\n  z = exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"z^2 = exp (2*(-(pi*k/n)* \\<i>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 =\n    exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>))", "unfolding z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (exp (complex_of_real (- (pi * real_of_int k / real n)) *\n          \\<i>))\\<^sup>2 =\n    exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>))", "using exp_double[symmetric]"], ["proof (prove)\nusing this:\n  (exp ?z)\\<^sup>2 = exp ((2::?'a) * ?z)\n\ngoal (1 subgoal):\n 1. (exp (complex_of_real (- (pi * real_of_int k / real n)) *\n          \\<i>))\\<^sup>2 =\n    exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>))", "by blast"], ["proof (state)\nthis:\n  z\\<^sup>2 =\n  exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  z\\<^sup>2 =\n  exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>)) = y", "unfolding y_def unity_root_conv_exp"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>)) =\n    exp (complex_of_real (2 * pi * real_of_int (- k) / real n) * \\<i>)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  exp (2 * (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>)) = y\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  z\\<^sup>2 = y", "have z_eq: \"y = z^2\""], ["proof (prove)\nusing this:\n  z\\<^sup>2 = y\n\ngoal (1 subgoal):\n 1. y = z\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  y = z\\<^sup>2\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have z_not_0: \"z \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "using z_eq"], ["proof (prove)\nusing this:\n  y = z\\<^sup>2\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "by (simp add: z_def)"], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "then"], ["proof (chain)\npicking this:\n  z \\<noteq> 0", "have \"y \\<noteq> 1\""], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y \\<noteq> 1", "using unity_root_eq_1_iff_int \\<open>1 \\<le> k\\<close> \\<open>k \\<le> n - 1\\<close> not_less\n            unity_root_eq_1_iff_int y_def zdvd_not_zless"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n  0 < ?k \\<Longrightarrow> (unity_root ?k ?n = 1) = (int ?k dvd ?n)\n  1 \\<le> k\n  k \\<le> int (n - 1)\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n  0 < ?k \\<Longrightarrow> (unity_root ?k ?n = 1) = (int ?k dvd ?n)\n  y = unity_root n (- k)\n  \\<lbrakk>0 < ?m; ?m < ?n\\<rbrakk> \\<Longrightarrow> \\<not> ?n dvd ?m\n\ngoal (1 subgoal):\n 1. y \\<noteq> 1", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> 1\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"f(k) = (\\<Sum>m = 1..x . y^m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k = sum ((^) y) {1..x}", "unfolding f_def y_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. unity_root n (- int m * k)) =\n    sum ((^) (unity_root n (- k))) {1..x}", "by (subst unity_root_pow,rule sum.cong,simp,simp add: algebra_simps)"], ["proof (state)\nthis:\n  f k = sum ((^) y) {1..x}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  f k = sum ((^) y) {1..x}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have sum: \"\\<dots> = (\\<Sum>m = 1..<x+1 . y^m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) y) {1..x} = sum ((^) y) {1..<x + 1}", "by (rule sum.cong,fastforce,simp)"], ["proof (state)\nthis:\n  sum ((^) y) {1..x} = sum ((^) y) {1..<x + 1}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sum ((^) y) {1..x} = sum ((^) y) {1..<x + 1}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (\\<Sum>m = 0..<x+1 . y^m) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) y) {1..<x + 1} = sum ((^) y) {0..<x + 1} - 1", "by (subst (2) sum.atLeast_Suc_lessThan) auto"], ["proof (state)\nthis:\n  sum ((^) y) {1..<x + 1} = sum ((^) y) {0..<x + 1} - 1\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sum ((^) y) {1..<x + 1} = sum ((^) y) {0..<x + 1} - 1\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (y^(x+1) - 1) div (y - 1) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) y) {0..<x + 1} - 1 = (y ^ (x + 1) - 1) / (y - 1) - 1", "using geometric_sum[OF \\<open>y \\<noteq> 1\\<close>, of \"x+1\"]"], ["proof (prove)\nusing this:\n  sum ((^) y) {..<x + 1} = (y ^ (x + 1) - 1) / (y - 1)\n\ngoal (1 subgoal):\n 1. sum ((^) y) {0..<x + 1} - 1 = (y ^ (x + 1) - 1) / (y - 1) - 1", "by (simp add: atLeast0LessThan)"], ["proof (state)\nthis:\n  sum ((^) y) {0..<x + 1} - 1 = (y ^ (x + 1) - 1) / (y - 1) - 1\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sum ((^) y) {0..<x + 1} - 1 = (y ^ (x + 1) - 1) / (y - 1) - 1\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (y^(x+1) - 1 - (y-1)) div (y - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)", "have \"y - 1 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y - 1 \\<noteq> 0", "using \\<open>y \\<noteq> 1\\<close>"], ["proof (prove)\nusing this:\n  y \\<noteq> 1\n\ngoal (1 subgoal):\n 1. y - 1 \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  y - 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)", "using divide_diff_eq_iff[OF \\<open>y - 1 \\<noteq> 0\\<close>, of \"(y^(x+1) - 1)\" 1]"], ["proof (prove)\nusing this:\n  (y ^ (x + 1) - 1) / (y - 1) - 1 =\n  (y ^ (x + 1) - 1 - 1 * (y - 1)) / (y - 1)\n\ngoal (1 subgoal):\n 1. (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)", "by auto"], ["proof (state)\nthis:\n  (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (y ^ (x + 1) - 1) / (y - 1) - 1 = (y ^ (x + 1) - 1 - (y - 1)) / (y - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = (y^(x+1) - y) div (y - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ (x + 1) - 1 - (y - 1)) / (y - 1) = (y ^ (x + 1) - y) / (y - 1)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (y ^ (x + 1) - 1 - (y - 1)) / (y - 1) = (y ^ (x + 1) - y) / (y - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (y ^ (x + 1) - 1 - (y - 1)) / (y - 1) = (y ^ (x + 1) - y) / (y - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = y * (y^x - 1) div (y - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ (x + 1) - y) / (y - 1) = y * (y ^ x - 1) / (y - 1)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (y ^ (x + 1) - y) / (y - 1) = y * (y ^ x - 1) / (y - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  (y ^ (x + 1) - y) / (y - 1) = y * (y ^ x - 1) / (y - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = z^2 * ((z^2)^x - 1) div (z^2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (y ^ x - 1) / (y - 1) =\n    z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1)", "unfolding z_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1) =\n    z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1)", "by blast"], ["proof (state)\nthis:\n  y * (y ^ x - 1) / (y - 1) =\n  z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  y * (y ^ x - 1) / (y - 1) =\n  z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = z^2 * (z^(2*x) - 1) div (z^2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1) =\n    z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1)", "by (subst power_mult[symmetric, of z 2 x],blast)"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1) =\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z\\<^sup>2 ^ x - 1) / (z\\<^sup>2 - 1) =\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = z^(x+1)*((z ^x -inverse(z^x))) / (z - inverse(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have \"z^x \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z ^ x \\<noteq> 0", "using z_not_0"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z ^ x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z ^ x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have 1: \"z ^ (2 * x) - 1 = z^x*(z ^x -inverse(z^x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z ^ (2 * x) - 1 = z ^ x * (z ^ x - inverse (z ^ x))", "by (simp add: semiring_normalization_rules(36) right_inverse[OF \\<open>z^x \\<noteq> 0\\<close>]  right_diff_distrib')"], ["proof (state)\nthis:\n  z ^ (2 * x) - 1 = z ^ x * (z ^ x - inverse (z ^ x))\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have 2: \"z\\<^sup>2 - 1 = z*(z - inverse(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 - 1 = z * (z - inverse z)", "by (simp add: right_diff_distrib' semiring_normalization_rules(29) right_inverse[OF \\<open>z \\<noteq> 0\\<close>])"], ["proof (state)\nthis:\n  z\\<^sup>2 - 1 = z * (z - inverse z)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have 3: \"z\\<^sup>2 * (z^x / z) = z^(x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)", "have \"z\\<^sup>2 * (z^x / z) = z\\<^sup>2 * (z^x * inverse z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) = z\\<^sup>2 * (z ^ x * inverse z)", "by (simp add: inverse_eq_divide)"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x / z) = z\\<^sup>2 * (z ^ x * inverse z)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)", "also"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x / z) = z\\<^sup>2 * (z ^ x * inverse z)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)", "have \"\\<dots> = z^(x+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x * inverse z) = z ^ (x + 1)", "by (simp add: algebra_simps power2_eq_square right_inverse[OF \\<open>z \\<noteq> 0\\<close>])"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x * inverse z) = z ^ (x + 1)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)", "finally"], ["proof (chain)\npicking this:\n  z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)", "by blast"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x / z) = z ^ (x + 1)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have \"z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n            z\\<^sup>2 * (z^x*(z ^x -inverse(z^x))) / (z*(z - inverse(z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z\\<^sup>2 * (z ^ x * (z ^ x - inverse (z ^ x))) / (z * (z - inverse z))", "by (subst 1, subst 2,blast)"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n  z\\<^sup>2 * (z ^ x * (z ^ x - inverse (z ^ x))) / (z * (z - inverse z))\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "also"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n  z\\<^sup>2 * (z ^ x * (z ^ x - inverse (z ^ x))) / (z * (z - inverse z))\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have \"\\<dots> =  (z\\<^sup>2 * (z^x / z)) * ((z ^x -inverse(z^x))) / (z - inverse(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x * (z ^ x - inverse (z ^ x))) /\n    (z * (z - inverse z)) =\n    z\\<^sup>2 * (z ^ x / z) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "by simp"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x * (z ^ x - inverse (z ^ x))) / (z * (z - inverse z)) =\n  z\\<^sup>2 * (z ^ x / z) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "also"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x * (z ^ x - inverse (z ^ x))) / (z * (z - inverse z)) =\n  z\\<^sup>2 * (z ^ x / z) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have \"\\<dots> = z^(x+1) *((z ^x -inverse(z^x))) / (z - inverse(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ x / z) * (z ^ x - inverse (z ^ x)) / (z - inverse z) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "by (subst 3,simp)"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ x / z) * (z ^ x - inverse (z ^ x)) / (z - inverse z) =\n  z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "finally"], ["proof (chain)\npicking this:\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n  z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "show ?thesis"], ["proof (prove)\nusing this:\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n  z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n    z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "by simp"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n  z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z\\<^sup>2 * (z ^ (2 * x) - 1) / (z\\<^sup>2 - 1) =\n  z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  f k = z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have \"f(k) = z^(x+1) *((z ^x -inverse(z^x))) / (z - inverse(z))\""], ["proof (prove)\nusing this:\n  f k = z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. f k = z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "by blast"], ["proof (state)\nthis:\n  f k = z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "(* inequality for each f(k) *)"], ["proof (state)\nthis:\n  f k = z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "then"], ["proof (chain)\npicking this:\n  f k = z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)", "have \"norm(f(k)) = norm(z^(x+1) * (((z ^x -inverse(z^x))) / (z - inverse(z))))\""], ["proof (prove)\nusing this:\n  f k = z ^ (x + 1) * (z ^ x - inverse (z ^ x)) / (z - inverse z)\n\ngoal (1 subgoal):\n 1. cmod (f k) =\n    cmod (z ^ (x + 1) * ((z ^ x - inverse (z ^ x)) / (z - inverse z)))", "by auto"], ["proof (state)\nthis:\n  cmod (f k) =\n  cmod (z ^ (x + 1) * ((z ^ x - inverse (z ^ x)) / (z - inverse z)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod (f k) =\n  cmod (z ^ (x + 1) * ((z ^ x - inverse (z ^ x)) / (z - inverse z)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = norm(z^(x+1)) * norm(((z ^x -inverse(z^x))) / (z - inverse(z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1) * ((z ^ x - inverse (z ^ x)) / (z - inverse z))) =\n    cmod (z ^ (x + 1)) * cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))", "using norm_mult"], ["proof (prove)\nusing this:\n  norm (?x * ?y) = norm ?x * norm ?y\n\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1) * ((z ^ x - inverse (z ^ x)) / (z - inverse z))) =\n    cmod (z ^ (x + 1)) * cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))", "by blast"], ["proof (state)\nthis:\n  cmod (z ^ (x + 1) * ((z ^ x - inverse (z ^ x)) / (z - inverse z))) =\n  cmod (z ^ (x + 1)) * cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod (z ^ (x + 1) * ((z ^ x - inverse (z ^ x)) / (z - inverse z))) =\n  cmod (z ^ (x + 1)) * cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = norm(((z ^x -inverse(z^x))) / (z - inverse(z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1)) *\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1)) *\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))", "have \"norm(z) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod z = 1", "unfolding z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>)) =\n    1", "by auto"], ["proof (state)\nthis:\n  cmod z = 1\n\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1)) *\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))", "have \"norm(z^(x+1)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1)) = 1", "by (subst norm_power,simp add: \\<open>norm(z) = 1\\<close>)"], ["proof (state)\nthis:\n  cmod (z ^ (x + 1)) = 1\n\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1)) *\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))", "then"], ["proof (chain)\npicking this:\n  cmod (z ^ (x + 1)) = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (z ^ (x + 1)) = 1\n\ngoal (1 subgoal):\n 1. cmod (z ^ (x + 1)) *\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))", "by simp"], ["proof (state)\nthis:\n  cmod (z ^ (x + 1)) * cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n  cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmod (z ^ (x + 1)) * cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n  cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod (z ^ (x + 1)) * cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n  cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = norm((exp (-(x*pi*k/n)* \\<i>) - exp ((x*pi*k/n)* \\<i>)) div \n                     (exp (-(pi*k/n)* \\<i>) - exp ((pi*k/n)* \\<i>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "have 1: \"z ^ x = exp (-(x*pi*k/n)* \\<i>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z ^ x =\n    exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>)", "unfolding z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) ^ x =\n    exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>)", "by (subst exp_of_nat_mult[symmetric],simp add: algebra_simps)"], ["proof (state)\nthis:\n  z ^ x =\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>)\n\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "have \"inverse (z ^ x) = inverse (exp (-(x*pi*k/n)* \\<i>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (z ^ x) =\n    inverse\n     (exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n           \\<i>))", "using \\<open>z ^ x = exp (-(x*pi*k/n)* \\<i>)\\<close>"], ["proof (prove)\nusing this:\n  z ^ x =\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>)\n\ngoal (1 subgoal):\n 1. inverse (z ^ x) =\n    inverse\n     (exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n           \\<i>))", "by auto"], ["proof (state)\nthis:\n  inverse (z ^ x) =\n  inverse\n   (exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>))\n\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "also"], ["proof (state)\nthis:\n  inverse (z ^ x) =\n  inverse\n   (exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>))\n\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "have \"\\<dots> = (exp ((x*pi*k/n)* \\<i>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse\n     (exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n           \\<i>)) =\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)", "by (simp add: exp_minus)"], ["proof (state)\nthis:\n  inverse\n   (exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>)) =\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)\n\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "finally"], ["proof (chain)\npicking this:\n  inverse (z ^ x) =\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)", "have 2: \"inverse(z^x) = exp ((x*pi*k/n)* \\<i>)\""], ["proof (prove)\nusing this:\n  inverse (z ^ x) =\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)\n\ngoal (1 subgoal):\n 1. inverse (z ^ x) =\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)", "by simp"], ["proof (state)\nthis:\n  inverse (z ^ x) =\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)\n\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "have 3: \"inverse z = exp ((pi*k/n)* \\<i>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse z = exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)", "by (simp add: exp_minus z_def)"], ["proof (state)\nthis:\n  inverse z = exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)\n\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "using 1 2 3 z_def"], ["proof (prove)\nusing this:\n  z ^ x =\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>)\n  inverse (z ^ x) =\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)\n  inverse z = exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)\n  z = exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>)\n\ngoal (1 subgoal):\n 1. cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n    cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))", "by simp"], ["proof (state)\nthis:\n  cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod ((z ^ x - inverse (z ^ x)) / (z - inverse z)) =\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = norm((sin (x*pi*k/n)) div (sin (pi*k/n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "have num: \"(exp (-(x*pi*k/n)* \\<i>) - exp ((x*pi*k/n)* \\<i>)) = (-2*\\<i>* sin((x*pi*k/n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "have 1: \"exp (-(x*pi*k/n)* \\<i>) = cos(-(x*pi*k/n)) + \\<i> * sin(-(x*pi*k/n))\"\n                \"exp ((x*pi*k/n)* \\<i>) = cos((x*pi*k/n)) + \\<i> * sin((x*pi*k/n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) =\n    complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n    \\<i> *\n    complex_of_real (sin (- (real x * pi * real_of_int k / real n))) &&&\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n    \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))", "using Euler Im_complex_of_real Im_divide_of_nat Im_i_times Re_complex_of_real\n                complex_Re_of_int complex_i_mult_minus exp_zero mult.assoc mult.commute"], ["proof (prove)\nusing this:\n  exp ?z =\n  complex_of_real (exp (Re ?z)) *\n  (complex_of_real (cos (Im ?z)) + \\<i> * complex_of_real (sin (Im ?z)))\n  Im (complex_of_real ?z) = 0\n  Im (?z / of_nat ?n) = Im ?z / real ?n\n  Im (\\<i> * ?z) = Re ?z\n  Re (complex_of_real ?z) = ?z\n  Re (of_int ?z) = real_of_int ?z\n  \\<i> * (\\<i> * ?x) = - ?x\n  exp (0::?'a) = (1::?'a)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) =\n    complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n    \\<i> *\n    complex_of_real (sin (- (real x * pi * real_of_int k / real n))) &&&\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n    \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))", "by force+"], ["proof (state)\nthis:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) =\n  complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (real x * pi * real_of_int k / real n)))\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n  \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "have \"(exp (-(x*pi*k/n)* \\<i>) - exp ((x*pi*k/n)* \\<i>)) =\n              (cos(-(x*pi*k/n)) + \\<i> * sin(-(x*pi*k/n))) -\n              (cos((x*pi*k/n)) + \\<i> * sin((x*pi*k/n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n    \\<i> *\n    complex_of_real (sin (- (real x * pi * real_of_int k / real n))) -\n    (complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n     \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n)))", "using 1"], ["proof (prove)\nusing this:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) =\n  complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (real x * pi * real_of_int k / real n)))\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n  \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n    \\<i> *\n    complex_of_real (sin (- (real x * pi * real_of_int k / real n))) -\n    (complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n     \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n)))", "by argo"], ["proof (state)\nthis:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (real x * pi * real_of_int k / real n))) -\n  (complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n   \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n)))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "also"], ["proof (state)\nthis:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (real x * pi * real_of_int k / real n))) -\n  (complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n   \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n)))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "have \"\\<dots> = -2*\\<i>* sin((x*pi*k/n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n    \\<i> *\n    complex_of_real (sin (- (real x * pi * real_of_int k / real n))) -\n    (complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n     \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "by simp"], ["proof (state)\nthis:\n  complex_of_real (cos (- (real x * pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (real x * pi * real_of_int k / real n))) -\n  (complex_of_real (cos (real x * pi * real_of_int k / real n)) +\n   \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))) =\n  - 2 * \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "finally"], ["proof (chain)\npicking this:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))", "show ?thesis"], ["proof (prove)\nusing this:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n         \\<i>) -\n    exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n))", "by blast"], ["proof (state)\nthis:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "have den: \"(exp (-(pi*k/n)* \\<i>) - exp ((pi*k/n)* \\<i>)) = -2*\\<i>* sin((pi*k/n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "have 1: \"exp (-(pi*k/n)* \\<i>) = cos(-(pi*k/n)) + \\<i> * sin(-(pi*k/n))\"\n                \"exp ((pi*k/n)* \\<i>) = cos((pi*k/n)) + \\<i> * sin((pi*k/n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) =\n    complex_of_real (cos (- (pi * real_of_int k / real n))) +\n    \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) &&&\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (pi * real_of_int k / real n)) +\n    \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "using Euler Im_complex_of_real Im_divide_of_nat Im_i_times Re_complex_of_real \n                complex_Re_of_int complex_i_mult_minus exp_zero mult.assoc mult.commute"], ["proof (prove)\nusing this:\n  exp ?z =\n  complex_of_real (exp (Re ?z)) *\n  (complex_of_real (cos (Im ?z)) + \\<i> * complex_of_real (sin (Im ?z)))\n  Im (complex_of_real ?z) = 0\n  Im (?z / of_nat ?n) = Im ?z / real ?n\n  Im (\\<i> * ?z) = Re ?z\n  Re (complex_of_real ?z) = ?z\n  Re (of_int ?z) = real_of_int ?z\n  \\<i> * (\\<i> * ?x) = - ?x\n  exp (0::?'a) = (1::?'a)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) =\n    complex_of_real (cos (- (pi * real_of_int k / real n))) +\n    \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) &&&\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (pi * real_of_int k / real n)) +\n    \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "by force+"], ["proof (state)\nthis:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) =\n  complex_of_real (cos (- (pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n)))\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (pi * real_of_int k / real n)) +\n  \\<i> * complex_of_real (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "have \"(exp (-(pi*k/n)* \\<i>) - exp ((pi*k/n)* \\<i>)) =\n              (cos(-(pi*k/n)) + \\<i> * sin(-(pi*k/n))) -\n              (cos((pi*k/n)) + \\<i> * sin((pi*k/n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (- (pi * real_of_int k / real n))) +\n    \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) -\n    (complex_of_real (cos (pi * real_of_int k / real n)) +\n     \\<i> * complex_of_real (sin (pi * real_of_int k / real n)))", "using 1"], ["proof (prove)\nusing this:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) =\n  complex_of_real (cos (- (pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n)))\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (pi * real_of_int k / real n)) +\n  \\<i> * complex_of_real (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    complex_of_real (cos (- (pi * real_of_int k / real n))) +\n    \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) -\n    (complex_of_real (cos (pi * real_of_int k / real n)) +\n     \\<i> * complex_of_real (sin (pi * real_of_int k / real n)))", "by argo"], ["proof (state)\nthis:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (- (pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) -\n  (complex_of_real (cos (pi * real_of_int k / real n)) +\n   \\<i> * complex_of_real (sin (pi * real_of_int k / real n)))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "also"], ["proof (state)\nthis:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  complex_of_real (cos (- (pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) -\n  (complex_of_real (cos (pi * real_of_int k / real n)) +\n   \\<i> * complex_of_real (sin (pi * real_of_int k / real n)))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "have \"\\<dots> = -2*\\<i>* sin((pi*k/n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (cos (- (pi * real_of_int k / real n))) +\n    \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) -\n    (complex_of_real (cos (pi * real_of_int k / real n)) +\n     \\<i> * complex_of_real (sin (pi * real_of_int k / real n))) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "by simp"], ["proof (state)\nthis:\n  complex_of_real (cos (- (pi * real_of_int k / real n))) +\n  \\<i> * complex_of_real (sin (- (pi * real_of_int k / real n))) -\n  (complex_of_real (cos (pi * real_of_int k / real n)) +\n   \\<i> * complex_of_real (sin (pi * real_of_int k / real n))) =\n  - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "finally"], ["proof (chain)\npicking this:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "show ?thesis"], ["proof (prove)\nusing this:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n    exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n    - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))", "by blast"], ["proof (state)\nthis:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "have \"norm((exp (-(x*pi*k/n)* \\<i>) - exp ((x*pi*k/n)* \\<i>)) div \n                     (exp (-(pi*k/n)* \\<i>) - exp ((pi*k/n)* \\<i>))) =\n            norm((-2*\\<i>* sin((x*pi*k/n))) div (-2*\\<i>* sin((pi*k/n))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    cmod\n     (- 2 * \\<i> *\n      complex_of_real (sin (real x * pi * real_of_int k / real n)) /\n      (- 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))))", "using num den"], ["proof (prove)\nusing this:\n  exp (complex_of_real (- (real x * pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (real x * pi * real_of_int k / real n))\n  exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n  exp (complex_of_real (pi * real_of_int k / real n) * \\<i>) =\n  - 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    cmod\n     (- 2 * \\<i> *\n      complex_of_real (sin (real x * pi * real_of_int k / real n)) /\n      (- 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))))", "by presburger"], ["proof (state)\nthis:\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n  cmod\n   (- 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n)) /\n    (- 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))))\n\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "also"], ["proof (state)\nthis:\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n  cmod\n   (- 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n)) /\n    (- 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n))))\n\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "have \"\\<dots> = norm(sin((x*pi*k/n)) div sin((pi*k/n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (- 2 * \\<i> *\n      complex_of_real (sin (real x * pi * real_of_int k / real n)) /\n      (- 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n)))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "by (simp add: norm_divide)"], ["proof (state)\nthis:\n  cmod\n   (- 2 * \\<i> *\n    complex_of_real (sin (real x * pi * real_of_int k / real n)) /\n    (- 2 * \\<i> * complex_of_real (sin (pi * real_of_int k / real n)))) =\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "finally"], ["proof (chain)\npicking this:\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n))", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod\n     ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n            \\<i>) -\n       exp (complex_of_real (real x * pi * real_of_int k / real n) *\n            \\<i>)) /\n      (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n       exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n    norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n))", "by blast"], ["proof (state)\nthis:\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod\n   ((exp (complex_of_real (- (real x * pi * real_of_int k / real n)) *\n          \\<i>) -\n     exp (complex_of_real (real x * pi * real_of_int k / real n) * \\<i>)) /\n    (exp (complex_of_real (- (pi * real_of_int k / real n)) * \\<i>) -\n     exp (complex_of_real (pi * real_of_int k / real n) * \\<i>))) =\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = norm((sin (x*pi*k/n))) div norm((sin (pi*k/n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm\n     (sin (real x * pi * real_of_int k / real n) /\n      sin (pi * real_of_int k / real n)) =\n    norm (sin (real x * pi * real_of_int k / real n)) /\n    norm (sin (pi * real_of_int k / real n))", "by (simp add: norm_divide)"], ["proof (state)\nthis:\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n)) =\n  norm (sin (real x * pi * real_of_int k / real n)) /\n  norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  norm\n   (sin (real x * pi * real_of_int k / real n) /\n    sin (pi * real_of_int k / real n)) =\n  norm (sin (real x * pi * real_of_int k / real n)) /\n  norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> \\<le> 1 div norm((sin (pi*k/n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (sin (real x * pi * real_of_int k / real n)) /\n    norm (sin (pi * real_of_int k / real n))\n    \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (sin (real x * pi * real_of_int k / real n)) /\n    norm (sin (pi * real_of_int k / real n))\n    \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "have \"norm((sin (pi*k/n))) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (sin (pi * real_of_int k / real n))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. norm (sin (real x * pi * real_of_int k / real n)) /\n    norm (sin (pi * real_of_int k / real n))\n    \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "have \"norm (sin (x*pi*k/n)) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (sin (real x * pi * real_of_int k / real n)) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  norm (sin (real x * pi * real_of_int k / real n)) \\<le> 1\n\ngoal (1 subgoal):\n 1. norm (sin (real x * pi * real_of_int k / real n)) /\n    norm (sin (pi * real_of_int k / real n))\n    \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "then"], ["proof (chain)\npicking this:\n  norm (sin (real x * pi * real_of_int k / real n)) \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (sin (real x * pi * real_of_int k / real n)) \\<le> 1\n\ngoal (1 subgoal):\n 1. norm (sin (real x * pi * real_of_int k / real n)) /\n    norm (sin (pi * real_of_int k / real n))\n    \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "using divide_right_mono[OF \\<open>norm (sin (x*pi*k/n)) \\<le> 1\\<close> \\<open>norm((sin (pi*k/n))) \\<ge> 0\\<close>]"], ["proof (prove)\nusing this:\n  norm (sin (real x * pi * real_of_int k / real n)) \\<le> 1\n  norm (sin (real x * pi * real_of_int k / real n)) /\n  norm (sin (pi * real_of_int k / real n))\n  \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. norm (sin (real x * pi * real_of_int k / real n)) /\n    norm (sin (pi * real_of_int k / real n))\n    \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "by blast"], ["proof (state)\nthis:\n  norm (sin (real x * pi * real_of_int k / real n)) /\n  norm (sin (pi * real_of_int k / real n))\n  \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  norm (sin (real x * pi * real_of_int k / real n)) /\n  norm (sin (pi * real_of_int k / real n))\n  \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "have 26: \"norm(f(k)) \\<le> 1 div norm((sin (pi*k/n)))\""], ["proof (prove)\nusing this:\n  cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "by blast"], ["proof (state)\nthis:\n  cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "(* inequality with sin *)"], ["proof (state)\nthis:\n  cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "{"], ["proof (state)\nthis:\n  cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "assume \"t \\<ge> 0\" \"t \\<le> pi div 2\""], ["proof (state)\nthis:\n  0 \\<le> t\n  t \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> t\n  t \\<le> pi / 2", "have \"t \\<in> {0..pi div 2}\""], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. t \\<in> {0..pi / 2}", "by auto"], ["proof (state)\nthis:\n  t \\<in> {0..pi / 2}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"convex_on {0..pi/2} (\\<lambda>x. -sin x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convex_on {0..pi / 2} (\\<lambda>x. - sin x)", "by (rule convex_on_realI[where f' = \"\\<lambda>x. - cos x\"])\n          (auto intro!: derivative_eq_intros simp: cos_monotone_0_pi_le)"], ["proof (state)\nthis:\n  convex_on {0..pi / 2} (\\<lambda>x. - sin x)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "from convex_onD_Icc'[OF this \\<open>t \\<in> {0..pi div 2}\\<close>]"], ["proof (chain)\npicking this:\n  - sin t\n  \\<le> (- sin (pi / 2) - - sin 0) / (pi / 2 - 0) * (t - 0) + - sin 0", "have \"sin(t) \\<ge> (2 div pi)*t\""], ["proof (prove)\nusing this:\n  - sin t\n  \\<le> (- sin (pi / 2) - - sin 0) / (pi / 2 - 0) * (t - 0) + - sin 0\n\ngoal (1 subgoal):\n 1. 2 / pi * t \\<le> sin t", "by simp"], ["proof (state)\nthis:\n  2 / pi * t \\<le> sin t\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?t2; ?t2 \\<le> pi / 2\\<rbrakk>\n  \\<Longrightarrow> 2 / pi * ?t2 \\<le> sin ?t2\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "note sin_ineq = this"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?t2; ?t2 \\<le> pi / 2\\<rbrakk>\n  \\<Longrightarrow> 2 / pi * ?t2 \\<le> sin ?t2\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have sin_ineq_inst: \"sin ((pi*k) / n) \\<ge> (2 * k) / n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "have \"pi / n \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> pi / real n", "by simp"], ["proof (state)\nthis:\n  0 \\<le> pi / real n\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "have 1: \"(pi*k) / n \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> pi * real_of_int k / real n", "using \\<open>1 \\<le> k\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. 0 \\<le> pi * real_of_int k / real n", "by auto"], ["proof (state)\nthis:\n  0 \\<le> pi * real_of_int k / real n\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "have \"(pi*k)/n = (pi / n) * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi * real_of_int k / real n = pi / real n * real_of_int k", "by simp"], ["proof (state)\nthis:\n  pi * real_of_int k / real n = pi / real n * real_of_int k\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "also"], ["proof (state)\nthis:\n  pi * real_of_int k / real n = pi / real n * real_of_int k\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "have \"\\<dots> \\<le> (pi / n) * (n / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi / real n * real_of_int k \\<le> pi / real n * (real n / 2)", "using mult_left_mono[of \"k\" \"n / 2\" \"pi / n\"] \n              \\<open>k \\<le> n div 2\\<close> \\<open>0 \\<le> pi / real n\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>real_of_int k \\<le> real n / 2; 0 \\<le> pi / real n\\<rbrakk>\n  \\<Longrightarrow> pi / real n * real_of_int k\n                    \\<le> pi / real n * (real n / 2)\n  k \\<le> int (n div 2)\n  0 \\<le> pi / real n\n\ngoal (1 subgoal):\n 1. pi / real n * real_of_int k \\<le> pi / real n * (real n / 2)", "by linarith"], ["proof (state)\nthis:\n  pi / real n * real_of_int k \\<le> pi / real n * (real n / 2)\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "also"], ["proof (state)\nthis:\n  pi / real n * real_of_int k \\<le> pi / real n * (real n / 2)\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "have \"\\<dots> \\<le> pi / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi / real n * (real n / 2) \\<le> pi / 2", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  pi / real n * (real n / 2) \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "finally"], ["proof (chain)\npicking this:\n  pi * real_of_int k / real n \\<le> pi / 2", "have 2: \"(pi*k)/n \\<le> pi / 2\""], ["proof (prove)\nusing this:\n  pi * real_of_int k / real n \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. pi * real_of_int k / real n \\<le> pi / 2", "by auto"], ["proof (state)\nthis:\n  pi * real_of_int k / real n \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "have \"(2 / pi) * (pi * k / n) \\<le> sin((pi * k) / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 / pi * (pi * real_of_int k / real n)\n    \\<le> sin (pi * real_of_int k / real n)", "using sin_ineq[OF 1 2]"], ["proof (prove)\nusing this:\n  2 / pi * (pi * real_of_int k / real n)\n  \\<le> sin (pi * real_of_int k / real n)\n\ngoal (1 subgoal):\n 1. 2 / pi * (pi * real_of_int k / real n)\n    \\<le> sin (pi * real_of_int k / real n)", "by blast"], ["proof (state)\nthis:\n  2 / pi * (pi * real_of_int k / real n)\n  \\<le> sin (pi * real_of_int k / real n)\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "then"], ["proof (chain)\npicking this:\n  2 / pi * (pi * real_of_int k / real n)\n  \\<le> sin (pi * real_of_int k / real n)", "show \"sin((pi * k) / n) \\<ge> (2*k) / n\""], ["proof (prove)\nusing this:\n  2 / pi * (pi * real_of_int k / real n)\n  \\<le> sin (pi * real_of_int k / real n)\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "by auto"], ["proof (state)\nthis:\n  real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "from 26"], ["proof (chain)\npicking this:\n  cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))", "have \"norm(f(k)) \\<le> 1 div abs((sin (pi*k/n)))\""], ["proof (prove)\nusing this:\n  cmod (f k) \\<le> 1 / norm (sin (pi * real_of_int k / real n))\n\ngoal (1 subgoal):\n 1. cmod (f k) \\<le> 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>", "by simp"], ["proof (state)\nthis:\n  cmod (f k) \\<le> 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod (f k) \\<le> 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> \\<le> 1 / abs((2*k) / n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "have \"sin (pi*k/n) \\<ge> (2*k) / n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "using sin_ineq_inst"], ["proof (prove)\nusing this:\n  real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)\n\ngoal (1 subgoal):\n 1. real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)", "by simp"], ["proof (state)\nthis:\n  real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "moreover"], ["proof (state)\nthis:\n  real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "have \"(2*k) / n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < real_of_int (2 * k) / real n", "using n \\<open>1 \\<le> k\\<close>"], ["proof (prove)\nusing this:\n  1 < n\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. 0 < real_of_int (2 * k) / real n", "by auto"], ["proof (state)\nthis:\n  0 < real_of_int (2 * k) / real n\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)\n  0 < real_of_int (2 * k) / real n", "have \"abs((sin (pi*k/n))) \\<ge> abs((2*k)/n)\""], ["proof (prove)\nusing this:\n  real_of_int (2 * k) / real n \\<le> sin (pi * real_of_int k / real n)\n  0 < real_of_int (2 * k) / real n\n\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (2 * k) / real n\\<bar>\n    \\<le> \\<bar>sin (pi * real_of_int k / real n)\\<bar>", "by auto"], ["proof (state)\nthis:\n  \\<bar>real_of_int (2 * k) / real n\\<bar>\n  \\<le> \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "have \"abs((2*k)/n) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<bar>real_of_int (2 * k) / real n\\<bar>", "using \\<open>(2*k)/n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < real_of_int (2 * k) / real n\n\ngoal (1 subgoal):\n 1. 0 < \\<bar>real_of_int (2 * k) / real n\\<bar>", "by linarith"], ["proof (state)\nthis:\n  0 < \\<bar>real_of_int (2 * k) / real n\\<bar>\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "then"], ["proof (chain)\npicking this:\n  0 < \\<bar>real_of_int (2 * k) / real n\\<bar>", "show \"1 div abs((sin (pi*k/n))) \\<le> 1 / abs(((2*k)/n))\""], ["proof (prove)\nusing this:\n  0 < \\<bar>real_of_int (2 * k) / real n\\<bar>\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "using \\<open>abs((2*k)/n) > 0\\<close> \\<open>abs((sin (pi*k/n))) \\<ge> abs(((2*k)/n))\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<bar>real_of_int (2 * k) / real n\\<bar>\n  0 < \\<bar>real_of_int (2 * k) / real n\\<bar>\n  \\<bar>real_of_int (2 * k) / real n\\<bar>\n  \\<le> \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n    \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>", "by (intro frac_le) auto"], ["proof (state)\nthis:\n  1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n  \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n  \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  1 / \\<bar>sin (pi * real_of_int k / real n)\\<bar>\n  \\<le> 1 / \\<bar>real_of_int (2 * k) / real n\\<bar>\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"\\<dots> = n / (2*k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / \\<bar>real_of_int (2 * k) / real n\\<bar> =\n    real n / real_of_int (2 * k)", "using \\<open>k \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> k\n\ngoal (1 subgoal):\n 1. 1 / \\<bar>real_of_int (2 * k) / real n\\<bar> =\n    real n / real_of_int (2 * k)", "by simp"], ["proof (state)\nthis:\n  1 / \\<bar>real_of_int (2 * k) / real n\\<bar> =\n  real n / real_of_int (2 * k)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  cmod (f k) \\<le> real n / real_of_int (2 * k)", "have \"norm(f(k)) \\<le> n / (2*k)\""], ["proof (prove)\nusing this:\n  cmod (f k) \\<le> real n / real_of_int (2 * k)\n\ngoal (1 subgoal):\n 1. cmod (f k) \\<le> real n / real_of_int (2 * k)", "by blast"], ["proof (state)\nthis:\n  cmod (f k) \\<le> real n / real_of_int (2 * k)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>1 \\<le> ?k2; ?k2 \\<le> int (n div 2)\\<rbrakk>\n  \\<Longrightarrow> cmod (f ?k2) \\<le> real n / real_of_int (2 * ?k2)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "note ineq = this"], ["proof (state)\nthis:\n  \\<lbrakk>1 \\<le> ?k2; ?k2 \\<le> int (n div 2)\\<rbrakk>\n  \\<Longrightarrow> cmod (f ?k2) \\<le> real n / real_of_int (2 * ?k2)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "(* inequality for the odd and even case*)"], ["proof (state)\nthis:\n  \\<lbrakk>1 \\<le> ?k2; ?k2 \\<le> int (n div 2)\\<rbrakk>\n  \\<Longrightarrow> cmod (f ?k2) \\<le> real n / real_of_int (2 * ?k2)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"sqrt n * norm (sum \\<chi> {1..x}) < n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "proof (cases \"even n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "case True"], ["proof (state)\nthis:\n  even n\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"norm (f(n div 2)) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (f (int (n div 2))) \\<le> 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (f (int (n div 2))) \\<le> 1", "have \"int (n div 2) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> int (n div 2)", "using n \\<open>even n\\<close>"], ["proof (prove)\nusing this:\n  1 < n\n  even n\n\ngoal (1 subgoal):\n 1. 1 \\<le> int (n div 2)", "by auto"], ["proof (state)\nthis:\n  1 \\<le> int (n div 2)\n\ngoal (1 subgoal):\n 1. cmod (f (int (n div 2))) \\<le> 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (f (int (n div 2))) \\<le> 1", "using ineq[OF \\<open>int (n div 2) \\<ge> 1\\<close>] True n"], ["proof (prove)\nusing this:\n  int (n div 2) \\<le> int (n div 2) \\<Longrightarrow>\n  cmod (f (int (n div 2))) \\<le> real n / real_of_int (2 * int (n div 2))\n  even n\n  1 < n\n\ngoal (1 subgoal):\n 1. cmod (f (int (n div 2))) \\<le> 1", "by force"], ["proof (state)\nthis:\n  cmod (f (int (n div 2))) \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmod (f (int (n div 2))) \\<le> 1\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "from 24"], ["proof (chain)\npicking this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))", "have \"sqrt n * norm (sum \\<chi> {1..x}) \n               \\<le> (\\<Sum>k = 1..<n. norm (f (int k)))\""], ["proof (prove)\nusing this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x})\n    \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))", "by blast"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> = (\\<Sum>k = 1..n-1. norm (f (int k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n. cmod (f (int k))) =\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n. cmod (f (int k))) =\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n. cmod (f (int k))) =\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. norm (f (int k))) + norm(f(n div 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "using 25(2)[OF True]"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n        cmod (f (int (n div 2)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n          cmod (f (int (n div 2)))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n        cmod (f (int (n div 2)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n        cmod (f (int (n div 2)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> \\<le>  real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / k) + norm(f(n div 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "have \"(\\<Sum>k = 1..(n - 2) div 2. norm (f (int k))) \\<le> (\\<Sum>k = 1..(n - 2) div 2. real n div (2*k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n    \\<le> (\\<Sum>k = 1..(n - 2) div 2. real n / real (2 * k))", "proof (rule sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 2) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 2) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "assume \"k \\<in> {1..(n - 2) div 2}\""], ["proof (state)\nthis:\n  k \\<in> {1..(n - 2) div 2}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 2) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "then"], ["proof (chain)\npicking this:\n  k \\<in> {1..(n - 2) div 2}", "have \"1 \\<le> int k\" \"int k \\<le> n div 2\""], ["proof (prove)\nusing this:\n  k \\<in> {1..(n - 2) div 2}\n\ngoal (1 subgoal):\n 1. 1 \\<le> int k &&& int k \\<le> int (n div 2)", "by auto"], ["proof (state)\nthis:\n  1 \\<le> int k\n  int k \\<le> int (n div 2)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 2) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "show \"norm (f (int k)) \\<le> real n / (2*k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (f (int k)) \\<le> real n / real (2 * k)", "using ineq[OF \\<open>1 \\<le> int k\\<close> \\<open>int k \\<le> n div 2\\<close>]"], ["proof (prove)\nusing this:\n  cmod (f (int k)) \\<le> real n / real_of_int (2 * int k)\n\ngoal (1 subgoal):\n 1. cmod (f (int k)) \\<le> real n / real (2 * k)", "by auto"], ["proof (state)\nthis:\n  cmod (f (int k)) \\<le> real n / real (2 * k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n  \\<le> (\\<Sum>k = 1..(n - 2) div 2. real n / real (2 * k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n  \\<le> (\\<Sum>k = 1..(n - 2) div 2. real n / real (2 * k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> = (\\<Sum>k = 1..(n - 2) div 2. (real n div 2) * (1 / k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 2) div 2. real n / real (2 * k)) =\n    (\\<Sum>k = 1..(n - 2) div 2. real n / 2 * (1 / real k))", "by (rule sum.cong,auto)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 2) div 2. real n / real (2 * k)) =\n  (\\<Sum>k = 1..(n - 2) div 2. real n / 2 * (1 / real k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 2) div 2. real n / real (2 * k)) =\n  (\\<Sum>k = 1..(n - 2) div 2. real n / 2 * (1 / real k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "have \"\\<dots> = (real n div 2) * (\\<Sum>k = 1..(n - 2) div 2. 1 / k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 2) div 2. real n / 2 * (1 / real k)) =\n    real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)", "using sum_distrib_left[symmetric]"], ["proof (prove)\nusing this:\n  (\\<Sum>n\\<in>?A. ?r * ?f n) = ?r * sum ?f ?A\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 2) div 2. real n / 2 * (1 / real k)) =\n    real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)", "by fast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 2) div 2. real n / 2 * (1 / real k)) =\n  real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)", "have \"(\\<Sum>k = 1..(n - 2) div 2. norm (f (int k))) \\<le> \n                  (real n div 2) * (\\<Sum>k = 1..(n - 2) div 2. 1 / k)\""], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n    \\<le> real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n    cmod (f (int (n div 2)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n          cmod (f (int (n div 2)))", "by argo"], ["proof (state)\nthis:\n  2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n  cmod (f (int (n div 2)))\n  \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n        cmod (f (int (n div 2)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n  cmod (f (int (n div 2)))\n  \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n        cmod (f (int (n div 2)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  2 * (\\<Sum>k = 1..(n - 2) div 2. cmod (f (int k))) +\n  cmod (f (int (n div 2)))\n  \\<le> real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n        cmod (f (int (n div 2)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> = real n * harm ((n - 2) div 2) + norm(f(n div 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n    cmod (f (int (n div 2))) =\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))", "unfolding harm_def inverse_eq_divide"], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n    cmod (f (int (n div 2))) =\n    real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n    cmod (f (int (n div 2)))", "by simp"], ["proof (state)\nthis:\n  real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n  cmod (f (int (n div 2))) =\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  real n * (\\<Sum>k = 1..(n - 2) div 2. 1 / real k) +\n  cmod (f (int (n div 2))) =\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> < n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "proof (cases \"n = 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)\n 2. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "case True"], ["proof (state)\nthis:\n  n = 2\n\ngoal (2 subgoals):\n 1. n = 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)\n 2. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"real n * harm ((n - 2) div 2) + norm (f (int (n div 2))) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) + cmod (f (int (n div 2))) \\<le> 1", "using \\<open>n = 2\\<close> \\<open>norm (f (int (n div 2))) \\<le> 1\\<close>"], ["proof (prove)\nusing this:\n  n = 2\n  cmod (f (int (n div 2))) \\<le> 1\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) + cmod (f (int (n div 2))) \\<le> 1", "unfolding harm_def"], ["proof (prove)\nusing this:\n  n = 2\n  cmod (f (int (n div 2))) \\<le> 1\n\ngoal (1 subgoal):\n 1. real n * (\\<Sum>k = 1..(n - 2) div 2. inverse (real k)) +\n    cmod (f (int (n div 2)))\n    \\<le> 1", "by simp"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2))) \\<le> 1\n\ngoal (2 subgoals):\n 1. n = 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)\n 2. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "moreover"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2))) \\<le> 1\n\ngoal (2 subgoals):\n 1. n = 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)\n 2. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"real n * ln (real n) \\<ge> 4 / 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 / 3 \\<le> real n * ln (real n)", "using \\<open>n = 2\\<close> ln2_ge_two_thirds"], ["proof (prove)\nusing this:\n  n = 2\n  2 / 3 \\<le> ln 2\n\ngoal (1 subgoal):\n 1. 4 / 3 \\<le> real n * ln (real n)", "by auto"], ["proof (state)\nthis:\n  4 / 3 \\<le> real n * ln (real n)\n\ngoal (2 subgoals):\n 1. n = 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)\n 2. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "ultimately"], ["proof (chain)\npicking this:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2))) \\<le> 1\n  4 / 3 \\<le> real n * ln (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2))) \\<le> 1\n  4 / 3 \\<le> real n * ln (real n)\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "by argo"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n  < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 2\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"n > 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 < n", "using n \\<open>n \\<noteq> 2\\<close> \\<open>even n\\<close>"], ["proof (prove)\nusing this:\n  1 < n\n  n \\<noteq> 2\n  even n\n\ngoal (1 subgoal):\n 1. 3 < n", "by auto"], ["proof (state)\nthis:\n  3 < n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "then"], ["proof (chain)\npicking this:\n  3 < n", "have \"(n-2) div 2 > 0\""], ["proof (prove)\nusing this:\n  3 < n\n\ngoal (1 subgoal):\n 1. 0 < (n - 2) div 2", "by simp"], ["proof (state)\nthis:\n  0 < (n - 2) div 2\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "then"], ["proof (chain)\npicking this:\n  0 < (n - 2) div 2", "have \"harm ((n - 2) div 2) < ln (real (2 * ((n - 2) div 2) + 1))\""], ["proof (prove)\nusing this:\n  0 < (n - 2) div 2\n\ngoal (1 subgoal):\n 1. harm ((n - 2) div 2) < ln (real (2 * ((n - 2) div 2) + 1))", "using harm_less_ln"], ["proof (prove)\nusing this:\n  0 < (n - 2) div 2\n  0 < ?m \\<Longrightarrow> harm ?m < ln (real (2 * ?m + 1))\n\ngoal (1 subgoal):\n 1. harm ((n - 2) div 2) < ln (real (2 * ((n - 2) div 2) + 1))", "by blast"], ["proof (state)\nthis:\n  harm ((n - 2) div 2) < ln (real (2 * ((n - 2) div 2) + 1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  harm ((n - 2) div 2) < ln (real (2 * ((n - 2) div 2) + 1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"\\<dots> = ln (real (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * ((n - 2) div 2) + 1)) = ln (real (n - 1))", "using \\<open>even n\\<close> \\<open>n > 3\\<close>"], ["proof (prove)\nusing this:\n  even n\n  3 < n\n\ngoal (1 subgoal):\n 1. ln (real (2 * ((n - 2) div 2) + 1)) = ln (real (n - 1))", "by simp"], ["proof (state)\nthis:\n  ln (real (2 * ((n - 2) div 2) + 1)) = ln (real (n - 1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  harm ((n - 2) div 2) < ln (real (n - 1))", "have 1: \"harm ((n - 2) div 2) < ln (real (n - 1))\""], ["proof (prove)\nusing this:\n  harm ((n - 2) div 2) < ln (real (n - 1))\n\ngoal (1 subgoal):\n 1. harm ((n - 2) div 2) < ln (real (n - 1))", "by blast"], ["proof (state)\nthis:\n  harm ((n - 2) div 2) < ln (real (n - 1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "then"], ["proof (chain)\npicking this:\n  harm ((n - 2) div 2) < ln (real (n - 1))", "have \"real n * harm ((n - 2) div 2) < real n * ln (real (n - 1))\""], ["proof (prove)\nusing this:\n  harm ((n - 2) div 2) < ln (real (n - 1))\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) < real n * ln (real (n - 1))", "using n"], ["proof (prove)\nusing this:\n  harm ((n - 2) div 2) < ln (real (n - 1))\n  1 < n\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) < real n * ln (real (n - 1))", "by simp"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) < real n * ln (real (n - 1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "then"], ["proof (chain)\npicking this:\n  real n * harm ((n - 2) div 2) < real n * ln (real (n - 1))", "have \"real n * harm ((n - 2) div 2) + norm (f (int (n div 2)))\n            < real n * ln (real (n - 1)) + 1\""], ["proof (prove)\nusing this:\n  real n * harm ((n - 2) div 2) < real n * ln (real (n - 1))\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real (n - 1)) + 1", "using \\<open>norm (f (int (n div 2))) \\<le> 1\\<close>"], ["proof (prove)\nusing this:\n  real n * harm ((n - 2) div 2) < real n * ln (real (n - 1))\n  cmod (f (int (n div 2))) \\<le> 1\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real (n - 1)) + 1", "by argo"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n  < real n * ln (real (n - 1)) + 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n  < real n * ln (real (n - 1)) + 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"\\<dots> = real n * ln (real (n - 1)) + real n * 1 / real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + 1 =\n    real n * ln (real (n - 1)) + real n * 1 / real n", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + 1 =\n    real n * ln (real (n - 1)) + real n * 1 / real n", "by auto"], ["proof (state)\nthis:\n  real n * ln (real (n - 1)) + 1 =\n  real n * ln (real (n - 1)) + real n * 1 / real n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  real n * ln (real (n - 1)) + 1 =\n  real n * ln (real (n - 1)) + real n * 1 / real n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"\\<dots> < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + real n * 1 / real n\n    < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + real n * 1 / real n\n    < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))", "have \"real n > 1\" \"real n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < real n &&& 0 < real n", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. 1 < real n &&& 0 < real n", "by simp+"], ["proof (state)\nthis:\n  1 < real n\n  0 < real n\n\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + real n * 1 / real n\n    < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))", "then"], ["proof (chain)\npicking this:\n  1 < real n\n  0 < real n", "have \"real n * (1 / real n) < real n * ln (1 + 1 / (real n - 1))\""], ["proof (prove)\nusing this:\n  1 < real n\n  0 < real n\n\ngoal (1 subgoal):\n 1. real n * (1 / real n) < real n * ln (1 + 1 / (real n - 1))", "by (intro mult_strict_left_mono harm_aux_ineq_1) auto"], ["proof (state)\nthis:\n  real n * (1 / real n) < real n * ln (1 + 1 / (real n - 1))\n\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + real n * 1 / real n\n    < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))", "then"], ["proof (chain)\npicking this:\n  real n * (1 / real n) < real n * ln (1 + 1 / (real n - 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  real n * (1 / real n) < real n * ln (1 + 1 / (real n - 1))\n\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + real n * 1 / real n\n    < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))", "by auto"], ["proof (state)\nthis:\n  real n * ln (real (n - 1)) + real n * 1 / real n\n  < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real n * ln (real (n - 1)) + real n * 1 / real n\n  < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  real n * ln (real (n - 1)) + real n * 1 / real n\n  < real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"\\<dots> = real n * ( ln (real (n - 1)) + ln (1 + 1 / (real n - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1)) =\n    real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1)))", "by argo"], ["proof (state)\nthis:\n  real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1)) =\n  real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  real n * ln (real (n - 1)) + real n * ln (1 + 1 / (real n - 1)) =\n  real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"\\<dots> = real n * ( ln (real (n - 1) * (1 + 1 / (real n - 1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1))) =\n    real n * ln (real (n - 1) * (1 + 1 / (real n - 1)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1))) =\n    real n * ln (real (n - 1) * (1 + 1 / (real n - 1)))", "have \"real (n - 1) > 0\" \"1 + 1 / (real n - 1) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < real (n - 1) &&& 0 < 1 + 1 / (real n - 1)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. 0 < real (n - 1) &&& 0 < 1 + 1 / (real n - 1)", "by (auto simp add: add_pos_nonneg)"], ["proof (state)\nthis:\n  0 < real (n - 1)\n  0 < 1 + 1 / (real n - 1)\n\ngoal (1 subgoal):\n 1. real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1))) =\n    real n * ln (real (n - 1) * (1 + 1 / (real n - 1)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1))) =\n    real n * ln (real (n - 1) * (1 + 1 / (real n - 1)))", "by (subst ln_mult [OF \\<open>real (n - 1) > 0\\<close> \\<open>1 + 1 / (real n - 1) > 0\\<close>,symmetric],blast)"], ["proof (state)\nthis:\n  real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1))) =\n  real n * ln (real (n - 1) * (1 + 1 / (real n - 1)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1))) =\n  real n * ln (real (n - 1) * (1 + 1 / (real n - 1)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  real n * (ln (real (n - 1)) + ln (1 + 1 / (real n - 1))) =\n  real n * ln (real (n - 1) * (1 + 1 / (real n - 1)))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "have \"\\<dots> = real n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1) * (1 + 1 / (real n - 1))) =\n    real n * ln (real n)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. real n * ln (real (n - 1) * (1 + 1 / (real n - 1))) =\n    real n * ln (real n)", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  real n * ln (real (n - 1) * (1 + 1 / (real n - 1))) = real n * ln (real n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 2 \\<Longrightarrow>\n    real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n  < real n * ln (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n  < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n    < real n * ln (real n)", "by blast"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n  < real n * ln (real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real n * harm ((n - 2) div 2) + cmod (f (int (n div 2)))\n  < real n * ln (real n)\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n 2. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "by blast"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "case False"], ["proof (state)\nthis:\n  odd n\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "from 24"], ["proof (chain)\npicking this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))", "have \"sqrt n * norm (sum \\<chi> {1..x}) \\<le> (\\<Sum>k= 1..<n. norm (f (int k)))\""], ["proof (prove)\nusing this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x})\n    \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))", "by blast"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>k = 1..<n. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> = (\\<Sum>k= 1..n-1. norm (f (int k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n. cmod (f (int k))) =\n    (\\<Sum>k = 1..n - 1. cmod (f (int k)))", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n. cmod (f (int k))) =\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n. cmod (f (int k))) =\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. norm (f (int k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))", "using 25(1)[OF False]"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n    \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n - 1. cmod (f (int k)))\n  \\<le> 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "have \"(\\<Sum>k = 1..(n - 1) div 2. norm (f (int k))) \\<le> (\\<Sum>k = 1..(n - 1) div 2. real n div (2*k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> (\\<Sum>k = 1..(n - 1) div 2. real n / real (2 * k))", "proof (rule sum_mono)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 1) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 1) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "assume \"k \\<in> {1..(n - 1) div 2}\""], ["proof (state)\nthis:\n  k \\<in> {1..(n - 1) div 2}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 1) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "then"], ["proof (chain)\npicking this:\n  k \\<in> {1..(n - 1) div 2}", "have \"1 \\<le> int k\" \"int k \\<le> n div 2\""], ["proof (prove)\nusing this:\n  k \\<in> {1..(n - 1) div 2}\n\ngoal (1 subgoal):\n 1. 1 \\<le> int k &&& int k \\<le> int (n div 2)", "by auto"], ["proof (state)\nthis:\n  1 \\<le> int k\n  int k \\<le> int (n div 2)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> {1..(n - 1) div 2} \\<Longrightarrow>\n       cmod (f (int k)) \\<le> real n / real (2 * k)", "show \"norm (f (int k)) \\<le> real n / (2*k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (f (int k)) \\<le> real n / real (2 * k)", "using ineq[OF \\<open>1 \\<le> int k\\<close> \\<open>int k \\<le> n div 2\\<close>]"], ["proof (prove)\nusing this:\n  cmod (f (int k)) \\<le> real n / real_of_int (2 * int k)\n\ngoal (1 subgoal):\n 1. cmod (f (int k)) \\<le> real n / real (2 * k)", "by auto"], ["proof (state)\nthis:\n  cmod (f (int k)) \\<le> real n / real (2 * k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> (\\<Sum>k = 1..(n - 1) div 2. real n / real (2 * k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> (\\<Sum>k = 1..(n - 1) div 2. real n / real (2 * k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "have \"\\<dots> = (\\<Sum>k = 1..(n - 1) div 2. (n / 2) * (1 / k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 1) div 2. real n / real (2 * k)) =\n    (\\<Sum>k = 1..(n - 1) div 2. real n / 2 * (1 / real k))", "by (rule sum.cong,auto)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 1) div 2. real n / real (2 * k)) =\n  (\\<Sum>k = 1..(n - 1) div 2. real n / 2 * (1 / real k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 1) div 2. real n / real (2 * k)) =\n  (\\<Sum>k = 1..(n - 1) div 2. real n / 2 * (1 / real k))\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "have \"\\<dots> = (n / 2) * (\\<Sum>k = 1..(n - 1) div 2. 1 / k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 1) div 2. real n / 2 * (1 / real k)) =\n    real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "using sum_distrib_left[symmetric]"], ["proof (prove)\nusing this:\n  (\\<Sum>n\\<in>?A. ?r * ?f n) = ?r * sum ?f ?A\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 1) div 2. real n / 2 * (1 / real k)) =\n    real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "by fast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 1) div 2. real n / 2 * (1 / real k)) =\n  real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "have \"(\\<Sum>k = 1..(n - 1) div 2. norm (f (int k))) \\<le> \n                  (real n div 2) * (\\<Sum>k = 1..(n - 1) div 2. 1 / k)\""], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n / 2 * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. 2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n    \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "by argo"], ["proof (state)\nthis:\n  2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  2 * (\\<Sum>k = 1..(n - 1) div 2. cmod (f (int k)))\n  \\<le> real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> = real n * harm ((n - 1) div 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k) =\n    real n * harm ((n - 1) div 2)", "unfolding harm_def inverse_eq_divide"], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k) =\n    real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k)", "by simp"], ["proof (state)\nthis:\n  real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k) =\n  real n * harm ((n - 1) div 2)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  real n * (\\<Sum>k = 1..(n - 1) div 2. 1 / real k) =\n  real n * harm ((n - 1) div 2)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have \"\\<dots> < n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "have \"n > 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 < n", "using n \\<open>odd n\\<close>"], ["proof (prove)\nusing this:\n  1 < n\n  odd n\n\ngoal (1 subgoal):\n 1. 2 < n", "by presburger"], ["proof (state)\nthis:\n  2 < n\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "then"], ["proof (chain)\npicking this:\n  2 < n", "have \"(n-1) div 2 > 0\""], ["proof (prove)\nusing this:\n  2 < n\n\ngoal (1 subgoal):\n 1. 0 < (n - 1) div 2", "by auto"], ["proof (state)\nthis:\n  0 < (n - 1) div 2\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "then"], ["proof (chain)\npicking this:\n  0 < (n - 1) div 2", "have \"harm ((n - 1) div 2) < ln (real (2 * ((n - 1) div 2) + 1))\""], ["proof (prove)\nusing this:\n  0 < (n - 1) div 2\n\ngoal (1 subgoal):\n 1. harm ((n - 1) div 2) < ln (real (2 * ((n - 1) div 2) + 1))", "using harm_less_ln"], ["proof (prove)\nusing this:\n  0 < (n - 1) div 2\n  0 < ?m \\<Longrightarrow> harm ?m < ln (real (2 * ?m + 1))\n\ngoal (1 subgoal):\n 1. harm ((n - 1) div 2) < ln (real (2 * ((n - 1) div 2) + 1))", "by blast"], ["proof (state)\nthis:\n  harm ((n - 1) div 2) < ln (real (2 * ((n - 1) div 2) + 1))\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "also"], ["proof (state)\nthis:\n  harm ((n - 1) div 2) < ln (real (2 * ((n - 1) div 2) + 1))\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "have \"\\<dots> = ln (real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln (real (2 * ((n - 1) div 2) + 1)) = ln (real n)", "using \\<open>odd n\\<close>"], ["proof (prove)\nusing this:\n  odd n\n\ngoal (1 subgoal):\n 1. ln (real (2 * ((n - 1) div 2) + 1)) = ln (real n)", "by simp"], ["proof (state)\nthis:\n  ln (real (2 * ((n - 1) div 2) + 1)) = ln (real n)\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  harm ((n - 1) div 2) < ln (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  harm ((n - 1) div 2) < ln (real n)\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "using n"], ["proof (prove)\nusing this:\n  harm ((n - 1) div 2) < ln (real n)\n  1 < n\n\ngoal (1 subgoal):\n 1. real n * harm ((n - 1) div 2) < real n * ln (real n)", "by simp"], ["proof (state)\nthis:\n  real n * harm ((n - 1) div 2) < real n * ln (real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real n * harm ((n - 1) div 2) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow>\n    sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "by blast"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "then"], ["proof (chain)\npicking this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "have 1: \"sqrt n * norm (sum \\<chi> {1..x}) < n * ln n\""], ["proof (prove)\nusing this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)", "by blast"], ["proof (state)\nthis:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "show  \"norm (sum \\<chi> {1..x}) < sqrt n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have 2: \"norm (sum \\<chi> {1..x}) * sqrt n < n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) * sqrt (real n) < real n * ln (real n)", "using 1"], ["proof (prove)\nusing this:\n  sqrt (real n) * cmod (sum \\<chi> {1..x}) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) * sqrt (real n) < real n * ln (real n)", "by argo"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x}) * sqrt (real n) < real n * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have \"sqrt n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sqrt (real n)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. 0 < sqrt (real n)", "by simp"], ["proof (state)\nthis:\n  0 < sqrt (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "have 3: \"(n * ln n) / sqrt n = sqrt n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * ln (real n) / sqrt (real n) = sqrt (real n) * ln (real n)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. real n * ln (real n) / sqrt (real n) = sqrt (real n) * ln (real n)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  real n * ln (real n) / sqrt (real n) = sqrt (real n) * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "show \"norm (sum \\<chi> {1..x}) < sqrt n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "using mult_imp_less_div_pos[OF \\<open>sqrt n > 0\\<close> 2] 3"], ["proof (prove)\nusing this:\n  cmod (sum \\<chi> {1..x}) < real n * ln (real n) / sqrt (real n)\n  real n * ln (real n) / sqrt (real n) = sqrt (real n) * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)", "by argo"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x}) < sqrt (real n) * ln (real n)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>General case\\<close>"], ["", "text \\<open>\n  We now first prove the inequality for the general case in terms of the divisor function:\n\\<close>"], ["", "theorem (in dcharacter) polya_vinogradov_inequality_explicit:\n  assumes nonprincipal: \"\\<chi> \\<noteq> principal_dchar n\"\n  shows   \"norm (sum \\<chi> {1..x}) < sqrt conductor * ln conductor * divisor_count (n div conductor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real conductor) * ln (real conductor) *\n      real (divisor_count (n div conductor))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real conductor) * ln (real conductor) *\n      real (divisor_count (n div conductor))", "write primitive_extension (\"\\<Phi>\")"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real conductor) * ln (real conductor) *\n      real (divisor_count (n div conductor))", "write conductor (\"c\")"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "interpret \\<Phi>: primitive_dchar c \"residue_mult_group c\" primitive_extension"], ["proof (prove)\ngoal (1 subgoal):\n 1. primitive_dchar c \\<Phi> &&&\n    residue_mult_group c \\<equiv> residue_mult_group c", "using primitive_primitive_extension nonprincipal"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> principal_dchar n \\<Longrightarrow>\n  primitive_dchar c \\<Phi>\n  \\<chi> \\<noteq> principal_dchar n\n\ngoal (1 subgoal):\n 1. primitive_dchar c \\<Phi> &&&\n    residue_mult_group c \\<equiv> residue_mult_group c", "by metis"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have *: \"k \\<le> x div b \\<longleftrightarrow> b * k \\<le> x\" if \"b > 0\" for b k"], ["proof (prove)\ngoal (1 subgoal):\n 1. (k \\<le> x div b) = (b * k \\<le> x)", "by (metis that antisym_conv div_le_mono div_mult_self1_is_m\n              less_imp_le not_less times_div_less_eq_dividend)"], ["proof (state)\nthis:\n  0 < ?b \\<Longrightarrow> (?k \\<le> x div ?b) = (?b * ?k \\<le> x)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have **: \"a > 0\" if \"a dvd n\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a", "using n that"], ["proof (prove)\nusing this:\n  1 < n\n  a dvd n\n\ngoal (1 subgoal):\n 1. 0 < a", "by (auto intro!: Nat.gr0I)"], ["proof (state)\nthis:\n  ?a dvd n \\<Longrightarrow> 0 < ?a\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "from nonprincipal"], ["proof (chain)\npicking this:\n  \\<chi> \\<noteq> principal_dchar n", "have \"(\\<Sum>m=1..x. \\<chi> m) = (\\<Sum>m | m \\<in> {1..x} \\<and> coprime m n. \\<Phi> m)\""], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> principal_dchar n\n\ngoal (1 subgoal):\n 1. sum \\<chi> {1..x} = sum \\<Phi> {m \\<in> {1..x}. coprime m n}", "by (intro sum.mono_neutral_cong_right) (auto simp: eq_zero_iff principal_decomposition)"], ["proof (state)\nthis:\n  sum \\<chi> {1..x} = sum \\<Phi> {m \\<in> {1..x}. coprime m n}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  sum \\<chi> {1..x} = sum \\<Phi> {m \\<in> {1..x}. coprime m n}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = (\\<Sum>m=1..x. \\<Phi> m * (\\<Sum>d | d dvd gcd m n. moebius_mu d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum \\<Phi> {m \\<in> {1..x}. coprime m n} =\n    (\\<Sum>m = 1..x. \\<Phi> m * (\\<Sum>d | d dvd gcd m n. moebius_mu d))", "by (subst sum_moebius_mu_divisors', intro sum.mono_neutral_cong_left)\n       (auto simp: coprime_iff_gcd_eq_1 simp del: coprime_imp_gcd_eq_1)"], ["proof (state)\nthis:\n  sum \\<Phi> {m \\<in> {1..x}. coprime m n} =\n  (\\<Sum>m = 1..x. \\<Phi> m * (\\<Sum>d | d dvd gcd m n. moebius_mu d))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  sum \\<Phi> {m \\<in> {1..x}. coprime m n} =\n  (\\<Sum>m = 1..x. \\<Phi> m * (\\<Sum>d | d dvd gcd m n. moebius_mu d))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = (\\<Sum>m=1..x. \\<Sum>d | d dvd gcd m n. \\<Phi> m * moebius_mu d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. \\<Phi> m * (\\<Sum>d | d dvd gcd m n. moebius_mu d)) =\n    (\\<Sum>m = 1..x. \\<Sum>d | d dvd gcd m n. \\<Phi> m * moebius_mu d)", "by (simp add: sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. \\<Phi> m * (\\<Sum>d | d dvd gcd m n. moebius_mu d)) =\n  (\\<Sum>m = 1..x. \\<Sum>d | d dvd gcd m n. \\<Phi> m * moebius_mu d)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. \\<Phi> m * (\\<Sum>d | d dvd gcd m n. moebius_mu d)) =\n  (\\<Sum>m = 1..x. \\<Sum>d | d dvd gcd m n. \\<Phi> m * moebius_mu d)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = (\\<Sum>m=1..x. \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x. \\<Sum>d | d dvd gcd m n. \\<Phi> m * moebius_mu d) =\n    (\\<Sum>m = 1..x.\n        \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d)", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. \\<Sum>d | d dvd gcd m n. \\<Phi> m * moebius_mu d) =\n  (\\<Sum>m = 1..x.\n      \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x. \\<Sum>d | d dvd gcd m n. \\<Phi> m * moebius_mu d) =\n  (\\<Sum>m = 1..x.\n      \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}). \\<Phi> m * moebius_mu d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x.\n        \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d) =\n    (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}).\n       \\<Phi> m * moebius_mu d)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>m = 1..x.\n        \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d) =\n    (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}).\n       \\<Phi> m * moebius_mu d)", "by (subst sum.Sigma) auto"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x.\n      \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d) =\n  (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}).\n     \\<Phi> m * moebius_mu d)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m = 1..x.\n      \\<Sum>d | d dvd m \\<and> d dvd n. \\<Phi> m * moebius_mu d) =\n  (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}).\n     \\<Phi> m * moebius_mu d)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = (\\<Sum>(d, q)\\<in>(SIGMA d:{d. d dvd n}. {1..x div d}). moebius_mu d * \\<Phi> (d * q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}).\n       \\<Phi> m * moebius_mu d) =\n    (\\<Sum>(d, q)\\<in>(SIGMA d:{d. d dvd n}. {1..x div d}).\n       moebius_mu d * \\<Phi> (d * q))", "by (intro sum.reindex_bij_witness[of _ \"\\<lambda>(d,q). (d * q, d)\" \"\\<lambda>(m,d). (d, m div d)\"])\n       (auto simp: * ** Suc_le_eq)"], ["proof (state)\nthis:\n  (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}).\n     \\<Phi> m * moebius_mu d) =\n  (\\<Sum>(d, q)\\<in>(SIGMA d:{d. d dvd n}. {1..x div d}).\n     moebius_mu d * \\<Phi> (d * q))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>(m, d)\\<in>(SIGMA m:{1..x}. {d. d dvd m \\<and> d dvd n}).\n     \\<Phi> m * moebius_mu d) =\n  (\\<Sum>(d, q)\\<in>(SIGMA d:{d. d dvd n}. {1..x div d}).\n     moebius_mu d * \\<Phi> (d * q))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * (\\<Sum>q=1..x div d. \\<Phi> q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(d, q)\\<in>(SIGMA d:{d. d dvd n}. {1..x div d}).\n       moebius_mu d * \\<Phi> (d * q)) =\n    (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>(d, q)\\<in>(SIGMA d:{d. d dvd n}. {1..x div d}).\n       moebius_mu d * \\<Phi> (d * q)) =\n    (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})", "by (subst sum.Sigma [symmetric]) (auto simp: sum_distrib_left mult.assoc)"], ["proof (state)\nthis:\n  (\\<Sum>(d, q)\\<in>(SIGMA d:{d. d dvd n}. {1..x div d}).\n     moebius_mu d * \\<Phi> (d * q)) =\n  (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "finally"], ["proof (chain)\npicking this:\n  sum \\<chi> {1..x} =\n  (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})", "have eq: \"(\\<Sum>m=1..x. \\<chi> m) = \\<dots>\""], ["proof (prove)\nusing this:\n  sum \\<chi> {1..x} =\n  (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})\n\ngoal (1 subgoal):\n 1. sum \\<chi> {1..x} =\n    (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})", "."], ["proof (state)\nthis:\n  sum \\<chi> {1..x} =\n  (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"norm (\\<Sum>m=1..x. \\<chi> m) \\<le>\n          (\\<Sum>d | d dvd n. norm (moebius_mu d * \\<Phi> d) * norm (\\<Sum>q=1..x div d. \\<Phi> q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    \\<le> (\\<Sum>d | d dvd n.\n             cmod (moebius_mu d * \\<Phi> d) *\n             cmod (sum \\<Phi> {1..x div d}))", "unfolding eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>d | d dvd n. moebius_mu d * \\<Phi> d * sum \\<Phi> {1..x div d})\n    \\<le> (\\<Sum>d | d dvd n.\n             cmod (moebius_mu d * \\<Phi> d) *\n             cmod (sum \\<Phi> {1..x div d}))", "by (intro sum_norm_le) (simp add: norm_mult)"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>d | d dvd n.\n           cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d}))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x})\n  \\<le> (\\<Sum>d | d dvd n.\n           cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d}))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> < (\\<Sum>d | d dvd n. norm (moebius_mu d * \\<Phi> d) * (sqrt c * ln c))\"\n    (is \"sum ?lhs _ < sum ?rhs _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d}))\n    < (\\<Sum>d | d dvd n.\n         cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c)))", "proof (rule sum_strict_mono_ex1)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite {d. d dvd n}\n 2. \\<forall>xa\\<in>{d. d dvd n}.\n       cmod (moebius_mu xa * \\<Phi> xa) * cmod (sum \\<Phi> {1..x div xa})\n       \\<le> cmod (moebius_mu xa * \\<Phi> xa) *\n             (sqrt (real c) * ln (real c))\n 3. \\<exists>a\\<in>{d. d dvd n}.\n       cmod (moebius_mu a * \\<Phi> a) * cmod (sum \\<Phi> {1..x div a})\n       < cmod (moebius_mu a * \\<Phi> a) * (sqrt (real c) * ln (real c))", "show \"\\<forall>d\\<in>{d. d dvd n}. ?lhs d \\<le> ?rhs d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>{d. d dvd n}.\n       cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d})\n       \\<le> cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c))", "by (intro ballI mult_left_mono less_imp_le[OF \\<Phi>.polya_vinogradov_inequality_primitive]) auto"], ["proof (state)\nthis:\n  \\<forall>d\\<in>{d. d dvd n}.\n     cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d})\n     \\<le> cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c))\n\ngoal (2 subgoals):\n 1. finite {d. d dvd n}\n 2. \\<exists>a\\<in>{d. d dvd n}.\n       cmod (moebius_mu a * \\<Phi> a) * cmod (sum \\<Phi> {1..x div a})\n       < cmod (moebius_mu a * \\<Phi> a) * (sqrt (real c) * ln (real c))", "show \"\\<exists>d\\<in>{d. d dvd n}. ?lhs d < ?rhs d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>{d. d dvd n}.\n       cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d})\n       < cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c))", "by (intro bexI[of _ 1] mult_strict_left_mono \\<Phi>.polya_vinogradov_inequality_primitive) auto"], ["proof (state)\nthis:\n  \\<exists>d\\<in>{d. d dvd n}.\n     cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d})\n     < cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c))\n\ngoal (1 subgoal):\n 1. finite {d. d dvd n}", "qed (use n in auto)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d}))\n  < (\\<Sum>d | d dvd n.\n       cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     cmod (moebius_mu d * \\<Phi> d) * cmod (sum \\<Phi> {1..x div d}))\n  < (\\<Sum>d | d dvd n.\n       cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = sqrt c * ln c * (\\<Sum>d | d dvd n. norm (moebius_mu d * \\<Phi> d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n.\n       cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c))) =\n    sqrt (real c) * ln (real c) *\n    (\\<Sum>d | d dvd n. cmod (moebius_mu d * \\<Phi> d))", "by (simp add: sum_distrib_left sum_distrib_right mult_ac)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c))) =\n  sqrt (real c) * ln (real c) *\n  (\\<Sum>d | d dvd n. cmod (moebius_mu d * \\<Phi> d))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n.\n     cmod (moebius_mu d * \\<Phi> d) * (sqrt (real c) * ln (real c))) =\n  sqrt (real c) * ln (real c) *\n  (\\<Sum>d | d dvd n. cmod (moebius_mu d * \\<Phi> d))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"(\\<Sum>d | d dvd n. norm (moebius_mu d * \\<Phi> d)) =\n               (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n. cmod (moebius_mu d * \\<Phi> d)) =\n    (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n. cmod (moebius_mu d * \\<Phi> d)) =\n    (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1)", "by (intro sum.mono_neutral_cong_right)\n               (auto simp: moebius_mu_def \\<Phi>.eq_zero_iff norm_mult norm_power \\<Phi>.norm)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. cmod (moebius_mu d * \\<Phi> d)) =\n  (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n. cmod (moebius_mu d * \\<Phi> d)) =\n  (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"\\<dots> = card {d. d dvd n \\<and> squarefree d \\<and> coprime d c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1) =\n    real (card {d. d dvd n \\<and> squarefree d \\<and> coprime d c})", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1) =\n  real (card {d. d dvd n \\<and> squarefree d \\<and> coprime d c})\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd n \\<and> squarefree d \\<and> coprime d c. 1) =\n  real (card {d. d dvd n \\<and> squarefree d \\<and> coprime d c})\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"card {d. d dvd n \\<and> squarefree d \\<and> coprime d c} \\<le> card {d. d dvd (n div c)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {d. d dvd n \\<and> squarefree d \\<and> coprime d c}\n    \\<le> card {d. d dvd n div c}", "proof (intro card_mono; safe?)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {d. d dvd n div c}\n 2. \\<And>x.\n       \\<lbrakk>x dvd n; squarefree x; coprime x c\\<rbrakk>\n       \\<Longrightarrow> x dvd n div c", "show \"finite {d. d dvd (n div c)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {d. d dvd n div c}", "using dvd_div_eq_0_iff[of c n] n conductor_dvd"], ["proof (prove)\nusing this:\n  c dvd n \\<Longrightarrow> (n div c = 0) = (n = 0)\n  1 < n\n  c dvd n\n\ngoal (1 subgoal):\n 1. finite {d. d dvd n div c}", "by (intro finite_divisors_nat) auto"], ["proof (state)\nthis:\n  finite {d. d dvd n div c}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd n; squarefree x; coprime x c\\<rbrakk>\n       \\<Longrightarrow> x dvd n div c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd n; squarefree x; coprime x c\\<rbrakk>\n       \\<Longrightarrow> x dvd n div c", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd n; squarefree x; coprime x c\\<rbrakk>\n       \\<Longrightarrow> x dvd n div c", "assume d: \"d dvd n\" \"squarefree d\" \"coprime d c\""], ["proof (state)\nthis:\n  d dvd n\n  squarefree d\n  coprime d c\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd n; squarefree x; coprime x c\\<rbrakk>\n       \\<Longrightarrow> x dvd n div c", "hence \"d > 0\""], ["proof (prove)\nusing this:\n  d dvd n\n  squarefree d\n  coprime d c\n\ngoal (1 subgoal):\n 1. 0 < d", "by (intro Nat.gr0I) auto"], ["proof (state)\nthis:\n  0 < d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x dvd n; squarefree x; coprime x c\\<rbrakk>\n       \\<Longrightarrow> x dvd n div c", "show \"d dvd (n div c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd n div c", "proof (rule multiplicity_le_imp_dvd)"], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<noteq> 0\n 2. \\<And>p.\n       prime p \\<Longrightarrow>\n       multiplicity p d \\<le> multiplicity p (n div c)", "fix p :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<noteq> 0\n 2. \\<And>p.\n       prime p \\<Longrightarrow>\n       multiplicity p d \\<le> multiplicity p (n div c)", "assume p: \"prime p\""], ["proof (state)\nthis:\n  prime p\n\ngoal (2 subgoals):\n 1. d \\<noteq> 0\n 2. \\<And>p.\n       prime p \\<Longrightarrow>\n       multiplicity p d \\<le> multiplicity p (n div c)", "show \"multiplicity p d \\<le> multiplicity p (n div c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicity p d \\<le> multiplicity p (n div c)", "proof (cases \"p dvd d\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)\n 2. \\<not> p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)", "assume \"p dvd d\""], ["proof (state)\nthis:\n  p dvd d\n\ngoal (2 subgoals):\n 1. p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)\n 2. \\<not> p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)", "with d \\<open>d > 0\\<close> p"], ["proof (chain)\npicking this:\n  d dvd n\n  squarefree d\n  coprime d c\n  0 < d\n  prime p\n  p dvd d", "have \"multiplicity p d = 1\""], ["proof (prove)\nusing this:\n  d dvd n\n  squarefree d\n  coprime d c\n  0 < d\n  prime p\n  p dvd d\n\ngoal (1 subgoal):\n 1. multiplicity p d = 1", "by (auto simp: squarefree_factorial_semiring' in_prime_factors_iff)"], ["proof (state)\nthis:\n  multiplicity p d = 1\n\ngoal (2 subgoals):\n 1. p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)\n 2. \\<not> p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)", "moreover"], ["proof (state)\nthis:\n  multiplicity p d = 1\n\ngoal (2 subgoals):\n 1. p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)\n 2. \\<not> p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)", "have \"p dvd (n div c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p dvd n div c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p dvd n div c", "have \"p dvd c * (n div c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p dvd c * (n div c)", "using \\<open>p dvd d\\<close> \\<open>d dvd n\\<close> conductor_dvd"], ["proof (prove)\nusing this:\n  p dvd d\n  d dvd n\n  c dvd n\n\ngoal (1 subgoal):\n 1. p dvd c * (n div c)", "by auto"], ["proof (state)\nthis:\n  p dvd c * (n div c)\n\ngoal (1 subgoal):\n 1. p dvd n div c", "moreover"], ["proof (state)\nthis:\n  p dvd c * (n div c)\n\ngoal (1 subgoal):\n 1. p dvd n div c", "have \"\\<not>(p dvd c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p dvd c", "using d p \\<open>p dvd d\\<close> coprime_common_divisor not_prime_unit"], ["proof (prove)\nusing this:\n  d dvd n\n  squarefree d\n  coprime d c\n  prime p\n  p dvd d\n  \\<lbrakk>coprime ?a ?b; ?c dvd ?a; ?c dvd ?b\\<rbrakk>\n  \\<Longrightarrow> is_unit ?c\n  is_unit ?x \\<Longrightarrow> \\<not> prime ?x\n\ngoal (1 subgoal):\n 1. \\<not> p dvd c", "by blast"], ["proof (state)\nthis:\n  \\<not> p dvd c\n\ngoal (1 subgoal):\n 1. p dvd n div c", "ultimately"], ["proof (chain)\npicking this:\n  p dvd c * (n div c)\n  \\<not> p dvd c", "show \"p dvd (n div c)\""], ["proof (prove)\nusing this:\n  p dvd c * (n div c)\n  \\<not> p dvd c\n\ngoal (1 subgoal):\n 1. p dvd n div c", "using p prime_dvd_mult_iff"], ["proof (prove)\nusing this:\n  p dvd c * (n div c)\n  \\<not> p dvd c\n  prime p\n  prime ?p \\<Longrightarrow> (?p dvd ?a * ?b) = (?p dvd ?a \\<or> ?p dvd ?b)\n\ngoal (1 subgoal):\n 1. p dvd n div c", "by blast"], ["proof (state)\nthis:\n  p dvd n div c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p dvd n div c\n\ngoal (2 subgoals):\n 1. p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)\n 2. \\<not> p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)", "hence \"multiplicity p (n div c) \\<ge> 1\""], ["proof (prove)\nusing this:\n  p dvd n div c\n\ngoal (1 subgoal):\n 1. 1 \\<le> multiplicity p (n div c)", "using n p conductor_dvd dvd_div_eq_0_iff[of c n]"], ["proof (prove)\nusing this:\n  p dvd n div c\n  1 < n\n  prime p\n  c dvd n\n  c dvd n \\<Longrightarrow> (n div c = 0) = (n = 0)\n\ngoal (1 subgoal):\n 1. 1 \\<le> multiplicity p (n div c)", "by (intro multiplicity_geI) (auto intro: Nat.gr0I)"], ["proof (state)\nthis:\n  1 \\<le> multiplicity p (n div c)\n\ngoal (2 subgoals):\n 1. p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)\n 2. \\<not> p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)", "ultimately"], ["proof (chain)\npicking this:\n  multiplicity p d = 1\n  1 \\<le> multiplicity p (n div c)", "show ?thesis"], ["proof (prove)\nusing this:\n  multiplicity p d = 1\n  1 \\<le> multiplicity p (n div c)\n\ngoal (1 subgoal):\n 1. multiplicity p d \\<le> multiplicity p (n div c)", "by simp"], ["proof (state)\nthis:\n  multiplicity p d \\<le> multiplicity p (n div c)\n\ngoal (1 subgoal):\n 1. \\<not> p dvd d \\<Longrightarrow>\n    multiplicity p d \\<le> multiplicity p (n div c)", "qed (auto simp: not_dvd_imp_multiplicity_0)"], ["proof (state)\nthis:\n  multiplicity p d \\<le> multiplicity p (n div c)\n\ngoal (1 subgoal):\n 1. d \\<noteq> 0", "qed (use \\<open>d > 0\\<close> in simp_all)"], ["proof (state)\nthis:\n  d dvd n div c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {d. d dvd n \\<and> squarefree d \\<and> coprime d c}\n  \\<le> card {d. d dvd n div c}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "also"], ["proof (state)\nthis:\n  card {d. d dvd n \\<and> squarefree d \\<and> coprime d c}\n  \\<le> card {d. d dvd n div c}\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "have \"card {d. d dvd (n div c)} = divisor_count (n div c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {d. d dvd n div c} = divisor_count (n div c)", "by (simp add: divisor_count_def)"], ["proof (state)\nthis:\n  card {d. d dvd n div c} = divisor_count (n div c)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      sqrt (real c) * ln (real c) * real x\n      \\<le> sqrt (real c) * ln (real c) * real y) \\<Longrightarrow>\n  cmod (sum \\<chi> {1..x})\n  < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "show \"norm (sum \\<chi> {1..x}) < sqrt c * ln c * divisor_count (n div c)\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      sqrt (real c) * ln (real c) * real x\n      \\<le> sqrt (real c) * ln (real c) * real y) \\<Longrightarrow>\n  cmod (sum \\<chi> {1..x})\n  < sqrt (real c) * ln (real c) * real (divisor_count (n div c))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "using conductor_gr_0"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      sqrt (real c) * ln (real c) * real x\n      \\<le> sqrt (real c) * ln (real c) * real y) \\<Longrightarrow>\n  cmod (sum \\<chi> {1..x})\n  < sqrt (real c) * ln (real c) * real (divisor_count (n div c))\n  0 < c\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real c) * ln (real c) * real (divisor_count (n div c))", "by (simp add: mult_left_mono)"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x})\n  < sqrt (real c) * ln (real c) * real (divisor_count (n div c))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: Move? *)"], ["", "text \\<open>\n  Next, we obtain a suitable upper bound on the number of divisors of \\<open>n\\<close>:\n\\<close>"], ["", "lemma divisor_count_upper_bound_aux:\n  fixes n :: nat\n  shows \"divisor_count n \\<le> 2 * card {d. d dvd n \\<and> d \\<le> sqrt n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "hence n: \"n > 0\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have *: \"x > 0\" if \"x dvd n\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x", "using that n"], ["proof (prove)\nusing this:\n  x dvd n\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < x", "by (auto intro!: Nat.gr0I)"], ["proof (state)\nthis:\n  ?x dvd n \\<Longrightarrow> 0 < ?x\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have **: \"real n = sqrt (real n) * sqrt (real n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n = sqrt (real n) * sqrt (real n)", "by simp"], ["proof (state)\nthis:\n  real n = sqrt (real n) * sqrt (real n)\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have ***: \"n < x * sqrt n \\<longleftrightarrow> sqrt n < x\" \"x * sqrt n < n \\<longleftrightarrow> x < sqrt n\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (real n < x * sqrt (real n)) = (sqrt (real n) < x) &&&\n    (x * sqrt (real n) < real n) = (x < sqrt (real n))", "by (metis ** n of_nat_0_less_iff mult_less_iff1 real_sqrt_gt_0_iff)+"], ["proof (state)\nthis:\n  (real n < ?x * sqrt (real n)) = (sqrt (real n) < ?x)\n  (?x * sqrt (real n) < real n) = (?x < sqrt (real n))\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have \"divisor_count n = card {d. d dvd n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count n = card {d. d dvd n}", "by (simp add: divisor_count_def)"], ["proof (state)\nthis:\n  divisor_count n = card {d. d dvd n}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "also"], ["proof (state)\nthis:\n  divisor_count n = card {d. d dvd n}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have \"{d. d dvd n} = {d. d dvd n \\<and> d \\<le> sqrt n} \\<union> {d. d dvd n \\<and> d > sqrt n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {d. d dvd n} =\n    {d. d dvd n \\<and> real d \\<le> sqrt (real n)} \\<union>\n    {d. d dvd n \\<and> sqrt (real n) < real d}", "by auto"], ["proof (state)\nthis:\n  {d. d dvd n} =\n  {d. d dvd n \\<and> real d \\<le> sqrt (real n)} \\<union>\n  {d. d dvd n \\<and> sqrt (real n) < real d}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "also"], ["proof (state)\nthis:\n  {d. d dvd n} =\n  {d. d dvd n \\<and> real d \\<le> sqrt (real n)} \\<union>\n  {d. d dvd n \\<and> sqrt (real n) < real d}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have \"card \\<dots> = card {d. d dvd n \\<and> d \\<le> sqrt n} + card {d. d dvd n \\<and> d > sqrt n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({d. d dvd n \\<and> real d \\<le> sqrt (real n)} \\<union>\n      {d. d dvd n \\<and> sqrt (real n) < real d}) =\n    card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n    card {d. d dvd n \\<and> sqrt (real n) < real d}", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. card\n     ({d. d dvd n \\<and> real d \\<le> sqrt (real n)} \\<union>\n      {d. d dvd n \\<and> sqrt (real n) < real d}) =\n    card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n    card {d. d dvd n \\<and> sqrt (real n) < real d}", "by (subst card_Un_disjoint) auto"], ["proof (state)\nthis:\n  card\n   ({d. d dvd n \\<and> real d \\<le> sqrt (real n)} \\<union>\n    {d. d dvd n \\<and> sqrt (real n) < real d}) =\n  card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n  card {d. d dvd n \\<and> sqrt (real n) < real d}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "also"], ["proof (state)\nthis:\n  card\n   ({d. d dvd n \\<and> real d \\<le> sqrt (real n)} \\<union>\n    {d. d dvd n \\<and> sqrt (real n) < real d}) =\n  card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n  card {d. d dvd n \\<and> sqrt (real n) < real d}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have \"bij_betw (\\<lambda>d. n div d) {d. d dvd n \\<and> d > sqrt n} {d. d dvd n \\<and> d < sqrt n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((div) n) {d. d dvd n \\<and> sqrt (real n) < real d}\n     {d. d dvd n \\<and> real d < sqrt (real n)}", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. bij_betw ((div) n) {d. d dvd n \\<and> sqrt (real n) < real d}\n     {d. d dvd n \\<and> real d < sqrt (real n)}", "by (intro bij_betwI[of _ _ _ \"\\<lambda>d. n div d\"])\n               (auto simp: Real.real_of_nat_div real_sqrt_divide field_simps * ***)"], ["proof (state)\nthis:\n  bij_betw ((div) n) {d. d dvd n \\<and> sqrt (real n) < real d}\n   {d. d dvd n \\<and> real d < sqrt (real n)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "hence \"card {d. d dvd n \\<and> d > sqrt n} = card {d. d dvd n \\<and> d < sqrt n}\""], ["proof (prove)\nusing this:\n  bij_betw ((div) n) {d. d dvd n \\<and> sqrt (real n) < real d}\n   {d. d dvd n \\<and> real d < sqrt (real n)}\n\ngoal (1 subgoal):\n 1. card {d. d dvd n \\<and> sqrt (real n) < real d} =\n    card {d. d dvd n \\<and> real d < sqrt (real n)}", "by (rule bij_betw_same_card)"], ["proof (state)\nthis:\n  card {d. d dvd n \\<and> sqrt (real n) < real d} =\n  card {d. d dvd n \\<and> real d < sqrt (real n)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "also"], ["proof (state)\nthis:\n  card {d. d dvd n \\<and> sqrt (real n) < real d} =\n  card {d. d dvd n \\<and> real d < sqrt (real n)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "have \"\\<dots> \\<le> card {d. d dvd n \\<and> d \\<le> sqrt n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {d. d dvd n \\<and> real d < sqrt (real n)}\n    \\<le> card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "using n"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. card {d. d dvd n \\<and> real d < sqrt (real n)}\n    \\<le> card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "by (intro card_mono) auto"], ["proof (state)\nthis:\n  card {d. d dvd n \\<and> real d < sqrt (real n)}\n  \\<le> card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} + x\n      \\<le> card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n            y) \\<Longrightarrow>\n  divisor_count n\n  \\<le> card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n        card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "show \"divisor_count n \\<le> 2 * \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} + x\n      \\<le> card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n            y) \\<Longrightarrow>\n  divisor_count n\n  \\<le> card {d. d dvd n \\<and> real d \\<le> sqrt (real n)} +\n        card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n\ngoal (1 subgoal):\n 1. divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "by simp"], ["proof (state)\nthis:\n  divisor_count n\n  \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "qed auto"], ["", "lemma divisor_count_upper_bound:\n  fixes n :: nat\n  shows \"divisor_count n \\<le> 2 * nat \\<lfloor>sqrt n\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "have \"divisor_count n \\<le> 2 * card {d. d dvd n \\<and> d \\<le> sqrt n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. divisor_count n\n    \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}", "by (rule divisor_count_upper_bound_aux)"], ["proof (state)\nthis:\n  divisor_count n\n  \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "also"], ["proof (state)\nthis:\n  divisor_count n\n  \\<le> 2 * card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "have \"card {d. d dvd n \\<and> d \\<le> sqrt n} \\<le> card {1..nat \\<lfloor>sqrt n\\<rfloor>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n    \\<le> card {1..nat \\<lfloor>sqrt (real n)\\<rfloor>}", "using False"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n    \\<le> card {1..nat \\<lfloor>sqrt (real n)\\<rfloor>}", "by (intro card_mono) (auto simp: le_nat_iff le_floor_iff Suc_le_eq intro!: Nat.gr0I)"], ["proof (state)\nthis:\n  card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n  \\<le> card {1..nat \\<lfloor>sqrt (real n)\\<rfloor>}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "also"], ["proof (state)\nthis:\n  card {d. d dvd n \\<and> real d \\<le> sqrt (real n)}\n  \\<le> card {1..nat \\<lfloor>sqrt (real n)\\<rfloor>}\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "have \"\\<dots> = nat \\<lfloor>sqrt n\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {1..nat \\<lfloor>sqrt (real n)\\<rfloor>} =\n    nat \\<lfloor>sqrt (real n)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  card {1..nat \\<lfloor>sqrt (real n)\\<rfloor>} =\n  nat \\<lfloor>sqrt (real n)\\<rfloor>\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> 2 * x \\<le> 2 * y) \\<Longrightarrow>\n  divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow> 2 * x \\<le> 2 * y) \\<Longrightarrow>\n  divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n\ngoal (1 subgoal):\n 1. divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n\ngoal (1 subgoal):\n 1. n = 0 \\<Longrightarrow>\n    divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>", "qed auto"], ["", "lemma divisor_count_upper_bound':\n  fixes n :: nat\n  shows \"real (divisor_count n) \\<le> 2 * sqrt n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (divisor_count n) \\<le> 2 * sqrt (real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (divisor_count n) \\<le> 2 * sqrt (real n)", "have \"real (divisor_count n) \\<le> 2 * real (nat \\<lfloor>sqrt n\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (divisor_count n)\n    \\<le> 2 * real (nat \\<lfloor>sqrt (real n)\\<rfloor>)", "using divisor_count_upper_bound[of n]"], ["proof (prove)\nusing this:\n  divisor_count n \\<le> 2 * nat \\<lfloor>sqrt (real n)\\<rfloor>\n\ngoal (1 subgoal):\n 1. real (divisor_count n)\n    \\<le> 2 * real (nat \\<lfloor>sqrt (real n)\\<rfloor>)", "by linarith"], ["proof (state)\nthis:\n  real (divisor_count n)\n  \\<le> 2 * real (nat \\<lfloor>sqrt (real n)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. real (divisor_count n) \\<le> 2 * sqrt (real n)", "also"], ["proof (state)\nthis:\n  real (divisor_count n)\n  \\<le> 2 * real (nat \\<lfloor>sqrt (real n)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. real (divisor_count n) \\<le> 2 * sqrt (real n)", "have \"\\<dots> \\<le> 2 * sqrt n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * real (nat \\<lfloor>sqrt (real n)\\<rfloor>) \\<le> 2 * sqrt (real n)", "by simp"], ["proof (state)\nthis:\n  2 * real (nat \\<lfloor>sqrt (real n)\\<rfloor>) \\<le> 2 * sqrt (real n)\n\ngoal (1 subgoal):\n 1. real (divisor_count n) \\<le> 2 * sqrt (real n)", "finally"], ["proof (chain)\npicking this:\n  real (divisor_count n) \\<le> 2 * sqrt (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (divisor_count n) \\<le> 2 * sqrt (real n)\n\ngoal (1 subgoal):\n 1. real (divisor_count n) \\<le> 2 * sqrt (real n)", "."], ["proof (state)\nthis:\n  real (divisor_count n) \\<le> 2 * sqrt (real n)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* END TODO *)"], ["", "text \\<open>\n  We are now ready to prove the `regular' P?lya--Vinogradov inequality.\n\n  Apostol formulates it in the following way (Theorem 13.15, notation adapted):\n  `If \\<open>\\<chi>\\<close> is any nonprincipal character mod \\<open>n\\<close>, then for all \\<open>x \\<ge> 2\\<close> we have\n  $\\sum_{m\\leq x} \\chi(m) = O(\\sqrt{n}\\log n)$.'\n\n  The precondition \\<open>x \\<ge> 2\\<close> here is completely unnecessary. The `Big-O' notation is somewhat\n  problematic since it does not make explicit in what way the variables are quantified\n  (in particular the \\<open>x\\<close> and the \\<open>\\<chi>\\<close>). The statement of the theorem in this way (for a fixed\n  character \\<open>\\<chi>\\<close>) seems to suggest that \\<open>n\\<close> is fixed here, which would make the use of `Big-O'\n  completely vacuous, since it is an asymptotic statement about \\<open>n\\<close>.\n\n  We therefore decided to formulate the inequality in the following more explicit way,\n  even giving an explicit constant factor:\n\\<close>"], ["", "theorem (in dcharacter) polya_vinogradov_inequality:\n  assumes nonprincipal: \"\\<chi> \\<noteq> principal_dchar n\"\n  shows   \"norm (\\<Sum>m=1..x. \\<chi> m) < 2 * sqrt n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "have \"n div conductor > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n div conductor", "using n conductor_dvd dvd_div_eq_0_iff[of conductor n]"], ["proof (prove)\nusing this:\n  1 < n\n  conductor dvd n\n  conductor dvd n \\<Longrightarrow> (n div conductor = 0) = (n = 0)\n\ngoal (1 subgoal):\n 1. 0 < n div conductor", "by auto"], ["proof (state)\nthis:\n  0 < n div conductor\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "have \"norm (\\<Sum>m=1..x. \\<chi> m) < sqrt conductor * ln conductor * divisor_count (n div conductor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real conductor) * ln (real conductor) *\n      real (divisor_count (n div conductor))", "using nonprincipal"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> principal_dchar n\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x})\n    < sqrt (real conductor) * ln (real conductor) *\n      real (divisor_count (n div conductor))", "by (rule polya_vinogradov_inequality_explicit)"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x})\n  < sqrt (real conductor) * ln (real conductor) *\n    real (divisor_count (n div conductor))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x})\n  < sqrt (real conductor) * ln (real conductor) *\n    real (divisor_count (n div conductor))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "have \"\\<dots> \\<le> sqrt conductor * ln conductor * (2 * sqrt (n div conductor))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real conductor) * ln (real conductor) *\n    real (divisor_count (n div conductor))\n    \\<le> sqrt (real conductor) * ln (real conductor) *\n          (2 * sqrt (real (n div conductor)))", "using conductor_gr_0 \\<open>n div conductor > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < conductor\n  0 < n div conductor\n\ngoal (1 subgoal):\n 1. sqrt (real conductor) * ln (real conductor) *\n    real (divisor_count (n div conductor))\n    \\<le> sqrt (real conductor) * ln (real conductor) *\n          (2 * sqrt (real (n div conductor)))", "by (intro mult_left_mono divisor_count_upper_bound') (auto simp: Suc_le_eq)"], ["proof (state)\nthis:\n  sqrt (real conductor) * ln (real conductor) *\n  real (divisor_count (n div conductor))\n  \\<le> sqrt (real conductor) * ln (real conductor) *\n        (2 * sqrt (real (n div conductor)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sqrt (real conductor) * ln (real conductor) *\n  real (divisor_count (n div conductor))\n  \\<le> sqrt (real conductor) * ln (real conductor) *\n        (2 * sqrt (real (n div conductor)))\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "have \"sqrt (n div conductor) = sqrt n / sqrt conductor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real (n div conductor)) = sqrt (real n) / sqrt (real conductor)", "using conductor_dvd"], ["proof (prove)\nusing this:\n  conductor dvd n\n\ngoal (1 subgoal):\n 1. sqrt (real (n div conductor)) = sqrt (real n) / sqrt (real conductor)", "by (simp add: Real.real_of_nat_div real_sqrt_divide)"], ["proof (state)\nthis:\n  sqrt (real (n div conductor)) = sqrt (real n) / sqrt (real conductor)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sqrt (real (n div conductor)) = sqrt (real n) / sqrt (real conductor)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "have \"sqrt conductor * ln conductor * (2 * (sqrt n / sqrt conductor)) =\n               2 * sqrt n * ln conductor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real conductor) * ln (real conductor) *\n    (2 * (sqrt (real n) / sqrt (real conductor))) =\n    2 * sqrt (real n) * ln (real conductor)", "using conductor_gr_0 n"], ["proof (prove)\nusing this:\n  0 < conductor\n  1 < n\n\ngoal (1 subgoal):\n 1. sqrt (real conductor) * ln (real conductor) *\n    (2 * (sqrt (real n) / sqrt (real conductor))) =\n    2 * sqrt (real n) * ln (real conductor)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  sqrt (real conductor) * ln (real conductor) *\n  (2 * (sqrt (real n) / sqrt (real conductor))) =\n  2 * sqrt (real n) * ln (real conductor)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "also"], ["proof (state)\nthis:\n  sqrt (real conductor) * ln (real conductor) *\n  (2 * (sqrt (real n) / sqrt (real conductor))) =\n  2 * sqrt (real n) * ln (real conductor)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "have \"\\<dots> \\<le> 2 * sqrt n * ln n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * sqrt (real n) * ln (real conductor)\n    \\<le> 2 * sqrt (real n) * ln (real n)", "using conductor_le_modulus conductor_gr_0"], ["proof (prove)\nusing this:\n  conductor \\<le> n\n  0 < conductor\n\ngoal (1 subgoal):\n 1. 2 * sqrt (real n) * ln (real conductor)\n    \\<le> 2 * sqrt (real n) * ln (real n)", "by (intro mult_left_mono) auto"], ["proof (state)\nthis:\n  2 * sqrt (real n) * ln (real conductor)\n  \\<le> 2 * sqrt (real n) * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "finally"], ["proof (chain)\npicking this:\n  cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)", "."], ["proof (state)\nthis:\n  cmod (sum \\<chi> {1..x}) < 2 * sqrt (real n) * ln (real n)\n\ngoal:\nNo subgoals!", "qed"], ["", "unbundle vec_lambda_notation"], ["", "end"]]}