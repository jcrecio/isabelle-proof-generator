{"file_name": "/home/qj213/afp-2021-10-22/thys/Groebner_Bases/Groebner_Bases.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Groebner_Bases", "problem_names": ["lemma crit_pair_same: \"fst (crit_pair p p) = snd (crit_pair p p)\"", "lemma crit_pair_swap: \"crit_pair p q = (snd (crit_pair q p), fst (crit_pair q p))\"", "lemma crit_pair_zero [simp]: \"fst (crit_pair 0 q) = 0\" and \"snd (crit_pair p 0) = 0\"", "lemma dgrad_p_set_le_crit_pair_zero: \"dgrad_p_set_le d {fst (crit_pair p 0)} {p}\"", "lemma dgrad_p_set_le_fst_crit_pair:\n  assumes \"dickson_grading d\"\n  shows \"dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\"", "lemma dgrad_p_set_le_snd_crit_pair:\n  assumes \"dickson_grading d\"\n  shows \"dgrad_p_set_le d {snd (crit_pair p q)} {p, q}\"", "lemma dgrad_p_set_closed_fst_crit_pair:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\" and \"q \\<in> dgrad_p_set d m\"\n  shows \"fst (crit_pair p q) \\<in> dgrad_p_set d m\"", "lemma dgrad_p_set_closed_snd_crit_pair:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\" and \"q \\<in> dgrad_p_set d m\"\n  shows \"snd (crit_pair p q) \\<in> dgrad_p_set d m\"", "lemma fst_crit_pair_below_lcs:\n  \"fst (crit_pair p q) \\<prec>\\<^sub>p monomial 1 (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\"", "lemma snd_crit_pair_below_lcs:\n  \"snd (crit_pair p q) \\<prec>\\<^sub>p monomial 1 (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\"", "lemma crit_pair_cbelow_same:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\"\n  shows \"crit_pair_cbelow_on d m F p p\"", "lemma crit_pair_cbelow_distinct_component:\n  assumes \"component_of_term (lt p) \\<noteq> component_of_term (lt q)\"\n  shows \"crit_pair_cbelow_on d m F p q\"", "lemma crit_pair_cbelow_sym:\n  assumes \"crit_pair_cbelow_on d m F p q\"\n  shows \"crit_pair_cbelow_on d m F q p\"", "lemma crit_pair_cs_imp_crit_pair_cbelow_on:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"p \\<in> dgrad_p_set d m\"\n    and \"q \\<in> dgrad_p_set d m\"\n    and \"relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\"\n  shows \"crit_pair_cbelow_on d m F p q\"", "lemma crit_pair_cbelow_mono:\n  assumes \"crit_pair_cbelow_on d m F p q\" and \"F \\<subseteq> G\"\n  shows \"crit_pair_cbelow_on d m G p q\"", "lemma lcs_red_single_fst_crit_pair:\n  assumes \"p \\<noteq> 0\" and \"component_of_term (lt p) = component_of_term (lt q)\"\n  defines \"t1 \\<equiv> lp p\"\n  defines \"t2 \\<equiv> lp q\"\n  shows \"red_single (monomial (- 1) (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n                    (fst (crit_pair p q)) p (lcs t1 t2 - t1)\"", "lemma GB_imp_crit_pair_cbelow_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"is_Groebner_basis F\"\n  assumes \"p \\<in> F\" and \"q \\<in> F\" and \"p \\<noteq> 0\" and \"q \\<noteq> 0\"\n  shows \"crit_pair_cbelow_on d m F p q\"", "lemma spoly_alt:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\"\n  shows \"spoly p q = fst (crit_pair p q) - snd (crit_pair p q)\"", "lemma spoly_same: \"spoly p p = 0\"", "lemma spoly_swap: \"spoly p q = - spoly q p\"", "lemma spoly_red_zero_imp_crit_pair_cbelow_on:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"p \\<in> dgrad_p_set d m\"\n    and \"q \\<in> dgrad_p_set d m\" and \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"(red F)\\<^sup>*\\<^sup>* (spoly p q) 0\"\n  shows \"crit_pair_cbelow_on d m F p q\"", "lemma dgrad_p_set_le_spoly_zero: \"dgrad_p_set_le d {spoly p 0} {p}\"", "lemma dgrad_p_set_le_spoly:\n  assumes \"dickson_grading d\"\n  shows \"dgrad_p_set_le d {spoly p q} {p, q}\"", "lemma dgrad_p_set_closed_spoly:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\" and \"q \\<in> dgrad_p_set d m\"\n  shows \"spoly p q \\<in> dgrad_p_set d m\"", "lemma components_spoly_subset: \"component_of_term ` keys (spoly p q) \\<subseteq> component_of_term ` Keys {p, q}\"", "lemma pmdl_closed_spoly:\n  assumes \"p \\<in> pmdl F\" and \"q \\<in> pmdl F\"\n  shows \"spoly p q \\<in> pmdl F\"", "lemma crit_pair_cbelow_imp_confluent_dgrad_p_set:\n  assumes dg: \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\"\n  assumes main: \"\\<And>p q. p \\<in> F \\<Longrightarrow> q \\<in> F \\<Longrightarrow> p \\<noteq> 0 \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> crit_pair_cbelow_on d m F p q\"\n  shows \"relation.is_confluent_on (red F) (dgrad_p_set d m)\"", "lemmas Buchberger_criterion_finite = Buchberger_criterion_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemma (in ordered_term) GB_imp_zero_reducibility:\n  assumes \"is_Groebner_basis G\" and \"f \\<in> pmdl G\"\n  shows \"(red G)\\<^sup>*\\<^sup>* f 0\"", "lemma (in ordered_term) GB_imp_reducibility:\n  assumes \"is_Groebner_basis G\" and \"f \\<noteq> 0\" and \"f \\<in> pmdl G\"\n  shows \"is_red G f\"", "lemma is_Groebner_basis_empty: \"is_Groebner_basis {}\"", "lemma is_Groebner_basis_singleton: \"is_Groebner_basis {f}\"", "lemma (in gd_powerprod) product_criterion:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> punit.dgrad_p_set d m\" and \"p \\<in> F\" and \"q \\<in> F\"\n    and \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"gcs (punit.lt p) (punit.lt q) = 0\"\n  shows \"punit.crit_pair_cbelow_on d m F p q\"", "lemma chain_criterion:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"p \\<in> F\" and \"q \\<in> F\"\n    and \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"lp r adds lcs (lp p) (lp q)\"\n    and \"component_of_term (lt r) = component_of_term (lt p)\"\n    and pr: \"crit_pair_cbelow_on d m F p r\" and rq: \"crit_pair_cbelow_on d m F r q\"\n  shows \"crit_pair_cbelow_on d m F p q\"", "lemma ord_p_wf_on:\n  assumes \"dickson_grading d\"\n  shows \"wfp_on (\\<prec>\\<^sub>p) (dgrad_p_set d m)\"", "lemma is_red_implies_0_red_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"B \\<subseteq> dgrad_p_set d m\"\n  assumes \"pmdl B \\<subseteq> pmdl A\" and \"\\<And>q. q \\<in> pmdl A \\<Longrightarrow> q \\<in> dgrad_p_set d m \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> is_red B q\"\n    and \"p \\<in> pmdl A\" and \"p \\<in> dgrad_p_set d m\"\n  shows \"(red B)\\<^sup>*\\<^sup>* p 0\"", "lemma is_red_implies_0_red_dgrad_p_set':\n  assumes \"dickson_grading d\" and \"B \\<subseteq> dgrad_p_set d m\"\n  assumes \"pmdl B \\<subseteq> pmdl A\" and \"\\<And>q. q \\<in> pmdl A \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> is_red B q\"\n    and \"p \\<in> pmdl A\"\n  shows \"(red B)\\<^sup>*\\<^sup>* p 0\"", "lemma pmdl_eqI_adds_lt_dgrad_p_set:\n  fixes G::\"('t \\<Rightarrow>\\<^sub>0 'b::field) set\"\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\" and \"B \\<subseteq> dgrad_p_set d m\" and \"pmdl G \\<subseteq> pmdl B\"\n  assumes \"\\<And>f. f \\<in> pmdl B \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\"\n  shows \"pmdl G = pmdl B\"", "lemma pmdl_eqI_adds_lt_dgrad_p_set':\n  fixes G::\"('t \\<Rightarrow>\\<^sub>0 'b::field) set\"\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\" and \"pmdl G \\<subseteq> pmdl B\"\n  assumes \"\\<And>f. f \\<in> pmdl B \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\"\n  shows \"pmdl G = pmdl B\"", "lemma GB_implies_unique_nf_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\"\n  shows \"\\<exists>! h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h\"", "lemma translation_property':\n  assumes \"p \\<noteq> 0\" and red_p_0: \"(red F)\\<^sup>*\\<^sup>* p 0\"\n  shows \"is_red F (p + q) \\<or> is_red F q\"", "lemma translation_property:\n  assumes \"p \\<noteq> q\" and red_0: \"(red F)\\<^sup>*\\<^sup>* (p - q) 0\"\n  shows \"is_red F p \\<or> is_red F q\"", "lemma weak_GB_is_strong_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>f. f \\<in> pmdl G \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0\"\n  shows \"is_Groebner_basis G\"", "lemma weak_GB_is_strong_GB:\n  assumes \"\\<And>f. f \\<in> (pmdl G) \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0\"\n  shows \"is_Groebner_basis G\"", "lemma isGB_I_is_red:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>f. f \\<in> pmdl G \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> is_red G f\"\n  shows \"is_Groebner_basis G\"", "lemma GB_alt_2_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  shows \"is_Groebner_basis G \\<longleftrightarrow> (\\<forall>f \\<in> pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f)\"", "lemma GB_adds_lt:\n  assumes \"is_Groebner_basis G\" and \"f \\<in> pmdl G\" and \"f \\<noteq> 0\"\n  obtains g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\"", "lemma isGB_I_adds_lt:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>f. f \\<in> pmdl G \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\"\n  shows \"is_Groebner_basis G\"", "lemma GB_alt_3_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  shows \"is_Groebner_basis G \\<longleftrightarrow> (\\<forall>f \\<in> pmdl G. f \\<noteq> 0 \\<longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f))\"\n    (is \"?L \\<longleftrightarrow> ?R\")", "lemma GB_insert:\n  assumes \"is_Groebner_basis G\" and \"f \\<in> pmdl G\"\n  shows \"is_Groebner_basis (insert f G)\"", "lemma GB_subset:\n  assumes \"is_Groebner_basis G\" and \"G \\<subseteq> G'\" and \"pmdl G' = pmdl G\"\n  shows \"is_Groebner_basis G'\"", "lemma (in ordered_term) GB_remove_0_stable_GB:\n  assumes \"is_Groebner_basis G\"\n  shows \"is_Groebner_basis (G - {0})\"", "lemmas is_red_implies_0_red_finite = is_red_implies_0_red_dgrad_p_set'[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_implies_unique_nf_finite = GB_implies_unique_nf_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_alt_2_finite = GB_alt_2_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_alt_3_finite = GB_alt_3_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas pmdl_eqI_adds_lt_finite = pmdl_eqI_adds_lt_dgrad_p_set'[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemma spoly_repI:\n  \"spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g) \\<Longrightarrow> (\\<And>g. q g \\<in> punit.dgrad_p_set d m) \\<Longrightarrow>\n    (\\<And>g. q g \\<odot> g \\<noteq> 0 \\<Longrightarrow> lt (q g \\<odot> g) \\<prec>\\<^sub>t term_of_pair (lcs (lp g1) (lp g2),\n                                                        component_of_term (lt g2))) \\<Longrightarrow>\n    spoly_rep d m G g1 g2\"", "lemma spoly_repI_zero:\n  assumes \"spoly g1 g2 = 0\"\n  shows \"spoly_rep d m G g1 g2\"", "lemma spoly_repE:\n  assumes \"spoly_rep d m G g1 g2\"\n  obtains q where \"spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g)\" and \"\\<And>g. q g \\<in> punit.dgrad_p_set d m\"\n    and \"\\<And>g. q g \\<odot> g \\<noteq> 0 \\<Longrightarrow> lt (q g \\<odot> g) \\<prec>\\<^sub>t term_of_pair (lcs (lp g1) (lp g2),\n                                                             component_of_term (lt g2))\"", "lemma isGB_I_spoly_rep:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\" and \"finite G\"\n    and \"\\<And>g1 g2. g1 \\<in> G \\<Longrightarrow> g2 \\<in> G \\<Longrightarrow> g1 \\<noteq> 0 \\<Longrightarrow> g2 \\<noteq> 0 \\<Longrightarrow> spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2\"\n  shows \"is_Groebner_basis G\"", "lemma replace_in_dgrad_p_set:\n  assumes \"G \\<subseteq> dgrad_p_set d m\"\n  obtains n where \"q \\<in> dgrad_p_set d n\" and \"G \\<subseteq> dgrad_p_set d n\"\n    and \"insert q (G - {p}) \\<subseteq> dgrad_p_set d n\"", "lemma GB_replace_lt_adds_stable_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"q \\<noteq> 0\" and q: \"q \\<in> (pmdl G)\" and \"lt q adds\\<^sub>t lt p\"\n  shows \"is_Groebner_basis (insert q (G - {p}))\" (is \"is_Groebner_basis ?G'\")", "lemma GB_replace_lt_adds_stable_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"q \\<noteq> 0\" and \"q \\<in> pmdl G\" and \"lt q adds\\<^sub>t lt p\"\n  shows \"pmdl (insert q (G - {p})) = pmdl G\" (is \"pmdl ?G' = pmdl G\")", "lemma GB_replace_red_stable_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and q: \"red (G - {p}) p q\"\n  shows \"is_Groebner_basis (insert q (G - {p}))\" (is \"is_Groebner_basis ?G'\")", "lemma GB_replace_red_stable_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and ptoq: \"red (G - {p}) p q\"\n  shows \"pmdl (insert q (G - {p})) = pmdl G\" (is \"pmdl ?G' = _\")", "lemma GB_replace_red_rtranclp_stable_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and ptoq: \"(red (G - {p}))\\<^sup>*\\<^sup>* p q\"\n  shows \"is_Groebner_basis (insert q (G - {p}))\"", "lemma GB_replace_red_rtranclp_stable_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and ptoq: \"(red (G - {p}))\\<^sup>*\\<^sup>* p q\"\n  shows \"pmdl (insert q (G - {p})) = pmdl G\"", "lemmas GB_replace_lt_adds_stable_GB_finite =\n  GB_replace_lt_adds_stable_GB_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_replace_lt_adds_stable_pmdl_finite =\n  GB_replace_lt_adds_stable_pmdl_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_replace_red_stable_GB_finite =\n  GB_replace_red_stable_GB_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_replace_red_stable_pmdl_finite =\n  GB_replace_red_stable_pmdl_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_replace_red_rtranclp_stable_GB_finite =\n  GB_replace_red_rtranclp_stable_GB_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemmas GB_replace_red_rtranclp_stable_pmdl_finite =\n  GB_replace_red_rtranclp_stable_pmdl_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]", "lemma ex_finite_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  obtains G where \"G \\<subseteq> dgrad_p_set d m\" and \"finite G\" and \"is_Groebner_basis G\" and \"pmdl G = pmdl F\"", "lemma some_GB_props_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"finite (some_GB F) \\<and> is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F\"", "lemma finite_some_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"finite (some_GB F)\"", "lemma some_GB_isGB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"is_Groebner_basis (some_GB F)\"", "lemma some_GB_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"pmdl (some_GB F) = pmdl F\"", "lemma finite_imp_finite_component_Keys:\n  assumes \"finite F\"\n  shows \"finite (component_of_term ` Keys F)\"", "lemma finite_some_GB_finite: \"finite F \\<Longrightarrow> finite (some_GB F)\"", "lemma some_GB_isGB_finite: \"finite F \\<Longrightarrow> is_Groebner_basis (some_GB F)\"", "lemma some_GB_pmdl_finite: \"finite F \\<Longrightarrow> pmdl (some_GB F) = pmdl F\"", "lemma red_supsetE:\n  assumes \"A \\<sqsupset>p B\"\n  obtains p where \"is_red A p\" and \"\\<not> is_red B p\"", "lemma red_supsetD:\n  assumes a1: \"A \\<sqsupset>p B\" and a2: \"is_red B p\"\n  shows \"is_red A p\"", "lemma red_supsetI [intro]:\n  assumes \"\\<And>q. is_red B q \\<Longrightarrow> is_red A q\" and \"is_red A p\" and \"\\<not> is_red B p\"\n  shows \"A \\<sqsupset>p B\"", "lemma red_supset_insertI:\n  assumes \"x \\<noteq> 0\" and \"\\<not> is_red A x\"\n  shows \"(insert x A) \\<sqsupset>p A\"", "lemma red_supset_transitive:\n  assumes \"A \\<sqsupset>p B\" and \"B \\<sqsupset>p C\"\n  shows \"A \\<sqsupset>p C\"", "lemma red_supset_wf_on:\n  assumes \"dickson_grading d\" and \"finite K\"\n  shows \"wfp_on (\\<sqsupset>p) (Pow (dgrad_p_set d m) \\<inter> {F. component_of_term ` Keys F \\<subseteq> K})\"", "lemma in_lex_prod_alt:\n  \"(x, y) \\<in> r <*lex*> s \\<longleftrightarrow> (((fst x), (fst y)) \\<in> r \\<or> (fst x = fst y \\<and> ((snd x), (snd y)) \\<in> s))\"", "lemmas red_wf = red_wf_dgrad_p_set[OF dickson_grading_zero subset_dgrad_p_set_zero]", "lemmas Buchberger_criterion = Buchberger_criterion_dgrad_p_set[OF dickson_grading_zero subset_dgrad_p_set_zero]"], "translations": [["", "lemma crit_pair_same: \"fst (crit_pair p p) = snd (crit_pair p p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (crit_pair p p) = snd (crit_pair p p)", "by (simp add: crit_pair_def)"], ["", "lemma crit_pair_swap: \"crit_pair p q = (snd (crit_pair q p), fst (crit_pair q p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair p q = (snd (crit_pair q p), fst (crit_pair q p))", "by (simp add: crit_pair_def lcs_comm)"], ["", "lemma crit_pair_zero [simp]: \"fst (crit_pair 0 q) = 0\" and \"snd (crit_pair p 0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (crit_pair 0 q) = 0 &&& snd (crit_pair p 0) = 0", "by (simp_all add: crit_pair_def)"], ["", "lemma dgrad_p_set_le_crit_pair_zero: \"dgrad_p_set_le d {fst (crit_pair p 0)} {p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p 0)} {p}", "proof (simp add: crit_pair_def lt_def[of 0] lcs_comm lcs_zero dgrad_p_set_le_def Keys_insert\n      min_term_def term_simps, intro conjI impI dgrad_set_leI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "assume \"s \\<in> pp_of_term ` keys (monom_mult (1 / lc p) 0 (tail p))\""], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "then"], ["proof (chain)\npicking this:\n  s \\<in> pp_of_term ` keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))", "obtain v where \"v \\<in> keys (monom_mult (1 / lc p) 0 (tail p))\" and \"s = pp_of_term v\""], ["proof (prove)\nusing this:\n  s \\<in> pp_of_term ` keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> keys\n                          (monom_mult ((1::'b) / lc p) (0::'a) (tail p));\n         s = pp_of_term v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  v \\<in> keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\n  s = pp_of_term v\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "from this(1) keys_monom_mult_subset"], ["proof (chain)\npicking this:\n  v \\<in> keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p", "have \"v \\<in> (\\<oplus>) 0 ` keys (tail p)\""], ["proof (prove)\nusing this:\n  v \\<in> keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p\n\ngoal (1 subgoal):\n 1. v \\<in> (\\<oplus>) (0::'a) ` keys (tail p)", ".."], ["proof (state)\nthis:\n  v \\<in> (\\<oplus>) (0::'a) ` keys (tail p)\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "hence \"v \\<in> keys (tail p)\""], ["proof (prove)\nusing this:\n  v \\<in> (\\<oplus>) (0::'a) ` keys (tail p)\n\ngoal (1 subgoal):\n 1. v \\<in> keys (tail p)", "by (simp add: image_iff term_simps)"], ["proof (state)\nthis:\n  v \\<in> keys (tail p)\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "hence \"v \\<in> keys p\""], ["proof (prove)\nusing this:\n  v \\<in> keys (tail p)\n\ngoal (1 subgoal):\n 1. v \\<in> keys p", "by (simp add: keys_tail)"], ["proof (state)\nthis:\n  v \\<in> keys p\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "hence \"s \\<in> pp_of_term ` keys p\""], ["proof (prove)\nusing this:\n  v \\<in> keys p\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys p", "by (simp add: \\<open>s = pp_of_term v\\<close>)"], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` keys p\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "moreover"], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` keys p\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "have \"d s \\<le> d s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d s \\<le> d s", ".."], ["proof (state)\nthis:\n  d s \\<le> d s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) (tail p))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "ultimately"], ["proof (chain)\npicking this:\n  s \\<in> pp_of_term ` keys p\n  d s \\<le> d s", "show \"\\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\""], ["proof (prove)\nusing this:\n  s \\<in> pp_of_term ` keys p\n  d s \\<le> d s\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", ".."], ["proof (state)\nthis:\n  \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "qed simp"], ["", "lemma dgrad_p_set_le_fst_crit_pair:\n  assumes \"dickson_grading d\"\n  shows \"dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "case True"], ["proof (state)\nthis:\n  q = 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "have \"dgrad_p_set_le d {fst (crit_pair p q)} {p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {p}", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p 0)} {p}", "by (fact dgrad_p_set_le_crit_pair_zero)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p}\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "also"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p}\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "have \"dgrad_p_set_le d ... {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {p} {p, q}", "by (rule dgrad_p_set_le_subset, simp)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {p} {p, q}\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "finally"], ["proof (chain)\npicking this:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "show ?thesis"], ["proof (prove)\nusing this:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "."], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "case False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "have \"dgrad_p_set_le d {fst (crit_pair p q)} {q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {q}", "by (simp add: True dgrad_p_set_le_def dgrad_set_le_def)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {q}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "also"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {q}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "have \"dgrad_p_set_le d ... {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {q} {p, q}", "by (rule dgrad_p_set_le_subset, simp)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {q} {p, q}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "finally"], ["proof (chain)\npicking this:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "show ?thesis"], ["proof (prove)\nusing this:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "."], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow>\n    dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "proof (simp add: dgrad_p_set_le_def Keys_insert crit_pair_def, intro conjI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d\n     (pp_of_term `\n      keys\n       (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d {} (pp_of_term ` (keys p \\<union> keys q))", "define t where \"t = lcs (lp p) (lp q) - lp p\""], ["proof (state)\nthis:\n  t = lcs (lp p) (lp q) - lp p\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d\n     (pp_of_term `\n      keys\n       (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d {} (pp_of_term ` (keys p \\<union> keys q))", "let ?m = \"monom_mult (1 / lc p) t (tail p)\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d\n     (pp_of_term `\n      keys\n       (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d {} (pp_of_term ` (keys p \\<union> keys q))", "from assms"], ["proof (chain)\npicking this:\n  dickson_grading d", "have \"dgrad_set_le d (pp_of_term ` keys ?m) (insert t (pp_of_term ` keys (tail p)))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. dgrad_set_le d\n     (pp_of_term ` keys (monom_mult ((1::'b) / lc p) t (tail p)))\n     (insert t (pp_of_term ` keys (tail p)))", "by (rule dgrad_set_le_monom_mult)"], ["proof (state)\nthis:\n  dgrad_set_le d\n   (pp_of_term ` keys (monom_mult ((1::'b) / lc p) t (tail p)))\n   (insert t (pp_of_term ` keys (tail p)))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d\n     (pp_of_term `\n      keys\n       (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d {} (pp_of_term ` (keys p \\<union> keys q))", "also"], ["proof (state)\nthis:\n  dgrad_set_le d\n   (pp_of_term ` keys (monom_mult ((1::'b) / lc p) t (tail p)))\n   (insert t (pp_of_term ` keys (tail p)))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d\n     (pp_of_term `\n      keys\n       (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d {} (pp_of_term ` (keys p \\<union> keys q))", "have \"dgrad_set_le d ... (pp_of_term ` (keys p \\<union> keys q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_set_le d (insert t (pp_of_term ` keys (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))", "proof (rule dgrad_set_leI, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s = t \\<or> s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n       \\<exists>t\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term t)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s = t \\<or> s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n       \\<exists>t\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term t)", "assume \"s = t \\<or> s \\<in> pp_of_term ` keys (tail p)\""], ["proof (state)\nthis:\n  s = t \\<or> s \\<in> pp_of_term ` keys (tail p)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s = t \\<or> s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n       \\<exists>t\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term t)", "thus \"\\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\""], ["proof (prove)\nusing this:\n  s = t \\<or> s \\<in> pp_of_term ` keys (tail p)\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "assume \"s = t\""], ["proof (state)\nthis:\n  s = t\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "from assms"], ["proof (chain)\npicking this:\n  dickson_grading d", "have \"d s \\<le> ord_class.max (d (lp p)) (d (lp q))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. d s \\<le> ord_class.max (d (lp p)) (d (lp q))", "unfolding \\<open>s = t\\<close> t_def"], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. d (lcs (lp p) (lp q) - lp p) \\<le> ord_class.max (d (lp p)) (d (lp q))", "by (rule dickson_grading_lcs_minus)"], ["proof (state)\nthis:\n  d s \\<le> ord_class.max (d (lp p)) (d (lp q))\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "hence \"d s \\<le> d (lp p) \\<or> d s \\<le> d (lp q)\""], ["proof (prove)\nusing this:\n  d s \\<le> ord_class.max (d (lp p)) (d (lp q))\n\ngoal (1 subgoal):\n 1. d s \\<le> d (lp p) \\<or> d s \\<le> d (lp q)", "by auto"], ["proof (state)\nthis:\n  d s \\<le> d (lp p) \\<or> d s \\<le> d (lp q)\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "thus ?thesis"], ["proof (prove)\nusing this:\n  d s \\<le> d (lp p) \\<or> d s \\<le> d (lp q)\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. d s \\<le> d (lp p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "from \\<open>p \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"lt p \\<in> keys p\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt p \\<in> keys p", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt p \\<in> keys p\n\ngoal (2 subgoals):\n 1. d s \\<le> d (lp p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "hence \"lt p \\<in> keys p \\<union> keys q\""], ["proof (prove)\nusing this:\n  lt p \\<in> keys p\n\ngoal (1 subgoal):\n 1. lt p \\<in> keys p \\<union> keys q", "by simp"], ["proof (state)\nthis:\n  lt p \\<in> keys p \\<union> keys q\n\ngoal (2 subgoals):\n 1. d s \\<le> d (lp p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "moreover"], ["proof (state)\nthis:\n  lt p \\<in> keys p \\<union> keys q\n\ngoal (2 subgoals):\n 1. d s \\<le> d (lp p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "assume \"d s \\<le> d (lp p)\""], ["proof (state)\nthis:\n  d s \\<le> d (lp p)\n\ngoal (2 subgoals):\n 1. d s \\<le> d (lp p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n 2. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "ultimately"], ["proof (chain)\npicking this:\n  lt p \\<in> keys p \\<union> keys q\n  d s \\<le> d (lp p)", "show ?thesis"], ["proof (prove)\nusing this:\n  lt p \\<in> keys p \\<union> keys q\n  d s \\<le> d (lp p)\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", ".."], ["proof (state)\nthis:\n  \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n\ngoal (1 subgoal):\n 1. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "from \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> 0", "have \"lt q \\<in> keys q\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt q \\<in> keys q", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt q \\<in> keys q\n\ngoal (1 subgoal):\n 1. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "hence \"lt q \\<in> keys p \\<union> keys q\""], ["proof (prove)\nusing this:\n  lt q \\<in> keys q\n\ngoal (1 subgoal):\n 1. lt q \\<in> keys p \\<union> keys q", "by simp"], ["proof (state)\nthis:\n  lt q \\<in> keys p \\<union> keys q\n\ngoal (1 subgoal):\n 1. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "moreover"], ["proof (state)\nthis:\n  lt q \\<in> keys p \\<union> keys q\n\ngoal (1 subgoal):\n 1. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "assume \"d s \\<le> d (lp q)\""], ["proof (state)\nthis:\n  d s \\<le> d (lp q)\n\ngoal (1 subgoal):\n 1. d s \\<le> d (lp q) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "ultimately"], ["proof (chain)\npicking this:\n  lt q \\<in> keys p \\<union> keys q\n  d s \\<le> d (lp q)", "show ?thesis"], ["proof (prove)\nusing this:\n  lt q \\<in> keys p \\<union> keys q\n  d s \\<le> d (lp q)\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", ".."], ["proof (state)\nthis:\n  \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "assume \"s \\<in> pp_of_term ` keys (tail p)\""], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` keys (tail p)\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "hence \"s \\<in> pp_of_term ` (keys p \\<union> keys q)\""], ["proof (prove)\nusing this:\n  s \\<in> pp_of_term ` keys (tail p)\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` (keys p \\<union> keys q)", "by (auto simp: keys_tail)"], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` (keys p \\<union> keys q)\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "then"], ["proof (chain)\npicking this:\n  s \\<in> pp_of_term ` (keys p \\<union> keys q)", "obtain v where \"v \\<in> keys p \\<union> keys q\" and \"s = pp_of_term v\""], ["proof (prove)\nusing this:\n  s \\<in> pp_of_term ` (keys p \\<union> keys q)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> keys p \\<union> keys q; s = pp_of_term v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  v \\<in> keys p \\<union> keys q\n  s = pp_of_term v\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "note this(1)"], ["proof (state)\nthis:\n  v \\<in> keys p \\<union> keys q\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "moreover"], ["proof (state)\nthis:\n  v \\<in> keys p \\<union> keys q\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "have \"d s \\<le> d (pp_of_term v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d s \\<le> d (pp_of_term v)", "by (simp add: \\<open>s = pp_of_term v\\<close>)"], ["proof (state)\nthis:\n  d s \\<le> d (pp_of_term v)\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys (tail p) \\<Longrightarrow>\n    \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", "ultimately"], ["proof (chain)\npicking this:\n  v \\<in> keys p \\<union> keys q\n  d s \\<le> d (pp_of_term v)", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<in> keys p \\<union> keys q\n  d s \\<le> d (pp_of_term v)\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)", ".."], ["proof (state)\nthis:\n  \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>keys p \\<union> keys q. d s \\<le> d (pp_of_term v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dgrad_set_le d (insert t (pp_of_term ` keys (tail p)))\n   (pp_of_term ` (keys p \\<union> keys q))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d\n     (pp_of_term `\n      keys\n       (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d {} (pp_of_term ` (keys p \\<union> keys q))", "finally"], ["proof (chain)\npicking this:\n  dgrad_set_le d\n   (pp_of_term ` keys (monom_mult ((1::'b) / lc p) t (tail p)))\n   (pp_of_term ` (keys p \\<union> keys q))", "show \"dgrad_set_le d (pp_of_term ` keys ?m) (pp_of_term ` (keys p \\<union> keys q))\""], ["proof (prove)\nusing this:\n  dgrad_set_le d\n   (pp_of_term ` keys (monom_mult ((1::'b) / lc p) t (tail p)))\n   (pp_of_term ` (keys p \\<union> keys q))\n\ngoal (1 subgoal):\n 1. dgrad_set_le d\n     (pp_of_term ` keys (monom_mult ((1::'b) / lc p) t (tail p)))\n     (pp_of_term ` (keys p \\<union> keys q))", "."], ["proof (state)\nthis:\n  dgrad_set_le d\n   (pp_of_term ` keys (monom_mult ((1::'b) / lc p) t (tail p)))\n   (pp_of_term ` (keys p \\<union> keys q))\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    dgrad_set_le d {} (pp_of_term ` (keys p \\<union> keys q))", "qed (rule dgrad_set_leI, simp)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dgrad_p_set_le_snd_crit_pair:\n  assumes \"dickson_grading d\"\n  shows \"dgrad_p_set_le d {snd (crit_pair p q)} {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {snd (crit_pair p q)} {p, q}", "by (simp add: crit_pair_swap[of p] insert_commute[of p q], rule dgrad_p_set_le_fst_crit_pair, fact)"], ["", "lemma dgrad_p_set_closed_fst_crit_pair:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\" and \"q \\<in> dgrad_p_set d m\"\n  shows \"fst (crit_pair p q) \\<in> dgrad_p_set d m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<in> dgrad_p_set d m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<in> dgrad_p_set d m", "from dgrad_p_set_le_fst_crit_pair[OF assms(1)]"], ["proof (chain)\npicking this:\n  dgrad_p_set_le d {fst (crit_pair ?p ?q)} {?p, ?q}", "have \"{fst (crit_pair p q)} \\<subseteq> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dgrad_p_set_le d {fst (crit_pair ?p ?q)} {?p, ?q}\n\ngoal (1 subgoal):\n 1. {fst (crit_pair p q)} \\<subseteq> dgrad_p_set d m", "proof (rule dgrad_p_set_le_dgrad_p_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. {p, q} \\<subseteq> dgrad_p_set d m", "from assms(2, 3)"], ["proof (chain)\npicking this:\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m", "show \"{p, q} \\<subseteq> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. {p, q} \\<subseteq> dgrad_p_set d m", "by simp"], ["proof (state)\nthis:\n  {p, q} \\<subseteq> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {fst (crit_pair p q)} \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<in> dgrad_p_set d m", "thus ?thesis"], ["proof (prove)\nusing this:\n  {fst (crit_pair p q)} \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<in> dgrad_p_set d m", "by simp"], ["proof (state)\nthis:\n  fst (crit_pair p q) \\<in> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dgrad_p_set_closed_snd_crit_pair:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\" and \"q \\<in> dgrad_p_set d m\"\n  shows \"snd (crit_pair p q) \\<in> dgrad_p_set d m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (crit_pair p q) \\<in> dgrad_p_set d m", "by (simp add: crit_pair_swap[of p q], rule dgrad_p_set_closed_fst_crit_pair, fact+)"], ["", "lemma fst_crit_pair_below_lcs:\n  \"fst (crit_pair p q) \\<prec>\\<^sub>p monomial 1 (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "proof (cases \"tail p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. tail p = 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n 2. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "case True"], ["proof (state)\nthis:\n  tail p = 0\n\ngoal (2 subgoals):\n 1. tail p = 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n 2. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  tail p = 0\n\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "by (simp add: crit_pair_def ord_strict_p_monomial_iff)"], ["proof (state)\nthis:\n  fst (crit_pair p q) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "case False"], ["proof (state)\nthis:\n  tail p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "let ?t1 = \"lp p\""], ["proof (state)\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "let ?t2 = \"lp q\""], ["proof (state)\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "from False"], ["proof (chain)\npicking this:\n  tail p \\<noteq> 0", "have \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  tail p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "hence \"lc p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lc p \\<noteq> (0::'b)", "by (rule lc_not_0)"], ["proof (state)\nthis:\n  lc p \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "hence \"1 / lc p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  lc p \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. (1::'b) / lc p \\<noteq> (0::'b)", "by simp"], ["proof (state)\nthis:\n  (1::'b) / lc p \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "from this False"], ["proof (chain)\npicking this:\n  (1::'b) / lc p \\<noteq> (0::'b)\n  tail p \\<noteq> 0", "have \"lt (monom_mult (1 / lc p) (lcs ?t1 ?t2 - ?t1) (tail p)) =\n                        (lcs ?t1 ?t2 - ?t1) \\<oplus> lt (tail p)\""], ["proof (prove)\nusing this:\n  (1::'b) / lc p \\<noteq> (0::'b)\n  tail p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)) =\n    (lcs (lp p) (lp q) - lp p) \\<oplus> lt (tail p)", "by (rule lt_monom_mult)"], ["proof (state)\nthis:\n  lt (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)) =\n  (lcs (lp p) (lp q) - lp p) \\<oplus> lt (tail p)\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "also"], ["proof (state)\nthis:\n  lt (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p)) =\n  (lcs (lp p) (lp q) - lp p) \\<oplus> lt (tail p)\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "from lt_tail[OF False]"], ["proof (chain)\npicking this:\n  lt (tail p) \\<prec>\\<^sub>t lt p", "have \"... \\<prec>\\<^sub>t (lcs ?t1 ?t2 - ?t1) \\<oplus> lt p\""], ["proof (prove)\nusing this:\n  lt (tail p) \\<prec>\\<^sub>t lt p\n\ngoal (1 subgoal):\n 1. (lcs (lp p) (lp q) - lp p) \\<oplus> lt (tail p) \\<prec>\\<^sub>t\n    (lcs (lp p) (lp q) - lp p) \\<oplus> lt p", "by (rule splus_mono_strict)"], ["proof (state)\nthis:\n  (lcs (lp p) (lp q) - lp p) \\<oplus> lt (tail p) \\<prec>\\<^sub>t\n  (lcs (lp p) (lp q) - lp p) \\<oplus> lt p\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "also"], ["proof (state)\nthis:\n  (lcs (lp p) (lp q) - lp p) \\<oplus> lt (tail p) \\<prec>\\<^sub>t\n  (lcs (lp p) (lp q) - lp p) \\<oplus> lt p\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "from adds_lcs"], ["proof (chain)\npicking this:\n  ?s adds lcs ?s ?t", "have \"... = term_of_pair (lcs ?t1 ?t2, component_of_term (lt p))\""], ["proof (prove)\nusing this:\n  ?s adds lcs ?s ?t\n\ngoal (1 subgoal):\n 1. (lcs (lp p) (lp q) - lp p) \\<oplus> lt p =\n    term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))", "by (simp add: adds_lcs adds_minus splus_def)"], ["proof (state)\nthis:\n  (lcs (lp p) (lp q) - lp p) \\<oplus> lt p =\n  term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. tail p \\<noteq> 0 \\<Longrightarrow>\n    fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "finally"], ["proof (chain)\npicking this:\n  lt (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p)\n       (tail p)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))", "show ?thesis"], ["proof (prove)\nusing this:\n  lt (monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p)\n       (tail p)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "by (auto simp add: crit_pair_def ord_strict_p_monomial_iff)"], ["proof (state)\nthis:\n  fst (crit_pair p q) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma snd_crit_pair_below_lcs:\n  \"snd (crit_pair p q) \\<prec>\\<^sub>p monomial 1 (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "proof (cases \"component_of_term (lt p) = component_of_term (lt q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "case True"], ["proof (state)\nthis:\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "by (simp add: True crit_pair_swap[of p] lcs_comm[of \"lp p\"], fact fst_crit_pair_below_lcs)"], ["proof (state)\nthis:\n  snd (crit_pair p q) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "case False"], ["proof (state)\nthis:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (crit_pair p q) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "by (simp add: crit_pair_def False ord_strict_p_monomial_iff)"], ["proof (state)\nthis:\n  snd (crit_pair p q) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma crit_pair_cbelow_same:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\"\n  shows \"crit_pair_cbelow_on d m F p p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p p", "proof (simp add: crit_pair_cbelow_on_def crit_pair_same cbelow_on_def term_simps, intro disjI1 conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (crit_pair p p) \\<in> dgrad_p_set d m\n 2. snd (crit_pair p p) \\<prec>\\<^sub>p monomial (1::'b) (lt p)", "from assms(1) assms(2) assms(2)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m", "show \"snd (crit_pair p p) \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. snd (crit_pair p p) \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_snd_crit_pair)"], ["proof (state)\nthis:\n  snd (crit_pair p p) \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. snd (crit_pair p p) \\<prec>\\<^sub>p monomial (1::'b) (lt p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. snd (crit_pair p p) \\<prec>\\<^sub>p monomial (1::'b) (lt p)", "from snd_crit_pair_below_lcs[of p p]"], ["proof (chain)\npicking this:\n  snd (crit_pair p p) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp p), component_of_term (lt p)))", "show \"snd (crit_pair p p) \\<prec>\\<^sub>p monomial 1 (lt p)\""], ["proof (prove)\nusing this:\n  snd (crit_pair p p) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp p), component_of_term (lt p)))\n\ngoal (1 subgoal):\n 1. snd (crit_pair p p) \\<prec>\\<^sub>p monomial (1::'b) (lt p)", "by (simp add: term_simps)"], ["proof (state)\nthis:\n  snd (crit_pair p p) \\<prec>\\<^sub>p monomial (1::'b) (lt p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma crit_pair_cbelow_distinct_component:\n  assumes \"component_of_term (lt p) \\<noteq> component_of_term (lt q)\"\n  shows \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "by (simp add: crit_pair_cbelow_on_def crit_pair_def assms cbelow_on_def\n      ord_strict_p_monomial_iff zero_in_dgrad_p_set)"], ["", "lemma crit_pair_cbelow_sym:\n  assumes \"crit_pair_cbelow_on d m F p q\"\n  shows \"crit_pair_cbelow_on d m F q p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F q p", "proof (cases \"component_of_term (lt q) = component_of_term (lt p)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt q) = component_of_term (lt p) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F q p\n 2. component_of_term (lt q) \\<noteq>\n    component_of_term (lt p) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F q p", "case True"], ["proof (state)\nthis:\n  component_of_term (lt q) = component_of_term (lt p)\n\ngoal (2 subgoals):\n 1. component_of_term (lt q) = component_of_term (lt p) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F q p\n 2. component_of_term (lt q) \\<noteq>\n    component_of_term (lt p) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F q p", "from assms"], ["proof (chain)\npicking this:\n  crit_pair_cbelow_on d m F p q", "show ?thesis"], ["proof (prove)\nusing this:\n  crit_pair_cbelow_on d m F p q\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F q p", "proof (simp add: crit_pair_cbelow_on_def crit_pair_swap[of p q] lcs_comm True,\n         elim cbelow_on_symmetric)"], ["proof (state)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q \\<Longrightarrow>\n    symp (\\<lambda>a b. red F a b \\<or> red F b a)", "show \"symp (\\<lambda>a b. red F a b \\<or> red F b a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<lambda>a b. red F a b \\<or> red F b a)", "by (simp add: symp_def)"], ["proof (state)\nthis:\n  symp (\\<lambda>a b. red F a b \\<or> red F b a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F q p\n\ngoal (1 subgoal):\n 1. component_of_term (lt q) \\<noteq>\n    component_of_term (lt p) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F q p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term (lt q) \\<noteq>\n    component_of_term (lt p) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F q p", "case False"], ["proof (state)\nthis:\n  component_of_term (lt q) \\<noteq> component_of_term (lt p)\n\ngoal (1 subgoal):\n 1. component_of_term (lt q) \\<noteq>\n    component_of_term (lt p) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F q p", "thus ?thesis"], ["proof (prove)\nusing this:\n  component_of_term (lt q) \\<noteq> component_of_term (lt p)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F q p", "by (rule crit_pair_cbelow_distinct_component)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F q p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma crit_pair_cs_imp_crit_pair_cbelow_on:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"p \\<in> dgrad_p_set d m\"\n    and \"q \\<in> dgrad_p_set d m\"\n    and \"relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\"\n  shows \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "from assms(1)"], ["proof (chain)\npicking this:\n  dickson_grading d", "have \"relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)", "by (rule is_relation_order_red)"], ["proof (state)\nthis:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "have \"relation.dw_closed (red F) (dgrad_p_set d m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation.dw_closed (red F) (dgrad_p_set d m)", "by (rule relation.dw_closedI, rule dgrad_p_set_closed_red, rule assms(1), rule assms(2))"], ["proof (state)\nthis:\n  relation.dw_closed (red F) (dgrad_p_set d m)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  relation.dw_closed (red F) (dgrad_p_set d m)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "note assms(5)"], ["proof (state)\nthis:\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "from assms(1) assms(3) assms(4)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m", "have \"fst (crit_pair p q) \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. fst (crit_pair p q) \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_fst_crit_pair)"], ["proof (state)\nthis:\n  fst (crit_pair p q) \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  fst (crit_pair p q) \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "from assms(1) assms(3) assms(4)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m", "have \"snd (crit_pair p q) \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. snd (crit_pair p q) \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_snd_crit_pair)"], ["proof (state)\nthis:\n  snd (crit_pair p q) \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  snd (crit_pair p q) \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "note fst_crit_pair_below_lcs snd_crit_pair_below_lcs"], ["proof (state)\nthis:\n  fst (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))\n  snd (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "ultimately"], ["proof (chain)\npicking this:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n  relation.dw_closed (red F) (dgrad_p_set d m)\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n  fst (crit_pair p q) \\<in> dgrad_p_set d m\n  snd (crit_pair p q) \\<in> dgrad_p_set d m\n  fst (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))\n  snd (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))", "show ?thesis"], ["proof (prove)\nusing this:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n  relation.dw_closed (red F) (dgrad_p_set d m)\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n  fst (crit_pair p q) \\<in> dgrad_p_set d m\n  snd (crit_pair p q) \\<in> dgrad_p_set d m\n  fst (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))\n  snd (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "unfolding crit_pair_cbelow_on_def"], ["proof (prove)\nusing this:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n  relation.dw_closed (red F) (dgrad_p_set d m)\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n  fst (crit_pair p q) \\<in> dgrad_p_set d m\n  snd (crit_pair p q) \\<in> dgrad_p_set d m\n  fst (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))\n  snd (crit_pair ?p ?q) \\<prec>\\<^sub>p\n  monomial (1::?'b)\n   (term_of_pair (lcs (lp ?p) (lp ?q), component_of_term (lt ?p)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n     (snd (crit_pair p q))", "by (rule relation_order.cs_implies_cbelow_on)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma crit_pair_cbelow_mono:\n  assumes \"crit_pair_cbelow_on d m F p q\" and \"F \\<subseteq> G\"\n  shows \"crit_pair_cbelow_on d m G p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m G p q", "using assms(1)"], ["proof (prove)\nusing this:\n  crit_pair_cbelow_on d m F p q\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m G p q", "unfolding crit_pair_cbelow_on_def"], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n     (snd (crit_pair p q))", "proof (induct rule: cbelow_on_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>fst (crit_pair p q) \\<in> dgrad_p_set d m;\n     fst (crit_pair p q) \\<prec>\\<^sub>p\n     monomial (1::'b)\n      (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\\<rbrakk>\n    \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                       (monomial (1::'b)\n                         (term_of_pair\n                           (lcs (lp p) (lp q), component_of_term (lt p))))\n                       (\\<lambda>a b. red G a b \\<or> red G b a)\n                       (fst (crit_pair p q)) (fst (crit_pair p q))\n 2. \\<And>b c.\n       \\<lbrakk>cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                 (monomial (1::'b)\n                   (term_of_pair\n                     (lcs (lp p) (lp q), component_of_term (lt p))))\n                 (\\<lambda>a b. red F a b \\<or> red F b a)\n                 (fst (crit_pair p q)) b;\n        red F b c \\<or> red F c b; c \\<in> dgrad_p_set d m;\n        c \\<prec>\\<^sub>p\n        monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)));\n        cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n         (monomial (1::'b)\n           (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n         (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n         b\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                          (monomial (1::'b)\n                            (term_of_pair\n                              (lcs (lp p) (lp q),\n                               component_of_term (lt p))))\n                          (\\<lambda>a b. red G a b \\<or> red G b a)\n                          (fst (crit_pair p q)) c", "case base"], ["proof (state)\nthis:\n  fst (crit_pair p q) \\<in> dgrad_p_set d m\n  fst (crit_pair p q) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>fst (crit_pair p q) \\<in> dgrad_p_set d m;\n     fst (crit_pair p q) \\<prec>\\<^sub>p\n     monomial (1::'b)\n      (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\\<rbrakk>\n    \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                       (monomial (1::'b)\n                         (term_of_pair\n                           (lcs (lp p) (lp q), component_of_term (lt p))))\n                       (\\<lambda>a b. red G a b \\<or> red G b a)\n                       (fst (crit_pair p q)) (fst (crit_pair p q))\n 2. \\<And>b c.\n       \\<lbrakk>cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                 (monomial (1::'b)\n                   (term_of_pair\n                     (lcs (lp p) (lp q), component_of_term (lt p))))\n                 (\\<lambda>a b. red F a b \\<or> red F b a)\n                 (fst (crit_pair p q)) b;\n        red F b c \\<or> red F c b; c \\<in> dgrad_p_set d m;\n        c \\<prec>\\<^sub>p\n        monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)));\n        cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n         (monomial (1::'b)\n           (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n         (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n         b\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                          (monomial (1::'b)\n                            (term_of_pair\n                              (lcs (lp p) (lp q),\n                               component_of_term (lt p))))\n                          (\\<lambda>a b. red G a b \\<or> red G b a)\n                          (fst (crit_pair p q)) c", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n     (fst (crit_pair p q))", "by (simp add: cbelow_on_def, intro disjI1 conjI, fact+)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n   (fst (crit_pair p q))\n\ngoal (1 subgoal):\n 1. \\<And>b c.\n       \\<lbrakk>cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                 (monomial (1::'b)\n                   (term_of_pair\n                     (lcs (lp p) (lp q), component_of_term (lt p))))\n                 (\\<lambda>a b. red F a b \\<or> red F b a)\n                 (fst (crit_pair p q)) b;\n        red F b c \\<or> red F c b; c \\<in> dgrad_p_set d m;\n        c \\<prec>\\<^sub>p\n        monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)));\n        cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n         (monomial (1::'b)\n           (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n         (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n         b\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                          (monomial (1::'b)\n                            (term_of_pair\n                              (lcs (lp p) (lp q),\n                               component_of_term (lt p))))\n                          (\\<lambda>a b. red G a b \\<or> red G b a)\n                          (fst (crit_pair p q)) c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b c.\n       \\<lbrakk>cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                 (monomial (1::'b)\n                   (term_of_pair\n                     (lcs (lp p) (lp q), component_of_term (lt p))))\n                 (\\<lambda>a b. red F a b \\<or> red F b a)\n                 (fst (crit_pair p q)) b;\n        red F b c \\<or> red F c b; c \\<in> dgrad_p_set d m;\n        c \\<prec>\\<^sub>p\n        monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)));\n        cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n         (monomial (1::'b)\n           (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n         (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n         b\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                          (monomial (1::'b)\n                            (term_of_pair\n                              (lcs (lp p) (lp q),\n                               component_of_term (lt p))))\n                          (\\<lambda>a b. red G a b \\<or> red G b a)\n                          (fst (crit_pair p q)) c", "case (step b c)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q)) b\n  red F b c \\<or> red F c b\n  c \\<in> dgrad_p_set d m\n  c \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q)) b\n\ngoal (1 subgoal):\n 1. \\<And>b c.\n       \\<lbrakk>cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                 (monomial (1::'b)\n                   (term_of_pair\n                     (lcs (lp p) (lp q), component_of_term (lt p))))\n                 (\\<lambda>a b. red F a b \\<or> red F b a)\n                 (fst (crit_pair p q)) b;\n        red F b c \\<or> red F c b; c \\<in> dgrad_p_set d m;\n        c \\<prec>\\<^sub>p\n        monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)));\n        cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n         (monomial (1::'b)\n           (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n         (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n         b\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                          (monomial (1::'b)\n                            (term_of_pair\n                              (lcs (lp p) (lp q),\n                               component_of_term (lt p))))\n                          (\\<lambda>a b. red G a b \\<or> red G b a)\n                          (fst (crit_pair p q)) c", "from step(2)"], ["proof (chain)\npicking this:\n  red F b c \\<or> red F c b", "have \"red G b c \\<or> red G c b\""], ["proof (prove)\nusing this:\n  red F b c \\<or> red F c b\n\ngoal (1 subgoal):\n 1. red G b c \\<or> red G c b", "using red_subset[OF _ assms(2)]"], ["proof (prove)\nusing this:\n  red F b c \\<or> red F c b\n  red F ?p ?q \\<Longrightarrow> red G ?p ?q\n\ngoal (1 subgoal):\n 1. red G b c \\<or> red G c b", "by blast"], ["proof (state)\nthis:\n  red G b c \\<or> red G c b\n\ngoal (1 subgoal):\n 1. \\<And>b c.\n       \\<lbrakk>cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                 (monomial (1::'b)\n                   (term_of_pair\n                     (lcs (lp p) (lp q), component_of_term (lt p))))\n                 (\\<lambda>a b. red F a b \\<or> red F b a)\n                 (fst (crit_pair p q)) b;\n        red F b c \\<or> red F c b; c \\<in> dgrad_p_set d m;\n        c \\<prec>\\<^sub>p\n        monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)));\n        cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n         (monomial (1::'b)\n           (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n         (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q))\n         b\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n                          (monomial (1::'b)\n                            (term_of_pair\n                              (lcs (lp p) (lp q),\n                               component_of_term (lt p))))\n                          (\\<lambda>a b. red G a b \\<or> red G b a)\n                          (fst (crit_pair p q)) c", "from step(5) step(3) this step(4)"], ["proof (chain)\npicking this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q)) b\n  c \\<in> dgrad_p_set d m\n  red G b c \\<or> red G c b\n  c \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))", "show ?case"], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q)) b\n  c \\<in> dgrad_p_set d m\n  red G b c \\<or> red G c b\n  c \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q)) c", ".."], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red G a b \\<or> red G b a) (fst (crit_pair p q)) c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lcs_red_single_fst_crit_pair:\n  assumes \"p \\<noteq> 0\" and \"component_of_term (lt p) = component_of_term (lt q)\"\n  defines \"t1 \\<equiv> lp p\"\n  defines \"t2 \\<equiv> lp q\"\n  shows \"red_single (monomial (- 1) (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n                    (fst (crit_pair p q)) p (lcs t1 t2 - t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (fst (crit_pair p q)) p (lcs t1 t2 - t1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (fst (crit_pair p q)) p (lcs t1 t2 - t1)", "let ?l = \"term_of_pair (lcs t1 t2, component_of_term (lt p))\""], ["proof (state)\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (fst (crit_pair p q)) p (lcs t1 t2 - t1)", "from assms(1)"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"lc p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lc p \\<noteq> (0::'b)", "by (rule lc_not_0)"], ["proof (state)\nthis:\n  lc p \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (fst (crit_pair p q)) p (lcs t1 t2 - t1)", "have \"lt p adds\\<^sub>t ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt p adds\\<^sub>t term_of_pair (lcs t1 t2, component_of_term (lt p))", "by (simp add: adds_lcs adds_term_def t1_def term_simps)"], ["proof (state)\nthis:\n  lt p adds\\<^sub>t term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (fst (crit_pair p q)) p (lcs t1 t2 - t1)", "hence eq1: \"(lcs t1 t2 - t1) \\<oplus> lt p = ?l\""], ["proof (prove)\nusing this:\n  lt p adds\\<^sub>t term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. (lcs t1 t2 - t1) \\<oplus> lt p =\n    term_of_pair (lcs t1 t2, component_of_term (lt p))", "by (simp add: adds_lcs adds_minus splus_def t1_def)"], ["proof (state)\nthis:\n  (lcs t1 t2 - t1) \\<oplus> lt p =\n  term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (fst (crit_pair p q)) p (lcs t1 t2 - t1)", "with assms(1)"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  (lcs t1 t2 - t1) \\<oplus> lt p =\n  term_of_pair (lcs t1 t2, component_of_term (lt p))", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  (lcs t1 t2 - t1) \\<oplus> lt p =\n  term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (fst (crit_pair p q)) p (lcs t1 t2 - t1)", "proof (simp add: crit_pair_def red_single_def assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<noteq> 0;\n     (lcs t1 t2 - t1) \\<oplus> lt p =\n     term_of_pair (lcs t1 t2, component_of_term (lt q))\\<rbrakk>\n    \\<Longrightarrow> monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p)\n                       (tail p) =\n                      monomial (- (1::'b))\n                       (term_of_pair\n                         (lcs t1 t2, component_of_term (lt q))) -\n                      monom_mult (- ((1::'b) / lc p)) (lcs t1 t2 - t1) p", "have eq2: \"monomial (- 1) ?l = monom_mult (- (1 / lc p)) (lcs t1 t2 - t1) (monomial (lc p) (lt p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monomial (- (1::'b))\n     (term_of_pair (lcs t1 t2, component_of_term (lt p))) =\n    monom_mult (- ((1::'b) / lc p)) (lcs t1 t2 - t1)\n     (monomial (lc p) (lt p))", "by (simp add: monom_mult_monomial eq1 \\<open>lc p \\<noteq> 0\\<close>)"], ["proof (state)\nthis:\n  monomial (- (1::'b))\n   (term_of_pair (lcs t1 t2, component_of_term (lt p))) =\n  monom_mult (- ((1::'b) / lc p)) (lcs t1 t2 - t1) (monomial (lc p) (lt p))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<noteq> 0;\n     (lcs t1 t2 - t1) \\<oplus> lt p =\n     term_of_pair (lcs t1 t2, component_of_term (lt q))\\<rbrakk>\n    \\<Longrightarrow> monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p)\n                       (tail p) =\n                      monomial (- (1::'b))\n                       (term_of_pair\n                         (lcs t1 t2, component_of_term (lt q))) -\n                      monom_mult (- ((1::'b) / lc p)) (lcs t1 t2 - t1) p", "show \"monom_mult (1 / lc p) (lcs (lp p) (lp q) - lp p) (tail p) =\n          monomial (- 1) (term_of_pair (lcs t1 t2, component_of_term (lt q))) - monom_mult (- (1 / lc p)) (lcs t1 t2 - t1) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p) =\n    monomial (- (1::'b))\n     (term_of_pair (lcs t1 t2, component_of_term (lt q))) -\n    monom_mult (- ((1::'b) / lc p)) (lcs t1 t2 - t1) p", "apply (simp add: t1_def t2_def monom_mult_dist_right_minus tail_alt_2 monom_mult_uminus_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p)\n       (monomial (lc p) (lt p)) =\n    monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt q)))", "by (metis assms(2) eq2 monom_mult_uminus_left t1_def t2_def)"], ["proof (state)\nthis:\n  monom_mult ((1::'b) / lc p) (lcs (lp p) (lp q) - lp p) (tail p) =\n  monomial (- (1::'b))\n   (term_of_pair (lcs t1 t2, component_of_term (lt q))) -\n  monom_mult (- ((1::'b) / lc p)) (lcs t1 t2 - t1) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  red_single\n   (monomial (- (1::'b))\n     (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n   (fst (crit_pair p q)) p (lcs t1 t2 - t1)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary lcs_red_single_snd_crit_pair:\n  assumes \"q \\<noteq> 0\" and \"component_of_term (lt p) = component_of_term (lt q)\"\n  defines \"t1 \\<equiv> lp p\"\n  defines \"t2 \\<equiv> lp q\"\n  shows \"red_single (monomial (- 1) (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n                    (snd (crit_pair p q)) q (lcs t1 t2 - t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. red_single\n     (monomial (- (1::'b))\n       (term_of_pair (lcs t1 t2, component_of_term (lt p))))\n     (snd (crit_pair p q)) q (lcs t1 t2 - t2)", "by (simp add: crit_pair_swap[of p q] lcs_comm[of \"lp p\"] assms(2) t1_def t2_def,\n        rule lcs_red_single_fst_crit_pair, simp_all add: assms(1, 2))"], ["", "lemma GB_imp_crit_pair_cbelow_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"is_Groebner_basis F\"\n  assumes \"p \\<in> F\" and \"q \\<in> F\" and \"p \\<noteq> 0\" and \"q \\<noteq> 0\"\n  shows \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof (cases \"component_of_term (lt p) = component_of_term (lt q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "case True"], ["proof (state)\nthis:\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from assms(1, 2)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m", "show ?thesis"], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof (rule crit_pair_cs_imp_crit_pair_cbelow_on)"], ["proof (state)\ngoal (3 subgoals):\n 1. p \\<in> dgrad_p_set d m\n 2. q \\<in> dgrad_p_set d m\n 3. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "from assms(4, 2)"], ["proof (chain)\npicking this:\n  p \\<in> F\n  F \\<subseteq> dgrad_p_set d m", "show \"p \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> F\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. p \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  p \\<in> dgrad_p_set d m\n\ngoal (2 subgoals):\n 1. q \\<in> dgrad_p_set d m\n 2. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> dgrad_p_set d m\n 2. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "from assms(5, 2)"], ["proof (chain)\npicking this:\n  q \\<in> F\n  F \\<subseteq> dgrad_p_set d m", "show \"q \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  q \\<in> F\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. q \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "let ?cp = \"crit_pair p q\""], ["proof (state)\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "let ?l = \"monomial (- 1) (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "from assms(4) lcs_red_single_fst_crit_pair[OF assms(6) True]"], ["proof (chain)\npicking this:\n  p \\<in> F\n  red_single\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (fst (crit_pair p q)) p (lcs (lp p) (lp q) - lp p)", "have \"red F ?l (fst ?cp)\""], ["proof (prove)\nusing this:\n  p \\<in> F\n  red_single\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (fst (crit_pair p q)) p (lcs (lp p) (lp q) - lp p)\n\ngoal (1 subgoal):\n 1. red F\n     (monomial (- (1::'b))\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (fst (crit_pair p q))", "by (rule red_setI)"], ["proof (state)\nthis:\n  red F\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (fst (crit_pair p q))\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "hence 1: \"(red F)\\<^sup>*\\<^sup>* ?l (fst ?cp)\""], ["proof (prove)\nusing this:\n  red F\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (fst (crit_pair p q))\n\ngoal (1 subgoal):\n 1. (red F)\\<^sup>*\\<^sup>*\n     (monomial (- (1::'b))\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (fst (crit_pair p q))", ".."], ["proof (state)\nthis:\n  (red F)\\<^sup>*\\<^sup>*\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (fst (crit_pair p q))\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "from assms(5) lcs_red_single_snd_crit_pair[OF assms(7) True]"], ["proof (chain)\npicking this:\n  q \\<in> F\n  red_single\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (snd (crit_pair p q)) q (lcs (lp p) (lp q) - lp q)", "have \"red F ?l (snd ?cp)\""], ["proof (prove)\nusing this:\n  q \\<in> F\n  red_single\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (snd (crit_pair p q)) q (lcs (lp p) (lp q) - lp q)\n\ngoal (1 subgoal):\n 1. red F\n     (monomial (- (1::'b))\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (snd (crit_pair p q))", "by (rule red_setI)"], ["proof (state)\nthis:\n  red F\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "hence 2: \"(red F)\\<^sup>*\\<^sup>* ?l (snd ?cp)\""], ["proof (prove)\nusing this:\n  red F\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. (red F)\\<^sup>*\\<^sup>*\n     (monomial (- (1::'b))\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (snd (crit_pair p q))", ".."], ["proof (state)\nthis:\n  (red F)\\<^sup>*\\<^sup>*\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "from assms(3)"], ["proof (chain)\npicking this:\n  is_Groebner_basis F", "have \"relation.is_confluent_on (red F) UNIV\""], ["proof (prove)\nusing this:\n  is_Groebner_basis F\n\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) UNIV", "by (simp only: is_Groebner_basis_def relation.confluence_equiv_ChurchRosser[symmetric]\n          relation.is_confluent_def)"], ["proof (state)\nthis:\n  relation.is_confluent_on (red F) UNIV\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "from this 1 2"], ["proof (chain)\npicking this:\n  relation.is_confluent_on (red F) UNIV\n  (red F)\\<^sup>*\\<^sup>*\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (fst (crit_pair p q))\n  (red F)\\<^sup>*\\<^sup>*\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (snd (crit_pair p q))", "show \"relation.cs (red F) (fst ?cp) (snd ?cp)\""], ["proof (prove)\nusing this:\n  relation.is_confluent_on (red F) UNIV\n  (red F)\\<^sup>*\\<^sup>*\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (fst (crit_pair p q))\n  (red F)\\<^sup>*\\<^sup>*\n   (monomial (- (1::'b))\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "by (simp add: relation.is_confluent_on_def)"], ["proof (state)\nthis:\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "case False"], ["proof (state)\nthis:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "thus ?thesis"], ["proof (prove)\nusing this:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "by (rule crit_pair_cbelow_distinct_component)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma spoly_alt:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\"\n  shows \"spoly p q = fst (crit_pair p q) - snd (crit_pair p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "proof (cases \"component_of_term (lt p) = component_of_term (lt q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    spoly p q = fst (crit_pair p q) - snd (crit_pair p q)\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "case ec: True"], ["proof (state)\nthis:\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    spoly p q = fst (crit_pair p q) - snd (crit_pair p q)\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "proof (rule poly_mapping_eqI, simp only: lookup_minus)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "define t1 where \"t1 = lp p\""], ["proof (state)\nthis:\n  t1 = lp p\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "define t2 where \"t2 = lp q\""], ["proof (state)\nthis:\n  t2 = lp q\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "let ?l = \"lcs t1 t2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "let ?lv = \"term_of_pair (?l, component_of_term (lt p))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "let ?cp = \"crit_pair p q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "let ?a = \"\\<lambda>x. monom_mult (1 / lc p) (?l - t1) x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "let ?b = \"\\<lambda>x. monom_mult (1 / lc q) (?l - t2) x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "have l_1: \"(?l - t1) \\<oplus> lt p = ?lv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lcs t1 t2 - t1) \\<oplus> lt p =\n    term_of_pair (lcs t1 t2, component_of_term (lt p))", "by (simp add: adds_lcs adds_minus splus_def t1_def)"], ["proof (state)\nthis:\n  (lcs t1 t2 - t1) \\<oplus> lt p =\n  term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "have l_2: \"(?l - t2) \\<oplus> lt q = ?lv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lcs t1 t2 - t2) \\<oplus> lt q =\n    term_of_pair (lcs t1 t2, component_of_term (lt p))", "by (simp add: ec adds_lcs_2 adds_minus splus_def t2_def)"], ["proof (state)\nthis:\n  (lcs t1 t2 - t2) \\<oplus> lt q =\n  term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup (spoly p q) k =\n       lookup (fst (crit_pair p q)) k - lookup (snd (crit_pair p q)) k", "show \"lookup (spoly p q) v = lookup (fst ?cp) v - lookup (snd ?cp) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "proof (cases \"v = ?lv\")"], ["proof (state)\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "case True"], ["proof (state)\nthis:\n  v = term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "have v_1: \"v = (?l - t1) \\<oplus> lt p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = (lcs t1 t2 - t1) \\<oplus> lt p", "by (simp add: True l_1)"], ["proof (state)\nthis:\n  v = (lcs t1 t2 - t1) \\<oplus> lt p\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "from \\<open>p \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"lt p \\<in> keys p\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt p \\<in> keys p", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt p \\<in> keys p\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "hence v_2: \"v = (?l - t2) \\<oplus> lt q\""], ["proof (prove)\nusing this:\n  lt p \\<in> keys p\n\ngoal (1 subgoal):\n 1. v = (lcs t1 t2 - t2) \\<oplus> lt q", "by (simp add: True l_2)"], ["proof (state)\nthis:\n  v = (lcs t1 t2 - t2) \\<oplus> lt q\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "from \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> 0", "have \"lt q \\<in> keys q\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt q \\<in> keys q", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt q \\<in> keys q\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "from \\<open>lt p \\<in> keys p\\<close>"], ["proof (chain)\npicking this:\n  lt p \\<in> keys p", "have \"lookup (?a p) v = 1\""], ["proof (prove)\nusing this:\n  lt p \\<in> keys p\n\ngoal (1 subgoal):\n 1. lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v = (1::'b)", "by (simp add: in_keys_iff v_1 lookup_monom_mult lc_def term_simps)"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v = (1::'b)\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "also"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v = (1::'b)\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "from \\<open>lt q \\<in> keys q\\<close>"], ["proof (chain)\npicking this:\n  lt q \\<in> keys q", "have \"... = lookup (?b q) v\""], ["proof (prove)\nusing this:\n  lt q \\<in> keys q\n\ngoal (1 subgoal):\n 1. (1::'b) = lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "by (simp add: in_keys_iff v_2 lookup_monom_mult lc_def term_simps)"], ["proof (state)\nthis:\n  (1::'b) = lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "finally"], ["proof (chain)\npicking this:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v =\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "have \"lookup (spoly p q) v = 0\""], ["proof (prove)\nusing this:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v =\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n\ngoal (1 subgoal):\n 1. lookup (spoly p q) v = (0::'b)", "by (simp add: spoly_def ec Let_def t1_def t2_def lookup_minus lc_def)"], ["proof (state)\nthis:\n  lookup (spoly p q) v = (0::'b)\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "moreover"], ["proof (state)\nthis:\n  lookup (spoly p q) v = (0::'b)\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "have \"lookup (fst ?cp) v = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (fst (crit_pair p q)) v = (0::'b)", "by (simp add: crit_pair_def ec v_1 lookup_monom_mult t1_def t2_def term_simps,\n            simp only: not_in_keys_iff_lookup_eq_zero[symmetric] keys_tail, simp)"], ["proof (state)\nthis:\n  lookup (fst (crit_pair p q)) v = (0::'b)\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "moreover"], ["proof (state)\nthis:\n  lookup (fst (crit_pair p q)) v = (0::'b)\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "have \"lookup (snd ?cp) v = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (snd (crit_pair p q)) v = (0::'b)", "by (simp add: crit_pair_def ec v_2 lookup_monom_mult t1_def t2_def term_simps,\n            simp only: not_in_keys_iff_lookup_eq_zero[symmetric] keys_tail, simp)"], ["proof (state)\nthis:\n  lookup (snd (crit_pair p q)) v = (0::'b)\n\ngoal (2 subgoals):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n 2. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "ultimately"], ["proof (chain)\npicking this:\n  lookup (spoly p q) v = (0::'b)\n  lookup (fst (crit_pair p q)) v = (0::'b)\n  lookup (snd (crit_pair p q)) v = (0::'b)", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup (spoly p q) v = (0::'b)\n  lookup (fst (crit_pair p q)) v = (0::'b)\n  lookup (snd (crit_pair p q)) v = (0::'b)\n\ngoal (1 subgoal):\n 1. lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "by simp"], ["proof (state)\nthis:\n  lookup (spoly p q) v =\n  lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n\ngoal (1 subgoal):\n 1. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "case False"], ["proof (state)\nthis:\n  v \\<noteq> term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "have \"lookup (?a (tail p)) v = lookup (?a p) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "proof (cases \"?l - t1 adds\\<^sub>p v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n 2. \\<not> lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "case True"], ["proof (state)\nthis:\n  lcs t1 t2 - t1 adds\\<^sub>p v\n\ngoal (2 subgoals):\n 1. lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n 2. \\<not> lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "then"], ["proof (chain)\npicking this:\n  lcs t1 t2 - t1 adds\\<^sub>p v", "obtain u where v: \"v = (?l - t1) \\<oplus> u\""], ["proof (prove)\nusing this:\n  lcs t1 t2 - t1 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        v = (lcs t1 t2 - t1) \\<oplus> u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  v = (lcs t1 t2 - t1) \\<oplus> u\n\ngoal (2 subgoals):\n 1. lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n 2. \\<not> lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "have \"u \\<noteq> lt p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> lt p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u = lt p \\<Longrightarrow> False", "assume \"u = lt p\""], ["proof (state)\nthis:\n  u = lt p\n\ngoal (1 subgoal):\n 1. u = lt p \\<Longrightarrow> False", "hence \"v = ?lv\""], ["proof (prove)\nusing this:\n  u = lt p\n\ngoal (1 subgoal):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p))", "by (simp add: v l_1)"], ["proof (state)\nthis:\n  v = term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. u = lt p \\<Longrightarrow> False", "with \\<open>v \\<noteq> ?lv\\<close>"], ["proof (chain)\npicking this:\n  v \\<noteq> term_of_pair (lcs t1 t2, component_of_term (lt p))\n  v = term_of_pair (lcs t1 t2, component_of_term (lt p))", "show False"], ["proof (prove)\nusing this:\n  v \\<noteq> term_of_pair (lcs t1 t2, component_of_term (lt p))\n  v = term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<noteq> lt p\n\ngoal (2 subgoals):\n 1. lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n 2. \\<not> lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "thus ?thesis"], ["proof (prove)\nusing this:\n  u \\<noteq> lt p\n\ngoal (1 subgoal):\n 1. lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "by (simp add: v lookup_monom_mult lookup_tail_2 term_simps)"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n\ngoal (1 subgoal):\n 1. \\<not> lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "case False"], ["proof (state)\nthis:\n  \\<not> lcs t1 t2 - t1 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. \\<not> lcs t1 t2 - t1 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> lcs t1 t2 - t1 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n    lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v", "by (simp add: lookup_monom_mult)"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n\ngoal (1 subgoal):\n 1. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "moreover"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n\ngoal (1 subgoal):\n 1. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "have \"lookup (?b (tail q)) v = lookup (?b q) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "proof (cases \"?l - t2 adds\\<^sub>p v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n 2. \\<not> lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "case True"], ["proof (state)\nthis:\n  lcs t1 t2 - t2 adds\\<^sub>p v\n\ngoal (2 subgoals):\n 1. lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n 2. \\<not> lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "then"], ["proof (chain)\npicking this:\n  lcs t1 t2 - t2 adds\\<^sub>p v", "obtain u where v: \"v = (?l - t2) \\<oplus> u\""], ["proof (prove)\nusing this:\n  lcs t1 t2 - t2 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        v = (lcs t1 t2 - t2) \\<oplus> u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  v = (lcs t1 t2 - t2) \\<oplus> u\n\ngoal (2 subgoals):\n 1. lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n 2. \\<not> lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "have \"u \\<noteq> lt q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> lt q", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u = lt q \\<Longrightarrow> False", "assume \"u = lt q\""], ["proof (state)\nthis:\n  u = lt q\n\ngoal (1 subgoal):\n 1. u = lt q \\<Longrightarrow> False", "hence \"v = ?lv\""], ["proof (prove)\nusing this:\n  u = lt q\n\ngoal (1 subgoal):\n 1. v = term_of_pair (lcs t1 t2, component_of_term (lt p))", "by (simp add: v l_2)"], ["proof (state)\nthis:\n  v = term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. u = lt q \\<Longrightarrow> False", "with \\<open>v \\<noteq> ?lv\\<close>"], ["proof (chain)\npicking this:\n  v \\<noteq> term_of_pair (lcs t1 t2, component_of_term (lt p))\n  v = term_of_pair (lcs t1 t2, component_of_term (lt p))", "show False"], ["proof (prove)\nusing this:\n  v \\<noteq> term_of_pair (lcs t1 t2, component_of_term (lt p))\n  v = term_of_pair (lcs t1 t2, component_of_term (lt p))\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<noteq> lt q\n\ngoal (2 subgoals):\n 1. lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n 2. \\<not> lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "thus ?thesis"], ["proof (prove)\nusing this:\n  u \\<noteq> lt q\n\ngoal (1 subgoal):\n 1. lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "by (simp add: v lookup_monom_mult lookup_tail_2 term_simps)"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n\ngoal (1 subgoal):\n 1. \\<not> lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "case False"], ["proof (state)\nthis:\n  \\<not> lcs t1 t2 - t2 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. \\<not> lcs t1 t2 - t2 adds\\<^sub>p v \\<Longrightarrow>\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> lcs t1 t2 - t2 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n    lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "by (simp add: lookup_monom_mult)"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n\ngoal (1 subgoal):\n 1. v \\<noteq>\n    term_of_pair (lcs t1 t2, component_of_term (lt p)) \\<Longrightarrow>\n    lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "ultimately"], ["proof (chain)\npicking this:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) (tail p)) v =\n  lookup (monom_mult ((1::'b) / lc p) (lcs t1 t2 - t1) p) v\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) (tail q)) v =\n  lookup (monom_mult ((1::'b) / lc q) (lcs t1 t2 - t2) q) v\n\ngoal (1 subgoal):\n 1. lookup (spoly p q) v =\n    lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v", "by (simp add: ec spoly_def crit_pair_def lookup_minus t1_def t2_def Let_def lc_def)"], ["proof (state)\nthis:\n  lookup (spoly p q) v =\n  lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup (spoly p q) v =\n  lookup (fst (crit_pair p q)) v - lookup (snd (crit_pair p q)) v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spoly p q = fst (crit_pair p q) - snd (crit_pair p q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "case False"], ["proof (state)\nthis:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q = fst (crit_pair p q) - snd (crit_pair p q)", "by (simp add: spoly_def crit_pair_def False)"], ["proof (state)\nthis:\n  spoly p q = fst (crit_pair p q) - snd (crit_pair p q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma spoly_same: \"spoly p p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p p = 0", "by (simp add: spoly_def)"], ["", "lemma spoly_swap: \"spoly p q = - spoly q p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q = - spoly q p", "by (simp add: spoly_def lcs_comm Let_def)"], ["", "lemma spoly_red_zero_imp_crit_pair_cbelow_on:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"p \\<in> dgrad_p_set d m\"\n    and \"q \\<in> dgrad_p_set d m\" and \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"(red F)\\<^sup>*\\<^sup>* (spoly p q) 0\"\n  shows \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "from assms(7)"], ["proof (chain)\npicking this:\n  (red F)\\<^sup>*\\<^sup>* (spoly p q) 0", "have \"relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\""], ["proof (prove)\nusing this:\n  (red F)\\<^sup>*\\<^sup>* (spoly p q) 0\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "unfolding spoly_alt[OF assms(5) assms(6)]"], ["proof (prove)\nusing this:\n  (red F)\\<^sup>*\\<^sup>* (fst (crit_pair p q) - snd (crit_pair p q)) 0\n\ngoal (1 subgoal):\n 1. relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "by (rule red_diff_rtrancl_cs)"], ["proof (state)\nthis:\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "with assms(1) assms(2) assms(3) assms(4)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))", "show ?thesis"], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n  relation.cs (red F) (fst (crit_pair p q)) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "by (rule crit_pair_cs_imp_crit_pair_cbelow_on)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dgrad_p_set_le_spoly_zero: \"dgrad_p_set_le d {spoly p 0} {p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p 0} {p}", "proof (simp add: term_simps spoly_def lt_def[of 0] lcs_comm lcs_zero dgrad_p_set_le_def Keys_insert\n      Let_def min_term_def lc_def[symmetric], intro conjI impI dgrad_set_leI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "assume \"s \\<in> pp_of_term ` keys (monom_mult (1 / lc p) 0 p)\""], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` keys (monom_mult ((1::'b) / lc p) (0::'a) p)\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "then"], ["proof (chain)\npicking this:\n  s \\<in> pp_of_term ` keys (monom_mult ((1::'b) / lc p) (0::'a) p)", "obtain u where \"u \\<in> keys (monom_mult (1 / lc p) 0 p)\" and \"s = pp_of_term u\""], ["proof (prove)\nusing this:\n  s \\<in> pp_of_term ` keys (monom_mult ((1::'b) / lc p) (0::'a) p)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> keys (monom_mult ((1::'b) / lc p) (0::'a) p);\n         s = pp_of_term u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  u \\<in> keys (monom_mult ((1::'b) / lc p) (0::'a) p)\n  s = pp_of_term u\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "from this(1) keys_monom_mult_subset"], ["proof (chain)\npicking this:\n  u \\<in> keys (monom_mult ((1::'b) / lc p) (0::'a) p)\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p", "have \"u \\<in> (\\<oplus>) 0 ` keys p\""], ["proof (prove)\nusing this:\n  u \\<in> keys (monom_mult ((1::'b) / lc p) (0::'a) p)\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p\n\ngoal (1 subgoal):\n 1. u \\<in> (\\<oplus>) (0::'a) ` keys p", ".."], ["proof (state)\nthis:\n  u \\<in> (\\<oplus>) (0::'a) ` keys p\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "hence \"u \\<in> keys p\""], ["proof (prove)\nusing this:\n  u \\<in> (\\<oplus>) (0::'a) ` keys p\n\ngoal (1 subgoal):\n 1. u \\<in> keys p", "by (simp add: image_iff term_simps)"], ["proof (state)\nthis:\n  u \\<in> keys p\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "hence \"s \\<in> pp_of_term ` keys p\""], ["proof (prove)\nusing this:\n  u \\<in> keys p\n\ngoal (1 subgoal):\n 1. s \\<in> pp_of_term ` keys p", "by (simp add: \\<open>s = pp_of_term u\\<close>)"], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` keys p\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "moreover"], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` keys p\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "have \"d s \\<le> d s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d s \\<le> d s", ".."], ["proof (state)\nthis:\n  d s \\<le> d s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) = the_min;\n        s \\<in> pp_of_term `\n                keys (monom_mult ((1::'b) / lc p) (0::'a) p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n 2. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "ultimately"], ["proof (chain)\npicking this:\n  s \\<in> pp_of_term ` keys p\n  d s \\<le> d s", "show \"\\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\""], ["proof (prove)\nusing this:\n  s \\<in> pp_of_term ` keys p\n  d s \\<le> d s\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", ".."], ["proof (state)\nthis:\n  \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>component_of_term (lt p) \\<noteq> the_min;\n        s \\<in> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t\\<in>pp_of_term ` keys p. d s \\<le> d t", "qed simp"], ["", "lemma dgrad_p_set_le_spoly:\n  assumes \"dickson_grading d\"\n  shows \"dgrad_p_set_le d {spoly p q} {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {p, q}", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "have \"dgrad_p_set_le d {spoly p q} {spoly q 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {spoly q 0}", "unfolding True spoly_swap[of 0 q]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {- spoly q 0} {spoly q 0}", "by (fact dgrad_p_set_le_uminus)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {spoly q 0}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "also"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {spoly q 0}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "have \"dgrad_p_set_le d ... {q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly q 0} {q}", "by (fact dgrad_p_set_le_spoly_zero)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly q 0} {q}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "also"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly q 0} {q}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "have \"dgrad_p_set_le d ... {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {q} {p, q}", "by (rule dgrad_p_set_le_subset, simp)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {q} {p, q}\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "finally"], ["proof (chain)\npicking this:\n  dgrad_p_set_le d {spoly p q} {p, q}", "show ?thesis"], ["proof (prove)\nusing this:\n  dgrad_p_set_le d {spoly p q} {p, q}\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {p, q}", "."], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {p, q}\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {p, q}", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "case True"], ["proof (state)\nthis:\n  q = 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "have \"dgrad_p_set_le d {spoly p q} {p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {p}", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p 0} {p}", "by (fact dgrad_p_set_le_spoly_zero)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {p}\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "also"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {p}\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "have \"dgrad_p_set_le d ... {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {p} {p, q}", "by (rule dgrad_p_set_le_subset, simp)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {p} {p, q}\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}\n 2. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "finally"], ["proof (chain)\npicking this:\n  dgrad_p_set_le d {spoly p q} {p, q}", "show ?thesis"], ["proof (prove)\nusing this:\n  dgrad_p_set_le d {spoly p q} {p, q}\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {p, q}", "."], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {p, q}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "case False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "have \"dgrad_p_set_le d {spoly p q} {fst (crit_pair p q), snd (crit_pair p q)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {fst (crit_pair p q), snd (crit_pair p q)}", "unfolding spoly_alt[OF \\<open>p \\<noteq> 0\\<close> False]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q) - snd (crit_pair p q)}\n     {fst (crit_pair p q), snd (crit_pair p q)}", "by (rule dgrad_p_set_le_minus)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {fst (crit_pair p q), snd (crit_pair p q)}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "also"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {fst (crit_pair p q), snd (crit_pair p q)}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "have \"dgrad_p_set_le d ... {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q), snd (crit_pair p q)} {p, q}", "proof (rule dgrad_p_set_leI_insert)"], ["proof (state)\ngoal (2 subgoals):\n 1. dgrad_p_set_le d {snd (crit_pair p q)} {p, q}\n 2. dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "from assms"], ["proof (chain)\npicking this:\n  dickson_grading d", "show \"dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {fst (crit_pair p q)} {p, q}", "by (rule dgrad_p_set_le_fst_crit_pair)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q)} {p, q}\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {snd (crit_pair p q)} {p, q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {snd (crit_pair p q)} {p, q}", "from assms"], ["proof (chain)\npicking this:\n  dickson_grading d", "show \"dgrad_p_set_le d {snd (crit_pair p q)} {p, q}\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {snd (crit_pair p q)} {p, q}", "by (rule dgrad_p_set_le_snd_crit_pair)"], ["proof (state)\nthis:\n  dgrad_p_set_le d {snd (crit_pair p q)} {p, q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dgrad_p_set_le d {fst (crit_pair p q), snd (crit_pair p q)} {p, q}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> dgrad_p_set_le d {spoly p q} {p, q}", "finally"], ["proof (chain)\npicking this:\n  dgrad_p_set_le d {spoly p q} {p, q}", "show ?thesis"], ["proof (prove)\nusing this:\n  dgrad_p_set_le d {spoly p q} {p, q}\n\ngoal (1 subgoal):\n 1. dgrad_p_set_le d {spoly p q} {p, q}", "."], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {p, q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dgrad_p_set_le d {spoly p q} {p, q}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dgrad_p_set_closed_spoly:\n  assumes \"dickson_grading d\" and \"p \\<in> dgrad_p_set d m\" and \"q \\<in> dgrad_p_set d m\"\n  shows \"spoly p q \\<in> dgrad_p_set d m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "from dgrad_p_set_le_spoly[OF assms(1)]"], ["proof (chain)\npicking this:\n  dgrad_p_set_le d {spoly ?p ?q} {?p, ?q}", "have \"{spoly p q} \\<subseteq> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dgrad_p_set_le d {spoly ?p ?q} {?p, ?q}\n\ngoal (1 subgoal):\n 1. {spoly p q} \\<subseteq> dgrad_p_set d m", "proof (rule dgrad_p_set_le_dgrad_p_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. {p, q} \\<subseteq> dgrad_p_set d m", "from assms(2, 3)"], ["proof (chain)\npicking this:\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m", "show \"{p, q} \\<subseteq> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. {p, q} \\<subseteq> dgrad_p_set d m", "by simp"], ["proof (state)\nthis:\n  {p, q} \\<subseteq> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {spoly p q} \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "thus ?thesis"], ["proof (prove)\nusing this:\n  {spoly p q} \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "by simp"], ["proof (state)\nthis:\n  spoly p q \\<in> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma components_spoly_subset: \"component_of_term ` keys (spoly p q) \\<subseteq> component_of_term ` Keys {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term ` keys (spoly p q)\n    \\<subseteq> component_of_term ` Keys {p, q}", "unfolding spoly_def Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term `\n    keys\n     (if component_of_term (lt p) = component_of_term (lt q)\n      then monom_mult ((1::'b) / lookup p (lt p)) (lcs (lp p) (lp q) - lp p)\n            p -\n           monom_mult ((1::'b) / lookup q (lt q)) (lcs (lp p) (lp q) - lp q)\n            q\n      else 0)\n    \\<subseteq> component_of_term ` Keys {p, q}", "proof (split if_split, intro conjI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    component_of_term `\n    keys\n     (monom_mult ((1::'b) / lookup p (lt p)) (lcs (lp p) (lp q) - lp p) p -\n      monom_mult ((1::'b) / lookup q (lt q)) (lcs (lp p) (lp q) - lp q) q)\n    \\<subseteq> component_of_term ` Keys {p, q}\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    component_of_term ` keys 0 \\<subseteq> component_of_term ` Keys {p, q}", "define c where \"c = (1 / lookup p (lt p))\""], ["proof (state)\nthis:\n  c = (1::'b) / lookup p (lt p)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    component_of_term `\n    keys\n     (monom_mult ((1::'b) / lookup p (lt p)) (lcs (lp p) (lp q) - lp p) p -\n      monom_mult ((1::'b) / lookup q (lt q)) (lcs (lp p) (lp q) - lp q) q)\n    \\<subseteq> component_of_term ` Keys {p, q}\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    component_of_term ` keys 0 \\<subseteq> component_of_term ` Keys {p, q}", "define d where \"d = (1 / lookup q (lt q))\""], ["proof (state)\nthis:\n  d = (1::'b) / lookup q (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    component_of_term `\n    keys\n     (monom_mult ((1::'b) / lookup p (lt p)) (lcs (lp p) (lp q) - lp p) p -\n      monom_mult ((1::'b) / lookup q (lt q)) (lcs (lp p) (lp q) - lp q) q)\n    \\<subseteq> component_of_term ` Keys {p, q}\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    component_of_term ` keys 0 \\<subseteq> component_of_term ` Keys {p, q}", "define s where \"s = lcs (lp p) (lp q) - lp p\""], ["proof (state)\nthis:\n  s = lcs (lp p) (lp q) - lp p\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    component_of_term `\n    keys\n     (monom_mult ((1::'b) / lookup p (lt p)) (lcs (lp p) (lp q) - lp p) p -\n      monom_mult ((1::'b) / lookup q (lt q)) (lcs (lp p) (lp q) - lp q) q)\n    \\<subseteq> component_of_term ` Keys {p, q}\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    component_of_term ` keys 0 \\<subseteq> component_of_term ` Keys {p, q}", "define t where \"t = lcs (lp p) (lp q) - lp q\""], ["proof (state)\nthis:\n  t = lcs (lp p) (lp q) - lp q\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    component_of_term `\n    keys\n     (monom_mult ((1::'b) / lookup p (lt p)) (lcs (lp p) (lp q) - lp p) p -\n      monom_mult ((1::'b) / lookup q (lt q)) (lcs (lp p) (lp q) - lp q) q)\n    \\<subseteq> component_of_term ` Keys {p, q}\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    component_of_term ` keys 0 \\<subseteq> component_of_term ` Keys {p, q}", "show \"component_of_term ` keys (monom_mult c s p - monom_mult d t q) \\<subseteq> component_of_term ` Keys {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term ` keys (monom_mult c s p - monom_mult d t q)\n    \\<subseteq> component_of_term ` Keys {p, q}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> component_of_term `\n               keys (monom_mult c s p - monom_mult d t q) \\<Longrightarrow>\n       x \\<in> component_of_term ` Keys {p, q}", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> component_of_term `\n               keys (monom_mult c s p - monom_mult d t q) \\<Longrightarrow>\n       x \\<in> component_of_term ` Keys {p, q}", "assume \"k \\<in> component_of_term ` keys (monom_mult c s p - monom_mult d t q)\""], ["proof (state)\nthis:\n  k \\<in> component_of_term ` keys (monom_mult c s p - monom_mult d t q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> component_of_term `\n               keys (monom_mult c s p - monom_mult d t q) \\<Longrightarrow>\n       x \\<in> component_of_term ` Keys {p, q}", "then"], ["proof (chain)\npicking this:\n  k \\<in> component_of_term ` keys (monom_mult c s p - monom_mult d t q)", "obtain v where \"v \\<in> keys (monom_mult c s p - monom_mult d t q)\" and k: \"k = component_of_term v\""], ["proof (prove)\nusing this:\n  k \\<in> component_of_term ` keys (monom_mult c s p - monom_mult d t q)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> keys (monom_mult c s p - monom_mult d t q);\n         k = component_of_term v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  v \\<in> keys (monom_mult c s p - monom_mult d t q)\n  k = component_of_term v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> component_of_term `\n               keys (monom_mult c s p - monom_mult d t q) \\<Longrightarrow>\n       x \\<in> component_of_term ` Keys {p, q}", "from this(1) keys_minus"], ["proof (chain)\npicking this:\n  v \\<in> keys (monom_mult c s p - monom_mult d t q)\n  keys (?p - ?q) \\<subseteq> keys ?p \\<union> keys ?q", "have \"v \\<in> keys (monom_mult c s p) \\<union> keys (monom_mult d t q)\""], ["proof (prove)\nusing this:\n  v \\<in> keys (monom_mult c s p - monom_mult d t q)\n  keys (?p - ?q) \\<subseteq> keys ?p \\<union> keys ?q\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult c s p) \\<union> keys (monom_mult d t q)", ".."], ["proof (state)\nthis:\n  v \\<in> keys (monom_mult c s p) \\<union> keys (monom_mult d t q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> component_of_term `\n               keys (monom_mult c s p - monom_mult d t q) \\<Longrightarrow>\n       x \\<in> component_of_term ` Keys {p, q}", "thus \"k \\<in> component_of_term ` Keys {p, q}\""], ["proof (prove)\nusing this:\n  v \\<in> keys (monom_mult c s p) \\<union> keys (monom_mult d t q)\n\ngoal (1 subgoal):\n 1. k \\<in> component_of_term ` Keys {p, q}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> keys (monom_mult c s p) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}\n 2. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "assume \"v \\<in> keys (monom_mult c s p)\""], ["proof (state)\nthis:\n  v \\<in> keys (monom_mult c s p)\n\ngoal (2 subgoals):\n 1. v \\<in> keys (monom_mult c s p) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}\n 2. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "from this keys_monom_mult_subset"], ["proof (chain)\npicking this:\n  v \\<in> keys (monom_mult c s p)\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p", "have \"v \\<in> (\\<oplus>) s ` keys p\""], ["proof (prove)\nusing this:\n  v \\<in> keys (monom_mult c s p)\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p\n\ngoal (1 subgoal):\n 1. v \\<in> (\\<oplus>) s ` keys p", ".."], ["proof (state)\nthis:\n  v \\<in> (\\<oplus>) s ` keys p\n\ngoal (2 subgoals):\n 1. v \\<in> keys (monom_mult c s p) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}\n 2. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "then"], ["proof (chain)\npicking this:\n  v \\<in> (\\<oplus>) s ` keys p", "obtain u where \"u \\<in> keys p\" and v: \"v = s \\<oplus> u\""], ["proof (prove)\nusing this:\n  v \\<in> (\\<oplus>) s ` keys p\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> keys p; v = s \\<oplus> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  u \\<in> keys p\n  v = s \\<oplus> u\n\ngoal (2 subgoals):\n 1. v \\<in> keys (monom_mult c s p) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}\n 2. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "have \"u \\<in> Keys {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> Keys {p, q}", "by (rule in_KeysI, fact, simp)"], ["proof (state)\nthis:\n  u \\<in> Keys {p, q}\n\ngoal (2 subgoals):\n 1. v \\<in> keys (monom_mult c s p) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}\n 2. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "moreover"], ["proof (state)\nthis:\n  u \\<in> Keys {p, q}\n\ngoal (2 subgoals):\n 1. v \\<in> keys (monom_mult c s p) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}\n 2. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "have \"k = component_of_term u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = component_of_term u", "by (simp add: v k term_simps)"], ["proof (state)\nthis:\n  k = component_of_term u\n\ngoal (2 subgoals):\n 1. v \\<in> keys (monom_mult c s p) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}\n 2. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "ultimately"], ["proof (chain)\npicking this:\n  u \\<in> Keys {p, q}\n  k = component_of_term u", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<in> Keys {p, q}\n  k = component_of_term u\n\ngoal (1 subgoal):\n 1. k \\<in> component_of_term ` Keys {p, q}", "by simp"], ["proof (state)\nthis:\n  k \\<in> component_of_term ` Keys {p, q}\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "assume \"v \\<in> keys (monom_mult d t q)\""], ["proof (state)\nthis:\n  v \\<in> keys (monom_mult d t q)\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "from this keys_monom_mult_subset"], ["proof (chain)\npicking this:\n  v \\<in> keys (monom_mult d t q)\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p", "have \"v \\<in> (\\<oplus>) t ` keys q\""], ["proof (prove)\nusing this:\n  v \\<in> keys (monom_mult d t q)\n  keys (monom_mult ?c ?t ?p) \\<subseteq> (\\<oplus>) ?t ` keys ?p\n\ngoal (1 subgoal):\n 1. v \\<in> (\\<oplus>) t ` keys q", ".."], ["proof (state)\nthis:\n  v \\<in> (\\<oplus>) t ` keys q\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "then"], ["proof (chain)\npicking this:\n  v \\<in> (\\<oplus>) t ` keys q", "obtain u where \"u \\<in> keys q\" and v: \"v = t \\<oplus> u\""], ["proof (prove)\nusing this:\n  v \\<in> (\\<oplus>) t ` keys q\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> keys q; v = t \\<oplus> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  u \\<in> keys q\n  v = t \\<oplus> u\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "have \"u \\<in> Keys {p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> Keys {p, q}", "by (rule in_KeysI, fact, simp)"], ["proof (state)\nthis:\n  u \\<in> Keys {p, q}\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "moreover"], ["proof (state)\nthis:\n  u \\<in> Keys {p, q}\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "have \"k = component_of_term u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = component_of_term u", "by (simp add: v k term_simps)"], ["proof (state)\nthis:\n  k = component_of_term u\n\ngoal (1 subgoal):\n 1. v \\<in> keys (monom_mult d t q) \\<Longrightarrow>\n    k \\<in> component_of_term ` Keys {p, q}", "ultimately"], ["proof (chain)\npicking this:\n  u \\<in> Keys {p, q}\n  k = component_of_term u", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<in> Keys {p, q}\n  k = component_of_term u\n\ngoal (1 subgoal):\n 1. k \\<in> component_of_term ` Keys {p, q}", "by simp"], ["proof (state)\nthis:\n  k \\<in> component_of_term ` Keys {p, q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<in> component_of_term ` Keys {p, q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  component_of_term ` keys (monom_mult c s p - monom_mult d t q)\n  \\<subseteq> component_of_term ` Keys {p, q}\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    component_of_term ` keys 0 \\<subseteq> component_of_term ` Keys {p, q}", "qed simp"], ["", "lemma pmdl_closed_spoly:\n  assumes \"p \\<in> pmdl F\" and \"q \\<in> pmdl F\"\n  shows \"spoly p q \\<in> pmdl F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q \\<in> pmdl F", "proof (cases \"component_of_term (lt p) = component_of_term (lt q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    spoly p q \\<in> pmdl F\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q \\<in> pmdl F", "case True"], ["proof (state)\nthis:\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    spoly p q \\<in> pmdl F\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q \\<in> pmdl F", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q \\<in> pmdl F", "by (simp add: spoly_def True Let_def, rule pmdl.span_diff,\n        (rule pmdl_closed_monom_mult, fact)+)"], ["proof (state)\nthis:\n  spoly p q \\<in> pmdl F\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q \\<in> pmdl F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q \\<in> pmdl F", "case False"], ["proof (state)\nthis:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    spoly p q \\<in> pmdl F", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly p q \\<in> pmdl F", "by (simp add: spoly_def False pmdl.span_zero)"], ["proof (state)\nthis:\n  spoly p q \\<in> pmdl F\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Buchberger's Theorem\\<close>"], ["", "text \\<open>Before proving the main theorem of Gr\\\"obner bases theory for S-polynomials, as is usually done\n  in textbooks, we first prove it for critical pairs: a set \\<open>F\\<close> yields a confluent reduction\n  relation if the critical pairs of all \\<open>p \\<in> F\\<close> and \\<open>q \\<in> F\\<close> can be connected below\n  the least common sum of the leading power-products of \\<open>p\\<close> and \\<open>q\\<close>.\n  The reason why we proceed in this way is that it becomes much easier to prove the correctness of\n  Buchberger's second criterion for avoiding useless pairs.\\<close>"], ["", "lemma crit_pair_cbelow_imp_confluent_dgrad_p_set:\n  assumes dg: \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\"\n  assumes main: \"\\<And>p q. p \\<in> F \\<Longrightarrow> q \\<in> F \\<Longrightarrow> p \\<noteq> 0 \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> crit_pair_cbelow_on d m F p q\"\n  shows \"relation.is_confluent_on (red F) (dgrad_p_set d m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "let ?A = \"dgrad_p_set d m\""], ["proof (state)\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "let ?R = \"red F\""], ["proof (state)\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "let ?RS = \"\\<lambda>a b. red F a b \\<or> red F b a\""], ["proof (state)\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "let ?ord = \"(\\<prec>\\<^sub>p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "from dg"], ["proof (chain)\npicking this:\n  dickson_grading d", "have ro: \"Confluence.relation_order ?R ?ord ?A\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)", "by (rule is_relation_order_red)"], ["proof (state)\nthis:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "have dw: \"relation.dw_closed ?R ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation.dw_closed (red F) (dgrad_p_set d m)", "by (rule relation.dw_closedI, rule dgrad_p_set_closed_red, rule dg, rule assms(2))"], ["proof (state)\nthis:\n  relation.dw_closed (red F) (dgrad_p_set d m)\n\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d m)", "proof (rule relation_order.loc_connectivity_implies_confluence, fact ro)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_loc_connective_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) (red F)\n 2. relation.dw_closed (red F) (dgrad_p_set d m)", "show \"is_loc_connective_on ?A ?ord ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_loc_connective_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) (red F)", "unfolding is_loc_connective_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>dgrad_p_set d m.\n       \\<forall>b1 b2.\n          red F a b1 \\<and> red F a b2 \\<longrightarrow>\n          cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n           (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "proof (intro ballI allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "fix a b1 b2 :: \"'t \\<Rightarrow>\\<^sub>0 'b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "assume \"a \\<in> ?A\""], ["proof (state)\nthis:\n  a \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "assume \"?R a b1 \\<and> ?R a b2\""], ["proof (state)\nthis:\n  red F a b1 \\<and> red F a b2\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence \"?R a b1\" and \"?R a b2\""], ["proof (prove)\nusing this:\n  red F a b1 \\<and> red F a b2\n\ngoal (1 subgoal):\n 1. red F a b1 &&& red F a b2", "by simp_all"], ["proof (state)\nthis:\n  red F a b1\n  red F a b2\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence \"b1 \\<in> ?A\" and \"b2 \\<in> ?A\" and \"?ord b1 a\" and \"?ord b2 a\""], ["proof (prove)\nusing this:\n  red F a b1\n  red F a b2\n\ngoal (1 subgoal):\n 1. (b1 \\<in> dgrad_p_set d m &&& b2 \\<in> dgrad_p_set d m) &&&\n    b1 \\<prec>\\<^sub>p a &&& b2 \\<prec>\\<^sub>p a", "using red_ord dgrad_p_set_closed_red[OF dg assms(2) \\<open>a \\<in> ?A\\<close>]"], ["proof (prove)\nusing this:\n  red F a b1\n  red F a b2\n  red ?F ?p ?q \\<Longrightarrow> ?q \\<prec>\\<^sub>p ?p\n  red F a ?q \\<Longrightarrow> ?q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (b1 \\<in> dgrad_p_set d m &&& b2 \\<in> dgrad_p_set d m) &&&\n    b1 \\<prec>\\<^sub>p a &&& b2 \\<prec>\\<^sub>p a", "by blast+"], ["proof (state)\nthis:\n  b1 \\<in> dgrad_p_set d m\n  b2 \\<in> dgrad_p_set d m\n  b1 \\<prec>\\<^sub>p a\n  b2 \\<prec>\\<^sub>p a\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from this(1) this(2)"], ["proof (chain)\npicking this:\n  b1 \\<in> dgrad_p_set d m\n  b2 \\<in> dgrad_p_set d m", "have \"b1 - b2 \\<in> ?A\""], ["proof (prove)\nusing this:\n  b1 \\<in> dgrad_p_set d m\n  b2 \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. b1 - b2 \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_minus)"], ["proof (state)\nthis:\n  b1 - b2 \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from \\<open>red F a b1\\<close>"], ["proof (chain)\npicking this:\n  red F a b1", "obtain f1 and t1 where \"f1 \\<in> F\" and r1: \"red_single a b1 f1 t1\""], ["proof (prove)\nusing this:\n  red F a b1\n\ngoal (1 subgoal):\n 1. (\\<And>f1 t1.\n        \\<lbrakk>f1 \\<in> F; red_single a b1 f1 t1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule red_setE)"], ["proof (state)\nthis:\n  f1 \\<in> F\n  red_single a b1 f1 t1\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from \\<open>red F a b2\\<close>"], ["proof (chain)\npicking this:\n  red F a b2", "obtain f2 and t2 where \"f2 \\<in> F\" and r2: \"red_single a b2 f2 t2\""], ["proof (prove)\nusing this:\n  red F a b2\n\ngoal (1 subgoal):\n 1. (\\<And>f2 t2.\n        \\<lbrakk>f2 \\<in> F; red_single a b2 f2 t2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule red_setE)"], ["proof (state)\nthis:\n  f2 \\<in> F\n  red_single a b2 f2 t2\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from r1 r2"], ["proof (chain)\npicking this:\n  red_single a b1 f1 t1\n  red_single a b2 f2 t2", "have \"f1 \\<noteq> 0\" and \"f2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  red_single a b1 f1 t1\n  red_single a b2 f2 t2\n\ngoal (1 subgoal):\n 1. f1 \\<noteq> 0 &&& f2 \\<noteq> 0", "by (simp_all add: red_single_def)"], ["proof (state)\nthis:\n  f1 \\<noteq> 0\n  f2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence lc1: \"lc f1 \\<noteq> 0\" and lc2: \"lc f2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  f1 \\<noteq> 0\n  f2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lc f1 \\<noteq> (0::'b) &&& lc f2 \\<noteq> (0::'b)", "using lc_not_0"], ["proof (prove)\nusing this:\n  f1 \\<noteq> 0\n  f2 \\<noteq> 0\n  ?p \\<noteq> 0 \\<Longrightarrow> lc ?p \\<noteq> (0::?'b)\n\ngoal (1 subgoal):\n 1. lc f1 \\<noteq> (0::'b) &&& lc f2 \\<noteq> (0::'b)", "by auto"], ["proof (state)\nthis:\n  lc f1 \\<noteq> (0::'b)\n  lc f2 \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> dgrad_p_set d m;\n        red F a b1 \\<and> red F a b2\\<rbrakk>\n       \\<Longrightarrow> cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n                          (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "show \"cbelow_on ?A ?ord a (\\<lambda>a b. ?R a b \\<or> ?R b a) b1 b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "proof (cases \"t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2\n 2. t1 \\<oplus> lt f1 \\<noteq> t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "case False"], ["proof (state)\nthis:\n  t1 \\<oplus> lt f1 \\<noteq> t2 \\<oplus> lt f2\n\ngoal (2 subgoals):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2\n 2. t1 \\<oplus> lt f1 \\<noteq> t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from confluent_distinct[OF r1 r2 False \\<open>f1 \\<in> F\\<close> \\<open>f2 \\<in> F\\<close>]"], ["proof (chain)\npicking this:\n  (\\<And>s.\n      \\<lbrakk>(red F)\\<^sup>*\\<^sup>* b1 s;\n       (red F)\\<^sup>*\\<^sup>* b2 s\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain s\n          where s1: \"(red F)\\<^sup>*\\<^sup>* b1 s\" and s2: \"(red F)\\<^sup>*\\<^sup>* b2 s\""], ["proof (prove)\nusing this:\n  (\\<And>s.\n      \\<lbrakk>(red F)\\<^sup>*\\<^sup>* b1 s;\n       (red F)\\<^sup>*\\<^sup>* b2 s\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(red F)\\<^sup>*\\<^sup>* b1 s;\n         (red F)\\<^sup>*\\<^sup>* b2 s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  (red F)\\<^sup>*\\<^sup>* b1 s\n  (red F)\\<^sup>*\\<^sup>* b2 s\n\ngoal (2 subgoals):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2\n 2. t1 \\<oplus> lt f1 \\<noteq> t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"relation.cs ?R b1 b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation.cs (red F) b1 b2", "unfolding relation.cs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s.\n       (red F)\\<^sup>*\\<^sup>* b1 s \\<and> (red F)\\<^sup>*\\<^sup>* b2 s", "by (intro exI conjI, fact s1, fact s2)"], ["proof (state)\nthis:\n  relation.cs (red F) b1 b2\n\ngoal (2 subgoals):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2\n 2. t1 \\<oplus> lt f1 \\<noteq> t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from ro dw this \\<open>b1 \\<in> ?A\\<close> \\<open>b2 \\<in> ?A\\<close> \\<open>?ord b1 a\\<close> \\<open>?ord b2 a\\<close>"], ["proof (chain)\npicking this:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n  relation.dw_closed (red F) (dgrad_p_set d m)\n  relation.cs (red F) b1 b2\n  b1 \\<in> dgrad_p_set d m\n  b2 \\<in> dgrad_p_set d m\n  b1 \\<prec>\\<^sub>p a\n  b2 \\<prec>\\<^sub>p a", "show ?thesis"], ["proof (prove)\nusing this:\n  relation_order (red F) (\\<prec>\\<^sub>p) (dgrad_p_set d m)\n  relation.dw_closed (red F) (dgrad_p_set d m)\n  relation.cs (red F) b1 b2\n  b1 \\<in> dgrad_p_set d m\n  b2 \\<in> dgrad_p_set d m\n  b1 \\<prec>\\<^sub>p a\n  b2 \\<prec>\\<^sub>p a\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "by (rule relation_order.cs_implies_cbelow_on)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n   (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "case True"], ["proof (state)\nthis:\n  t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence ec: \"component_of_term (lt f1) = component_of_term (lt f2)\""], ["proof (prove)\nusing this:\n  t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2\n\ngoal (1 subgoal):\n 1. component_of_term (lt f1) = component_of_term (lt f2)", "by (metis component_of_term_splus)"], ["proof (state)\nthis:\n  component_of_term (lt f1) = component_of_term (lt f2)\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "let ?l1 = \"lp f1\""], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "let ?l2 = \"lp f2\""], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "define v where \"v \\<equiv> t2 \\<oplus> lt f2\""], ["proof (state)\nthis:\n  v \\<equiv> t2 \\<oplus> lt f2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "define l where \"l \\<equiv> lcs ?l1 ?l2\""], ["proof (state)\nthis:\n  l \\<equiv> lcs (lp f1) (lp f2)\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "define a' where \"a' = except a {v}\""], ["proof (state)\nthis:\n  a' = except a {v}\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "define ma where \"ma = monomial (lookup a v) v\""], ["proof (state)\nthis:\n  ma = monomial (lookup a v) v\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have v_alt: \"v = t1 \\<oplus> lt f1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = t1 \\<oplus> lt f1", "by (simp only: True v_def)"], ["proof (state)\nthis:\n  v = t1 \\<oplus> lt f1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"a = ma + a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = ma + a'", "unfolding ma_def a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = monomial (lookup a v) v + except a {v}", "by (fact plus_except)"], ["proof (state)\nthis:\n  a = ma + a'\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have comp_f1: \"component_of_term (lt f1) = component_of_term v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term (lt f1) = component_of_term v", "by (simp add: v_alt term_simps)"], ["proof (state)\nthis:\n  component_of_term (lt f1) = component_of_term v\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"?l1 adds l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp f1 adds l", "unfolding l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lp f1 adds lcs (lp f1) (lp f2)", "by (rule adds_lcs)"], ["proof (state)\nthis:\n  lp f1 adds l\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"?l2 adds l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp f2 adds l", "unfolding l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lp f2 adds lcs (lp f1) (lp f2)", "by (rule adds_lcs_2)"], ["proof (state)\nthis:\n  lp f2 adds l\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"?l1 adds\\<^sub>p (t1 \\<oplus> lt f1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp f1 adds\\<^sub>p t1 \\<oplus> lt f1", "by (simp add: adds_pp_splus term_simps)"], ["proof (state)\nthis:\n  lp f1 adds\\<^sub>p t1 \\<oplus> lt f1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence \"?l1 adds\\<^sub>p v\""], ["proof (prove)\nusing this:\n  lp f1 adds\\<^sub>p t1 \\<oplus> lt f1\n\ngoal (1 subgoal):\n 1. lp f1 adds\\<^sub>p v", "by (simp add: v_alt)"], ["proof (state)\nthis:\n  lp f1 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"?l2 adds\\<^sub>p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp f2 adds\\<^sub>p v", "by (simp add: v_def adds_pp_splus term_simps)"], ["proof (state)\nthis:\n  lp f2 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from \\<open>?l1 adds\\<^sub>p v\\<close> \\<open>?l2 adds\\<^sub>p v\\<close>"], ["proof (chain)\npicking this:\n  lp f1 adds\\<^sub>p v\n  lp f2 adds\\<^sub>p v", "have \"l adds\\<^sub>p v\""], ["proof (prove)\nusing this:\n  lp f1 adds\\<^sub>p v\n  lp f2 adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. l adds\\<^sub>p v", "by (simp add: l_def adds_pp_def lcs_adds)"], ["proof (state)\nthis:\n  l adds\\<^sub>p v\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"pp_of_term (v \\<ominus> ?l1) = t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp_of_term (v \\<ominus> lp f1) = t1", "by (simp add: v_alt term_simps)"], ["proof (state)\nthis:\n  pp_of_term (v \\<ominus> lp f1) = t1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "with \\<open>l adds\\<^sub>p v\\<close> \\<open>?l1 adds l\\<close>"], ["proof (chain)\npicking this:\n  l adds\\<^sub>p v\n  lp f1 adds l\n  pp_of_term (v \\<ominus> lp f1) = t1", "have tf1': \"pp_of_term ((l - ?l1) \\<oplus> (v \\<ominus> l)) = t1\""], ["proof (prove)\nusing this:\n  l adds\\<^sub>p v\n  lp f1 adds l\n  pp_of_term (v \\<ominus> lp f1) = t1\n\ngoal (1 subgoal):\n 1. pp_of_term ((l - lp f1) \\<oplus> (v \\<ominus> l)) = t1", "by (simp add: minus_splus_sminus_cancel)"], ["proof (state)\nthis:\n  pp_of_term ((l - lp f1) \\<oplus> (v \\<ominus> l)) = t1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence tf1: \"((pp_of_term v) - l) + (l - ?l1) = t1\""], ["proof (prove)\nusing this:\n  pp_of_term ((l - lp f1) \\<oplus> (v \\<ominus> l)) = t1\n\ngoal (1 subgoal):\n 1. pp_of_term v - l + (l - lp f1) = t1", "by (simp add: add.commute term_simps)"], ["proof (state)\nthis:\n  pp_of_term v - l + (l - lp f1) = t1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"pp_of_term (v \\<ominus> ?l2) = t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp_of_term (v \\<ominus> lp f2) = t2", "by (simp add: v_def term_simps)"], ["proof (state)\nthis:\n  pp_of_term (v \\<ominus> lp f2) = t2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "with \\<open>l adds\\<^sub>p v\\<close> \\<open>?l2 adds l\\<close>"], ["proof (chain)\npicking this:\n  l adds\\<^sub>p v\n  lp f2 adds l\n  pp_of_term (v \\<ominus> lp f2) = t2", "have tf2': \"pp_of_term ((l - ?l2) \\<oplus> (v \\<ominus> l)) = t2\""], ["proof (prove)\nusing this:\n  l adds\\<^sub>p v\n  lp f2 adds l\n  pp_of_term (v \\<ominus> lp f2) = t2\n\ngoal (1 subgoal):\n 1. pp_of_term ((l - lp f2) \\<oplus> (v \\<ominus> l)) = t2", "by (simp add: minus_splus_sminus_cancel)"], ["proof (state)\nthis:\n  pp_of_term ((l - lp f2) \\<oplus> (v \\<ominus> l)) = t2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence tf2: \"((pp_of_term v) - l) + (l - ?l2) = t2\""], ["proof (prove)\nusing this:\n  pp_of_term ((l - lp f2) \\<oplus> (v \\<ominus> l)) = t2\n\ngoal (1 subgoal):\n 1. pp_of_term v - l + (l - lp f2) = t2", "by (simp add: add.commute term_simps)"], ["proof (state)\nthis:\n  pp_of_term v - l + (l - lp f2) = t2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "let ?ca = \"lookup a v\""], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "let ?v = \"pp_of_term v - l\""], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"?v + l = pp_of_term v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp_of_term v - l + l = pp_of_term v", "using \\<open>l adds\\<^sub>p v\\<close> adds_minus adds_pp_def"], ["proof (prove)\nusing this:\n  l adds\\<^sub>p v\n  ?s adds ?t \\<Longrightarrow> ?t - ?s + ?s = ?t\n  (?t adds\\<^sub>p ?v) = (?t adds pp_of_term ?v)\n\ngoal (1 subgoal):\n 1. pp_of_term v - l + l = pp_of_term v", "by blast"], ["proof (state)\nthis:\n  pp_of_term v - l + l = pp_of_term v\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from tf1'"], ["proof (chain)\npicking this:\n  pp_of_term ((l - lp f1) \\<oplus> (v \\<ominus> l)) = t1", "have \"?v adds t1\""], ["proof (prove)\nusing this:\n  pp_of_term ((l - lp f1) \\<oplus> (v \\<ominus> l)) = t1\n\ngoal (1 subgoal):\n 1. pp_of_term v - l adds t1", "unfolding pp_of_term_splus add.commute[of \"l - ?l1\"] pp_of_term_sminus"], ["proof (prove)\nusing this:\n  pp_of_term v - l + (l - lp f1) = t1\n\ngoal (1 subgoal):\n 1. pp_of_term v - l adds t1", "using addsI"], ["proof (prove)\nusing this:\n  pp_of_term v - l + (l - lp f1) = t1\n  ?a = ?b + ?k \\<Longrightarrow> ?b adds ?a\n\ngoal (1 subgoal):\n 1. pp_of_term v - l adds t1", "by blast"], ["proof (state)\nthis:\n  pp_of_term v - l adds t1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "with dg"], ["proof (chain)\npicking this:\n  dickson_grading d\n  pp_of_term v - l adds t1", "have \"d ?v \\<le> d t1\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  pp_of_term v - l adds t1\n\ngoal (1 subgoal):\n 1. d (pp_of_term v - l) \\<le> d t1", "by (rule dickson_grading_adds_imp_le)"], ["proof (state)\nthis:\n  d (pp_of_term v - l) \\<le> d t1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "also"], ["proof (state)\nthis:\n  d (pp_of_term v - l) \\<le> d t1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from dg \\<open>a \\<in> ?A\\<close> r1"], ["proof (chain)\npicking this:\n  dickson_grading d\n  a \\<in> dgrad_p_set d m\n  red_single a b1 f1 t1", "have \"... \\<le> m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  a \\<in> dgrad_p_set d m\n  red_single a b1 f1 t1\n\ngoal (1 subgoal):\n 1. d t1 \\<le> m", "by (rule dgrad_p_set_red_single_pp)"], ["proof (state)\nthis:\n  d t1 \\<le> m\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "finally"], ["proof (chain)\npicking this:\n  d (pp_of_term v - l) \\<le> m", "have \"d ?v \\<le> m\""], ["proof (prove)\nusing this:\n  d (pp_of_term v - l) \\<le> m\n\ngoal (1 subgoal):\n 1. d (pp_of_term v - l) \\<le> m", "."], ["proof (state)\nthis:\n  d (pp_of_term v - l) \\<le> m\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from r2"], ["proof (chain)\npicking this:\n  red_single a b2 f2 t2", "have \"?ca \\<noteq> 0\""], ["proof (prove)\nusing this:\n  red_single a b2 f2 t2\n\ngoal (1 subgoal):\n 1. lookup a v \\<noteq> (0::'b)", "by (simp add: red_single_def v_def)"], ["proof (state)\nthis:\n  lookup a v \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence \"- ?ca \\<noteq> 0\""], ["proof (prove)\nusing this:\n  lookup a v \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. - lookup a v \\<noteq> (0::'b)", "by simp"], ["proof (state)\nthis:\n  - lookup a v \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "(* b1 *)"], ["proof (state)\nthis:\n  - lookup a v \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from r1"], ["proof (chain)\npicking this:\n  red_single a b1 f1 t1", "have \"b1 = a - monom_mult (?ca / lc f1) t1 f1\""], ["proof (prove)\nusing this:\n  red_single a b1 f1 t1\n\ngoal (1 subgoal):\n 1. b1 = a - monom_mult (lookup a v / lc f1) t1 f1", "by (simp add: red_single_def v_alt)"], ["proof (state)\nthis:\n  b1 = a - monom_mult (lookup a v / lc f1) t1 f1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "also"], ["proof (state)\nthis:\n  b1 = a - monom_mult (lookup a v / lc f1) t1 f1\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"... = monom_mult (- ?ca) ?v (fst (crit_pair f1 f2)) + a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - monom_mult (lookup a v / lc f1) t1 f1 =\n    monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)) +\n    a'", "proof (simp add: a'_def ec crit_pair_def l_def[symmetric] monom_mult_assoc tf1,\n              rule poly_mapping_eqI, simp add: lookup_add lookup_minus)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup a k - lookup (monom_mult (lookup a v / lc f1) t1 f1) k =\n       lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) k +\n       lookup (except a {v}) k", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup a k - lookup (monom_mult (lookup a v / lc f1) t1 f1) k =\n       lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) k +\n       lookup (except a {v}) k", "show \"lookup a u - lookup (monom_mult (?ca / lc f1) t1 f1) u =\n                lookup (monom_mult (- (?ca / lc f1)) t1 (tail f1)) u + lookup (except a {v}) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "proof (cases \"u = v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u\n 2. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "case True"], ["proof (state)\nthis:\n  u = v\n\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u\n 2. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "by (simp add: True lookup_except v_alt lookup_monom_mult lookup_tail_2 lc_def[symmetric] lc1 term_simps)"], ["proof (state)\nthis:\n  lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n  lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n  lookup (except a {v}) u\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "case False"], ["proof (state)\nthis:\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "hence \"u \\<notin> {v}\""], ["proof (prove)\nusing this:\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. u \\<notin> {v}", "by simp"], ["proof (state)\nthis:\n  u \\<notin> {v}\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "moreover"], ["proof (state)\nthis:\n  u \\<notin> {v}\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "{"], ["proof (state)\nthis:\n  u \\<notin> {v}\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "assume \"t1 adds\\<^sub>p u\""], ["proof (state)\nthis:\n  t1 adds\\<^sub>p u\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "hence \"t1 \\<oplus> (u \\<ominus> t1) = u\""], ["proof (prove)\nusing this:\n  t1 adds\\<^sub>p u\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> (u \\<ominus> t1) = u", "by (simp add: adds_pp_sminus)"], ["proof (state)\nthis:\n  t1 \\<oplus> (u \\<ominus> t1) = u\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "hence \"u \\<ominus> t1 \\<noteq> lt f1\""], ["proof (prove)\nusing this:\n  t1 \\<oplus> (u \\<ominus> t1) = u\n\ngoal (1 subgoal):\n 1. u \\<ominus> t1 \\<noteq> lt f1", "using False v_alt"], ["proof (prove)\nusing this:\n  t1 \\<oplus> (u \\<ominus> t1) = u\n  u \\<noteq> v\n  v = t1 \\<oplus> lt f1\n\ngoal (1 subgoal):\n 1. u \\<ominus> t1 \\<noteq> lt f1", "by auto"], ["proof (state)\nthis:\n  u \\<ominus> t1 \\<noteq> lt f1\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "hence \"lookup f1 (u \\<ominus> t1) = lookup (tail f1) (u \\<ominus> t1)\""], ["proof (prove)\nusing this:\n  u \\<ominus> t1 \\<noteq> lt f1\n\ngoal (1 subgoal):\n 1. lookup f1 (u \\<ominus> t1) = lookup (tail f1) (u \\<ominus> t1)", "by (simp add: lookup_tail_2)"], ["proof (state)\nthis:\n  lookup f1 (u \\<ominus> t1) = lookup (tail f1) (u \\<ominus> t1)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "}"], ["proof (state)\nthis:\n  t1 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f1 (u \\<ominus> t1) = lookup (tail f1) (u \\<ominus> t1)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "ultimately"], ["proof (chain)\npicking this:\n  u \\<notin> {v}\n  t1 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f1 (u \\<ominus> t1) = lookup (tail f1) (u \\<ominus> t1)", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<notin> {v}\n  t1 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f1 (u \\<ominus> t1) = lookup (tail f1) (u \\<ominus> t1)\n\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "using False"], ["proof (prove)\nusing this:\n  u \\<notin> {v}\n  t1 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f1 (u \\<ominus> t1) = lookup (tail f1) (u \\<ominus> t1)\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n    lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n    lookup (except a {v}) u", "by (simp add: lookup_except lookup_monom_mult)"], ["proof (state)\nthis:\n  lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n  lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n  lookup (except a {v}) u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup a u - lookup (monom_mult (lookup a v / lc f1) t1 f1) u =\n  lookup (monom_mult (- (lookup a v / lc f1)) t1 (tail f1)) u +\n  lookup (except a {v}) u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a - monom_mult (lookup a v / lc f1) t1 f1 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)) + a'\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "finally"], ["proof (chain)\npicking this:\n  b1 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)) + a'", "have b1: \"b1 = monom_mult (- ?ca) ?v (fst (crit_pair f1 f2)) + a'\""], ["proof (prove)\nusing this:\n  b1 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)) + a'\n\ngoal (1 subgoal):\n 1. b1 =\n    monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)) +\n    a'", "."], ["proof (state)\nthis:\n  b1 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)) + a'\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "(* b2 *)"], ["proof (state)\nthis:\n  b1 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)) + a'\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from r2"], ["proof (chain)\npicking this:\n  red_single a b2 f2 t2", "have \"b2 = a - monom_mult (?ca / lc f2) t2 f2\""], ["proof (prove)\nusing this:\n  red_single a b2 f2 t2\n\ngoal (1 subgoal):\n 1. b2 = a - monom_mult (lookup a v / lc f2) t2 f2", "by (simp add: red_single_def v_def True)"], ["proof (state)\nthis:\n  b2 = a - monom_mult (lookup a v / lc f2) t2 f2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "also"], ["proof (state)\nthis:\n  b2 = a - monom_mult (lookup a v / lc f2) t2 f2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "have \"... = monom_mult (- ?ca) ?v (snd (crit_pair f1 f2)) + a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - monom_mult (lookup a v / lc f2) t2 f2 =\n    monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)) +\n    a'", "proof (simp add: a'_def ec crit_pair_def l_def[symmetric] monom_mult_assoc tf2,\n              rule poly_mapping_eqI, simp add: lookup_add lookup_minus)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup a k - lookup (monom_mult (lookup a v / lc f2) t2 f2) k =\n       lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) k +\n       lookup (except a {v}) k", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       lookup a k - lookup (monom_mult (lookup a v / lc f2) t2 f2) k =\n       lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) k +\n       lookup (except a {v}) k", "show \"lookup a u - lookup (monom_mult (?ca / lc f2) t2 f2) u =\n                lookup (monom_mult (- (?ca / lc f2)) t2 (tail f2)) u + lookup (except a {v}) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "proof (cases \"u = v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u\n 2. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "case True"], ["proof (state)\nthis:\n  u = v\n\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u\n 2. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "by (simp add: True lookup_except v_def lookup_monom_mult lookup_tail_2 lc_def[symmetric] lc2 term_simps)"], ["proof (state)\nthis:\n  lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n  lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n  lookup (except a {v}) u\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "case False"], ["proof (state)\nthis:\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "hence \"u \\<notin> {v}\""], ["proof (prove)\nusing this:\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. u \\<notin> {v}", "by simp"], ["proof (state)\nthis:\n  u \\<notin> {v}\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "moreover"], ["proof (state)\nthis:\n  u \\<notin> {v}\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "{"], ["proof (state)\nthis:\n  u \\<notin> {v}\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "assume \"t2 adds\\<^sub>p u\""], ["proof (state)\nthis:\n  t2 adds\\<^sub>p u\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "hence \"t2 \\<oplus> (u \\<ominus> t2) = u\""], ["proof (prove)\nusing this:\n  t2 adds\\<^sub>p u\n\ngoal (1 subgoal):\n 1. t2 \\<oplus> (u \\<ominus> t2) = u", "by (simp add: adds_pp_sminus)"], ["proof (state)\nthis:\n  t2 \\<oplus> (u \\<ominus> t2) = u\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "hence \"u \\<ominus> t2 \\<noteq> lt f2\""], ["proof (prove)\nusing this:\n  t2 \\<oplus> (u \\<ominus> t2) = u\n\ngoal (1 subgoal):\n 1. u \\<ominus> t2 \\<noteq> lt f2", "using False v_def"], ["proof (prove)\nusing this:\n  t2 \\<oplus> (u \\<ominus> t2) = u\n  u \\<noteq> v\n  v \\<equiv> t2 \\<oplus> lt f2\n\ngoal (1 subgoal):\n 1. u \\<ominus> t2 \\<noteq> lt f2", "by auto"], ["proof (state)\nthis:\n  u \\<ominus> t2 \\<noteq> lt f2\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "hence \"lookup f2 (u \\<ominus> t2) = lookup (tail f2) (u \\<ominus> t2)\""], ["proof (prove)\nusing this:\n  u \\<ominus> t2 \\<noteq> lt f2\n\ngoal (1 subgoal):\n 1. lookup f2 (u \\<ominus> t2) = lookup (tail f2) (u \\<ominus> t2)", "by (simp add: lookup_tail_2)"], ["proof (state)\nthis:\n  lookup f2 (u \\<ominus> t2) = lookup (tail f2) (u \\<ominus> t2)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "}"], ["proof (state)\nthis:\n  t2 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f2 (u \\<ominus> t2) = lookup (tail f2) (u \\<ominus> t2)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "ultimately"], ["proof (chain)\npicking this:\n  u \\<notin> {v}\n  t2 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f2 (u \\<ominus> t2) = lookup (tail f2) (u \\<ominus> t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<notin> {v}\n  t2 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f2 (u \\<ominus> t2) = lookup (tail f2) (u \\<ominus> t2)\n\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "using False"], ["proof (prove)\nusing this:\n  u \\<notin> {v}\n  t2 adds\\<^sub>p u \\<Longrightarrow>\n  lookup f2 (u \\<ominus> t2) = lookup (tail f2) (u \\<ominus> t2)\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n    lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n    lookup (except a {v}) u", "by (simp add: lookup_except lookup_monom_mult)"], ["proof (state)\nthis:\n  lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n  lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n  lookup (except a {v}) u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup a u - lookup (monom_mult (lookup a v / lc f2) t2 f2) u =\n  lookup (monom_mult (- (lookup a v / lc f2)) t2 (tail f2)) u +\n  lookup (except a {v}) u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a - monom_mult (lookup a v / lc f2) t2 f2 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)) + a'\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "finally"], ["proof (chain)\npicking this:\n  b2 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)) + a'", "have b2: \"b2 = monom_mult (- ?ca) ?v (snd (crit_pair f1 f2)) + a'\""], ["proof (prove)\nusing this:\n  b2 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)) + a'\n\ngoal (1 subgoal):\n 1. b2 =\n    monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)) +\n    a'", "."], ["proof (state)\nthis:\n  b2 =\n  monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)) + a'\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "let ?lv = \"term_of_pair (l, component_of_term (lt f1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "from \\<open>f1 \\<in> F\\<close> \\<open>f2 \\<in> F\\<close> \\<open>f1 \\<noteq> 0\\<close> \\<open>f2 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  f1 \\<in> F\n  f2 \\<in> F\n  f1 \\<noteq> 0\n  f2 \\<noteq> 0", "have \"crit_pair_cbelow_on d m F f1 f2\""], ["proof (prove)\nusing this:\n  f1 \\<in> F\n  f2 \\<in> F\n  f1 \\<noteq> 0\n  f2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F f1 f2", "by (rule main)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F f1 f2\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence \"cbelow_on ?A ?ord (monomial 1 ?lv) ?RS (fst (crit_pair f1 f2)) (snd (crit_pair f1 f2))\""], ["proof (prove)\nusing this:\n  crit_pair_cbelow_on d m F f1 f2\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b) (term_of_pair (l, component_of_term (lt f1))))\n     (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair f1 f2))\n     (snd (crit_pair f1 f2))", "by (simp only: crit_pair_cbelow_on_def l_def)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b) (term_of_pair (l, component_of_term (lt f1))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair f1 f2))\n   (snd (crit_pair f1 f2))\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "with dg assms (2) \\<open>d ?v \\<le> m\\<close> \\<open>- ?ca \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  d (pp_of_term v - l) \\<le> m\n  - lookup a v \\<noteq> (0::'b)\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b) (term_of_pair (l, component_of_term (lt f1))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair f1 f2))\n   (snd (crit_pair f1 f2))", "have \"cbelow_on ?A ?ord (monom_mult (- ?ca) ?v (monomial 1 ?lv)) ?RS\n              (monom_mult (- ?ca) ?v (fst (crit_pair f1 f2)))\n              (monom_mult (- ?ca) ?v (snd (crit_pair f1 f2)))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  d (pp_of_term v - l) \\<le> m\n  - lookup a v \\<noteq> (0::'b)\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b) (term_of_pair (l, component_of_term (lt f1))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair f1 f2))\n   (snd (crit_pair f1 f2))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monom_mult (- lookup a v) (pp_of_term v - l)\n       (monomial (1::'b) (term_of_pair (l, component_of_term (lt f1)))))\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n     (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))", "by (rule cbelow_on_monom_mult)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monom_mult (- lookup a v) (pp_of_term v - l)\n     (monomial (1::'b) (term_of_pair (l, component_of_term (lt f1)))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence \"cbelow_on ?A ?ord (monomial (- ?ca) v) ?RS\n              (monom_mult (- ?ca) ?v (fst (crit_pair f1 f2)))\n              (monom_mult (- ?ca) ?v (snd (crit_pair f1 f2)))\""], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monom_mult (- lookup a v) (pp_of_term v - l)\n     (monomial (1::'b) (term_of_pair (l, component_of_term (lt f1)))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (- lookup a v) v) (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n     (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))", "by (simp add: monom_mult_monomial \\<open>(pp_of_term v - l) + l = pp_of_term v\\<close> splus_def comp_f1 term_simps)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) (monomial (- lookup a v) v)\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "with \\<open>?ca \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  lookup a v \\<noteq> (0::'b)\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) (monomial (- lookup a v) v)\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))", "have \"cbelow_on ?A ?ord (monomial ?ca (0 \\<oplus> v)) ?RS\n              (monom_mult (-?ca) ?v (fst (crit_pair f1 f2))) (monom_mult (-?ca) ?v (snd (crit_pair f1 f2)))\""], ["proof (prove)\nusing this:\n  lookup a v \\<noteq> (0::'b)\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) (monomial (- lookup a v) v)\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (lookup a v) ((0::'a) \\<oplus> v))\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n     (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))", "by (rule cbelow_on_monom_mult_monomial)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (lookup a v) ((0::'a) \\<oplus> v))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "hence \"cbelow_on ?A ?ord ma ?RS\n              (monom_mult (-?ca) ?v (fst (crit_pair f1 f2))) (monom_mult (-?ca) ?v (snd (crit_pair f1 f2)))\""], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (lookup a v) ((0::'a) \\<oplus> v))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) ma\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n     (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))", "by (simp add: ma_def term_simps)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) ma\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. t1 \\<oplus> lt f1 = t2 \\<oplus> lt f2 \\<Longrightarrow>\n    cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "with dg assms(2) _ _"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) ma\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))", "show \"cbelow_on ?A ?ord a ?RS b1 b2\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) ma\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup a v) (pp_of_term v - l) (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup a v) (pp_of_term v - l) (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n     (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2", "unfolding \\<open>a = ma + a'\\<close> b1 b2"], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) ma\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (- lookup (ma + a') v) (pp_of_term v - l)\n     (fst (crit_pair f1 f2)))\n   (monom_mult (- lookup (ma + a') v) (pp_of_term v - l)\n     (snd (crit_pair f1 f2)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) (ma + a')\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (- lookup (ma + a') v) (pp_of_term v - l)\n       (fst (crit_pair f1 f2)) +\n      a')\n     (monom_mult (- lookup (ma + a') v) (pp_of_term v - l)\n       (snd (crit_pair f1 f2)) +\n      a')", "proof (rule cbelow_on_plus)"], ["proof (state)\ngoal (2 subgoals):\n 1. a' \\<in> dgrad_p_set d m\n 2. keys a' \\<inter> keys ma = {}", "show \"a' \\<in> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' \\<in> dgrad_p_set d m", "by (rule, simp add: a'_def keys_except, erule conjE, intro dgrad_p_setD,\n                rule \\<open>a \\<in> dgrad_p_set d m\\<close>)"], ["proof (state)\nthis:\n  a' \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. keys a' \\<inter> keys ma = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. keys a' \\<inter> keys ma = {}", "show \"keys a' \\<inter> keys ma = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys a' \\<inter> keys ma = {}", "by (simp add: ma_def a'_def keys_except)"], ["proof (state)\nthis:\n  keys a' \\<inter> keys ma = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n   (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) a\n   (\\<lambda>a b. red F a b \\<or> red F b a) b1 b2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_loc_connective_on (dgrad_p_set d m) (\\<prec>\\<^sub>p) (red F)\n\ngoal (1 subgoal):\n 1. relation.dw_closed (red F) (dgrad_p_set d m)", "qed fact"], ["proof (state)\nthis:\n  relation.is_confluent_on (red F) (dgrad_p_set d m)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary crit_pair_cbelow_imp_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>p q. p \\<in> F \\<Longrightarrow> q \\<in> F \\<Longrightarrow> p \\<noteq> 0 \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> crit_pair_cbelow_on d m F p q\"\n  shows \"is_Groebner_basis F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis F", "unfolding is_Groebner_basis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. relation.is_ChurchRosser (red F)", "proof (rule relation.confluence_implies_ChurchRosser,\n      simp only: relation.is_confluent_def relation.is_confluent_on_def, intro ballI allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "fix a b1 b2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "assume a: \"(red F)\\<^sup>*\\<^sup>* a b1 \\<and> (red F)\\<^sup>*\\<^sup>* a b2\""], ["proof (state)\nthis:\n  (red F)\\<^sup>*\\<^sup>* a b1 \\<and> (red F)\\<^sup>*\\<^sup>* a b2\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "from assms(2)"], ["proof (chain)\npicking this:\n  F \\<subseteq> dgrad_p_set d m", "obtain n where \"m \\<le> n\" and \"a \\<in> dgrad_p_set d n\" and \"F \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>m \\<le> n; a \\<in> dgrad_p_set d n;\n         F \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule dgrad_p_set_insert)"], ["proof (state)\nthis:\n  m \\<le> n\n  a \\<in> dgrad_p_set d n\n  F \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "{"], ["proof (state)\nthis:\n  m \\<le> n\n  a \\<in> dgrad_p_set d n\n  F \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "fix p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "assume \"p \\<in> F\" and \"q \\<in> F\" and \"p \\<noteq> 0\" and \"q \\<noteq> 0\""], ["proof (state)\nthis:\n  p \\<in> F\n  q \\<in> F\n  p \\<noteq> 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "hence \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\nusing this:\n  p \\<in> F\n  q \\<in> F\n  p \\<noteq> 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "by (rule assms(3))"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "from this dgrad_p_set_subset[OF \\<open>m \\<le> n\\<close>]"], ["proof (chain)\npicking this:\n  crit_pair_cbelow_on d m F p q\n  dgrad_p_set ?d m \\<subseteq> dgrad_p_set ?d n", "have \"crit_pair_cbelow_on d n F p q\""], ["proof (prove)\nusing this:\n  crit_pair_cbelow_on d m F p q\n  dgrad_p_set ?d m \\<subseteq> dgrad_p_set ?d n\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d n F p q", "unfolding crit_pair_cbelow_on_def"], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (snd (crit_pair p q))\n  dgrad_p_set ?d m \\<subseteq> dgrad_p_set ?d n\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d n) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n     (snd (crit_pair p q))", "by (rule cbelow_on_mono)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d n F p q\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?p40 \\<in> F; ?q40 \\<in> F; ?p40 \\<noteq> 0;\n   ?q40 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> crit_pair_cbelow_on d n F ?p40 ?q40\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "with assms(1) \\<open>F \\<subseteq> dgrad_p_set d n\\<close>"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d n\n  \\<lbrakk>?p40 \\<in> F; ?q40 \\<in> F; ?p40 \\<noteq> 0;\n   ?q40 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> crit_pair_cbelow_on d n F ?p40 ?q40", "have \"relation.is_confluent_on (red F) (dgrad_p_set d n)\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d n\n  \\<lbrakk>?p40 \\<in> F; ?q40 \\<in> F; ?p40 \\<noteq> 0;\n   ?q40 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> crit_pair_cbelow_on d n F ?p40 ?q40\n\ngoal (1 subgoal):\n 1. relation.is_confluent_on (red F) (dgrad_p_set d n)", "by (rule crit_pair_cbelow_imp_confluent_dgrad_p_set)"], ["proof (state)\nthis:\n  relation.is_confluent_on (red F) (dgrad_p_set d n)\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "from this \\<open>a \\<in> dgrad_p_set d n\\<close>"], ["proof (chain)\npicking this:\n  relation.is_confluent_on (red F) (dgrad_p_set d n)\n  a \\<in> dgrad_p_set d n", "have \"\\<forall>b1 b2. (red F)\\<^sup>*\\<^sup>* a b1 \\<and> (red F)\\<^sup>*\\<^sup>* a b2 \\<longrightarrow> relation.cs (red F) b1 b2\""], ["proof (prove)\nusing this:\n  relation.is_confluent_on (red F) (dgrad_p_set d n)\n  a \\<in> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<forall>b1 b2.\n       (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n       (red F)\\<^sup>*\\<^sup>* a b2 \\<longrightarrow>\n       relation.cs (red F) b1 b2", "unfolding relation.is_confluent_on_def"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>dgrad_p_set d n.\n     \\<forall>b1 b2.\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2 \\<longrightarrow>\n        relation.cs (red F) b1 b2\n  a \\<in> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<forall>b1 b2.\n       (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n       (red F)\\<^sup>*\\<^sup>* a b2 \\<longrightarrow>\n       relation.cs (red F) b1 b2", ".."], ["proof (state)\nthis:\n  \\<forall>b1 b2.\n     (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n     (red F)\\<^sup>*\\<^sup>* a b2 \\<longrightarrow>\n     relation.cs (red F) b1 b2\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>a \\<in> UNIV;\n        (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n        (red F)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red F) b1 b2", "with a"], ["proof (chain)\npicking this:\n  (red F)\\<^sup>*\\<^sup>* a b1 \\<and> (red F)\\<^sup>*\\<^sup>* a b2\n  \\<forall>b1 b2.\n     (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n     (red F)\\<^sup>*\\<^sup>* a b2 \\<longrightarrow>\n     relation.cs (red F) b1 b2", "show \"relation.cs (red F) b1 b2\""], ["proof (prove)\nusing this:\n  (red F)\\<^sup>*\\<^sup>* a b1 \\<and> (red F)\\<^sup>*\\<^sup>* a b2\n  \\<forall>b1 b2.\n     (red F)\\<^sup>*\\<^sup>* a b1 \\<and>\n     (red F)\\<^sup>*\\<^sup>* a b2 \\<longrightarrow>\n     relation.cs (red F) b1 b2\n\ngoal (1 subgoal):\n 1. relation.cs (red F) b1 b2", "by blast"], ["proof (state)\nthis:\n  relation.cs (red F) b1 b2\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary Buchberger_criterion_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>p q. p \\<in> F \\<Longrightarrow> q \\<in> F \\<Longrightarrow> p \\<noteq> 0 \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> p \\<noteq> q \\<Longrightarrow>\n                      component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow> (red F)\\<^sup>*\\<^sup>* (spoly p q) 0\"\n  shows \"is_Groebner_basis F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis F", "using assms(1) assms(2)"], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. is_Groebner_basis F", "proof (rule crit_pair_cbelow_imp_GB_dgrad_p_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> F; q \\<in> F; p \\<noteq> 0; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "fix p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> F; q \\<in> F; p \\<noteq> 0; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "assume \"p \\<in> F\" and \"q \\<in> F\" and \"p \\<noteq> 0\" and \"q \\<noteq> 0\""], ["proof (state)\nthis:\n  p \\<in> F\n  q \\<in> F\n  p \\<noteq> 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> F; q \\<in> F; p \\<noteq> 0; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "from this(1, 2) assms(2)"], ["proof (chain)\npicking this:\n  p \\<in> F\n  q \\<in> F\n  F \\<subseteq> dgrad_p_set d m", "have p: \"p \\<in> dgrad_p_set d m\" and q: \"q \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> F\n  q \\<in> F\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. p \\<in> dgrad_p_set d m &&& q \\<in> dgrad_p_set d m", "by auto"], ["proof (state)\nthis:\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> F; q \\<in> F; p \\<noteq> 0; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "show \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof (cases \"p = q\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = q \\<Longrightarrow> crit_pair_cbelow_on d m F p q\n 2. p \\<noteq> q \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "case True"], ["proof (state)\nthis:\n  p = q\n\ngoal (2 subgoals):\n 1. p = q \\<Longrightarrow> crit_pair_cbelow_on d m F p q\n 2. p \\<noteq> q \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "from assms(1) q"], ["proof (chain)\npicking this:\n  dickson_grading d\n  q \\<in> dgrad_p_set d m", "show ?thesis"], ["proof (prove)\nusing this:\n  dickson_grading d\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "unfolding True"], ["proof (prove)\nusing this:\n  dickson_grading d\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F q q", "by (rule crit_pair_cbelow_same)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "case False"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<Longrightarrow> crit_pair_cbelow_on d m F p q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof (cases \"component_of_term (lt p) = component_of_term (lt q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "case True"], ["proof (state)\nthis:\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from assms(1) assms(2) p q \\<open>p \\<noteq> 0\\<close> \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n  p \\<noteq> 0\n  q \\<noteq> 0", "show \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n  p \\<noteq> 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof (rule spoly_red_zero_imp_crit_pair_cbelow_on)"], ["proof (state)\ngoal (1 subgoal):\n 1. (red F)\\<^sup>*\\<^sup>* (spoly p q) 0", "from \\<open>p \\<in> F\\<close> \\<open>q \\<in> F\\<close> \\<open>p \\<noteq> 0\\<close> \\<open>q \\<noteq> 0\\<close> \\<open>p \\<noteq> q\\<close> True"], ["proof (chain)\npicking this:\n  p \\<in> F\n  q \\<in> F\n  p \\<noteq> 0\n  q \\<noteq> 0\n  p \\<noteq> q\n  component_of_term (lt p) = component_of_term (lt q)", "show \"(red F)\\<^sup>*\\<^sup>* (spoly p q) 0\""], ["proof (prove)\nusing this:\n  p \\<in> F\n  q \\<in> F\n  p \\<noteq> 0\n  q \\<noteq> 0\n  p \\<noteq> q\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. (red F)\\<^sup>*\\<^sup>* (spoly p q) 0", "by (rule assms(3))"], ["proof (state)\nthis:\n  (red F)\\<^sup>*\\<^sup>* (spoly p q) 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "case False"], ["proof (state)\nthis:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "thus ?thesis"], ["proof (prove)\nusing this:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "by (rule crit_pair_cbelow_distinct_component)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas Buchberger_criterion_finite = Buchberger_criterion_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemma (in ordered_term) GB_imp_zero_reducibility:\n  assumes \"is_Groebner_basis G\" and \"f \\<in> pmdl G\"\n  shows \"(red G)\\<^sup>*\\<^sup>* f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "from in_pmdl_srtc[OF \\<open>f \\<in> pmdl G\\<close>] \\<open>is_Groebner_basis G\\<close>"], ["proof (chain)\npicking this:\n  relation.srtc (red G) f 0\n  is_Groebner_basis G", "have \"relation.cs (red G) f 0\""], ["proof (prove)\nusing this:\n  relation.srtc (red G) f 0\n  is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. relation.cs (red G) f 0", "unfolding is_Groebner_basis_def relation.is_ChurchRosser_def"], ["proof (prove)\nusing this:\n  relation.srtc (red G) f 0\n  \\<forall>a b.\n     relation.srtc (red G) a b \\<longrightarrow> relation.cs (red G) a b\n\ngoal (1 subgoal):\n 1. relation.cs (red G) f 0", "by simp"], ["proof (state)\nthis:\n  relation.cs (red G) f 0\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "then"], ["proof (chain)\npicking this:\n  relation.cs (red G) f 0", "obtain s where rfs: \"(red G)\\<^sup>*\\<^sup>* f s\" and r0s: \"(red G)\\<^sup>*\\<^sup>* 0 s\""], ["proof (prove)\nusing this:\n  relation.cs (red G) f 0\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* f s;\n         (red G)\\<^sup>*\\<^sup>* 0 s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding relation.cs_def"], ["proof (prove)\nusing this:\n  \\<exists>s. (red G)\\<^sup>*\\<^sup>* f s \\<and> (red G)\\<^sup>*\\<^sup>* 0 s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* f s;\n         (red G)\\<^sup>*\\<^sup>* 0 s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f s\n  (red G)\\<^sup>*\\<^sup>* 0 s\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "from rtrancl_0[OF r0s] and rfs"], ["proof (chain)\npicking this:\n  s = 0\n  (red G)\\<^sup>*\\<^sup>* f s", "show ?thesis"], ["proof (prove)\nusing this:\n  s = 0\n  (red G)\\<^sup>*\\<^sup>* f s\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "by simp"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in ordered_term) GB_imp_reducibility:\n  assumes \"is_Groebner_basis G\" and \"f \\<noteq> 0\" and \"f \\<in> pmdl G\"\n  shows \"is_red G f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red G f", "using assms"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  f \\<noteq> 0\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. is_red G f", "by (meson GB_imp_zero_reducibility is_red_def relation.rtrancl_is_final)"], ["", "lemma is_Groebner_basis_empty: \"is_Groebner_basis {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis {}", "by (rule Buchberger_criterion_finite, rule, simp)"], ["", "lemma is_Groebner_basis_singleton: \"is_Groebner_basis {f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis {f}", "by (rule Buchberger_criterion_finite, simp, simp add: spoly_same)"], ["", "subsection \\<open>Buchberger's Criteria for Avoiding Useless Pairs\\<close>"], ["", "text \\<open>Unfortunately, the product criterion is only applicable to scalar polynomials.\\<close>"], ["", "lemma (in gd_powerprod) product_criterion:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> punit.dgrad_p_set d m\" and \"p \\<in> F\" and \"q \\<in> F\"\n    and \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"gcs (punit.lt p) (punit.lt q) = 0\"\n  shows \"punit.crit_pair_cbelow_on d m F p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "let ?lt = \"punit.lt p\""], ["proof (state)\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "let ?lq = \"punit.lt q\""], ["proof (state)\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "let ?l = \"lcs ?lt ?lq\""], ["proof (state)\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "define s where \"s = punit.monom_mult (- 1 / (punit.lc p * punit.lc q)) 0 (punit.tail p * punit.tail q)\""], ["proof (state)\nthis:\n  s =\n  local.punit.monom_mult (- (1::'b) / (punit.lc p * punit.lc q)) (0::'a)\n   (punit.tail p * punit.tail q)\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "from assms(7)"], ["proof (chain)\npicking this:\n  gcs (punit.lt p) (punit.lt q) = (0::'a)", "have \"?l = ?lt + ?lq\""], ["proof (prove)\nusing this:\n  gcs (punit.lt p) (punit.lt q) = (0::'a)\n\ngoal (1 subgoal):\n 1. lcs (punit.lt p) (punit.lt q) = punit.lt p + punit.lt q", "by (metis add_cancel_left_left gcs_plus_lcs)"], ["proof (state)\nthis:\n  lcs (punit.lt p) (punit.lt q) = punit.lt p + punit.lt q\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "hence \"?l - ?lt = ?lq\" and \"?l - ?lq = ?lt\""], ["proof (prove)\nusing this:\n  lcs (punit.lt p) (punit.lt q) = punit.lt p + punit.lt q\n\ngoal (1 subgoal):\n 1. lcs (punit.lt p) (punit.lt q) - punit.lt p = punit.lt q &&&\n    lcs (punit.lt p) (punit.lt q) - punit.lt q = punit.lt p", "by simp_all"], ["proof (state)\nthis:\n  lcs (punit.lt p) (punit.lt q) - punit.lt p = punit.lt q\n  lcs (punit.lt p) (punit.lt q) - punit.lt q = punit.lt p\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "have \"(punit.red {q})\\<^sup>*\\<^sup>* (punit.tail p * (monomial (1 / punit.lc p) (punit.lt q)))\n        (punit.monom_mult (- (1 / punit.lc p) / punit.lc q) 0 (punit.tail p * punit.tail q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (punit.red {q})\\<^sup>*\\<^sup>*\n     (punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q))\n     (local.punit.monom_mult (- ((1::'b) / punit.lc p) / punit.lc q) (0::'a)\n       (punit.tail p * punit.tail q))", "unfolding punit_mult_scalar[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (punit.red {q})\\<^sup>*\\<^sup>*\n     (local.punit.mult_scalar (punit.tail p)\n       (monomial ((1::'b) / punit.lc p) (punit.lt q)))\n     (local.punit.monom_mult (- ((1::'b) / punit.lc p) / punit.lc q) (0::'a)\n       (local.punit.mult_scalar (punit.tail p) (punit.tail q)))", "using \\<open>q \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (punit.red {q})\\<^sup>*\\<^sup>*\n     (local.punit.mult_scalar (punit.tail p)\n       (monomial ((1::'b) / punit.lc p) (punit.lt q)))\n     (local.punit.monom_mult (- ((1::'b) / punit.lc p) / punit.lc q) (0::'a)\n       (local.punit.mult_scalar (punit.tail p) (punit.tail q)))", "by (rule punit.red_mult_scalar_lt)"], ["proof (state)\nthis:\n  (punit.red {q})\\<^sup>*\\<^sup>*\n   (punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q))\n   (local.punit.monom_mult (- ((1::'b) / punit.lc p) / punit.lc q) (0::'a)\n     (punit.tail p * punit.tail q))\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  (punit.red {q})\\<^sup>*\\<^sup>*\n   (punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q))\n   (local.punit.monom_mult (- ((1::'b) / punit.lc p) / punit.lc q) (0::'a)\n     (punit.tail p * punit.tail q))\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "have \"punit.monom_mult (1 / punit.lc p) (punit.lt q) (punit.tail p) =\n                  punit.tail p * (monomial (1 / punit.lc p) (punit.lt q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.punit.monom_mult ((1::'b) / punit.lc p) (punit.lt q)\n     (punit.tail p) =\n    punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q)", "by (simp add: times_monomial_left[symmetric])"], ["proof (state)\nthis:\n  local.punit.monom_mult ((1::'b) / punit.lc p) (punit.lt q)\n   (punit.tail p) =\n  punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q)\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "ultimately"], ["proof (chain)\npicking this:\n  (punit.red {q})\\<^sup>*\\<^sup>*\n   (punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q))\n   (local.punit.monom_mult (- ((1::'b) / punit.lc p) / punit.lc q) (0::'a)\n     (punit.tail p * punit.tail q))\n  local.punit.monom_mult ((1::'b) / punit.lc p) (punit.lt q)\n   (punit.tail p) =\n  punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q)", "have \"(punit.red {q})\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\""], ["proof (prove)\nusing this:\n  (punit.red {q})\\<^sup>*\\<^sup>*\n   (punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q))\n   (local.punit.monom_mult (- ((1::'b) / punit.lc p) / punit.lc q) (0::'a)\n     (punit.tail p * punit.tail q))\n  local.punit.monom_mult ((1::'b) / punit.lc p) (punit.lt q)\n   (punit.tail p) =\n  punit.tail p * monomial ((1::'b) / punit.lc p) (punit.lt q)\n\ngoal (1 subgoal):\n 1. (punit.red {q})\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s", "by (simp add: punit.crit_pair_def \\<open>?l - ?lt = ?lq\\<close> s_def)"], ["proof (state)\nthis:\n  (punit.red {q})\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  (punit.red {q})\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "from \\<open>q \\<in> F\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> F", "have \"{q} \\<subseteq> F\""], ["proof (prove)\nusing this:\n  q \\<in> F\n\ngoal (1 subgoal):\n 1. {q} \\<subseteq> F", "by simp"], ["proof (state)\nthis:\n  {q} \\<subseteq> F\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "ultimately"], ["proof (chain)\npicking this:\n  (punit.red {q})\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n  {q} \\<subseteq> F", "have 1: \"(punit.red F)\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\""], ["proof (prove)\nusing this:\n  (punit.red {q})\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n  {q} \\<subseteq> F\n\ngoal (1 subgoal):\n 1. (punit.red F)\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s", "by (rule punit.red_rtrancl_subset)"], ["proof (state)\nthis:\n  (punit.red F)\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "have \"(punit.red {p})\\<^sup>*\\<^sup>* (punit.tail q * (monomial (1 / punit.lc q) (punit.lt p)))\n        (punit.monom_mult (- (1 / punit.lc q) / punit.lc p) 0 (punit.tail q * punit.tail p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (punit.red {p})\\<^sup>*\\<^sup>*\n     (punit.tail q * monomial ((1::'b) / punit.lc q) (punit.lt p))\n     (local.punit.monom_mult (- ((1::'b) / punit.lc q) / punit.lc p) (0::'a)\n       (punit.tail q * punit.tail p))", "unfolding punit_mult_scalar[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (punit.red {p})\\<^sup>*\\<^sup>*\n     (local.punit.mult_scalar (punit.tail q)\n       (monomial ((1::'b) / punit.lc q) (punit.lt p)))\n     (local.punit.monom_mult (- ((1::'b) / punit.lc q) / punit.lc p) (0::'a)\n       (local.punit.mult_scalar (punit.tail q) (punit.tail p)))", "using \\<open>p \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (punit.red {p})\\<^sup>*\\<^sup>*\n     (local.punit.mult_scalar (punit.tail q)\n       (monomial ((1::'b) / punit.lc q) (punit.lt p)))\n     (local.punit.monom_mult (- ((1::'b) / punit.lc q) / punit.lc p) (0::'a)\n       (local.punit.mult_scalar (punit.tail q) (punit.tail p)))", "by (rule punit.red_mult_scalar_lt)"], ["proof (state)\nthis:\n  (punit.red {p})\\<^sup>*\\<^sup>*\n   (punit.tail q * monomial ((1::'b) / punit.lc q) (punit.lt p))\n   (local.punit.monom_mult (- ((1::'b) / punit.lc q) / punit.lc p) (0::'a)\n     (punit.tail q * punit.tail p))\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "hence \"(punit.red {p})\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\""], ["proof (prove)\nusing this:\n  (punit.red {p})\\<^sup>*\\<^sup>*\n   (punit.tail q * monomial ((1::'b) / punit.lc q) (punit.lt p))\n   (local.punit.monom_mult (- ((1::'b) / punit.lc q) / punit.lc p) (0::'a)\n     (punit.tail q * punit.tail p))\n\ngoal (1 subgoal):\n 1. (punit.red {p})\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s", "by (simp add: punit.crit_pair_def \\<open>?l - ?lq = ?lt\\<close> s_def mult.commute flip: times_monomial_left)"], ["proof (state)\nthis:\n  (punit.red {p})\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  (punit.red {p})\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "from \\<open>p \\<in> F\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> F", "have \"{p} \\<subseteq> F\""], ["proof (prove)\nusing this:\n  p \\<in> F\n\ngoal (1 subgoal):\n 1. {p} \\<subseteq> F", "by simp"], ["proof (state)\nthis:\n  {p} \\<subseteq> F\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "ultimately"], ["proof (chain)\npicking this:\n  (punit.red {p})\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\n  {p} \\<subseteq> F", "have 2: \"(punit.red F)\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\""], ["proof (prove)\nusing this:\n  (punit.red {p})\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\n  {p} \\<subseteq> F\n\ngoal (1 subgoal):\n 1. (punit.red F)\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s", "by (rule punit.red_rtrancl_subset)"], ["proof (state)\nthis:\n  (punit.red F)\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "note assms(1) assms(2)"], ["proof (state)\nthis:\n  dickson_grading d\n  F \\<subseteq> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  dickson_grading d\n  F \\<subseteq> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "from \\<open>p \\<in> F\\<close> \\<open>F \\<subseteq> punit.dgrad_p_set d m\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> F\n  F \\<subseteq> punit.dgrad_p_set d m", "have \"p \\<in> punit.dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> F\n  F \\<subseteq> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. p \\<in> punit.dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  p \\<in> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  p \\<in> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "from \\<open>q \\<in> F\\<close> \\<open>F \\<subseteq> punit.dgrad_p_set d m\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> F\n  F \\<subseteq> punit.dgrad_p_set d m", "have \"q \\<in> punit.dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  q \\<in> F\n  F \\<subseteq> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. q \\<in> punit.dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  q \\<in> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "moreover"], ["proof (state)\nthis:\n  q \\<in> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "from 1 2"], ["proof (chain)\npicking this:\n  (punit.red F)\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n  (punit.red F)\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s", "have \"relation.cs (punit.red F) (fst (punit.crit_pair p q)) (snd (punit.crit_pair p q))\""], ["proof (prove)\nusing this:\n  (punit.red F)\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n  (punit.red F)\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. relation.cs (punit.red F) (fst (punit.crit_pair p q))\n     (snd (punit.crit_pair p q))", "unfolding relation.cs_def"], ["proof (prove)\nusing this:\n  (punit.red F)\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s\n  (punit.red F)\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       (punit.red F)\\<^sup>*\\<^sup>* (fst (punit.crit_pair p q)) s \\<and>\n       (punit.red F)\\<^sup>*\\<^sup>* (snd (punit.crit_pair p q)) s", "by blast"], ["proof (state)\nthis:\n  relation.cs (punit.red F) (fst (punit.crit_pair p q))\n   (snd (punit.crit_pair p q))\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "ultimately"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> punit.dgrad_p_set d m\n  p \\<in> punit.dgrad_p_set d m\n  q \\<in> punit.dgrad_p_set d m\n  relation.cs (punit.red F) (fst (punit.crit_pair p q))\n   (snd (punit.crit_pair p q))", "show ?thesis"], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> punit.dgrad_p_set d m\n  p \\<in> punit.dgrad_p_set d m\n  q \\<in> punit.dgrad_p_set d m\n  relation.cs (punit.red F) (fst (punit.crit_pair p q))\n   (snd (punit.crit_pair p q))\n\ngoal (1 subgoal):\n 1. punit.crit_pair_cbelow_on d m F p q", "by (rule punit.crit_pair_cs_imp_crit_pair_cbelow_on)"], ["proof (state)\nthis:\n  punit.crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chain_criterion:\n  assumes \"dickson_grading d\" and \"F \\<subseteq> dgrad_p_set d m\" and \"p \\<in> F\" and \"q \\<in> F\"\n    and \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"lp r adds lcs (lp p) (lp q)\"\n    and \"component_of_term (lt r) = component_of_term (lt p)\"\n    and pr: \"crit_pair_cbelow_on d m F p r\" and rq: \"crit_pair_cbelow_on d m F r q\"\n  shows \"crit_pair_cbelow_on d m F p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "proof (cases \"component_of_term (lt p) = component_of_term (lt q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "case True"], ["proof (state)\nthis:\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "with assms(8)"], ["proof (chain)\npicking this:\n  component_of_term (lt r) = component_of_term (lt p)\n  component_of_term (lt p) = component_of_term (lt q)", "have comp_r: \"component_of_term (lt r) = component_of_term (lt q)\""], ["proof (prove)\nusing this:\n  component_of_term (lt r) = component_of_term (lt p)\n  component_of_term (lt p) = component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt r) = component_of_term (lt q)", "by simp"], ["proof (state)\nthis:\n  component_of_term (lt r) = component_of_term (lt q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?A = \"dgrad_p_set d m\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?RS = \"\\<lambda>a b. red F a b \\<or> red F b a\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?lt = \"lp p\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?lq = \"lp q\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?lr = \"lp r\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?ltr = \"lcs ?lt ?lr\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?lrq = \"lcs ?lr ?lq\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "let ?ltq = \"lcs ?lt ?lq\""], ["proof (state)\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from \\<open>p \\<in> F\\<close> \\<open>F \\<subseteq> dgrad_p_set d m\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> F\n  F \\<subseteq> dgrad_p_set d m", "have \"p \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> F\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. p \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  p \\<in> dgrad_p_set d m\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from this \\<open>p \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> dgrad_p_set d m\n  p \\<noteq> 0", "have \"d ?lt \\<le> m\""], ["proof (prove)\nusing this:\n  p \\<in> dgrad_p_set d m\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. d (lp p) \\<le> m", "by (rule dgrad_p_setD_lp)"], ["proof (state)\nthis:\n  d (lp p) \\<le> m\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from \\<open>q \\<in> F\\<close> \\<open>F \\<subseteq> dgrad_p_set d m\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> F\n  F \\<subseteq> dgrad_p_set d m", "have \"q \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  q \\<in> F\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. q \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  q \\<in> dgrad_p_set d m\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from this \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> dgrad_p_set d m\n  q \\<noteq> 0", "have \"d ?lq \\<le> m\""], ["proof (prove)\nusing this:\n  q \\<in> dgrad_p_set d m\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. d (lp q) \\<le> m", "by (rule dgrad_p_setD_lp)"], ["proof (state)\nthis:\n  d (lp q) \\<le> m\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from assms(1)"], ["proof (chain)\npicking this:\n  dickson_grading d", "have \"d ?ltq \\<le> ord_class.max (d ?lt) (d ?lq)\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. d (lcs (lp p) (lp q)) \\<le> ord_class.max (d (lp p)) (d (lp q))", "by (rule dickson_grading_lcs)"], ["proof (state)\nthis:\n  d (lcs (lp p) (lp q)) \\<le> ord_class.max (d (lp p)) (d (lp q))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "also"], ["proof (state)\nthis:\n  d (lcs (lp p) (lp q)) \\<le> ord_class.max (d (lp p)) (d (lp q))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from \\<open>d ?lt \\<le> m\\<close> \\<open>d ?lq \\<le> m\\<close>"], ["proof (chain)\npicking this:\n  d (lp p) \\<le> m\n  d (lp q) \\<le> m", "have \"... \\<le> m\""], ["proof (prove)\nusing this:\n  d (lp p) \\<le> m\n  d (lp q) \\<le> m\n\ngoal (1 subgoal):\n 1. ord_class.max (d (lp p)) (d (lp q)) \\<le> m", "by simp"], ["proof (state)\nthis:\n  ord_class.max (d (lp p)) (d (lp q)) \\<le> m\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "finally"], ["proof (chain)\npicking this:\n  d (lcs (lp p) (lp q)) \\<le> m", "have \"d ?ltq \\<le> m\""], ["proof (prove)\nusing this:\n  d (lcs (lp p) (lp q)) \\<le> m\n\ngoal (1 subgoal):\n 1. d (lcs (lp p) (lp q)) \\<le> m", "."], ["proof (state)\nthis:\n  d (lcs (lp p) (lp q)) \\<le> m\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from adds_lcs \\<open>?lr adds ?ltq\\<close>"], ["proof (chain)\npicking this:\n  ?s adds lcs ?s ?t\n  lp r adds lcs (lp p) (lp q)", "have \"?ltr adds ?ltq\""], ["proof (prove)\nusing this:\n  ?s adds lcs ?s ?t\n  lp r adds lcs (lp p) (lp q)\n\ngoal (1 subgoal):\n 1. lcs (lp p) (lp r) adds lcs (lp p) (lp q)", "by (rule lcs_adds)"], ["proof (state)\nthis:\n  lcs (lp p) (lp r) adds lcs (lp p) (lp q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "then"], ["proof (chain)\npicking this:\n  lcs (lp p) (lp r) adds lcs (lp p) (lp q)", "obtain up where \"?ltq = ?ltr + up\""], ["proof (prove)\nusing this:\n  lcs (lp p) (lp r) adds lcs (lp p) (lp q)\n\ngoal (1 subgoal):\n 1. (\\<And>up.\n        lcs (lp p) (lp q) = lcs (lp p) (lp r) + up \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  lcs (lp p) (lp q) = lcs (lp p) (lp r) + up\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "hence up1: \"?ltq - ?lt = up + (?ltr - ?lt)\" and up2: \"up + (?ltr - ?lr) = ?ltq - ?lr\""], ["proof (prove)\nusing this:\n  lcs (lp p) (lp q) = lcs (lp p) (lp r) + up\n\ngoal (1 subgoal):\n 1. lcs (lp p) (lp q) - lp p = up + (lcs (lp p) (lp r) - lp p) &&&\n    up + (lcs (lp p) (lp r) - lp r) = lcs (lp p) (lp q) - lp r", "by (metis add.commute adds_lcs minus_plus, metis add.commute adds_lcs_2 minus_plus)"], ["proof (state)\nthis:\n  lcs (lp p) (lp q) - lp p = up + (lcs (lp p) (lp r) - lp p)\n  up + (lcs (lp p) (lp r) - lp r) = lcs (lp p) (lp q) - lp r\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "have fst_pq: \"fst (crit_pair p q) = monom_mult 1 up (fst (crit_pair p r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (crit_pair p q) = monom_mult (1::'b) up (fst (crit_pair p r))", "by (simp add: crit_pair_def monom_mult_assoc up1 True comp_r)"], ["proof (state)\nthis:\n  fst (crit_pair p q) = monom_mult (1::'b) up (fst (crit_pair p r))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from assms(1) assms(2) _ _ pr"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  crit_pair_cbelow_on d m F p r", "have \"cbelow_on ?A (\\<prec>\\<^sub>p) (monom_mult 1 up (monomial 1 (term_of_pair (?ltr, component_of_term (lt p))))) ?RS\n                  (fst (crit_pair p q)) (monom_mult 1 up (snd (crit_pair p r)))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  crit_pair_cbelow_on d m F p r\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monom_mult (1::'b) up\n       (monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp r), component_of_term (lt p)))))\n     (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n     (monom_mult (1::'b) up (snd (crit_pair p r)))", "unfolding fst_pq crit_pair_cbelow_on_def"], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp r), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p r))\n   (snd (crit_pair p r))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monom_mult (1::'b) up\n       (monomial (1::'b)\n         (term_of_pair (lcs (lp p) (lp r), component_of_term (lt p)))))\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (1::'b) up (fst (crit_pair p r)))\n     (monom_mult (1::'b) up (snd (crit_pair p r)))", "proof (rule cbelow_on_monom_mult)"], ["proof (state)\ngoal (2 subgoals):\n 1. d up \\<le> m\n 2. (1::'b) \\<noteq> (0::'b)", "from \\<open>d ?ltq \\<le> m\\<close>"], ["proof (chain)\npicking this:\n  d (lcs (lp p) (lp q)) \\<le> m", "show \"d up \\<le> m\""], ["proof (prove)\nusing this:\n  d (lcs (lp p) (lp q)) \\<le> m\n\ngoal (1 subgoal):\n 1. d up \\<le> m", "by (simp add: \\<open>?ltq = ?ltr + up\\<close> dickson_gradingD1[OF assms(1)])"], ["proof (state)\nthis:\n  d up \\<le> m\n\ngoal (1 subgoal):\n 1. (1::'b) \\<noteq> (0::'b)", "qed simp"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monom_mult (1::'b) up\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp r), component_of_term (lt p)))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (monom_mult (1::'b) up (snd (crit_pair p r)))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "hence 1: \"cbelow_on ?A (\\<prec>\\<^sub>p) (monomial 1 (term_of_pair (?ltq, component_of_term (lt p)))) ?RS\n                      (fst (crit_pair p q)) (monom_mult 1 up (snd (crit_pair p r)))\""], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monom_mult (1::'b) up\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp r), component_of_term (lt p)))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (monom_mult (1::'b) up (snd (crit_pair p r)))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n     (monom_mult (1::'b) up (snd (crit_pair p r)))", "by (simp add: monom_mult_monomial \\<open>?ltq = ?ltr + up\\<close> add.commute splus_def term_simps)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (monom_mult (1::'b) up (snd (crit_pair p r)))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from \\<open>?lr adds ?ltq\\<close> adds_lcs_2"], ["proof (chain)\npicking this:\n  lp r adds lcs (lp p) (lp q)\n  ?t adds lcs ?s ?t", "have \"?lrq adds ?ltq\""], ["proof (prove)\nusing this:\n  lp r adds lcs (lp p) (lp q)\n  ?t adds lcs ?s ?t\n\ngoal (1 subgoal):\n 1. lcs (lp r) (lp q) adds lcs (lp p) (lp q)", "by (rule lcs_adds)"], ["proof (state)\nthis:\n  lcs (lp r) (lp q) adds lcs (lp p) (lp q)\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "then"], ["proof (chain)\npicking this:\n  lcs (lp r) (lp q) adds lcs (lp p) (lp q)", "obtain uq where \"?ltq = ?lrq + uq\""], ["proof (prove)\nusing this:\n  lcs (lp r) (lp q) adds lcs (lp p) (lp q)\n\ngoal (1 subgoal):\n 1. (\\<And>uq.\n        lcs (lp p) (lp q) = lcs (lp r) (lp q) + uq \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  lcs (lp p) (lp q) = lcs (lp r) (lp q) + uq\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "hence uq1: \"?ltq - ?lq = uq + (?lrq - ?lq)\" and uq2: \"uq + (?lrq - ?lr) = ?ltq - ?lr\""], ["proof (prove)\nusing this:\n  lcs (lp p) (lp q) = lcs (lp r) (lp q) + uq\n\ngoal (1 subgoal):\n 1. lcs (lp p) (lp q) - lp q = uq + (lcs (lp r) (lp q) - lp q) &&&\n    uq + (lcs (lp r) (lp q) - lp r) = lcs (lp p) (lp q) - lp r", "by (metis add.commute adds_lcs_2 minus_plus, metis add.commute adds_lcs minus_plus)"], ["proof (state)\nthis:\n  lcs (lp p) (lp q) - lp q = uq + (lcs (lp r) (lp q) - lp q)\n  uq + (lcs (lp r) (lp q) - lp r) = lcs (lp p) (lp q) - lp r\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "have eq: \"monom_mult 1 uq (fst (crit_pair r q)) = monom_mult 1 up (snd (crit_pair p r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monom_mult (1::'b) uq (fst (crit_pair r q)) =\n    monom_mult (1::'b) up (snd (crit_pair p r))", "by (simp add: crit_pair_def monom_mult_assoc up2 uq2 True comp_r)"], ["proof (state)\nthis:\n  monom_mult (1::'b) uq (fst (crit_pair r q)) =\n  monom_mult (1::'b) up (snd (crit_pair p r))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "have snd_pq: \"snd (crit_pair p q) = monom_mult 1 uq (snd (crit_pair r q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (crit_pair p q) = monom_mult (1::'b) uq (snd (crit_pair r q))", "by (simp add: crit_pair_def monom_mult_assoc uq1 True comp_r)"], ["proof (state)\nthis:\n  snd (crit_pair p q) = monom_mult (1::'b) uq (snd (crit_pair r q))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "from assms(1) assms(2) _ _ rq"], ["proof (chain)\npicking this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  crit_pair_cbelow_on d m F r q", "have \"cbelow_on ?A (\\<prec>\\<^sub>p) (monom_mult 1 uq (monomial 1 (term_of_pair (?lrq, component_of_term (lt p))))) ?RS\n                  (monom_mult 1 uq (fst (crit_pair r q))) (snd (crit_pair p q))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  crit_pair_cbelow_on d m F r q\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monom_mult (1::'b) uq\n       (monomial (1::'b)\n         (term_of_pair (lcs (lp r) (lp q), component_of_term (lt p)))))\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (1::'b) uq (fst (crit_pair r q))) (snd (crit_pair p q))", "unfolding snd_pq crit_pair_cbelow_on_def assms(8)"], ["proof (prove)\nusing this:\n  dickson_grading d\n  F \\<subseteq> dgrad_p_set d m\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp r) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair r q))\n   (snd (crit_pair r q))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monom_mult (1::'b) uq\n       (monomial (1::'b)\n         (term_of_pair (lcs (lp r) (lp q), component_of_term (lt p)))))\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (1::'b) uq (fst (crit_pair r q)))\n     (monom_mult (1::'b) uq (snd (crit_pair r q)))", "proof (rule cbelow_on_monom_mult)"], ["proof (state)\ngoal (2 subgoals):\n 1. d uq \\<le> m\n 2. (1::'b) \\<noteq> (0::'b)", "from \\<open>d ?ltq \\<le> m\\<close>"], ["proof (chain)\npicking this:\n  d (lcs (lp p) (lp q)) \\<le> m", "show \"d uq \\<le> m\""], ["proof (prove)\nusing this:\n  d (lcs (lp p) (lp q)) \\<le> m\n\ngoal (1 subgoal):\n 1. d uq \\<le> m", "by (simp add: \\<open>?ltq = ?lrq + uq\\<close> dickson_gradingD1[OF assms(1)])"], ["proof (state)\nthis:\n  d uq \\<le> m\n\ngoal (1 subgoal):\n 1. (1::'b) \\<noteq> (0::'b)", "qed simp"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monom_mult (1::'b) uq\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp r) (lp q), component_of_term (lt p)))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) uq (fst (crit_pair r q))) (snd (crit_pair p q))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "hence \"cbelow_on ?A (\\<prec>\\<^sub>p) (monomial 1 (term_of_pair (?ltq, component_of_term (lt p)))) ?RS\n                   (monom_mult 1 uq (fst (crit_pair r q))) (snd (crit_pair p q))\""], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monom_mult (1::'b) uq\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp r) (lp q), component_of_term (lt p)))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) uq (fst (crit_pair r q))) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (1::'b) uq (fst (crit_pair r q))) (snd (crit_pair p q))", "by (simp add: monom_mult_monomial \\<open>?ltq = ?lrq + uq\\<close> add.commute splus_def term_simps)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) uq (fst (crit_pair r q))) (snd (crit_pair p q))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "hence \"cbelow_on ?A (\\<prec>\\<^sub>p) (monomial 1 (term_of_pair (?ltq, component_of_term (lt p)))) ?RS\n                   (monom_mult 1 up (snd (crit_pair p r))) (snd (crit_pair p q))\""], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) uq (fst (crit_pair r q))) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red F a b \\<or> red F b a)\n     (monom_mult (1::'b) up (snd (crit_pair p r))) (snd (crit_pair p q))", "by (simp only: eq)"], ["proof (state)\nthis:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) up (snd (crit_pair p r))) (snd (crit_pair p q))\n\ngoal (2 subgoals):\n 1. component_of_term (lt p) = component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q\n 2. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "with 1"], ["proof (chain)\npicking this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (monom_mult (1::'b) up (snd (crit_pair p r)))\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) up (snd (crit_pair p r))) (snd (crit_pair p q))", "show ?thesis"], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (monom_mult (1::'b) up (snd (crit_pair p r)))\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) up (snd (crit_pair p r))) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "unfolding crit_pair_cbelow_on_def"], ["proof (prove)\nusing this:\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n   (monom_mult (1::'b) up (snd (crit_pair p r)))\n  cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n   (monomial (1::'b)\n     (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n   (\\<lambda>a b. red F a b \\<or> red F b a)\n   (monom_mult (1::'b) up (snd (crit_pair p r))) (snd (crit_pair p q))\n\ngoal (1 subgoal):\n 1. cbelow_on (dgrad_p_set d m) (\\<prec>\\<^sub>p)\n     (monomial (1::'b)\n       (term_of_pair (lcs (lp p) (lp q), component_of_term (lt p))))\n     (\\<lambda>a b. red F a b \\<or> red F b a) (fst (crit_pair p q))\n     (snd (crit_pair p q))", "by (rule cbelow_on_transitive)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "case False"], ["proof (state)\nthis:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. component_of_term (lt p) \\<noteq>\n    component_of_term (lt q) \\<Longrightarrow>\n    crit_pair_cbelow_on d m F p q", "thus ?thesis"], ["proof (prove)\nusing this:\n  component_of_term (lt p) \\<noteq> component_of_term (lt q)\n\ngoal (1 subgoal):\n 1. crit_pair_cbelow_on d m F p q", "by (rule crit_pair_cbelow_distinct_component)"], ["proof (state)\nthis:\n  crit_pair_cbelow_on d m F p q\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Weak and Strong Gr\\\"obner Bases\\<close>"], ["", "lemma ord_p_wf_on:\n  assumes \"dickson_grading d\"\n  shows \"wfp_on (\\<prec>\\<^sub>p) (dgrad_p_set d m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (\\<prec>\\<^sub>p) (dgrad_p_set d m)", "proof (rule wfp_onI_min)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       \\<lbrakk>x \\<in> Q; Q \\<subseteq> dgrad_p_set d m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y\\<in>dgrad_p_set d m.\n                               y \\<prec>\\<^sub>p z \\<longrightarrow>\n                               y \\<notin> Q", "fix x::\"'t \\<Rightarrow>\\<^sub>0 'b\" and Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       \\<lbrakk>x \\<in> Q; Q \\<subseteq> dgrad_p_set d m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y\\<in>dgrad_p_set d m.\n                               y \\<prec>\\<^sub>p z \\<longrightarrow>\n                               y \\<notin> Q", "assume \"x \\<in> Q\" and \"Q \\<subseteq> dgrad_p_set d m\""], ["proof (state)\nthis:\n  x \\<in> Q\n  Q \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       \\<lbrakk>x \\<in> Q; Q \\<subseteq> dgrad_p_set d m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y\\<in>dgrad_p_set d m.\n                               y \\<prec>\\<^sub>p z \\<longrightarrow>\n                               y \\<notin> Q", "with assms"], ["proof (chain)\npicking this:\n  dickson_grading d\n  x \\<in> Q\n  Q \\<subseteq> dgrad_p_set d m", "obtain z where \"z \\<in> Q\" and *: \"\\<And>y. y \\<prec>\\<^sub>p z \\<Longrightarrow> y \\<notin> Q\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  x \\<in> Q\n  Q \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> Q;\n         \\<And>y.\n            y \\<prec>\\<^sub>p z \\<Longrightarrow> y \\<notin> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule ord_p_minimum_dgrad_p_set, blast)"], ["proof (state)\nthis:\n  z \\<in> Q\n  ?y38 \\<prec>\\<^sub>p z \\<Longrightarrow> ?y38 \\<notin> Q\n\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       \\<lbrakk>x \\<in> Q; Q \\<subseteq> dgrad_p_set d m\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y\\<in>dgrad_p_set d m.\n                               y \\<prec>\\<^sub>p z \\<longrightarrow>\n                               y \\<notin> Q", "from this(1)"], ["proof (chain)\npicking this:\n  z \\<in> Q", "show \"\\<exists>z\\<in>Q. \\<forall>y\\<in>dgrad_p_set d m. y \\<prec>\\<^sub>p z \\<longrightarrow> y \\<notin> Q\""], ["proof (prove)\nusing this:\n  z \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>Q.\n       \\<forall>y\\<in>dgrad_p_set d m.\n          y \\<prec>\\<^sub>p z \\<longrightarrow> y \\<notin> Q", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>dgrad_p_set d m.\n       y \\<prec>\\<^sub>p z \\<longrightarrow> y \\<notin> Q", "show \"\\<forall>y\\<in>dgrad_p_set d m. y \\<prec>\\<^sub>p z \\<longrightarrow> y \\<notin> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>dgrad_p_set d m.\n       y \\<prec>\\<^sub>p z \\<longrightarrow> y \\<notin> Q", "by (intro ballI impI *)"], ["proof (state)\nthis:\n  \\<forall>y\\<in>dgrad_p_set d m.\n     y \\<prec>\\<^sub>p z \\<longrightarrow> y \\<notin> Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z\\<in>Q.\n     \\<forall>y\\<in>dgrad_p_set d m.\n        y \\<prec>\\<^sub>p z \\<longrightarrow> y \\<notin> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: Collect all \"_dgrad_p_set\"-facts in a locale? *)"], ["", "lemma is_red_implies_0_red_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"B \\<subseteq> dgrad_p_set d m\"\n  assumes \"pmdl B \\<subseteq> pmdl A\" and \"\\<And>q. q \\<in> pmdl A \\<Longrightarrow> q \\<in> dgrad_p_set d m \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> is_red B q\"\n    and \"p \\<in> pmdl A\" and \"p \\<in> dgrad_p_set d m\"\n  shows \"(red B)\\<^sup>*\\<^sup>* p 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "from ord_p_wf_on[OF assms(1)] assms(6, 5)"], ["proof (chain)\npicking this:\n  wfp_on (\\<prec>\\<^sub>p) (dgrad_p_set d ?m)\n  p \\<in> dgrad_p_set d m\n  p \\<in> pmdl A", "show ?thesis"], ["proof (prove)\nusing this:\n  wfp_on (\\<prec>\\<^sub>p) (dgrad_p_set d ?m)\n  p \\<in> dgrad_p_set d m\n  p \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "proof (induction p rule: wfp_on_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> dgrad_p_set d m;\n        \\<And>x.\n           \\<lbrakk>x \\<in> dgrad_p_set d m; x \\<prec>\\<^sub>p y;\n            x \\<in> pmdl A\\<rbrakk>\n           \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* x 0;\n        y \\<in> pmdl A\\<rbrakk>\n       \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* y 0", "case (less p)"], ["proof (state)\nthis:\n  p \\<in> dgrad_p_set d m\n  \\<lbrakk>?x38 \\<in> dgrad_p_set d m; ?x38 \\<prec>\\<^sub>p p;\n   ?x38 \\<in> pmdl A\\<rbrakk>\n  \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* ?x38 0\n  p \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> dgrad_p_set d m;\n        \\<And>x.\n           \\<lbrakk>x \\<in> dgrad_p_set d m; x \\<prec>\\<^sub>p y;\n            x \\<in> pmdl A\\<rbrakk>\n           \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* x 0;\n        y \\<in> pmdl A\\<rbrakk>\n       \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* y 0", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0\n 2. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0\n 2. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "by simp"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "from assms(4)[OF less(3, 1) False]"], ["proof (chain)\npicking this:\n  is_red B p", "obtain q where redpq: \"red B p q\""], ["proof (prove)\nusing this:\n  is_red B p\n\ngoal (1 subgoal):\n 1. (\\<And>q. red B p q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding is_red_alt"], ["proof (prove)\nusing this:\n  Ex (red B p)\n\ngoal (1 subgoal):\n 1. (\\<And>q. red B p q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  red B p q\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "with assms(1) assms(2) less(1)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  B \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  red B p q", "have \"q \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  B \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  red B p q\n\ngoal (1 subgoal):\n 1. q \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_red)"], ["proof (state)\nthis:\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "moreover"], ["proof (state)\nthis:\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "from redpq"], ["proof (chain)\npicking this:\n  red B p q", "have \"q \\<prec>\\<^sub>p p\""], ["proof (prove)\nusing this:\n  red B p q\n\ngoal (1 subgoal):\n 1. q \\<prec>\\<^sub>p p", "by (rule red_ord)"], ["proof (state)\nthis:\n  q \\<prec>\\<^sub>p p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "moreover"], ["proof (state)\nthis:\n  q \\<prec>\\<^sub>p p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "from \\<open>pmdl B \\<subseteq> pmdl A\\<close> \\<open>p \\<in> pmdl A\\<close> \\<open>red B p q\\<close>"], ["proof (chain)\npicking this:\n  pmdl B \\<subseteq> pmdl A\n  p \\<in> pmdl A\n  red B p q", "have \"q \\<in> pmdl A\""], ["proof (prove)\nusing this:\n  pmdl B \\<subseteq> pmdl A\n  p \\<in> pmdl A\n  red B p q\n\ngoal (1 subgoal):\n 1. q \\<in> pmdl A", "by (rule pmdl_closed_red)"], ["proof (state)\nthis:\n  q \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "ultimately"], ["proof (chain)\npicking this:\n  q \\<in> dgrad_p_set d m\n  q \\<prec>\\<^sub>p p\n  q \\<in> pmdl A", "have \"(red B)\\<^sup>*\\<^sup>* q 0\""], ["proof (prove)\nusing this:\n  q \\<in> dgrad_p_set d m\n  q \\<prec>\\<^sub>p p\n  q \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* q 0", "by (rule less(2))"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* q 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "by (rule converse_rtranclp_into_rtranclp, rule redpq, fact)"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_red_implies_0_red_dgrad_p_set':\n  assumes \"dickson_grading d\" and \"B \\<subseteq> dgrad_p_set d m\"\n  assumes \"pmdl B \\<subseteq> pmdl A\" and \"\\<And>q. q \\<in> pmdl A \\<Longrightarrow> q \\<noteq> 0 \\<Longrightarrow> is_red B q\"\n    and \"p \\<in> pmdl A\"\n  shows \"(red B)\\<^sup>*\\<^sup>* p 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "from assms(2)"], ["proof (chain)\npicking this:\n  B \\<subseteq> dgrad_p_set d m", "obtain n where \"m \\<le> n\" and \"p \\<in> dgrad_p_set d n\" and B: \"B \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  B \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>m \\<le> n; p \\<in> dgrad_p_set d n;\n         B \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule dgrad_p_set_insert)"], ["proof (state)\nthis:\n  m \\<le> n\n  p \\<in> dgrad_p_set d n\n  B \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "from ord_p_wf_on[OF assms(1)] this(2) assms(5)"], ["proof (chain)\npicking this:\n  wfp_on (\\<prec>\\<^sub>p) (dgrad_p_set d ?m)\n  p \\<in> dgrad_p_set d n\n  p \\<in> pmdl A", "show ?thesis"], ["proof (prove)\nusing this:\n  wfp_on (\\<prec>\\<^sub>p) (dgrad_p_set d ?m)\n  p \\<in> dgrad_p_set d n\n  p \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "proof (induction p rule: wfp_on_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> dgrad_p_set d n;\n        \\<And>x.\n           \\<lbrakk>x \\<in> dgrad_p_set d n; x \\<prec>\\<^sub>p y;\n            x \\<in> pmdl A\\<rbrakk>\n           \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* x 0;\n        y \\<in> pmdl A\\<rbrakk>\n       \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* y 0", "case (less p)"], ["proof (state)\nthis:\n  p \\<in> dgrad_p_set d n\n  \\<lbrakk>?x38 \\<in> dgrad_p_set d n; ?x38 \\<prec>\\<^sub>p p;\n   ?x38 \\<in> pmdl A\\<rbrakk>\n  \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* ?x38 0\n  p \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> dgrad_p_set d n;\n        \\<And>x.\n           \\<lbrakk>x \\<in> dgrad_p_set d n; x \\<prec>\\<^sub>p y;\n            x \\<in> pmdl A\\<rbrakk>\n           \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* x 0;\n        y \\<in> pmdl A\\<rbrakk>\n       \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* y 0", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "proof (cases \"p = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0\n 2. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "case True"], ["proof (state)\nthis:\n  p = 0\n\ngoal (2 subgoals):\n 1. p = 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0\n 2. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  p = 0\n\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "by simp"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "from assms(4)[OF \\<open>p \\<in> (pmdl A)\\<close> False]"], ["proof (chain)\npicking this:\n  is_red B p", "obtain q where redpq: \"red B p q\""], ["proof (prove)\nusing this:\n  is_red B p\n\ngoal (1 subgoal):\n 1. (\\<And>q. red B p q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding is_red_alt"], ["proof (prove)\nusing this:\n  Ex (red B p)\n\ngoal (1 subgoal):\n 1. (\\<And>q. red B p q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  red B p q\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "with assms(1) B \\<open>p \\<in> dgrad_p_set d n\\<close>"], ["proof (chain)\npicking this:\n  dickson_grading d\n  B \\<subseteq> dgrad_p_set d n\n  p \\<in> dgrad_p_set d n\n  red B p q", "have \"q \\<in> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  B \\<subseteq> dgrad_p_set d n\n  p \\<in> dgrad_p_set d n\n  red B p q\n\ngoal (1 subgoal):\n 1. q \\<in> dgrad_p_set d n", "by (rule dgrad_p_set_closed_red)"], ["proof (state)\nthis:\n  q \\<in> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "moreover"], ["proof (state)\nthis:\n  q \\<in> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "from redpq"], ["proof (chain)\npicking this:\n  red B p q", "have \"q \\<prec>\\<^sub>p p\""], ["proof (prove)\nusing this:\n  red B p q\n\ngoal (1 subgoal):\n 1. q \\<prec>\\<^sub>p p", "by (rule red_ord)"], ["proof (state)\nthis:\n  q \\<prec>\\<^sub>p p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "moreover"], ["proof (state)\nthis:\n  q \\<prec>\\<^sub>p p\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "from \\<open>pmdl B \\<subseteq> pmdl A\\<close> \\<open>p \\<in> pmdl A\\<close> \\<open>red B p q\\<close>"], ["proof (chain)\npicking this:\n  pmdl B \\<subseteq> pmdl A\n  p \\<in> pmdl A\n  red B p q", "have \"q \\<in> pmdl A\""], ["proof (prove)\nusing this:\n  pmdl B \\<subseteq> pmdl A\n  p \\<in> pmdl A\n  red B p q\n\ngoal (1 subgoal):\n 1. q \\<in> pmdl A", "by (rule pmdl_closed_red)"], ["proof (state)\nthis:\n  q \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "ultimately"], ["proof (chain)\npicking this:\n  q \\<in> dgrad_p_set d n\n  q \\<prec>\\<^sub>p p\n  q \\<in> pmdl A", "have \"(red B)\\<^sup>*\\<^sup>* q 0\""], ["proof (prove)\nusing this:\n  q \\<in> dgrad_p_set d n\n  q \\<prec>\\<^sub>p p\n  q \\<in> pmdl A\n\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* q 0", "by (rule less(2))"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* q 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0 \\<Longrightarrow> (red B)\\<^sup>*\\<^sup>* p 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (red B)\\<^sup>*\\<^sup>* p 0", "by (rule converse_rtranclp_into_rtranclp, rule redpq, fact)"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red B)\\<^sup>*\\<^sup>* p 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pmdl_eqI_adds_lt_dgrad_p_set:\n  fixes G::\"('t \\<Rightarrow>\\<^sub>0 'b::field) set\"\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\" and \"B \\<subseteq> dgrad_p_set d m\" and \"pmdl G \\<subseteq> pmdl B\"\n  assumes \"\\<And>f. f \\<in> pmdl B \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\"\n  shows \"pmdl G = pmdl B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl G = pmdl B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pmdl G \\<subseteq> pmdl B\n 2. pmdl B \\<subseteq> pmdl G", "show \"pmdl B \\<subseteq> pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl B \\<subseteq> pmdl G", "proof (rule pmdl.span_subset_spanI, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> pmdl G", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> pmdl G", "assume \"p \\<in> B\""], ["proof (state)\nthis:\n  p \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> pmdl G", "hence \"p \\<in> pmdl B\" and \"p \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> B\n\ngoal (1 subgoal):\n 1. p \\<in> pmdl B &&& p \\<in> dgrad_p_set d m", "by (rule pmdl.span_base, rule, intro assms(3))"], ["proof (state)\nthis:\n  p \\<in> pmdl B\n  p \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> pmdl G", "with assms(1, 2, 4) _"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  pmdl G \\<subseteq> pmdl B\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  p \\<in> pmdl B\n  p \\<in> dgrad_p_set d m", "have \"(red G)\\<^sup>*\\<^sup>* p 0\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  pmdl G \\<subseteq> pmdl B\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  p \\<in> pmdl B\n  p \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* p 0", "proof (rule is_red_implies_0_red_dgrad_p_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "assume \"f \\<in> pmdl B\" and \"f \\<in> dgrad_p_set d m\" and \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<in> pmdl B\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "hence \"(\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl B\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "by (rule assms(5))"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "then"], ["proof (chain)\npicking this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "thus \"is_red G f\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. is_red G f", "using \\<open>f \\<noteq> 0\\<close> is_red_indI1"], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n  f \\<noteq> 0\n  \\<lbrakk>?f \\<in> ?F; ?f \\<noteq> 0; ?p \\<noteq> 0;\n   lt ?f adds\\<^sub>t lt ?p\\<rbrakk>\n  \\<Longrightarrow> is_red ?F ?p\n\ngoal (1 subgoal):\n 1. is_red G f", "by blast"], ["proof (state)\nthis:\n  is_red G f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> pmdl G", "thus \"p \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. p \\<in> pmdl G", "by (rule red_rtranclp_0_in_pmdl)"], ["proof (state)\nthis:\n  p \\<in> pmdl G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmdl B \\<subseteq> pmdl G\n\ngoal (1 subgoal):\n 1. pmdl G \\<subseteq> pmdl B", "qed fact"], ["", "lemma pmdl_eqI_adds_lt_dgrad_p_set':\n  fixes G::\"('t \\<Rightarrow>\\<^sub>0 'b::field) set\"\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\" and \"pmdl G \\<subseteq> pmdl B\"\n  assumes \"\\<And>f. f \\<in> pmdl B \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\"\n  shows \"pmdl G = pmdl B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl G = pmdl B", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pmdl G \\<subseteq> pmdl B\n 2. pmdl B \\<subseteq> pmdl G", "show \"pmdl B \\<subseteq> pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl B \\<subseteq> pmdl G", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pmdl B \\<Longrightarrow> x \\<in> pmdl G", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pmdl B \\<Longrightarrow> x \\<in> pmdl G", "assume \"p \\<in> pmdl B\""], ["proof (state)\nthis:\n  p \\<in> pmdl B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pmdl B \\<Longrightarrow> x \\<in> pmdl G", "with assms(1, 2, 3) _"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  pmdl G \\<subseteq> pmdl B\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  p \\<in> pmdl B", "have \"(red G)\\<^sup>*\\<^sup>* p 0\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  pmdl G \\<subseteq> pmdl B\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  p \\<in> pmdl B\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* p 0", "proof (rule is_red_implies_0_red_dgrad_p_set')"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "assume \"f \\<in> pmdl B\" and \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<in> pmdl B\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "hence \"(\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl B\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "by (rule assms(4))"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "then"], ["proof (chain)\npicking this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl B; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "thus \"is_red G f\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. is_red G f", "using \\<open>f \\<noteq> 0\\<close> is_red_indI1"], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n  f \\<noteq> 0\n  \\<lbrakk>?f \\<in> ?F; ?f \\<noteq> 0; ?p \\<noteq> 0;\n   lt ?f adds\\<^sub>t lt ?p\\<rbrakk>\n  \\<Longrightarrow> is_red ?F ?p\n\ngoal (1 subgoal):\n 1. is_red G f", "by blast"], ["proof (state)\nthis:\n  is_red G f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pmdl B \\<Longrightarrow> x \\<in> pmdl G", "thus \"p \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. p \\<in> pmdl G", "by (rule red_rtranclp_0_in_pmdl)"], ["proof (state)\nthis:\n  p \\<in> pmdl G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmdl B \\<subseteq> pmdl G\n\ngoal (1 subgoal):\n 1. pmdl G \\<subseteq> pmdl B", "qed fact"], ["", "lemma GB_implies_unique_nf_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\"\n  shows \"\\<exists>! h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h", "from assms(1) assms(2)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m", "have \"wfP (red G)\\<inverse>\\<inverse>\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. wfP (red G)\\<inverse>\\<inverse>", "by (rule red_wf_dgrad_p_set)"], ["proof (state)\nthis:\n  wfP (red G)\\<inverse>\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<exists>!h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h", "then"], ["proof (chain)\npicking this:\n  wfP (red G)\\<inverse>\\<inverse>", "obtain h where ftoh: \"(red G)\\<^sup>*\\<^sup>* f h\" and irredh: \"relation.is_final (red G) h\""], ["proof (prove)\nusing this:\n  wfP (red G)\\<inverse>\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* f h;\n         relation.is_final (red G) h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule relation.wf_imp_nf_ex)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f h\n  relation.is_final (red G) h\n\ngoal (1 subgoal):\n 1. \\<exists>!h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (red G)\\<^sup>*\\<^sup>* f ?a \\<and> \\<not> is_red G ?a\n 2. \\<And>h.\n       (red G)\\<^sup>*\\<^sup>* f h \\<and>\n       \\<not> is_red G h \\<Longrightarrow>\n       h = ?a", "from ftoh and irredh"], ["proof (chain)\npicking this:\n  (red G)\\<^sup>*\\<^sup>* f h\n  relation.is_final (red G) h", "show \"(red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* f h\n  relation.is_final (red G) h\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h", "by (simp add: is_red_def)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h\n\ngoal (1 subgoal):\n 1. \\<And>ha.\n       (red G)\\<^sup>*\\<^sup>* f ha \\<and>\n       \\<not> is_red G ha \\<Longrightarrow>\n       ha = h", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ha.\n       (red G)\\<^sup>*\\<^sup>* f ha \\<and>\n       \\<not> is_red G ha \\<Longrightarrow>\n       ha = h", "fix h'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ha.\n       (red G)\\<^sup>*\\<^sup>* f ha \\<and>\n       \\<not> is_red G ha \\<Longrightarrow>\n       ha = h", "assume \"(red G)\\<^sup>*\\<^sup>* f h' \\<and> \\<not> is_red G h'\""], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f h' \\<and> \\<not> is_red G h'\n\ngoal (1 subgoal):\n 1. \\<And>ha.\n       (red G)\\<^sup>*\\<^sup>* f ha \\<and>\n       \\<not> is_red G ha \\<Longrightarrow>\n       ha = h", "hence ftoh': \"(red G)\\<^sup>*\\<^sup>* f h'\" and irredh': \"relation.is_final (red G) h'\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* f h' \\<and> \\<not> is_red G h'\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f h' &&& relation.is_final (red G) h'", "by (simp_all add: is_red_def)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f h'\n  relation.is_final (red G) h'\n\ngoal (1 subgoal):\n 1. \\<And>ha.\n       (red G)\\<^sup>*\\<^sup>* f ha \\<and>\n       \\<not> is_red G ha \\<Longrightarrow>\n       ha = h", "show \"h' = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h' = h", "proof (rule relation.ChurchRosser_unique_final)"], ["proof (state)\ngoal (5 subgoals):\n 1. relation.is_ChurchRosser ?r\n 2. ?r\\<^sup>*\\<^sup>* ?a h'\n 3. ?r\\<^sup>*\\<^sup>* ?a h\n 4. relation.is_final ?r h'\n 5. relation.is_final ?r h", "from isGB"], ["proof (chain)\npicking this:\n  is_Groebner_basis G", "show \"relation.is_ChurchRosser (red G)\""], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. relation.is_ChurchRosser (red G)", "by (simp only: is_Groebner_basis_def)"], ["proof (state)\nthis:\n  relation.is_ChurchRosser (red G)\n\ngoal (4 subgoals):\n 1. (red G)\\<^sup>*\\<^sup>* ?a h'\n 2. (red G)\\<^sup>*\\<^sup>* ?a h\n 3. relation.is_final (red G) h'\n 4. relation.is_final (red G) h", "qed fact+"], ["proof (state)\nthis:\n  h' = h\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!h. (red G)\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red G h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma translation_property':\n  assumes \"p \\<noteq> 0\" and red_p_0: \"(red F)\\<^sup>*\\<^sup>* p 0\"\n  shows \"is_red F (p + q) \\<or> is_red F q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red F (p + q) \\<or> is_red F q", "proof (rule disjCI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> is_red F q \\<Longrightarrow> is_red F (p + q)", "assume not_red: \"\\<not> is_red F q\""], ["proof (state)\nthis:\n  \\<not> is_red F q\n\ngoal (1 subgoal):\n 1. \\<not> is_red F q \\<Longrightarrow> is_red F (p + q)", "from red_p_0 \\<open>p \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  (red F)\\<^sup>*\\<^sup>* p 0\n  p \\<noteq> 0", "obtain f where \"f \\<in> F\" and \"f \\<noteq> 0\" and lt_adds: \"lt f adds\\<^sub>t lt p\""], ["proof (prove)\nusing this:\n  (red F)\\<^sup>*\\<^sup>* p 0\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> F; f \\<noteq> 0; lt f adds\\<^sub>t lt p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule zero_reducibility_implies_lt_divisibility)"], ["proof (state)\nthis:\n  f \\<in> F\n  f \\<noteq> 0\n  lt f adds\\<^sub>t lt p\n\ngoal (1 subgoal):\n 1. \\<not> is_red F q \\<Longrightarrow> is_red F (p + q)", "show \"is_red F (p + q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red F (p + q)", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> is_red F (p + q)\n 2. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "case True"], ["proof (state)\nthis:\n  q = 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow> is_red F (p + q)\n 2. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "with is_red_indI1[OF \\<open>f \\<in> F\\<close> \\<open>f \\<noteq> 0\\<close> \\<open>p \\<noteq> 0\\<close> lt_adds]"], ["proof (chain)\npicking this:\n  is_red F p\n  q = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  is_red F p\n  q = 0\n\ngoal (1 subgoal):\n 1. is_red F (p + q)", "by simp"], ["proof (state)\nthis:\n  is_red F (p + q)\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "case False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "from not_red is_red_addsI[OF \\<open>f \\<in> F\\<close> \\<open>f \\<noteq> 0\\<close> _ lt_adds, of q]"], ["proof (chain)\npicking this:\n  \\<not> is_red F q\n  lt p \\<in> keys q \\<Longrightarrow> is_red F q", "have \"\\<not> lt p \\<in> (keys q)\""], ["proof (prove)\nusing this:\n  \\<not> is_red F q\n  lt p \\<in> keys q \\<Longrightarrow> is_red F q\n\ngoal (1 subgoal):\n 1. lt p \\<notin> keys q", "by blast"], ["proof (state)\nthis:\n  lt p \\<notin> keys q\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "hence \"lookup q (lt p) = 0\""], ["proof (prove)\nusing this:\n  lt p \\<notin> keys q\n\ngoal (1 subgoal):\n 1. lookup q (lt p) = (0::'b)", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  lookup q (lt p) = (0::'b)\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "with lt_in_keys[OF \\<open>p \\<noteq> 0\\<close>]"], ["proof (chain)\npicking this:\n  lt p \\<in> keys p\n  lookup q (lt p) = (0::'b)", "have \"lt p \\<in> (keys (p + q))\""], ["proof (prove)\nusing this:\n  lt p \\<in> keys p\n  lookup q (lt p) = (0::'b)\n\ngoal (1 subgoal):\n 1. lt p \\<in> keys (p + q)", "unfolding in_keys_iff"], ["proof (prove)\nusing this:\n  lookup p (lt p) \\<noteq> (0::'b)\n  lookup q (lt p) = (0::'b)\n\ngoal (1 subgoal):\n 1. lookup (p + q) (lt p) \\<noteq> (0::'b)", "by (simp add: lookup_add)"], ["proof (state)\nthis:\n  lt p \\<in> keys (p + q)\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow> is_red F (p + q)", "from is_red_addsI[OF \\<open>f \\<in> F\\<close> \\<open>f \\<noteq> 0\\<close> this lt_adds]"], ["proof (chain)\npicking this:\n  is_red F (p + q)", "show ?thesis"], ["proof (prove)\nusing this:\n  is_red F (p + q)\n\ngoal (1 subgoal):\n 1. is_red F (p + q)", "."], ["proof (state)\nthis:\n  is_red F (p + q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_red F (p + q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma translation_property:\n  assumes \"p \\<noteq> q\" and red_0: \"(red F)\\<^sup>*\\<^sup>* (p - q) 0\"\n  shows \"is_red F p \\<or> is_red F q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red F p \\<or> is_red F q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_red F p \\<or> is_red F q", "from \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q", "have \"p - q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. p - q \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  p - q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. is_red F p \\<or> is_red F q", "from translation_property'[OF this red_0, of q]"], ["proof (chain)\npicking this:\n  is_red F (p - q + q) \\<or> is_red F q", "show ?thesis"], ["proof (prove)\nusing this:\n  is_red F (p - q + q) \\<or> is_red F q\n\ngoal (1 subgoal):\n 1. is_red F p \\<or> is_red F q", "by simp"], ["proof (state)\nthis:\n  is_red F p \\<or> is_red F q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_GB_is_strong_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>f. f \\<in> pmdl G \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0\"\n  shows \"is_Groebner_basis G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "proof (rule Buchberger_criterion_dgrad_p_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> G; q \\<in> G; p \\<noteq> 0; q \\<noteq> 0;\n        p \\<noteq> q;\n        component_of_term (lt p) = component_of_term (lt q)\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* (spoly p q) 0", "fix p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> G; q \\<in> G; p \\<noteq> 0; q \\<noteq> 0;\n        p \\<noteq> q;\n        component_of_term (lt p) = component_of_term (lt q)\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* (spoly p q) 0", "assume \"p \\<in> G\" and \"q \\<in> G\""], ["proof (state)\nthis:\n  p \\<in> G\n  q \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> G; q \\<in> G; p \\<noteq> 0; q \\<noteq> 0;\n        p \\<noteq> q;\n        component_of_term (lt p) = component_of_term (lt q)\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* (spoly p q) 0", "hence \"p \\<in> pmdl G\" and \"q \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  p \\<in> G\n  q \\<in> G\n\ngoal (1 subgoal):\n 1. p \\<in> pmdl G &&& q \\<in> pmdl G", "by (auto intro: pmdl.span_base)"], ["proof (state)\nthis:\n  p \\<in> pmdl G\n  q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> G; q \\<in> G; p \\<noteq> 0; q \\<noteq> 0;\n        p \\<noteq> q;\n        component_of_term (lt p) = component_of_term (lt q)\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* (spoly p q) 0", "hence \"spoly p q \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  p \\<in> pmdl G\n  q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> pmdl G", "by (rule pmdl_closed_spoly)"], ["proof (state)\nthis:\n  spoly p q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> G; q \\<in> G; p \\<noteq> 0; q \\<noteq> 0;\n        p \\<noteq> q;\n        component_of_term (lt p) = component_of_term (lt q)\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* (spoly p q) 0", "thus \"(red G)\\<^sup>*\\<^sup>* (spoly p q) 0\""], ["proof (prove)\nusing this:\n  spoly p q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* (spoly p q) 0", "proof (rule assms(3))"], ["proof (state)\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "note assms(1)"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "moreover"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "from \\<open>p \\<in> G\\<close> assms(2)"], ["proof (chain)\npicking this:\n  p \\<in> G\n  G \\<subseteq> dgrad_p_set d m", "have \"p \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  p \\<in> G\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. p \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  p \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "moreover"], ["proof (state)\nthis:\n  p \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "from \\<open>q \\<in> G\\<close> assms(2)"], ["proof (chain)\npicking this:\n  q \\<in> G\n  G \\<subseteq> dgrad_p_set d m", "have \"q \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  q \\<in> G\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. q \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "ultimately"], ["proof (chain)\npicking this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m", "show \"spoly p q \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  p \\<in> dgrad_p_set d m\n  q \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly p q \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_spoly)"], ["proof (state)\nthis:\n  spoly p q \\<in> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* (spoly p q) 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_GB_is_strong_GB:\n  assumes \"\\<And>f. f \\<in> (pmdl G) \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0\"\n  shows \"is_Groebner_basis G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "unfolding is_Groebner_basis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. relation.is_ChurchRosser (red G)", "proof (rule relation.confluence_implies_ChurchRosser,\n      simp add: relation.is_confluent_def relation.is_confluent_on_def, intro allI impI, erule conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>(red G)\\<^sup>*\\<^sup>* a b1;\n        (red G)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red G) b1 b2", "fix f p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>(red G)\\<^sup>*\\<^sup>* a b1;\n        (red G)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red G) b1 b2", "assume \"(red G)\\<^sup>*\\<^sup>* f p\" and \"(red G)\\<^sup>*\\<^sup>* f q\""], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f p\n  (red G)\\<^sup>*\\<^sup>* f q\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>(red G)\\<^sup>*\\<^sup>* a b1;\n        (red G)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red G) b1 b2", "hence \"relation.srtc (red G) p q\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* f p\n  (red G)\\<^sup>*\\<^sup>* f q\n\ngoal (1 subgoal):\n 1. relation.srtc (red G) p q", "by (meson relation.rtc_implies_srtc relation.srtc_symmetric relation.srtc_transitive)"], ["proof (state)\nthis:\n  relation.srtc (red G) p q\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>(red G)\\<^sup>*\\<^sup>* a b1;\n        (red G)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red G) b1 b2", "hence \"p - q \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  relation.srtc (red G) p q\n\ngoal (1 subgoal):\n 1. p - q \\<in> pmdl G", "by (rule srtc_in_pmdl)"], ["proof (state)\nthis:\n  p - q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>(red G)\\<^sup>*\\<^sup>* a b1;\n        (red G)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red G) b1 b2", "hence \"(red G)\\<^sup>*\\<^sup>* (p - q) 0\""], ["proof (prove)\nusing this:\n  p - q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* (p - q) 0", "by (rule assms)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* (p - q) 0\n\ngoal (1 subgoal):\n 1. \\<And>a b1 b2.\n       \\<lbrakk>(red G)\\<^sup>*\\<^sup>* a b1;\n        (red G)\\<^sup>*\\<^sup>* a b2\\<rbrakk>\n       \\<Longrightarrow> relation.cs (red G) b1 b2", "thus \"relation.cs (red G) p q\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* (p - q) 0\n\ngoal (1 subgoal):\n 1. relation.cs (red G) p q", "by (rule red_diff_rtrancl_cs)"], ["proof (state)\nthis:\n  relation.cs (red G) p q\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary GB_alt_1_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  shows \"is_Groebner_basis G \\<longleftrightarrow> (\\<forall>f \\<in> pmdl G. f \\<in> dgrad_p_set d m \\<longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G =\n    (\\<forall>f\\<in>pmdl G.\n        f \\<in> dgrad_p_set d m \\<longrightarrow>\n        (red G)\\<^sup>*\\<^sup>* f 0)", "using weak_GB_is_strong_GB_dgrad_p_set[OF assms] GB_imp_zero_reducibility"], ["proof (prove)\nusing this:\n  (\\<And>f.\n      \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m\\<rbrakk>\n      \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0) \\<Longrightarrow>\n  is_Groebner_basis G\n  \\<lbrakk>is_Groebner_basis ?G; ?f \\<in> pmdl ?G\\<rbrakk>\n  \\<Longrightarrow> (red ?G)\\<^sup>*\\<^sup>* ?f 0\n\ngoal (1 subgoal):\n 1. is_Groebner_basis G =\n    (\\<forall>f\\<in>pmdl G.\n        f \\<in> dgrad_p_set d m \\<longrightarrow>\n        (red G)\\<^sup>*\\<^sup>* f 0)", "by blast"], ["", "corollary GB_alt_1: \"is_Groebner_basis G \\<longleftrightarrow> (\\<forall>f \\<in> pmdl G. (red G)\\<^sup>*\\<^sup>* f 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G =\n    (\\<forall>f\\<in>pmdl G. (red G)\\<^sup>*\\<^sup>* f 0)", "using weak_GB_is_strong_GB GB_imp_zero_reducibility"], ["proof (prove)\nusing this:\n  (\\<And>f.\n      f \\<in> pmdl ?G \\<Longrightarrow>\n      (red ?G)\\<^sup>*\\<^sup>* f 0) \\<Longrightarrow>\n  is_Groebner_basis ?G\n  \\<lbrakk>is_Groebner_basis ?G; ?f \\<in> pmdl ?G\\<rbrakk>\n  \\<Longrightarrow> (red ?G)\\<^sup>*\\<^sup>* ?f 0\n\ngoal (1 subgoal):\n 1. is_Groebner_basis G =\n    (\\<forall>f\\<in>pmdl G. (red G)\\<^sup>*\\<^sup>* f 0)", "by blast"], ["", "lemma isGB_I_is_red:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>f. f \\<in> pmdl G \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> is_red G f\"\n  shows \"is_Groebner_basis G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "unfolding GB_alt_1_dgrad_p_set[OF assms(1, 2)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<in> dgrad_p_set d m \\<longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0", "assume \"f \\<in> pmdl G\" and \"f \\<in> dgrad_p_set d m\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n  f \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m\\<rbrakk>\n       \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0", "with assms(1, 2) subset_refl assms(3)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  ?A \\<subseteq> ?A\n  \\<lbrakk>?f38 \\<in> pmdl G; ?f38 \\<in> dgrad_p_set d m;\n   ?f38 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> is_red G ?f38\n  f \\<in> pmdl G\n  f \\<in> dgrad_p_set d m", "show \"(red G)\\<^sup>*\\<^sup>* f 0\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  ?A \\<subseteq> ?A\n  \\<lbrakk>?f38 \\<in> pmdl G; ?f38 \\<in> dgrad_p_set d m;\n   ?f38 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> is_red G ?f38\n  f \\<in> pmdl G\n  f \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "by (rule is_red_implies_0_red_dgrad_p_set)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_alt_2_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  shows \"is_Groebner_basis G \\<longleftrightarrow> (\\<forall>f \\<in> pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G =\n    (\\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. is_Groebner_basis G \\<Longrightarrow>\n    \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\n 2. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow> is_red G f \\<Longrightarrow>\n    is_Groebner_basis G", "assume \"is_Groebner_basis G\""], ["proof (state)\nthis:\n  is_Groebner_basis G\n\ngoal (2 subgoals):\n 1. is_Groebner_basis G \\<Longrightarrow>\n    \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\n 2. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow> is_red G f \\<Longrightarrow>\n    is_Groebner_basis G", "show \"\\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f", "proof (intro ballI, intro impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "assume \"f \\<in> (pmdl G)\" and \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "show \"is_red G f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red G f", "by (rule GB_imp_reducibility, fact+)"], ["proof (state)\nthis:\n  is_red G f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow> is_red G f \\<Longrightarrow>\n    is_Groebner_basis G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow> is_red G f \\<Longrightarrow>\n    is_Groebner_basis G", "assume a2: \"\\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\""], ["proof (state)\nthis:\n  \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow> is_red G f \\<Longrightarrow>\n    is_Groebner_basis G", "show \"is_Groebner_basis G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "unfolding GB_alt_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G. (red G)\\<^sup>*\\<^sup>* f 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. f \\<in> pmdl G \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f. f \\<in> pmdl G \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0", "assume \"f \\<in> pmdl G\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>f. f \\<in> pmdl G \\<Longrightarrow> (red G)\\<^sup>*\\<^sup>* f 0", "from assms"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m", "show \"(red G)\\<^sup>*\\<^sup>* f 0\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "proof (rule is_red_implies_0_red_dgrad_p_set')"], ["proof (state)\ngoal (3 subgoals):\n 1. pmdl G \\<subseteq> pmdl ?A\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl ?A; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q\n 3. f \\<in> pmdl ?A", "fix q"], ["proof (state)\ngoal (3 subgoals):\n 1. pmdl G \\<subseteq> pmdl ?A\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl ?A; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q\n 3. f \\<in> pmdl ?A", "assume \"q \\<in> pmdl G\" and \"q \\<noteq> 0\""], ["proof (state)\nthis:\n  q \\<in> pmdl G\n  q \\<noteq> 0\n\ngoal (3 subgoals):\n 1. pmdl G \\<subseteq> pmdl ?A\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl ?A; q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q\n 3. f \\<in> pmdl ?A", "thus \"is_red G q\""], ["proof (prove)\nusing this:\n  q \\<in> pmdl G\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. is_red G q", "by (rule a2[rule_format])"], ["proof (state)\nthis:\n  is_red G q\n\ngoal (2 subgoals):\n 1. pmdl G \\<subseteq> pmdl G\n 2. f \\<in> pmdl G", "qed (fact subset_refl, fact)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_adds_lt:\n  assumes \"is_Groebner_basis G\" and \"f \\<in> pmdl G\" and \"f \\<noteq> 0\"\n  obtains g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(1) assms(2)"], ["proof (chain)\npicking this:\n  is_Groebner_basis G\n  f \\<in> pmdl G", "have \"(red G)\\<^sup>*\\<^sup>* f 0\""], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "by (rule GB_imp_zero_reducibility)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "by (rule zero_reducibility_implies_lt_divisibility, fact+)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isGB_I_adds_lt:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes \"\\<And>f. f \\<in> pmdl G \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\"\n  shows \"is_Groebner_basis G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "proof (rule isGB_I_is_red)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "assume \"f \\<in> pmdl G\" and \"f \\<in> dgrad_p_set d m\" and \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "hence \"(\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl G\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "by (rule assms(3))"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "then"], ["proof (chain)\npicking this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "thus \"is_red G f\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. is_red G f", "using \\<open>f \\<noteq> 0\\<close> is_red_indI1"], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n  f \\<noteq> 0\n  \\<lbrakk>?f \\<in> ?F; ?f \\<noteq> 0; ?p \\<noteq> 0;\n   lt ?f adds\\<^sub>t lt ?p\\<rbrakk>\n  \\<Longrightarrow> is_red ?F ?p\n\ngoal (1 subgoal):\n 1. is_red G f", "by blast"], ["proof (state)\nthis:\n  is_red G f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_alt_3_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  shows \"is_Groebner_basis G \\<longleftrightarrow> (\\<forall>f \\<in> pmdl G. f \\<noteq> 0 \\<longrightarrow> (\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f))\"\n    (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G =\n    (\\<forall>f\\<in>pmdl G.\n        f \\<noteq> 0 \\<longrightarrow>\n        (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. is_Groebner_basis G \\<Longrightarrow>\n    \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n 2. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G.\n           g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f) \\<Longrightarrow>\n    is_Groebner_basis G", "assume ?L"], ["proof (state)\nthis:\n  is_Groebner_basis G\n\ngoal (2 subgoals):\n 1. is_Groebner_basis G \\<Longrightarrow>\n    \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n 2. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G.\n           g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f) \\<Longrightarrow>\n    is_Groebner_basis G", "show ?R"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>G.\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>G.\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "assume \"f \\<in> pmdl G\" and \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>G.\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "with \\<open>?L\\<close>"], ["proof (chain)\npicking this:\n  is_Groebner_basis G\n  f \\<in> pmdl G\n  f \\<noteq> 0", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  f \\<in> pmdl G\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule GB_adds_lt)"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>G.\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "thus \"\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "by blast"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f\\<in>pmdl G.\n     f \\<noteq> 0 \\<longrightarrow>\n     (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G.\n           g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f) \\<Longrightarrow>\n    is_Groebner_basis G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G.\n           g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f) \\<Longrightarrow>\n    is_Groebner_basis G", "assume ?R"], ["proof (state)\nthis:\n  \\<forall>f\\<in>pmdl G.\n     f \\<noteq> 0 \\<longrightarrow>\n     (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G.\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>G.\n           g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f) \\<Longrightarrow>\n    is_Groebner_basis G", "show ?L"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "unfolding GB_alt_2_dgrad_p_set[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "assume \"f \\<in> pmdl G\" and \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "with \\<open>?R\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>f\\<in>pmdl G.\n     f \\<noteq> 0 \\<longrightarrow>\n     (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n  f \\<in> pmdl G\n  f \\<noteq> 0", "have \"(\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\""], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>pmdl G.\n     f \\<noteq> 0 \\<longrightarrow>\n     (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n  f \\<in> pmdl G\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "by blast"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "then"], ["proof (chain)\npicking this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G f", "thus \"is_red G f\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. is_red G f", "using \\<open>f \\<noteq> 0\\<close> is_red_indI1"], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n  f \\<noteq> 0\n  \\<lbrakk>?f \\<in> ?F; ?f \\<noteq> 0; ?p \\<noteq> 0;\n   lt ?f adds\\<^sub>t lt ?p\\<rbrakk>\n  \\<Longrightarrow> is_red ?F ?p\n\ngoal (1 subgoal):\n 1. is_red G f", "by blast"], ["proof (state)\nthis:\n  is_red G f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_insert:\n  assumes \"is_Groebner_basis G\" and \"f \\<in> pmdl G\"\n  shows \"is_Groebner_basis (insert f G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert f G)", "using assms"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert f G)", "unfolding GB_alt_1"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>pmdl G. (red G)\\<^sup>*\\<^sup>* f 0\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<forall>fa\\<in>pmdl (insert f G).\n       (red (insert f G))\\<^sup>*\\<^sup>* fa 0", "by (metis insert_subset pmdl.span_insert_idI red_rtrancl_subset subsetI)"], ["", "lemma GB_subset:\n  assumes \"is_Groebner_basis G\" and \"G \\<subseteq> G'\" and \"pmdl G' = pmdl G\"\n  shows \"is_Groebner_basis G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G'", "using assms(1)"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. is_Groebner_basis G'", "unfolding GB_alt_1"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>pmdl G. (red G)\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G'. (red G')\\<^sup>*\\<^sup>* f 0", "using assms(2) assms(3) red_rtrancl_subset"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>pmdl G. (red G)\\<^sup>*\\<^sup>* f 0\n  G \\<subseteq> G'\n  pmdl G' = pmdl G\n  \\<lbrakk>(red ?G)\\<^sup>*\\<^sup>* ?p ?q; ?G \\<subseteq> ?F\\<rbrakk>\n  \\<Longrightarrow> (red ?F)\\<^sup>*\\<^sup>* ?p ?q\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl G'. (red G')\\<^sup>*\\<^sup>* f 0", "by blast"], ["", "lemma (in ordered_term) GB_remove_0_stable_GB:\n  assumes \"is_Groebner_basis G\"\n  shows \"is_Groebner_basis (G - {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (G - {0})", "using assms"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (G - {0})", "by (simp only: is_Groebner_basis_def red_minus_singleton_zero)"], ["", "lemmas is_red_implies_0_red_finite = is_red_implies_0_red_dgrad_p_set'[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_implies_unique_nf_finite = GB_implies_unique_nf_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_alt_2_finite = GB_alt_2_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_alt_3_finite = GB_alt_3_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas pmdl_eqI_adds_lt_finite = pmdl_eqI_adds_lt_dgrad_p_set'[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "subsection \\<open>Alternative Characterization of Gr\\\"obner Bases via Representations of S-Polynomials\\<close>"], ["", "definition spoly_rep :: \"('a \\<Rightarrow> nat) \\<Rightarrow> nat \\<Rightarrow> ('t \\<Rightarrow>\\<^sub>0 'b) set \\<Rightarrow> ('t \\<Rightarrow>\\<^sub>0 'b) \\<Rightarrow> ('t \\<Rightarrow>\\<^sub>0 'b::field) \\<Rightarrow> bool\"\n  where \"spoly_rep d m G g1 g2 \\<longleftrightarrow> (\\<exists>q. spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g) \\<and>\n                (\\<forall>g. q g \\<in> punit.dgrad_p_set d m \\<and>\n                        (q g \\<odot> g \\<noteq> 0 \\<longrightarrow> lt (q g \\<odot> g) \\<prec>\\<^sub>t term_of_pair (lcs (lp g1) (lp g2),\n                                                                      component_of_term (lt g2)))))\""], ["", "lemma spoly_repI:\n  \"spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g) \\<Longrightarrow> (\\<And>g. q g \\<in> punit.dgrad_p_set d m) \\<Longrightarrow>\n    (\\<And>g. q g \\<odot> g \\<noteq> 0 \\<Longrightarrow> lt (q g \\<odot> g) \\<prec>\\<^sub>t term_of_pair (lcs (lp g1) (lp g2),\n                                                        component_of_term (lt g2))) \\<Longrightarrow>\n    spoly_rep d m G g1 g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g);\n     \\<And>g. q g \\<in> punit.dgrad_p_set d m;\n     \\<And>g.\n        q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n        lt (q g \\<odot> g) \\<prec>\\<^sub>t\n        term_of_pair\n         (lcs (lp g1) (lp g2), component_of_term (lt g2))\\<rbrakk>\n    \\<Longrightarrow> spoly_rep d m G g1 g2", "by (auto simp: spoly_rep_def)"], ["", "lemma spoly_repI_zero:\n  assumes \"spoly g1 g2 = 0\"\n  shows \"spoly_rep d m G g1 g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly_rep d m G g1 g2", "proof (rule spoly_repI)"], ["proof (state)\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "show \"spoly g1 g2 = (\\<Sum>g\\<in>G. 0 \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly g1 g2 = sum ((\\<odot>) 0) G", "by (simp add: assms)"], ["proof (state)\nthis:\n  spoly g1 g2 = sum ((\\<odot>) 0) G\n\ngoal (2 subgoals):\n 1. \\<And>g. 0 \\<in> punit.dgrad_p_set d m\n 2. \\<And>g.\n       0 \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (0 \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "qed (simp_all add: punit.zero_in_dgrad_p_set)"], ["", "lemma spoly_repE:\n  assumes \"spoly_rep d m G g1 g2\"\n  obtains q where \"spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g)\" and \"\\<And>g. q g \\<in> punit.dgrad_p_set d m\"\n    and \"\\<And>g. q g \\<odot> g \\<noteq> 0 \\<Longrightarrow> lt (q g \\<odot> g) \\<prec>\\<^sub>t term_of_pair (lcs (lp g1) (lp g2),\n                                                             component_of_term (lt g2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g);\n         \\<And>g. q g \\<in> punit.dgrad_p_set d m;\n         \\<And>g.\n            q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n            lt (q g \\<odot> g) \\<prec>\\<^sub>t\n            term_of_pair\n             (lcs (lp g1) (lp g2), component_of_term (lt g2))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  spoly_rep d m G g1 g2\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g);\n         \\<And>g. q g \\<in> punit.dgrad_p_set d m;\n         \\<And>g.\n            q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n            lt (q g \\<odot> g) \\<prec>\\<^sub>t\n            term_of_pair\n             (lcs (lp g1) (lp g2), component_of_term (lt g2))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: spoly_rep_def)"], ["", "corollary isGB_D_spoly_rep:\n  assumes \"dickson_grading d\" and \"is_Groebner_basis G\" and \"G \\<subseteq> dgrad_p_set d m\" and \"finite G\"\n    and \"g1 \\<in> G\" and \"g2 \\<in> G\" and \"g1 \\<noteq> 0\" and \"g2 \\<noteq> 0\"\n  shows \"spoly_rep d m G g1 g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly_rep d m G g1 g2", "proof (cases \"spoly g1 g2 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. spoly g1 g2 = 0 \\<Longrightarrow> spoly_rep d m G g1 g2\n 2. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "case True"], ["proof (state)\nthis:\n  spoly g1 g2 = 0\n\ngoal (2 subgoals):\n 1. spoly g1 g2 = 0 \\<Longrightarrow> spoly_rep d m G g1 g2\n 2. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "thus ?thesis"], ["proof (prove)\nusing this:\n  spoly g1 g2 = 0\n\ngoal (1 subgoal):\n 1. spoly_rep d m G g1 g2", "by (rule spoly_repI_zero)"], ["proof (state)\nthis:\n  spoly_rep d m G g1 g2\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "case False"], ["proof (state)\nthis:\n  spoly g1 g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "let ?v = \"term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "let ?h = \"crit_pair g1 g2\""], ["proof (state)\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "from assms(7, 8)"], ["proof (chain)\npicking this:\n  g1 \\<noteq> 0\n  g2 \\<noteq> 0", "have eq: \"spoly g1 g2 = fst ?h + (- snd ?h)\""], ["proof (prove)\nusing this:\n  g1 \\<noteq> 0\n  g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. spoly g1 g2 = fst (crit_pair g1 g2) + - snd (crit_pair g1 g2)", "by (simp add: spoly_alt)"], ["proof (state)\nthis:\n  spoly g1 g2 = fst (crit_pair g1 g2) + - snd (crit_pair g1 g2)\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "have \"fst ?h \\<prec>\\<^sub>p monomial 1 ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (crit_pair g1 g2) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)))", "by (fact fst_crit_pair_below_lcs)"], ["proof (state)\nthis:\n  fst (crit_pair g1 g2) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)))\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "hence d1: \"fst ?h = 0 \\<or> lt (fst ?h) \\<prec>\\<^sub>t ?v\""], ["proof (prove)\nusing this:\n  fst (crit_pair g1 g2) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)))\n\ngoal (1 subgoal):\n 1. fst (crit_pair g1 g2) = 0 \\<or>\n    lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "by (simp only: ord_strict_p_monomial_iff)"], ["proof (state)\nthis:\n  fst (crit_pair g1 g2) = 0 \\<or>\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "have \"snd ?h \\<prec>\\<^sub>p monomial 1 ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (crit_pair g1 g2) \\<prec>\\<^sub>p\n    monomial (1::'b)\n     (term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)))", "by (fact snd_crit_pair_below_lcs)"], ["proof (state)\nthis:\n  snd (crit_pair g1 g2) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)))\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "hence d2: \"snd ?h = 0 \\<or> lt (- snd ?h) \\<prec>\\<^sub>t ?v\""], ["proof (prove)\nusing this:\n  snd (crit_pair g1 g2) \\<prec>\\<^sub>p\n  monomial (1::'b)\n   (term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)))\n\ngoal (1 subgoal):\n 1. snd (crit_pair g1 g2) = 0 \\<or>\n    lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "by (simp only: ord_strict_p_monomial_iff lt_uminus)"], ["proof (state)\nthis:\n  snd (crit_pair g1 g2) = 0 \\<or>\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "note assms(1)"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "moreover"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "from assms(5, 3)"], ["proof (chain)\npicking this:\n  g1 \\<in> G\n  G \\<subseteq> dgrad_p_set d m", "have \"g1 \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. g1 \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  g1 \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "moreover"], ["proof (state)\nthis:\n  g1 \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "from assms(6, 3)"], ["proof (chain)\npicking this:\n  g2 \\<in> G\n  G \\<subseteq> dgrad_p_set d m", "have \"g2 \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  g2 \\<in> G\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. g2 \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  g2 \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "ultimately"], ["proof (chain)\npicking this:\n  dickson_grading d\n  g1 \\<in> dgrad_p_set d m\n  g2 \\<in> dgrad_p_set d m", "have \"spoly g1 g2 \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  g1 \\<in> dgrad_p_set d m\n  g2 \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_spoly)"], ["proof (state)\nthis:\n  spoly g1 g2 \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "from assms(5)"], ["proof (chain)\npicking this:\n  g1 \\<in> G", "have \"g1 \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n\ngoal (1 subgoal):\n 1. g1 \\<in> pmdl G", "by (rule pmdl.span_base)"], ["proof (state)\nthis:\n  g1 \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "moreover"], ["proof (state)\nthis:\n  g1 \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "from assms(6)"], ["proof (chain)\npicking this:\n  g2 \\<in> G", "have \"g2 \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  g2 \\<in> G\n\ngoal (1 subgoal):\n 1. g2 \\<in> pmdl G", "by (rule pmdl.span_base)"], ["proof (state)\nthis:\n  g2 \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "ultimately"], ["proof (chain)\npicking this:\n  g1 \\<in> pmdl G\n  g2 \\<in> pmdl G", "have \"spoly g1 g2 \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  g1 \\<in> pmdl G\n  g2 \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<in> pmdl G", "by (rule pmdl_closed_spoly)"], ["proof (state)\nthis:\n  spoly g1 g2 \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "with assms(2)"], ["proof (chain)\npicking this:\n  is_Groebner_basis G\n  spoly g1 g2 \\<in> pmdl G", "have \"(red G)\\<^sup>*\\<^sup>* (spoly g1 g2) 0\""], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  spoly g1 g2 \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* (spoly g1 g2) 0", "by (rule GB_imp_zero_reducibility)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* (spoly g1 g2) 0\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "with assms(1, 3, 4) \\<open>spoly _ _ \\<in> dgrad_p_set _ _\\<close>"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  finite G\n  spoly g1 g2 \\<in> dgrad_p_set d m\n  (red G)\\<^sup>*\\<^sup>* (spoly g1 g2) 0", "obtain q\n    where 1: \"spoly g1 g2 = 0 + (\\<Sum>g\\<in>G. q g \\<odot> g)\" and 2: \"\\<And>g. q g \\<in> punit.dgrad_p_set d m\"\n      and \"\\<And>g. lt (q g \\<odot> g) \\<preceq>\\<^sub>t lt (spoly g1 g2)\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  finite G\n  spoly g1 g2 \\<in> dgrad_p_set d m\n  (red G)\\<^sup>*\\<^sup>* (spoly g1 g2) 0\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>spoly g1 g2 = 0 + (\\<Sum>g\\<in>G. q g \\<odot> g);\n         \\<And>g. q g \\<in> punit.dgrad_p_set d m;\n         \\<And>g.\n            lt (q g \\<odot> g) \\<preceq>\\<^sub>t lt (spoly g1 g2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule red_rtrancl_repE) blast"], ["proof (state)\nthis:\n  spoly g1 g2 = 0 + (\\<Sum>g\\<in>G. q g \\<odot> g)\n  q ?g39 \\<in> punit.dgrad_p_set d m\n  lt (q ?g39 \\<odot> ?g39) \\<preceq>\\<^sub>t lt (spoly g1 g2)\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly_rep d m G g1 g2", "proof (rule spoly_repI)"], ["proof (state)\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "fix g"], ["proof (state)\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "note \\<open>lt (q g \\<odot> g) \\<preceq>\\<^sub>t lt (spoly g1 g2)\\<close>"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<preceq>\\<^sub>t lt (spoly g1 g2)\n\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "also"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<preceq>\\<^sub>t lt (spoly g1 g2)\n\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "from d1"], ["proof (chain)\npicking this:\n  fst (crit_pair g1 g2) = 0 \\<or>\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "have \"lt (spoly g1 g2) \\<prec>\\<^sub>t ?v\""], ["proof (prove)\nusing this:\n  fst (crit_pair g1 g2) = 0 \\<or>\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. fst (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "assume \"fst ?h = 0\""], ["proof (state)\nthis:\n  fst (crit_pair g1 g2) = 0\n\ngoal (2 subgoals):\n 1. fst (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "hence eq: \"spoly g1 g2 = - snd ?h\""], ["proof (prove)\nusing this:\n  fst (crit_pair g1 g2) = 0\n\ngoal (1 subgoal):\n 1. spoly g1 g2 = - snd (crit_pair g1 g2)", "by (simp add: eq)"], ["proof (state)\nthis:\n  spoly g1 g2 = - snd (crit_pair g1 g2)\n\ngoal (2 subgoals):\n 1. fst (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "also"], ["proof (state)\nthis:\n  spoly g1 g2 = - snd (crit_pair g1 g2)\n\ngoal (2 subgoals):\n 1. fst (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "from d2"], ["proof (chain)\npicking this:\n  snd (crit_pair g1 g2) = 0 \\<or>\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "have \"lt \\<dots> \\<prec>\\<^sub>t ?v\""], ["proof (prove)\nusing this:\n  snd (crit_pair g1 g2) = 0 \\<or>\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "assume \"snd ?h = 0\""], ["proof (state)\nthis:\n  snd (crit_pair g1 g2) = 0\n\ngoal (2 subgoals):\n 1. snd (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "with False"], ["proof (chain)\npicking this:\n  spoly g1 g2 \\<noteq> 0\n  snd (crit_pair g1 g2) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  spoly g1 g2 \\<noteq> 0\n  snd (crit_pair g1 g2) = 0\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "by (simp add: eq)"], ["proof (state)\nthis:\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "qed"], ["proof (state)\nthis:\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (2 subgoals):\n 1. fst (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "finally"], ["proof (chain)\npicking this:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "show ?thesis"], ["proof (prove)\nusing this:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "."], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "assume *: \"lt (fst ?h) \\<prec>\\<^sub>t ?v\""], ["proof (state)\nthis:\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "from d2"], ["proof (chain)\npicking this:\n  snd (crit_pair g1 g2) = 0 \\<or>\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "show ?thesis"], ["proof (prove)\nusing this:\n  snd (crit_pair g1 g2) = 0 \\<or>\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. snd (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "assume \"snd ?h = 0\""], ["proof (state)\nthis:\n  snd (crit_pair g1 g2) = 0\n\ngoal (2 subgoals):\n 1. snd (crit_pair g1 g2) = 0 \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n 2. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "with *"], ["proof (chain)\npicking this:\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n  snd (crit_pair g1 g2) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n  snd (crit_pair g1 g2) = 0\n\ngoal (1 subgoal):\n 1. lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "by (simp add: eq)"], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "assume **: \"lt (- snd ?h) \\<prec>\\<^sub>t ?v\""], ["proof (state)\nthis:\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "have \"lt (spoly g1 g2) \\<preceq>\\<^sub>t ord_term_lin.max (lt (fst ?h)) (lt (- snd ?h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (spoly g1 g2) \\<preceq>\\<^sub>t\n    ord_term_lin.max (lt (fst (crit_pair g1 g2)))\n     (lt (- snd (crit_pair g1 g2)))", "unfolding eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (fst (crit_pair g1 g2) + - snd (crit_pair g1 g2)) \\<preceq>\\<^sub>t\n    ord_term_lin.max (lt (fst (crit_pair g1 g2)))\n     (lt (- snd (crit_pair g1 g2)))", "by (fact lt_plus_le_max)"], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<preceq>\\<^sub>t\n  ord_term_lin.max (lt (fst (crit_pair g1 g2)))\n   (lt (- snd (crit_pair g1 g2)))\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "also"], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<preceq>\\<^sub>t\n  ord_term_lin.max (lt (fst (crit_pair g1 g2)))\n   (lt (- snd (crit_pair g1 g2)))\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "from * **"], ["proof (chain)\npicking this:\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "have \"\\<dots> \\<prec>\\<^sub>t ?v\""], ["proof (prove)\nusing this:\n  lt (fst (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n  lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. ord_term_lin.max (lt (fst (crit_pair g1 g2)))\n     (lt (- snd (crit_pair g1 g2))) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "by (simp only: ord_term_lin.max_less_iff_conj)"], ["proof (state)\nthis:\n  ord_term_lin.max (lt (fst (crit_pair g1 g2)))\n   (lt (- snd (crit_pair g1 g2))) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (- snd (crit_pair g1 g2)) \\<prec>\\<^sub>t\n    term_of_pair\n     (lcs (lp g1) (lp g2), component_of_term (lt g1)) \\<Longrightarrow>\n    lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "finally"], ["proof (chain)\npicking this:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "show ?thesis"], ["proof (prove)\nusing this:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (1 subgoal):\n 1. lt (spoly g1 g2) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))", "."], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "also"], ["proof (state)\nthis:\n  lt (spoly g1 g2) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1))\n\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "from False"], ["proof (chain)\npicking this:\n  spoly g1 g2 \\<noteq> 0", "have \"\\<dots> = term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\""], ["proof (prove)\nusing this:\n  spoly g1 g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)) =\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "by (simp add: spoly_def Let_def split: if_split_asm)"], ["proof (state)\nthis:\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g1)) =\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (3 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. ?q g \\<odot> g)\n 2. \\<And>g. ?q g \\<in> punit.dgrad_p_set d m\n 3. \\<And>g.\n       ?q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n       lt (?q g \\<odot> g) \\<prec>\\<^sub>t\n       term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "finally"], ["proof (chain)\npicking this:\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "show \"lt (q g \\<odot> g) \\<prec>\\<^sub>t term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\""], ["proof (prove)\nusing this:\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "."], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (2 subgoals):\n 1. spoly g1 g2 = (\\<Sum>g\\<in>G. q g \\<odot> g)\n 2. \\<And>g. q g \\<in> punit.dgrad_p_set d m", "qed (simp_all add: 1 2)"], ["proof (state)\nthis:\n  spoly_rep d m G g1 g2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The finiteness assumption on \\<open>G\\<close> in the following theorem could be dropped, but it makes the\n  proof a lot easier (although it is still fairly complicated).\\<close>"], ["", "lemma isGB_I_spoly_rep:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\" and \"finite G\"\n    and \"\\<And>g1 g2. g1 \\<in> G \\<Longrightarrow> g2 \\<in> G \\<Longrightarrow> g1 \\<noteq> 0 \\<Longrightarrow> g2 \\<noteq> 0 \\<Longrightarrow> spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2\"\n  shows \"is_Groebner_basis G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "assume \"\\<not> is_Groebner_basis G\""], ["proof (state)\nthis:\n  \\<not> is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> is_Groebner_basis G", "obtain p where \"p \\<in> pmdl G\" and p_in: \"p \\<in> dgrad_p_set d m\" and \"\\<not> (red G)\\<^sup>*\\<^sup>* p 0\""], ["proof (prove)\nusing this:\n  \\<not> is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> pmdl G; p \\<in> dgrad_p_set d m;\n         \\<not> (red G)\\<^sup>*\\<^sup>* p 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: GB_alt_1_dgrad_p_set[OF assms(1, 2)])"], ["proof (state)\nthis:\n  p \\<in> pmdl G\n  p \\<in> dgrad_p_set d m\n  \\<not> (red G)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from \\<open>\\<not> is_Groebner_basis G\\<close>"], ["proof (chain)\npicking this:\n  \\<not> is_Groebner_basis G", "have \"G \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. G \\<noteq> {}", "by (auto simp: is_Groebner_basis_empty)"], ["proof (state)\nthis:\n  G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "obtain r where p_red: \"(red G)\\<^sup>*\\<^sup>* p r\" and r_irred: \"\\<not> is_red G r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* p r; \\<not> is_red G r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* p r; \\<not> is_red G r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define A where \"A = {q. (red G)\\<^sup>*\\<^sup>* p q}\""], ["proof (state)\nthis:\n  A = {q. (red G)\\<^sup>*\\<^sup>* p q}\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* p r; \\<not> is_red G r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(1, 2)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m", "have \"wfP (red G)\\<inverse>\\<inverse>\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. wfP (red G)\\<inverse>\\<inverse>", "by (rule red_wf_dgrad_p_set)"], ["proof (state)\nthis:\n  wfP (red G)\\<inverse>\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* p r; \\<not> is_red G r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  wfP (red G)\\<inverse>\\<inverse>\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* p r; \\<not> is_red G r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"p \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> A", "by (simp add: A_def)"], ["proof (state)\nthis:\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* p r; \\<not> is_red G r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  wfP (red G)\\<inverse>\\<inverse>\n  p \\<in> A", "obtain r where \"r \\<in> A\" and r_min: \"\\<And>z. (red G)\\<inverse>\\<inverse> z r \\<Longrightarrow> z \\<notin> A\""], ["proof (prove)\nusing this:\n  wfP (red G)\\<inverse>\\<inverse>\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<in> A;\n         \\<And>z.\n            (red G)\\<inverse>\\<inverse> z r \\<Longrightarrow>\n            z \\<notin> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule wfE_min[to_pred]) blast"], ["proof (state)\nthis:\n  r \\<in> A\n  (red G)\\<inverse>\\<inverse> ?z39 r \\<Longrightarrow> ?z39 \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>(red G)\\<^sup>*\\<^sup>* p r; \\<not> is_red G r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (red G)\\<^sup>*\\<^sup>* p ?r39\n 2. \\<not> is_red G ?r39", "from \\<open>r \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> A", "show *: \"(red G)\\<^sup>*\\<^sup>* p r\""], ["proof (prove)\nusing this:\n  r \\<in> A\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* p r", "by (simp add: A_def)"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* p r\n\ngoal (1 subgoal):\n 1. \\<not> is_red G r", "show \"\\<not> is_red G r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_red G r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "assume \"is_red G r\""], ["proof (state)\nthis:\n  is_red G r\n\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  is_red G r", "obtain z where \"(red G) r z\""], ["proof (prove)\nusing this:\n  is_red G r\n\ngoal (1 subgoal):\n 1. (\\<And>z. red G r z \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (rule is_redE)"], ["proof (state)\nthis:\n  red G r z\n\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "hence \"(red G)\\<inverse>\\<inverse> z r\""], ["proof (prove)\nusing this:\n  red G r z\n\ngoal (1 subgoal):\n 1. (red G)\\<inverse>\\<inverse> z r", "by simp"], ["proof (state)\nthis:\n  (red G)\\<inverse>\\<inverse> z r\n\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "hence \"z \\<notin> A\""], ["proof (prove)\nusing this:\n  (red G)\\<inverse>\\<inverse> z r\n\ngoal (1 subgoal):\n 1. z \\<notin> A", "by (rule r_min)"], ["proof (state)\nthis:\n  z \\<notin> A\n\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "hence \"\\<not> (red G)\\<^sup>*\\<^sup>* p z\""], ["proof (prove)\nusing this:\n  z \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<not> (red G)\\<^sup>*\\<^sup>* p z", "by (simp add: A_def)"], ["proof (state)\nthis:\n  \\<not> (red G)\\<^sup>*\\<^sup>* p z\n\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> (red G)\\<^sup>*\\<^sup>* p z\n\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "from * \\<open>(red G) r z\\<close>"], ["proof (chain)\npicking this:\n  (red G)\\<^sup>*\\<^sup>* p r\n  red G r z", "have \"(red G)\\<^sup>*\\<^sup>* p z\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* p r\n  red G r z\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* p z", ".."], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* p z\n\ngoal (1 subgoal):\n 1. is_red G r \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (red G)\\<^sup>*\\<^sup>* p z\n  (red G)\\<^sup>*\\<^sup>* p z", "show False"], ["proof (prove)\nusing this:\n  \\<not> (red G)\\<^sup>*\\<^sup>* p z\n  (red G)\\<^sup>*\\<^sup>* p z\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> is_red G r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* p r\n  \\<not> is_red G r\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from assms(1, 2) p_in p_red"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  (red G)\\<^sup>*\\<^sup>* p r", "have r_in: \"r \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  p \\<in> dgrad_p_set d m\n  (red G)\\<^sup>*\\<^sup>* p r\n\ngoal (1 subgoal):\n 1. r \\<in> dgrad_p_set d m", "by (rule dgrad_p_set_closed_red_rtrancl)"], ["proof (state)\nthis:\n  r \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from p_red \\<open>\\<not> (red G)\\<^sup>*\\<^sup>* p 0\\<close>"], ["proof (chain)\npicking this:\n  (red G)\\<^sup>*\\<^sup>* p r\n  \\<not> (red G)\\<^sup>*\\<^sup>* p 0", "have \"r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* p r\n  \\<not> (red G)\\<^sup>*\\<^sup>* p 0\n\ngoal (1 subgoal):\n 1. r \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from p_red"], ["proof (chain)\npicking this:\n  (red G)\\<^sup>*\\<^sup>* p r", "have \"p - r \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* p r\n\ngoal (1 subgoal):\n 1. p - r \\<in> pmdl G", "by (rule red_rtranclp_diff_in_pmdl)"], ["proof (state)\nthis:\n  p - r \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "with \\<open>p \\<in> pmdl G\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> pmdl G\n  p - r \\<in> pmdl G", "have \"p - (p - r) \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  p \\<in> pmdl G\n  p - r \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. p - (p - r) \\<in> pmdl G", "by (rule pmdl.span_diff)"], ["proof (state)\nthis:\n  p - (p - r) \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "hence \"r \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  p - (p - r) \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. r \\<in> pmdl G", "by simp"], ["proof (state)\nthis:\n  r \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "with assms(3)"], ["proof (chain)\npicking this:\n  finite G\n  r \\<in> pmdl G", "obtain q0 where r: \"r = (\\<Sum>g\\<in>G. q0 g \\<odot> g)\""], ["proof (prove)\nusing this:\n  finite G\n  r \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. (\\<And>q0.\n        r = (\\<Sum>g\\<in>G. q0 g \\<odot> g) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule pmdl.span_finiteE)"], ["proof (state)\nthis:\n  r = (\\<Sum>g\\<in>G. q0 g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from assms(3)"], ["proof (chain)\npicking this:\n  finite G", "have \"finite (q0 ` G)\""], ["proof (prove)\nusing this:\n  finite G\n\ngoal (1 subgoal):\n 1. finite (q0 ` G)", "by (rule finite_imageI)"], ["proof (state)\nthis:\n  finite (q0 ` G)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  finite (q0 ` G)", "obtain m0 where \"q0 ` G \\<subseteq> punit.dgrad_p_set d m0\""], ["proof (prove)\nusing this:\n  finite (q0 ` G)\n\ngoal (1 subgoal):\n 1. (\\<And>m0.\n        q0 ` G \\<subseteq> punit.dgrad_p_set d m0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule punit.dgrad_p_set_exhaust)"], ["proof (state)\nthis:\n  q0 ` G \\<subseteq> punit.dgrad_p_set d m0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define m' where \"m' = ord_class.max m m0\""], ["proof (state)\nthis:\n  m' = ord_class.max m m0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"dgrad_p_set d m \\<subseteq> dgrad_p_set d m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dgrad_p_set d m \\<subseteq> dgrad_p_set d m'", "by (rule dgrad_p_set_subset) (simp add: m'_def)"], ["proof (state)\nthis:\n  dgrad_p_set d m \\<subseteq> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "with assms(2)"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m\n  dgrad_p_set d m \\<subseteq> dgrad_p_set d m'", "have G_sub: \"G \\<subseteq> dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n  dgrad_p_set d m \\<subseteq> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. G \\<subseteq> dgrad_p_set d m'", "by (rule subset_trans)"], ["proof (state)\nthis:\n  G \\<subseteq> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"punit.dgrad_p_set d m0 \\<subseteq> punit.dgrad_p_set d m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.dgrad_p_set d m0 \\<subseteq> punit.dgrad_p_set d m'", "by (rule punit.dgrad_p_set_subset) (simp add: m'_def)"], ["proof (state)\nthis:\n  punit.dgrad_p_set d m0 \\<subseteq> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "with \\<open>q0 ` G \\<subseteq> _\\<close>"], ["proof (chain)\npicking this:\n  q0 ` G \\<subseteq> punit.dgrad_p_set d m0\n  punit.dgrad_p_set d m0 \\<subseteq> punit.dgrad_p_set d m'", "have \"q0 ` G \\<subseteq> punit.dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  q0 ` G \\<subseteq> punit.dgrad_p_set d m0\n  punit.dgrad_p_set d m0 \\<subseteq> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. q0 ` G \\<subseteq> punit.dgrad_p_set d m'", "by (rule subset_trans)"], ["proof (state)\nthis:\n  q0 ` G \\<subseteq> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define mlt where \"mlt = (\\<lambda>q. ord_term_lin.Max (lt ` {q g \\<odot> g | g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}))\""], ["proof (state)\nthis:\n  mlt =\n  (\\<lambda>q.\n      ord_term_lin.Max\n       (lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}))\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define mnum where \"mnum = (\\<lambda>q. card {g\\<in>G. q g \\<odot> g \\<noteq> 0 \\<and> lt (q g \\<odot> g) = mlt q})\""], ["proof (state)\nthis:\n  mnum =\n  (\\<lambda>q.\n      card\n       {g \\<in> G.\n        q g \\<odot> g \\<noteq> 0 \\<and> lt (q g \\<odot> g) = mlt q})\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define rel where \"rel = (\\<lambda>q1 q2. mlt q1 \\<prec>\\<^sub>t mlt q2 \\<or> (mlt q1 = mlt q2 \\<and> mnum q1 < mnum q2))\""], ["proof (state)\nthis:\n  rel =\n  (\\<lambda>q1 q2.\n      mlt q1 \\<prec>\\<^sub>t mlt q2 \\<or>\n      mlt q1 = mlt q2 \\<and> mnum q1 < mnum q2)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define rel_dom where \"rel_dom = {q. q ` G \\<subseteq> punit.dgrad_p_set d m' \\<and> r = (\\<Sum>g\\<in>G. q g \\<odot> g)}\""], ["proof (state)\nthis:\n  rel_dom =\n  {q. q ` G \\<subseteq> punit.dgrad_p_set d m' \\<and>\n      r = (\\<Sum>g\\<in>G. q g \\<odot> g)}\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have mlt_in: \"mlt q \\<in> lt ` {q g \\<odot> g | g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}\" if \"q \\<in> rel_dom\" for q"], ["proof (prove)\ngoal (1 subgoal):\n 1. mlt q\n    \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "unfolding mlt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_term_lin.Max\n     (lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0})\n    \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "proof (rule ord_term_lin.Max_in, simp_all add: assms(3), rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "assume \"\\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0\""], ["proof (state)\nthis:\n  \\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "hence \"q g \\<odot> g = 0\" if \"g \\<in> G\" for g"], ["proof (prove)\nusing this:\n  \\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q g \\<odot> g = 0", "using that"], ["proof (prove)\nusing this:\n  \\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. q g \\<odot> g = 0", "by simp"], ["proof (state)\nthis:\n  ?g41 \\<in> G \\<Longrightarrow> q ?g41 \\<odot> ?g41 = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "with that"], ["proof (chain)\npicking this:\n  q \\<in> rel_dom\n  ?g41 \\<in> G \\<Longrightarrow> q ?g41 \\<odot> ?g41 = 0", "have \"r = 0\""], ["proof (prove)\nusing this:\n  q \\<in> rel_dom\n  ?g41 \\<in> G \\<Longrightarrow> q ?g41 \\<odot> ?g41 = 0\n\ngoal (1 subgoal):\n 1. r = 0", "by (simp add: rel_dom_def)"], ["proof (state)\nthis:\n  r = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "with \\<open>r \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  r \\<noteq> 0\n  r = 0", "show False"], ["proof (prove)\nusing this:\n  r \\<noteq> 0\n  r = 0\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?q41 \\<in> rel_dom \\<Longrightarrow>\n  mlt ?q41\n  \\<in> lt `\n        {?q41 g \\<odot> g |g. g \\<in> G \\<and> ?q41 g \\<odot> g \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have rel_dom_dgrad_set: \"pp_of_term ` mlt ` rel_dom \\<subseteq> dgrad_set d m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp_of_term ` mlt ` rel_dom \\<subseteq> dgrad_set d m'", "proof (rule subsetI, elim imageE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "fix q v t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "assume \"q \\<in> rel_dom\" and v: \"v = mlt q\" and t: \"t = pp_of_term v\""], ["proof (state)\nthis:\n  q \\<in> rel_dom\n  v = mlt q\n  t = pp_of_term v\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "from this(1)"], ["proof (chain)\npicking this:\n  q \\<in> rel_dom", "have \"v \\<in> lt ` {q g \\<odot> g | g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}\""], ["proof (prove)\nusing this:\n  q \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. v \\<in> lt `\n            {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "unfolding v"], ["proof (prove)\nusing this:\n  q \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. mlt q\n    \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "by (rule mlt_in)"], ["proof (state)\nthis:\n  v \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "then"], ["proof (chain)\npicking this:\n  v \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "obtain g where \"g \\<in> G\" and \"q g \\<odot> g \\<noteq> 0\" and v: \"v = lt (q g \\<odot> g)\""], ["proof (prove)\nusing this:\n  v \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; q g \\<odot> g \\<noteq> 0;\n         v = lt (q g \\<odot> g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n  q g \\<odot> g \\<noteq> 0\n  v = lt (q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "from this(2)"], ["proof (chain)\npicking this:\n  q g \\<odot> g \\<noteq> 0", "have \"q g \\<noteq> 0\" and \"g \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q g \\<noteq> 0 &&& g \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q g \\<noteq> 0\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "hence \"v = punit.lt (q g) \\<oplus> lt g\""], ["proof (prove)\nusing this:\n  q g \\<noteq> 0\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. v = punit.lt (q g) \\<oplus> lt g", "unfolding v"], ["proof (prove)\nusing this:\n  q g \\<noteq> 0\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) = punit.lt (q g) \\<oplus> lt g", "by (rule lt_mult_scalar)"], ["proof (state)\nthis:\n  v = punit.lt (q g) \\<oplus> lt g\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "hence \"t = punit.lt (q g) + lp g\""], ["proof (prove)\nusing this:\n  v = punit.lt (q g) \\<oplus> lt g\n\ngoal (1 subgoal):\n 1. t = punit.lt (q g) + lp g", "by (simp add: t pp_of_term_splus)"], ["proof (state)\nthis:\n  t = punit.lt (q g) + lp g\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "also"], ["proof (state)\nthis:\n  t = punit.lt (q g) + lp g\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "from assms(1)"], ["proof (chain)\npicking this:\n  dickson_grading d", "have \"d \\<dots> = ord_class.max (d (punit.lt (q g))) (d (lp g))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. d (punit.lt (q g) + lp g) =\n    ord_class.max (d (punit.lt (q g))) (d (lp g))", "by (rule dickson_gradingD1)"], ["proof (state)\nthis:\n  d (punit.lt (q g) + lp g) = ord_class.max (d (punit.lt (q g))) (d (lp g))\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "also"], ["proof (state)\nthis:\n  d (punit.lt (q g) + lp g) = ord_class.max (d (punit.lt (q g))) (d (lp g))\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "have \"\\<dots> \\<le> m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.max (d (punit.lt (q g))) (d (lp g)) \\<le> m'", "proof (rule max.boundedI)"], ["proof (state)\ngoal (2 subgoals):\n 1. d (punit.lt (q g)) \\<le> m'\n 2. d (lp g) \\<le> m'", "from \\<open>g \\<in> G\\<close> \\<open>q \\<in> rel_dom\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> G\n  q \\<in> rel_dom", "have \"q g \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  q \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. q g \\<in> punit.dgrad_p_set d m'", "by (auto simp: rel_dom_def)"], ["proof (state)\nthis:\n  q g \\<in> punit.dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. d (punit.lt (q g)) \\<le> m'\n 2. d (lp g) \\<le> m'", "moreover"], ["proof (state)\nthis:\n  q g \\<in> punit.dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. d (punit.lt (q g)) \\<le> m'\n 2. d (lp g) \\<le> m'", "from \\<open>q g \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q g \\<noteq> 0", "have \"punit.lt (q g) \\<in> keys (q g)\""], ["proof (prove)\nusing this:\n  q g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. punit.lt (q g) \\<in> keys (q g)", "by (rule punit.lt_in_keys)"], ["proof (state)\nthis:\n  punit.lt (q g) \\<in> keys (q g)\n\ngoal (2 subgoals):\n 1. d (punit.lt (q g)) \\<le> m'\n 2. d (lp g) \\<le> m'", "ultimately"], ["proof (chain)\npicking this:\n  q g \\<in> punit.dgrad_p_set d m'\n  punit.lt (q g) \\<in> keys (q g)", "show \"d (punit.lt (q g)) \\<le> m'\""], ["proof (prove)\nusing this:\n  q g \\<in> punit.dgrad_p_set d m'\n  punit.lt (q g) \\<in> keys (q g)\n\ngoal (1 subgoal):\n 1. d (punit.lt (q g)) \\<le> m'", "by (rule punit.dgrad_p_setD[simplified])"], ["proof (state)\nthis:\n  d (punit.lt (q g)) \\<le> m'\n\ngoal (1 subgoal):\n 1. d (lp g) \\<le> m'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d (lp g) \\<le> m'", "from \\<open>g \\<in> G\\<close> G_sub"], ["proof (chain)\npicking this:\n  g \\<in> G\n  G \\<subseteq> dgrad_p_set d m'", "have \"g \\<in> dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  G \\<subseteq> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. g \\<in> dgrad_p_set d m'", ".."], ["proof (state)\nthis:\n  g \\<in> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. d (lp g) \\<le> m'", "moreover"], ["proof (state)\nthis:\n  g \\<in> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. d (lp g) \\<le> m'", "from \\<open>g \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g \\<noteq> 0", "have \"lt g \\<in> keys g\""], ["proof (prove)\nusing this:\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt g \\<in> keys g", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt g \\<in> keys g\n\ngoal (1 subgoal):\n 1. d (lp g) \\<le> m'", "ultimately"], ["proof (chain)\npicking this:\n  g \\<in> dgrad_p_set d m'\n  lt g \\<in> keys g", "show \"d (lp g) \\<le> m'\""], ["proof (prove)\nusing this:\n  g \\<in> dgrad_p_set d m'\n  lt g \\<in> keys g\n\ngoal (1 subgoal):\n 1. d (lp g) \\<le> m'", "by (rule dgrad_p_setD)"], ["proof (state)\nthis:\n  d (lp g) \\<le> m'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ord_class.max (d (punit.lt (q g))) (d (lp g)) \\<le> m'\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = pp_of_term xa; xa = mlt xb; xb \\<in> rel_dom\\<rbrakk>\n       \\<Longrightarrow> x \\<in> dgrad_set d m'", "finally"], ["proof (chain)\npicking this:\n  d t \\<le> m'", "show \"t \\<in> dgrad_set d m'\""], ["proof (prove)\nusing this:\n  d t \\<le> m'\n\ngoal (1 subgoal):\n 1. t \\<in> dgrad_set d m'", "by (simp add: dgrad_set_def)"], ["proof (state)\nthis:\n  t \\<in> dgrad_set d m'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pp_of_term ` mlt ` rel_dom \\<subseteq> dgrad_set d m'\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "obtain q where \"q \\<in> rel_dom\" and q_min: \"\\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>q0 ` G \\<subseteq> punit.dgrad_p_set d m'\\<close>"], ["proof (chain)\npicking this:\n  q0 ` G \\<subseteq> punit.dgrad_p_set d m'", "have \"q0 \\<in> rel_dom\""], ["proof (prove)\nusing this:\n  q0 ` G \\<subseteq> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. q0 \\<in> rel_dom", "by (simp add: rel_dom_def r)"], ["proof (state)\nthis:\n  q0 \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"mlt q0 \\<in> mlt ` rel_dom\""], ["proof (prove)\nusing this:\n  q0 \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. mlt q0 \\<in> mlt ` rel_dom", "by (rule imageI)"], ["proof (state)\nthis:\n  mlt q0 \\<in> mlt ` rel_dom\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms(1)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  mlt q0 \\<in> mlt ` rel_dom", "obtain u where \"u \\<in> mlt ` rel_dom\" and u_min: \"\\<And>w. w \\<prec>\\<^sub>t u \\<Longrightarrow> w \\<notin> mlt ` rel_dom\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  mlt q0 \\<in> mlt ` rel_dom\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> mlt ` rel_dom;\n         \\<And>w.\n            w \\<prec>\\<^sub>t u \\<Longrightarrow>\n            w \\<notin> mlt ` rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using rel_dom_dgrad_set"], ["proof (prove)\nusing this:\n  dickson_grading d\n  mlt q0 \\<in> mlt ` rel_dom\n  pp_of_term ` mlt ` rel_dom \\<subseteq> dgrad_set d m'\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> mlt ` rel_dom;\n         \\<And>w.\n            w \\<prec>\\<^sub>t u \\<Longrightarrow>\n            w \\<notin> mlt ` rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule ord_term_minimum_dgrad_set) blast"], ["proof (state)\nthis:\n  u \\<in> mlt ` rel_dom\n  ?w41 \\<prec>\\<^sub>t u \\<Longrightarrow> ?w41 \\<notin> mlt ` rel_dom\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this(1)"], ["proof (chain)\npicking this:\n  u \\<in> mlt ` rel_dom", "obtain q' where \"q' \\<in> rel_dom\" and u: \"u = mlt q'\""], ["proof (prove)\nusing this:\n  u \\<in> mlt ` rel_dom\n\ngoal (1 subgoal):\n 1. (\\<And>q'.\n        \\<lbrakk>q' \\<in> rel_dom; u = mlt q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  q' \\<in> rel_dom\n  u = mlt q'\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"q' \\<in> rel_dom \\<inter> {q. mlt q = u}\" (is \"_ \\<in> ?A\")"], ["proof (prove)\nusing this:\n  q' \\<in> rel_dom\n  u = mlt q'\n\ngoal (1 subgoal):\n 1. q' \\<in> rel_dom \\<inter> {q. mlt q = u}", "by simp"], ["proof (state)\nthis:\n  q' \\<in> rel_dom \\<inter> {q. mlt q = u}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"mnum q' \\<in> mnum ` ?A\""], ["proof (prove)\nusing this:\n  q' \\<in> rel_dom \\<inter> {q. mlt q = u}\n\ngoal (1 subgoal):\n 1. mnum q' \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u})", "by (rule imageI)"], ["proof (state)\nthis:\n  mnum q' \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u})\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with wf[to_pred]"], ["proof (chain)\npicking this:\n  wfP (<)\n  mnum q' \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u})", "obtain k where \"k \\<in> mnum ` ?A\" and k_min: \"\\<And>l. l < k \\<Longrightarrow> l \\<notin> mnum ` ?A\""], ["proof (prove)\nusing this:\n  wfP (<)\n  mnum q' \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u})\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u});\n         \\<And>l.\n            l < k \\<Longrightarrow>\n            l \\<notin> mnum ` (rel_dom \\<inter> {q. mlt q = u})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule wfE_min[to_pred]) blast"], ["proof (state)\nthis:\n  k \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u})\n  ?l41 < k \\<Longrightarrow>\n  ?l41 \\<notin> mnum ` (rel_dom \\<inter> {q. mlt q = u})\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this(1)"], ["proof (chain)\npicking this:\n  k \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u})", "obtain q'' where \"q'' \\<in> rel_dom\" and mlt'': \"mlt q'' = u\" and k: \"k = mnum q''\""], ["proof (prove)\nusing this:\n  k \\<in> mnum ` (rel_dom \\<inter> {q. mlt q = u})\n\ngoal (1 subgoal):\n 1. (\\<And>q''.\n        \\<lbrakk>q'' \\<in> rel_dom; mlt q'' = u; k = mnum q''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q'' \\<in> rel_dom\n  mlt q'' = u\n  k = mnum q''\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> rel_dom;\n         \\<And>q'. rel q' q \\<Longrightarrow> q' \\<notin> rel_dom\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this(1)"], ["proof (chain)\npicking this:\n  q'' \\<in> rel_dom", "show ?thesis"], ["proof (prove)\nusing this:\n  q'' \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q'. rel q' q'' \\<Longrightarrow> q' \\<notin> rel_dom", "fix q0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q'. rel q' q'' \\<Longrightarrow> q' \\<notin> rel_dom", "assume \"rel q0 q''\""], ["proof (state)\nthis:\n  rel q0 q''\n\ngoal (1 subgoal):\n 1. \\<And>q'. rel q' q'' \\<Longrightarrow> q' \\<notin> rel_dom", "show \"q0 \\<notin> rel_dom\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q0 \\<notin> rel_dom", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. q0 \\<in> rel_dom \\<Longrightarrow> False", "assume \"q0 \\<in> rel_dom\""], ["proof (state)\nthis:\n  q0 \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. q0 \\<in> rel_dom \\<Longrightarrow> False", "from \\<open>rel q0 q''\\<close>"], ["proof (chain)\npicking this:\n  rel q0 q''", "show False"], ["proof (prove)\nusing this:\n  rel q0 q''\n\ngoal (1 subgoal):\n 1. False", "unfolding rel_def"], ["proof (prove)\nusing this:\n  mlt q0 \\<prec>\\<^sub>t mlt q'' \\<or>\n  mlt q0 = mlt q'' \\<and> mnum q0 < mnum q''\n\ngoal (1 subgoal):\n 1. False", "proof (elim disjE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. mlt q0 \\<prec>\\<^sub>t mlt q'' \\<Longrightarrow> False\n 2. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"mlt q0 \\<prec>\\<^sub>t mlt q''\""], ["proof (state)\nthis:\n  mlt q0 \\<prec>\\<^sub>t mlt q''\n\ngoal (2 subgoals):\n 1. mlt q0 \\<prec>\\<^sub>t mlt q'' \\<Longrightarrow> False\n 2. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "hence \"mlt q0 \\<notin> mlt ` rel_dom\""], ["proof (prove)\nusing this:\n  mlt q0 \\<prec>\\<^sub>t mlt q''\n\ngoal (1 subgoal):\n 1. mlt q0 \\<notin> mlt ` rel_dom", "unfolding mlt''"], ["proof (prove)\nusing this:\n  mlt q0 \\<prec>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. mlt q0 \\<notin> mlt ` rel_dom", "by (rule u_min)"], ["proof (state)\nthis:\n  mlt q0 \\<notin> mlt ` rel_dom\n\ngoal (2 subgoals):\n 1. mlt q0 \\<prec>\\<^sub>t mlt q'' \\<Longrightarrow> False\n 2. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  mlt q0 \\<notin> mlt ` rel_dom\n\ngoal (2 subgoals):\n 1. mlt q0 \\<prec>\\<^sub>t mlt q'' \\<Longrightarrow> False\n 2. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "from \\<open>q0 \\<in> rel_dom\\<close>"], ["proof (chain)\npicking this:\n  q0 \\<in> rel_dom", "have \"mlt q0 \\<in> mlt ` rel_dom\""], ["proof (prove)\nusing this:\n  q0 \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. mlt q0 \\<in> mlt ` rel_dom", "by (rule imageI)"], ["proof (state)\nthis:\n  mlt q0 \\<in> mlt ` rel_dom\n\ngoal (2 subgoals):\n 1. mlt q0 \\<prec>\\<^sub>t mlt q'' \\<Longrightarrow> False\n 2. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  mlt q0 \\<notin> mlt ` rel_dom\n  mlt q0 \\<in> mlt ` rel_dom", "show ?thesis"], ["proof (prove)\nusing this:\n  mlt q0 \\<notin> mlt ` rel_dom\n  mlt q0 \\<in> mlt ` rel_dom\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"mlt q0 = mlt q''\""], ["proof (state)\nthis:\n  mlt q0 = mlt q''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "with \\<open>q0 \\<in> rel_dom\\<close>"], ["proof (chain)\npicking this:\n  q0 \\<in> rel_dom\n  mlt q0 = mlt q''", "have \"q0 \\<in> ?A\""], ["proof (prove)\nusing this:\n  q0 \\<in> rel_dom\n  mlt q0 = mlt q''\n\ngoal (1 subgoal):\n 1. q0 \\<in> rel_dom \\<inter> {q. mlt q = u}", "by (simp add: mlt'')"], ["proof (state)\nthis:\n  q0 \\<in> rel_dom \\<inter> {q. mlt q = u}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"mnum q0 < mnum q''\""], ["proof (state)\nthis:\n  mnum q0 < mnum q''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "hence \"mnum q0 \\<notin> mnum ` ?A\""], ["proof (prove)\nusing this:\n  mnum q0 < mnum q''\n\ngoal (1 subgoal):\n 1. mnum q0 \\<notin> mnum ` (rel_dom \\<inter> {q. mlt q = u})", "unfolding k[symmetric]"], ["proof (prove)\nusing this:\n  mnum q0 < k\n\ngoal (1 subgoal):\n 1. mnum q0 \\<notin> mnum ` (rel_dom \\<inter> {q. mlt q = u})", "by (rule k_min)"], ["proof (state)\nthis:\n  mnum q0 \\<notin> mnum ` (rel_dom \\<inter> {q. mlt q = u})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mlt q0 = mlt q''; mnum q0 < mnum q''\\<rbrakk>\n    \\<Longrightarrow> False", "with \\<open>q0 \\<in> ?A\\<close>"], ["proof (chain)\npicking this:\n  q0 \\<in> rel_dom \\<inter> {q. mlt q = u}\n  mnum q0 \\<notin> mnum ` (rel_dom \\<inter> {q. mlt q = u})", "show ?thesis"], ["proof (prove)\nusing this:\n  q0 \\<in> rel_dom \\<inter> {q. mlt q = u}\n  mnum q0 \\<notin> mnum ` (rel_dom \\<inter> {q. mlt q = u})\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q0 \\<notin> rel_dom\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q \\<in> rel_dom\n  rel ?q'41 q \\<Longrightarrow> ?q'41 \\<notin> rel_dom\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from this(1)"], ["proof (chain)\npicking this:\n  q \\<in> rel_dom", "have q_in: \"\\<And>g. g \\<in> G \\<Longrightarrow> q g \\<in> punit.dgrad_p_set d m'\"\n    and r: \"r = (\\<Sum>g\\<in>G. q g \\<odot> g)\""], ["proof (prove)\nusing this:\n  q \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        g \\<in> G \\<Longrightarrow> q g \\<in> punit.dgrad_p_set d m') &&&\n    r = (\\<Sum>g\\<in>G. q g \\<odot> g)", "by (auto simp: rel_dom_def)"], ["proof (state)\nthis:\n  ?g41 \\<in> G \\<Longrightarrow> q ?g41 \\<in> punit.dgrad_p_set d m'\n  r = (\\<Sum>g\\<in>G. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define v where \"v = mlt q\""], ["proof (state)\nthis:\n  v = mlt q\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from \\<open>q \\<in> rel_dom\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> rel_dom", "have \"v \\<in> lt ` {q g \\<odot> g | g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}\""], ["proof (prove)\nusing this:\n  q \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. v \\<in> lt `\n            {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "unfolding v_def"], ["proof (prove)\nusing this:\n  q \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. mlt q\n    \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "by (rule mlt_in)"], ["proof (state)\nthis:\n  v \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}", "obtain g1 where \"g1 \\<in> G\" and \"q g1 \\<odot> g1 \\<noteq> 0\" and v1: \"v = lt (q g1 \\<odot> g1)\""], ["proof (prove)\nusing this:\n  v \\<in> lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<And>g1.\n        \\<lbrakk>g1 \\<in> G; q g1 \\<odot> g1 \\<noteq> 0;\n         v = lt (q g1 \\<odot> g1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g1 \\<in> G\n  q g1 \\<odot> g1 \\<noteq> 0\n  v = lt (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  g1 \\<in> G\n  q g1 \\<odot> g1 \\<noteq> 0\n  v = lt (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define M where \"M = {g\\<in>G. q g \\<odot> g \\<noteq> 0 \\<and> lt (q g \\<odot> g) = v}\""], ["proof (state)\nthis:\n  M = {g \\<in> G. q g \\<odot> g \\<noteq> 0 \\<and> lt (q g \\<odot> g) = v}\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  g1 \\<in> G\n  q g1 \\<odot> g1 \\<noteq> 0\n  v = lt (q g1 \\<odot> g1)\n  M = {g \\<in> G. q g \\<odot> g \\<noteq> 0 \\<and> lt (q g \\<odot> g) = v}", "have \"g1 \\<in> M\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n  q g1 \\<odot> g1 \\<noteq> 0\n  v = lt (q g1 \\<odot> g1)\n  M = {g \\<in> G. q g \\<odot> g \\<noteq> 0 \\<and> lt (q g \\<odot> g) = v}\n\ngoal (1 subgoal):\n 1. g1 \\<in> M", "by simp"], ["proof (state)\nthis:\n  g1 \\<in> M\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have v_max: \"lt (q g \\<odot> g) \\<prec>\\<^sub>t v\" if \"g \\<in> G\" and \"g \\<notin> M\" and \"q g \\<odot> g \\<noteq> 0\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "from that"], ["proof (chain)\npicking this:\n  g \\<in> G\n  g \\<notin> M\n  q g \\<odot> g \\<noteq> 0", "have \"lt (q g \\<odot> g) \\<noteq> v\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<notin> M\n  q g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<noteq> v", "by (auto simp: M_def)"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<noteq> v\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "moreover"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<noteq> v\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "have \"lt (q g \\<odot> g) \\<preceq>\\<^sub>t v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<preceq>\\<^sub>t v", "unfolding v_def mlt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<preceq>\\<^sub>t\n    ord_term_lin.Max\n     (lt ` {q g \\<odot> g |g. g \\<in> G \\<and> q g \\<odot> g \\<noteq> 0})", "by (rule ord_term_lin.Max_ge) (auto simp: assms(3) \\<open>q g \\<odot> g \\<noteq> 0\\<close> intro!: imageI \\<open>g \\<in> G\\<close>)"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "ultimately"], ["proof (chain)\npicking this:\n  lt (q g \\<odot> g) \\<noteq> v\n  lt (q g \\<odot> g) \\<preceq>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  lt (q g \\<odot> g) \\<noteq> v\n  lt (q g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "by simp"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g41 \\<in> G; ?g41 \\<notin> M;\n   q ?g41 \\<odot> ?g41 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> lt (q ?g41 \\<odot> ?g41) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from \\<open>q g1 \\<odot> g1 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q g1 \\<odot> g1 \\<noteq> 0", "have \"q g1 \\<noteq> 0\" and \"g1 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q g1 \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q g1 \\<noteq> 0 &&& g1 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q g1 \\<noteq> 0\n  g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "hence v1': \"v = punit.lt (q g1) \\<oplus> lt g1\""], ["proof (prove)\nusing this:\n  q g1 \\<noteq> 0\n  g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. v = punit.lt (q g1) \\<oplus> lt g1", "unfolding v1"], ["proof (prove)\nusing this:\n  q g1 \\<noteq> 0\n  g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q g1 \\<odot> g1) = punit.lt (q g1) \\<oplus> lt g1", "by (rule lt_mult_scalar)"], ["proof (state)\nthis:\n  v = punit.lt (q g1) \\<oplus> lt g1\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"M - {g1} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M - {g1} \\<noteq> {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "assume \"M - {g1} = {}\""], ["proof (state)\nthis:\n  M - {g1} = {}\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "have \"v \\<in> keys (q g1 \\<odot> g1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> keys (q g1 \\<odot> g1)", "unfolding v1"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q g1 \\<odot> g1) \\<in> keys (q g1 \\<odot> g1)", "using \\<open>q g1 \\<odot> g1 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  q g1 \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q g1 \\<odot> g1) \\<in> keys (q g1 \\<odot> g1)", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  v \\<in> keys (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  v \\<in> keys (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "have \"v \\<notin> keys (\\<Sum>g\\<in>G-{g1}. q g \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "assume \"v \\<in> keys (\\<Sum>g\\<in>G-{g1}. q g \\<odot> g)\""], ["proof (state)\nthis:\n  v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "have \"\\<dots> \\<subseteq> (\\<Union>g\\<in>G-{g1}. keys (q g \\<odot> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n    \\<subseteq> (\\<Union>g\\<in>G - {g1}. keys (q g \\<odot> g))", "by (fact keys_sum_subset)"], ["proof (state)\nthis:\n  keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n  \\<subseteq> (\\<Union>g\\<in>G - {g1}. keys (q g \\<odot> g))\n\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  v \\<in> (\\<Union>g\\<in>G - {g1}. keys (q g \\<odot> g))", "obtain g where \"g \\<in> G - {g1}\" and \"v \\<in> keys (q g \\<odot> g)\""], ["proof (prove)\nusing this:\n  v \\<in> (\\<Union>g\\<in>G - {g1}. keys (q g \\<odot> g))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G - {g1}; v \\<in> keys (q g \\<odot> g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  g \\<in> G - {g1}\n  v \\<in> keys (q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "from this(2)"], ["proof (chain)\npicking this:\n  v \\<in> keys (q g \\<odot> g)", "have \"q g \\<odot> g \\<noteq> 0\" and \"v \\<preceq>\\<^sub>t lt (q g \\<odot> g)\""], ["proof (prove)\nusing this:\n  v \\<in> keys (q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. q g \\<odot> g \\<noteq> 0 &&& v \\<preceq>\\<^sub>t lt (q g \\<odot> g)", "by (auto intro: lt_max_keys)"], ["proof (state)\nthis:\n  q g \\<odot> g \\<noteq> 0\n  v \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "from \\<open>g \\<in> G - {g1}\\<close> \\<open>M - {g1} = {}\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> G - {g1}\n  M - {g1} = {}", "have \"g \\<in> G\" and \"g \\<notin> M\""], ["proof (prove)\nusing this:\n  g \\<in> G - {g1}\n  M - {g1} = {}\n\ngoal (1 subgoal):\n 1. g \\<in> G &&& g \\<notin> M", "by blast+"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<notin> M\n\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "hence \"lt (q g \\<odot> g) \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<notin> M\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "by (rule v_max) fact"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. v \\<in> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) \\<Longrightarrow>\n    False", "with \\<open>v \\<preceq>\\<^sub>t _\\<close>"], ["proof (chain)\npicking this:\n  v \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "show False"], ["proof (prove)\nusing this:\n  v \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<notin> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  v \\<in> keys (q g1 \\<odot> g1)\n  v \\<notin> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)", "have \"v \\<in> keys (q g1 \\<odot> g1 + (\\<Sum>g\\<in>G-{g1}. q g \\<odot> g))\""], ["proof (prove)\nusing this:\n  v \\<in> keys (q g1 \\<odot> g1)\n  v \\<notin> keys (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. v \\<in> keys (q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g))", "by (rule in_keys_plusI1)"], ["proof (state)\nthis:\n  v \\<in> keys (q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g))\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  v \\<in> keys (q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g))\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "from \\<open>g1 \\<in> G\\<close> assms(3)"], ["proof (chain)\npicking this:\n  g1 \\<in> G\n  finite G", "have \"\\<dots> = keys r\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n  finite G\n\ngoal (1 subgoal):\n 1. keys (q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)) = keys r", "by (simp add: r sum.remove)"], ["proof (state)\nthis:\n  keys (q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)) = keys r\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  v \\<in> keys r", "have \"v \\<in> keys r\""], ["proof (prove)\nusing this:\n  v \\<in> keys r\n\ngoal (1 subgoal):\n 1. v \\<in> keys r", "."], ["proof (state)\nthis:\n  v \\<in> keys r\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "with \\<open>g1 \\<in> G\\<close> \\<open>g1 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<in> G\n  g1 \\<noteq> 0\n  v \\<in> keys r", "have \"is_red G r\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n  g1 \\<noteq> 0\n  v \\<in> keys r\n\ngoal (1 subgoal):\n 1. is_red G r", "by (rule is_red_addsI) (simp add: v1' term_simps)"], ["proof (state)\nthis:\n  is_red G r\n\ngoal (1 subgoal):\n 1. M - {g1} = {} \\<Longrightarrow> False", "with r_irred"], ["proof (chain)\npicking this:\n  \\<not> is_red G r\n  is_red G r", "show False"], ["proof (prove)\nusing this:\n  \\<not> is_red G r\n  is_red G r\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M - {g1} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  M - {g1} \\<noteq> {}", "obtain g2 where \"g2 \\<in> M\" and \"g1 \\<noteq> g2\""], ["proof (prove)\nusing this:\n  M - {g1} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>g2.\n        \\<lbrakk>g2 \\<in> M; g1 \\<noteq> g2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g2 \\<in> M\n  g1 \\<noteq> g2\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from this(1)"], ["proof (chain)\npicking this:\n  g2 \\<in> M", "have \"g2 \\<in> G\" and \"q g2 \\<odot> g2 \\<noteq> 0\" and v2: \"v = lt (q g2 \\<odot> g2)\""], ["proof (prove)\nusing this:\n  g2 \\<in> M\n\ngoal (1 subgoal):\n 1. g2 \\<in> G &&& q g2 \\<odot> g2 \\<noteq> 0 &&& v = lt (q g2 \\<odot> g2)", "by (simp_all add: M_def)"], ["proof (state)\nthis:\n  g2 \\<in> G\n  q g2 \\<odot> g2 \\<noteq> 0\n  v = lt (q g2 \\<odot> g2)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from this(2)"], ["proof (chain)\npicking this:\n  q g2 \\<odot> g2 \\<noteq> 0", "have \"q g2 \\<noteq> 0\" and \"g2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q g2 \\<odot> g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q g2 \\<noteq> 0 &&& g2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q g2 \\<noteq> 0\n  g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "hence v2': \"v = punit.lt (q g2) \\<oplus> lt g2\""], ["proof (prove)\nusing this:\n  q g2 \\<noteq> 0\n  g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. v = punit.lt (q g2) \\<oplus> lt g2", "unfolding v2"], ["proof (prove)\nusing this:\n  q g2 \\<noteq> 0\n  g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q g2 \\<odot> g2) = punit.lt (q g2) \\<oplus> lt g2", "by (rule lt_mult_scalar)"], ["proof (state)\nthis:\n  v = punit.lt (q g2) \\<oplus> lt g2\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "hence \"component_of_term (punit.lt (q g1) \\<oplus> lt g1) = component_of_term (punit.lt (q g2) \\<oplus> lt g2)\""], ["proof (prove)\nusing this:\n  v = punit.lt (q g2) \\<oplus> lt g2\n\ngoal (1 subgoal):\n 1. component_of_term (punit.lt (q g1) \\<oplus> lt g1) =\n    component_of_term (punit.lt (q g2) \\<oplus> lt g2)", "by (simp only: v1' flip: v2')"], ["proof (state)\nthis:\n  component_of_term (punit.lt (q g1) \\<oplus> lt g1) =\n  component_of_term (punit.lt (q g2) \\<oplus> lt g2)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "hence cmp_eq: \"component_of_term (lt g1) = component_of_term (lt g2)\""], ["proof (prove)\nusing this:\n  component_of_term (punit.lt (q g1) \\<oplus> lt g1) =\n  component_of_term (punit.lt (q g2) \\<oplus> lt g2)\n\ngoal (1 subgoal):\n 1. component_of_term (lt g1) = component_of_term (lt g2)", "by (simp add: term_simps)"], ["proof (state)\nthis:\n  component_of_term (lt g1) = component_of_term (lt g2)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"M \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> G", "by (simp add: M_def)"], ["proof (state)\nthis:\n  M \\<subseteq> G\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"r = q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)", "using assms(3) \\<open>g1 \\<in> G\\<close>"], ["proof (prove)\nusing this:\n  finite G\n  g1 \\<in> G\n\ngoal (1 subgoal):\n 1. r = q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)", "by (simp add: r sum.remove)"], ["proof (state)\nthis:\n  r = q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  r = q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"\\<dots> = q g1 \\<odot> g1 + q g2 \\<odot> g2 + (\\<Sum>g\\<in>G - {g1} - {g2}. q g \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) =\n    q g1 \\<odot> g1 + q g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1} - {g2}. q g \\<odot> g)", "using assms(3) \\<open>g2 \\<in> G\\<close> \\<open>g1 \\<noteq> g2\\<close>"], ["proof (prove)\nusing this:\n  finite G\n  g2 \\<in> G\n  g1 \\<noteq> g2\n\ngoal (1 subgoal):\n 1. q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) =\n    q g1 \\<odot> g1 + q g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1} - {g2}. q g \\<odot> g)", "by (metis (no_types, lifting) add.assoc finite_Diff insert_Diff insert_Diff_single insert_iff\n                sum.insert_remove)"], ["proof (state)\nthis:\n  q g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q g \\<odot> g) =\n  q g1 \\<odot> g1 + q g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  r =\n  q g1 \\<odot> g1 + q g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q g \\<odot> g)", "have r: \"r = q g1 \\<odot> g1 + q g2 \\<odot> g2 + (\\<Sum>g\\<in>G - {g1, g2}. q g \\<odot> g)\""], ["proof (prove)\nusing this:\n  r =\n  q g1 \\<odot> g1 + q g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. r =\n    q g1 \\<odot> g1 + q g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1, g2}. q g \\<odot> g)", "by (simp flip: Diff_insert2)"], ["proof (state)\nthis:\n  r =\n  q g1 \\<odot> g1 + q g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "let ?l = \"lcs (lp g1) (lp g2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "let ?v = \"term_of_pair (?l, component_of_term (lt g2))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"lp g1 adds lp (q g1 \\<odot> g1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp g1 adds lp (q g1 \\<odot> g1)", "by (simp add: v1' pp_of_term_splus flip: v1)"], ["proof (state)\nthis:\n  lp g1 adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  lp g1 adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"lp g2 adds lp (q g1 \\<odot> g1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp g2 adds lp (q g1 \\<odot> g1)", "by (simp add: v2' pp_of_term_splus flip: v1)"], ["proof (state)\nthis:\n  lp g2 adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  lp g1 adds lp (q g1 \\<odot> g1)\n  lp g2 adds lp (q g1 \\<odot> g1)", "have l_adds: \"?l adds lp (q g1 \\<odot> g1)\""], ["proof (prove)\nusing this:\n  lp g1 adds lp (q g1 \\<odot> g1)\n  lp g2 adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)", "by (rule lcs_adds)"], ["proof (state)\nthis:\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"spoly_rep d m G g1 g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly_rep d m G g1 g2", "proof (cases \"spoly g1 g2 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. spoly g1 g2 = 0 \\<Longrightarrow> spoly_rep d m G g1 g2\n 2. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "case True"], ["proof (state)\nthis:\n  spoly g1 g2 = 0\n\ngoal (2 subgoals):\n 1. spoly g1 g2 = 0 \\<Longrightarrow> spoly_rep d m G g1 g2\n 2. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "thus ?thesis"], ["proof (prove)\nusing this:\n  spoly g1 g2 = 0\n\ngoal (1 subgoal):\n 1. spoly_rep d m G g1 g2", "by (rule spoly_repI_zero)"], ["proof (state)\nthis:\n  spoly_rep d m G g1 g2\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "case False"], ["proof (state)\nthis:\n  spoly g1 g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. spoly g1 g2 \\<noteq> 0 \\<Longrightarrow> spoly_rep d m G g1 g2", "with \\<open>g1 \\<in> G\\<close> \\<open>g2 \\<in> G\\<close> \\<open>g1 \\<noteq> 0\\<close> \\<open>g2 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<in> G\n  g2 \\<in> G\n  g1 \\<noteq> 0\n  g2 \\<noteq> 0\n  spoly g1 g2 \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  g1 \\<in> G\n  g2 \\<in> G\n  g1 \\<noteq> 0\n  g2 \\<noteq> 0\n  spoly g1 g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. spoly_rep d m G g1 g2", "by (rule assms(4))"], ["proof (state)\nthis:\n  spoly_rep d m G g1 g2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spoly_rep d m G g1 g2\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  spoly_rep d m G g1 g2", "obtain q' where spoly: \"spoly g1 g2 = (\\<Sum>g\\<in>G. q' g \\<odot> g)\"\n    and \"\\<And>g. q' g \\<in> punit.dgrad_p_set d m\" and \"\\<And>g. q' g \\<odot> g \\<noteq> 0 \\<Longrightarrow> lt (q' g \\<odot> g) \\<prec>\\<^sub>t ?v\""], ["proof (prove)\nusing this:\n  spoly_rep d m G g1 g2\n\ngoal (1 subgoal):\n 1. (\\<And>q'.\n        \\<lbrakk>spoly g1 g2 = (\\<Sum>g\\<in>G. q' g \\<odot> g);\n         \\<And>g. q' g \\<in> punit.dgrad_p_set d m;\n         \\<And>g.\n            q' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n            lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n            term_of_pair\n             (lcs (lp g1) (lp g2), component_of_term (lt g2))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule spoly_repE) blast"], ["proof (state)\nthis:\n  spoly g1 g2 = (\\<Sum>g\\<in>G. q' g \\<odot> g)\n  q' ?g41 \\<in> punit.dgrad_p_set d m\n  q' ?g41 \\<odot> ?g41 \\<noteq> 0 \\<Longrightarrow>\n  lt (q' ?g41 \\<odot> ?g41) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "note this(2)"], ["proof (state)\nthis:\n  q' ?g41 \\<in> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  q' ?g41 \\<in> punit.dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"punit.dgrad_p_set d m \\<subseteq> punit.dgrad_p_set d m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.dgrad_p_set d m \\<subseteq> punit.dgrad_p_set d m'", "by (rule punit.dgrad_p_set_subset) (simp add: m'_def)"], ["proof (state)\nthis:\n  punit.dgrad_p_set d m \\<subseteq> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  q' ?g85 \\<in> punit.dgrad_p_set d m'", "have q'_in: \"\\<And>g. q' g \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  q' ?g85 \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<And>g. q' g \\<in> punit.dgrad_p_set d m'", "."], ["proof (state)\nthis:\n  q' ?g42 \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define mu where \"mu = monomial (lc (q g1 \\<odot> g1)) (lp (q g1 \\<odot> g1) - ?l)\""], ["proof (state)\nthis:\n  mu =\n  monomial (lc (q g1 \\<odot> g1))\n   (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2))\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define mu1 where \"mu1 = monomial (1 / lc g1) (?l - lp g1)\""], ["proof (state)\nthis:\n  mu1 = monomial ((1::'b) / lc g1) (lcs (lp g1) (lp g2) - lp g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define mu2 where \"mu2 = monomial (1 / lc g2) (?l - lp g2)\""], ["proof (state)\nthis:\n  mu2 = monomial ((1::'b) / lc g2) (lcs (lp g1) (lp g2) - lp g2)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define q'' where \"q'' = (\\<lambda>g. q g + mu * q' g)\n                              (g1:=punit.tail (q g1) + mu * q' g1, g2:=q g2 + mu * q' g2 + mu * mu2)\""], ["proof (state)\nthis:\n  q'' = (\\<lambda>g. q g + mu * q' g)\n  (g1 := punit.tail (q g1) + mu * q' g1, g2 := q g2 + mu * q' g2 + mu * mu2)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from \\<open>q g1 \\<odot> g1 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q g1 \\<odot> g1 \\<noteq> 0", "have \"mu \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q g1 \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mu \\<noteq> 0", "by (simp add: mu_def monomial_0_iff lc_eq_zero_iff)"], ["proof (state)\nthis:\n  mu \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from \\<open>g1 \\<noteq> 0\\<close> l_adds"], ["proof (chain)\npicking this:\n  g1 \\<noteq> 0\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)", "have mu_times_mu1: \"mu * mu1 = monomial (punit.lc (q g1)) (punit.lt (q g1))\""], ["proof (prove)\nusing this:\n  g1 \\<noteq> 0\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. mu * mu1 = monomial (punit.lc (q g1)) (punit.lt (q g1))", "by (simp add: mu_def mu1_def times_monomial_monomial lc_mult_scalar lc_eq_zero_iff\n              minus_plus_minus_cancel adds_lcs v1' pp_of_term_splus flip: v1)"], ["proof (state)\nthis:\n  mu * mu1 = monomial (punit.lc (q g1)) (punit.lt (q g1))\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from l_adds"], ["proof (chain)\npicking this:\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)", "have mu_times_mu2: \"mu * mu2 = monomial (lc (q g1 \\<odot> g1) / lc g2) (punit.lt (q g2))\""], ["proof (prove)\nusing this:\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. mu * mu2 = monomial (lc (q g1 \\<odot> g1) / lc g2) (punit.lt (q g2))", "by (simp add: mu_def mu2_def times_monomial_monomial lc_mult_scalar minus_plus_minus_cancel\n              adds_lcs_2 v2' pp_of_term_splus flip: v1)"], ["proof (state)\nthis:\n  mu * mu2 = monomial (lc (q g1 \\<odot> g1) / lc g2) (punit.lt (q g2))\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"mu1 \\<odot> g1 - mu2 \\<odot> g2 = spoly g1 g2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mu1 \\<odot> g1 - mu2 \\<odot> g2 = spoly g1 g2", "by (simp add: spoly_def Let_def cmp_eq lc_def mult_scalar_monomial mu1_def mu2_def)"], ["proof (state)\nthis:\n  mu1 \\<odot> g1 - mu2 \\<odot> g2 = spoly g1 g2\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  mu1 \\<odot> g1 - mu2 \\<odot> g2 = spoly g1 g2\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"\\<dots> = q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spoly g1 g2 = q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g)", "using assms(3) \\<open>g1 \\<in> G\\<close>"], ["proof (prove)\nusing this:\n  finite G\n  g1 \\<in> G\n\ngoal (1 subgoal):\n 1. spoly g1 g2 = q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g)", "by (simp add: spoly sum.remove)"], ["proof (state)\nthis:\n  spoly g1 g2 = q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  spoly g1 g2 = q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"\\<dots> = q' g1 \\<odot> g1 + q' g2 \\<odot> g2 + (\\<Sum>g\\<in>G - {g1} - {g2}. q' g \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g) =\n    q' g1 \\<odot> g1 + q' g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1} - {g2}. q' g \\<odot> g)", "using assms(3) \\<open>g2 \\<in> G\\<close> \\<open>g1 \\<noteq> g2\\<close>"], ["proof (prove)\nusing this:\n  finite G\n  g2 \\<in> G\n  g1 \\<noteq> g2\n\ngoal (1 subgoal):\n 1. q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g) =\n    q' g1 \\<odot> g1 + q' g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1} - {g2}. q' g \\<odot> g)", "by (metis (no_types, lifting) add.assoc finite_Diff insert_Diff insert_Diff_single insert_iff\n                sum.insert_remove)"], ["proof (state)\nthis:\n  q' g1 \\<odot> g1 + (\\<Sum>g\\<in>G - {g1}. q' g \\<odot> g) =\n  q' g1 \\<odot> g1 + q' g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  mu1 \\<odot> g1 - mu2 \\<odot> g2 =\n  q' g1 \\<odot> g1 + q' g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q' g \\<odot> g)", "have \"(q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 + (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g) = 0\""], ["proof (prove)\nusing this:\n  mu1 \\<odot> g1 - mu2 \\<odot> g2 =\n  q' g1 \\<odot> g1 + q' g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. (q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g) =\n    0", "by (simp add: algebra_simps flip: Diff_insert2)"], ["proof (state)\nthis:\n  (q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g) =\n  0\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "hence \"0 = mu \\<odot> ((q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 + (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g))\""], ["proof (prove)\nusing this:\n  (q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g) =\n  0\n\ngoal (1 subgoal):\n 1. 0 =\n    mu \\<odot>\n    ((q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n     (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g))", "by simp"], ["proof (state)\nthis:\n  0 =\n  mu \\<odot>\n  ((q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n   (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g))\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  0 =\n  mu \\<odot>\n  ((q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n   (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g))\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"\\<dots> = (mu * q' g1 - mu * mu1) \\<odot> g1 + (mu * q' g2 + mu * mu2) \\<odot> g2 +\n                    (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mu \\<odot>\n    ((q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n     (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g)) =\n    (mu * q' g1 - mu * mu1) \\<odot> g1 +\n    (mu * q' g2 + mu * mu2) \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)", "by (simp add: mult_scalar_distrib_left sum_mult_scalar_distrib_left distrib_left right_diff_distrib\n            flip: mult_scalar_assoc)"], ["proof (state)\nthis:\n  mu \\<odot>\n  ((q' g1 - mu1) \\<odot> g1 + (q' g2 + mu2) \\<odot> g2 +\n   (\\<Sum>g\\<in>G - {g1, g2}. q' g \\<odot> g)) =\n  (mu * q' g1 - mu * mu1) \\<odot> g1 + (mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  0 =\n  (mu * q' g1 - mu * mu1) \\<odot> g1 + (mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)", "have \"r = r + (mu * q' g1 - mu * mu1) \\<odot> g1 + (mu * q' g2 + mu * mu2) \\<odot> g2 +\n                          (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)\""], ["proof (prove)\nusing this:\n  0 =\n  (mu * q' g1 - mu * mu1) \\<odot> g1 + (mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. r =\n    r + (mu * q' g1 - mu * mu1) \\<odot> g1 +\n    (mu * q' g2 + mu * mu2) \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)", "by simp"], ["proof (state)\nthis:\n  r =\n  r + (mu * q' g1 - mu * mu1) \\<odot> g1 +\n  (mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  r =\n  r + (mu * q' g1 - mu * mu1) \\<odot> g1 +\n  (mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"\\<dots> = (q g1 - mu * mu1 + mu * q' g1) \\<odot> g1 + (q g2 + mu * q' g2 + mu * mu2) \\<odot> g2 +\n                    (\\<Sum>g\\<in>G - {g1, g2}. (q g + mu * q' g) \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r + (mu * q' g1 - mu * mu1) \\<odot> g1 +\n    (mu * q' g2 + mu * mu2) \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g) =\n    (q g1 - mu * mu1 + mu * q' g1) \\<odot> g1 +\n    (q g2 + mu * q' g2 + mu * mu2) \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1, g2}. (q g + mu * q' g) \\<odot> g)", "by (simp add: r algebra_simps flip: sum.distrib)"], ["proof (state)\nthis:\n  r + (mu * q' g1 - mu * mu1) \\<odot> g1 +\n  (mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g) =\n  (q g1 - mu * mu1 + mu * q' g1) \\<odot> g1 +\n  (q g2 + mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (q g + mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  r + (mu * q' g1 - mu * mu1) \\<odot> g1 +\n  (mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (mu * q' g) \\<odot> g) =\n  (q g1 - mu * mu1 + mu * q' g1) \\<odot> g1 +\n  (q g2 + mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (q g + mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"q g1 - mu * mu1 = punit.tail (q g1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q g1 - mu * mu1 = punit.tail (q g1)", "by (simp only: mu_times_mu1 punit.leading_monomial_tail diff_eq_eq add.commute[of \"punit.tail (q g1)\"])"], ["proof (state)\nthis:\n  q g1 - mu * mu1 = punit.tail (q g1)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  r =\n  (punit.tail (q g1) + mu * q' g1) \\<odot> g1 +\n  (q g2 + mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (q g + mu * q' g) \\<odot> g)", "have \"r = q'' g1 \\<odot> g1 + q'' g2 \\<odot> g2 + (\\<Sum>g\\<in>G - {g1} - {g2}. q'' g \\<odot> g)\""], ["proof (prove)\nusing this:\n  r =\n  (punit.tail (q g1) + mu * q' g1) \\<odot> g1 +\n  (q g2 + mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (q g + mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. r =\n    q'' g1 \\<odot> g1 + q'' g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1} - {g2}. q'' g \\<odot> g)", "using \\<open>g1 \\<noteq> g2\\<close>"], ["proof (prove)\nusing this:\n  r =\n  (punit.tail (q g1) + mu * q' g1) \\<odot> g1 +\n  (q g2 + mu * q' g2 + mu * mu2) \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1, g2}. (q g + mu * q' g) \\<odot> g)\n  g1 \\<noteq> g2\n\ngoal (1 subgoal):\n 1. r =\n    q'' g1 \\<odot> g1 + q'' g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1} - {g2}. q'' g \\<odot> g)", "by (simp add: q''_def flip: Diff_insert2)"], ["proof (state)\nthis:\n  r =\n  q'' g1 \\<odot> g1 + q'' g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  r =\n  q'' g1 \\<odot> g1 + q'' g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "from \\<open>finite G\\<close> \\<open>g1 \\<noteq> g2\\<close> \\<open>g1 \\<in> G\\<close> \\<open>g2 \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  finite G\n  g1 \\<noteq> g2\n  g1 \\<in> G\n  g2 \\<in> G", "have \"\\<dots> = (\\<Sum>g\\<in>G. q'' g \\<odot> g)\""], ["proof (prove)\nusing this:\n  finite G\n  g1 \\<noteq> g2\n  g1 \\<in> G\n  g2 \\<in> G\n\ngoal (1 subgoal):\n 1. q'' g1 \\<odot> g1 + q'' g2 \\<odot> g2 +\n    (\\<Sum>g\\<in>G - {g1} - {g2}. q'' g \\<odot> g) =\n    (\\<Sum>g\\<in>G. q'' g \\<odot> g)", "by (simp add: sum.remove) (metis (no_types, lifting) finite_Diff insert_Diff insert_iff sum.remove)"], ["proof (state)\nthis:\n  q'' g1 \\<odot> g1 + q'' g2 \\<odot> g2 +\n  (\\<Sum>g\\<in>G - {g1} - {g2}. q'' g \\<odot> g) =\n  (\\<Sum>g\\<in>G. q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  r = (\\<Sum>g\\<in>G. q'' g \\<odot> g)", "have r: \"r = (\\<Sum>g\\<in>G. q'' g \\<odot> g)\""], ["proof (prove)\nusing this:\n  r = (\\<Sum>g\\<in>G. q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. r = (\\<Sum>g\\<in>G. q'' g \\<odot> g)", "."], ["proof (state)\nthis:\n  r = (\\<Sum>g\\<in>G. q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have 1: \"lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v\" if \"(mu * q' g) \\<odot> g \\<noteq> 0\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "from that"], ["proof (chain)\npicking this:\n  (mu * q' g) \\<odot> g \\<noteq> 0", "have \"q' g \\<odot> g \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (mu * q' g) \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q' g \\<odot> g \\<noteq> 0", "by (auto simp: mult_scalar_assoc)"], ["proof (state)\nthis:\n  q' g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "hence *: \"lt (q' g \\<odot> g) \\<prec>\\<^sub>t ?v\""], ["proof (prove)\nusing this:\n  q' g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "by fact"], ["proof (state)\nthis:\n  lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "from \\<open>q' g \\<odot> g \\<noteq> 0\\<close> \\<open>mu \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q' g \\<odot> g \\<noteq> 0\n  mu \\<noteq> 0", "have \"lt ((mu * q' g) \\<odot> g) = (lp (q g1 \\<odot> g1) - ?l) \\<oplus> lt (q' g \\<odot> g)\""], ["proof (prove)\nusing this:\n  q' g \\<odot> g \\<noteq> 0\n  mu \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) =\n    (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n    lt (q' g \\<odot> g)", "by (simp add: mult_scalar_assoc lt_mult_scalar) (simp add: mu_def punit.lt_monomial monomial_0_iff)"], ["proof (state)\nthis:\n  lt ((mu * q' g) \\<odot> g) =\n  (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus> lt (q' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "also"], ["proof (state)\nthis:\n  lt ((mu * q' g) \\<odot> g) =\n  (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus> lt (q' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "from *"], ["proof (chain)\npicking this:\n  lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "have \"\\<dots> \\<prec>\\<^sub>t (lp (q g1 \\<odot> g1) - ?l) \\<oplus> ?v\""], ["proof (prove)\nusing this:\n  lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (1 subgoal):\n 1. (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n    lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n    (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))", "by (rule splus_mono_strict)"], ["proof (state)\nthis:\n  (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n  lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n  (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "also"], ["proof (state)\nthis:\n  (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n  lt (q' g \\<odot> g) \\<prec>\\<^sub>t\n  (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2))\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "from l_adds"], ["proof (chain)\npicking this:\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)", "have \"\\<dots> = v\""], ["proof (prove)\nusing this:\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n    term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2)) =\n    v", "by (simp add: splus_def minus_plus term_simps v1' flip: cmp_eq v1)"], ["proof (state)\nthis:\n  (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<oplus>\n  term_of_pair (lcs (lp g1) (lp g2), component_of_term (lt g2)) =\n  v\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "finally"], ["proof (chain)\npicking this:\n  lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "."], ["proof (state)\nthis:\n  lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (mu * q' ?g42) \\<odot> ?g42 \\<noteq> 0 \\<Longrightarrow>\n  lt ((mu * q' ?g42) \\<odot> ?g42) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have 2: \"lt (q'' g1 \\<odot> g1) \\<prec>\\<^sub>t v\" if \"q'' g1 \\<odot> g1 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g1 \\<odot> g1) \\<prec>\\<^sub>t v", "using that"], ["proof (prove)\nusing this:\n  q'' g1 \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q'' g1 \\<odot> g1) \\<prec>\\<^sub>t v", "proof (rule lt_less)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g1 \\<odot> g1) u = (0::'b)", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g1 \\<odot> g1) u = (0::'b)", "assume \"v \\<preceq>\\<^sub>t u\""], ["proof (state)\nthis:\n  v \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g1 \\<odot> g1) u = (0::'b)", "have \"u \\<notin> keys (q'' g1 \\<odot> g1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<notin> keys (q'' g1 \\<odot> g1)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g1 \\<odot> g1) \\<Longrightarrow> False", "assume \"u \\<in> keys (q'' g1 \\<odot> g1)\""], ["proof (state)\nthis:\n  u \\<in> keys (q'' g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g1 \\<odot> g1) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<in> keys (q'' g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g1 \\<odot> g1) \\<Longrightarrow> False", "from \\<open>g1 \\<noteq> g2\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<noteq> g2", "have \"\\<dots> = keys ((punit.tail (q g1) + mu * q' g1) \\<odot> g1)\""], ["proof (prove)\nusing this:\n  g1 \\<noteq> g2\n\ngoal (1 subgoal):\n 1. keys (q'' g1 \\<odot> g1) =\n    keys ((punit.tail (q g1) + mu * q' g1) \\<odot> g1)", "by (simp add: q''_def)"], ["proof (state)\nthis:\n  keys (q'' g1 \\<odot> g1) =\n  keys ((punit.tail (q g1) + mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g1 \\<odot> g1) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  keys (q'' g1 \\<odot> g1) =\n  keys ((punit.tail (q g1) + mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g1 \\<odot> g1) \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> keys (punit.tail (q g1) \\<odot> g1) \\<union> keys ((mu * q' g1) \\<odot> g1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys ((punit.tail (q g1) + mu * q' g1) \\<odot> g1)\n    \\<subseteq> keys (punit.tail (q g1) \\<odot> g1) \\<union>\n                keys ((mu * q' g1) \\<odot> g1)", "unfolding mult_scalar_distrib_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (punit.tail (q g1) \\<odot> g1 + (mu * q' g1) \\<odot> g1)\n    \\<subseteq> keys (punit.tail (q g1) \\<odot> g1) \\<union>\n                keys ((mu * q' g1) \\<odot> g1)", "by (fact Poly_Mapping.keys_add)"], ["proof (state)\nthis:\n  keys ((punit.tail (q g1) + mu * q' g1) \\<odot> g1)\n  \\<subseteq> keys (punit.tail (q g1) \\<odot> g1) \\<union>\n              keys ((mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g1 \\<odot> g1) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<union>\n          keys ((mu * q' g1) \\<odot> g1)", "show False"], ["proof (prove)\nusing this:\n  u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<union>\n          keys ((mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "assume \"u \\<in> keys (punit.tail (q g1) \\<odot> g1)\""], ["proof (state)\nthis:\n  u \\<in> keys (punit.tail (q g1) \\<odot> g1)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "hence \"u \\<preceq>\\<^sub>t lt (punit.tail (q g1) \\<odot> g1)\""], ["proof (prove)\nusing this:\n  u \\<in> keys (punit.tail (q g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t lt (punit.tail (q g1) \\<odot> g1)", "by (rule lt_max_keys)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt (punit.tail (q g1) \\<odot> g1)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt (punit.tail (q g1) \\<odot> g1)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "have \"\\<dots> \\<preceq>\\<^sub>t punit.lt (punit.tail (q g1)) \\<oplus> lt g1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (punit.tail (q g1) \\<odot> g1) \\<preceq>\\<^sub>t\n    punit.lt (punit.tail (q g1)) \\<oplus> lt g1", "by (metis in_keys_mult_scalar_le lt_def lt_in_keys min_term_min)"], ["proof (state)\nthis:\n  lt (punit.tail (q g1) \\<odot> g1) \\<preceq>\\<^sub>t\n  punit.lt (punit.tail (q g1)) \\<oplus> lt g1\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  lt (punit.tail (q g1) \\<odot> g1) \\<preceq>\\<^sub>t\n  punit.lt (punit.tail (q g1)) \\<oplus> lt g1\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "have \"\\<dots> \\<prec>\\<^sub>t punit.lt (q g1) \\<oplus> lt g1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.lt (punit.tail (q g1)) \\<oplus> lt g1 \\<prec>\\<^sub>t\n    punit.lt (q g1) \\<oplus> lt g1", "proof (intro splus_mono_strict_left punit.lt_tail notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. punit.tail (q g1) = 0 \\<Longrightarrow> False", "assume \"punit.tail (q g1) = 0\""], ["proof (state)\nthis:\n  punit.tail (q g1) = 0\n\ngoal (1 subgoal):\n 1. punit.tail (q g1) = 0 \\<Longrightarrow> False", "with \\<open>u \\<in> keys (punit.tail (q g1) \\<odot> g1)\\<close>"], ["proof (chain)\npicking this:\n  u \\<in> keys (punit.tail (q g1) \\<odot> g1)\n  punit.tail (q g1) = 0", "show False"], ["proof (prove)\nusing this:\n  u \\<in> keys (punit.tail (q g1) \\<odot> g1)\n  punit.tail (q g1) = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  punit.lt (punit.tail (q g1)) \\<oplus> lt g1 \\<prec>\\<^sub>t\n  punit.lt (q g1) \\<oplus> lt g1\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  punit.lt (punit.tail (q g1)) \\<oplus> lt g1 \\<prec>\\<^sub>t\n  punit.lt (q g1) \\<oplus> lt g1\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "have \"\\<dots> = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.lt (q g1) \\<oplus> lt g1 = v", "by (simp only: v1')"], ["proof (state)\nthis:\n  punit.lt (q g1) \\<oplus> lt g1 = v\n\ngoal (2 subgoals):\n 1. u \\<in> keys (punit.tail (q g1) \\<odot> g1) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<prec>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<preceq>\\<^sub>t u\\<close>"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n  v \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "assume \"u \\<in> keys ((mu * q' g1) \\<odot> g1)\""], ["proof (state)\nthis:\n  u \\<in> keys ((mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "hence \"(mu * q' g1) \\<odot> g1 \\<noteq> 0\" and \"u \\<preceq>\\<^sub>t lt ((mu * q' g1) \\<odot> g1)\""], ["proof (prove)\nusing this:\n  u \\<in> keys ((mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. (mu * q' g1) \\<odot> g1 \\<noteq> 0 &&&\n    u \\<preceq>\\<^sub>t lt ((mu * q' g1) \\<odot> g1)", "by (auto intro: lt_max_keys)"], ["proof (state)\nthis:\n  (mu * q' g1) \\<odot> g1 \\<noteq> 0\n  u \\<preceq>\\<^sub>t lt ((mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "note this(2)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g1) \\<odot> g1)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "from \\<open>(mu * q' g1) \\<odot> g1 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  (mu * q' g1) \\<odot> g1 \\<noteq> 0", "have \"lt ((mu * q' g1) \\<odot> g1) \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  (mu * q' g1) \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g1) \\<odot> g1) \\<prec>\\<^sub>t v", "by (rule 1)"], ["proof (state)\nthis:\n  lt ((mu * q' g1) \\<odot> g1) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g1) \\<odot> g1) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<prec>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<preceq>\\<^sub>t u\\<close>"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n  v \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<notin> keys (q'' g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g1 \\<odot> g1) u = (0::'b)", "thus \"lookup (q'' g1 \\<odot> g1) u = 0\""], ["proof (prove)\nusing this:\n  u \\<notin> keys (q'' g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. lookup (q'' g1 \\<odot> g1) u = (0::'b)", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  lookup (q'' g1 \\<odot> g1) u = (0::'b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n  lt (q'' g1 \\<odot> g1) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have 3: \"lt (q'' g2 \\<odot> g2) \\<preceq>\\<^sub>t v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g2 \\<odot> g2) \\<preceq>\\<^sub>t v", "proof (rule lt_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g2 \\<odot> g2) u = (0::'b)", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g2 \\<odot> g2) u = (0::'b)", "assume \"v \\<prec>\\<^sub>t u\""], ["proof (state)\nthis:\n  v \\<prec>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g2 \\<odot> g2) u = (0::'b)", "have \"u \\<notin> keys (q'' g2 \\<odot> g2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<notin> keys (q'' g2 \\<odot> g2)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g2 \\<odot> g2) \\<Longrightarrow> False", "assume \"u \\<in> keys (q'' g2 \\<odot> g2)\""], ["proof (state)\nthis:\n  u \\<in> keys (q'' g2 \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g2 \\<odot> g2) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<in> keys (q'' g2 \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g2 \\<odot> g2) \\<Longrightarrow> False", "have \"\\<dots> = keys ((q g2 + mu * q' g2 + mu * mu2) \\<odot> g2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (q'' g2 \\<odot> g2) =\n    keys ((q g2 + mu * q' g2 + mu * mu2) \\<odot> g2)", "by (simp add: q''_def)"], ["proof (state)\nthis:\n  keys (q'' g2 \\<odot> g2) =\n  keys ((q g2 + mu * q' g2 + mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g2 \\<odot> g2) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  keys (q'' g2 \\<odot> g2) =\n  keys ((q g2 + mu * q' g2 + mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g2 \\<odot> g2) \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<union> keys ((mu * mu2) \\<odot> g2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys ((q g2 + mu * q' g2 + mu * mu2) \\<odot> g2)\n    \\<subseteq> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<union>\n                keys ((mu * mu2) \\<odot> g2)", "unfolding mult_scalar_distrib_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2 + (mu * mu2) \\<odot> g2)\n    \\<subseteq> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<union>\n                keys ((mu * mu2) \\<odot> g2)", "by (fact Poly_Mapping.keys_add)"], ["proof (state)\nthis:\n  keys ((q g2 + mu * q' g2 + mu * mu2) \\<odot> g2)\n  \\<subseteq> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<union>\n              keys ((mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g2 \\<odot> g2) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<in> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<union>\n          keys ((mu * mu2) \\<odot> g2)", "show False"], ["proof (prove)\nusing this:\n  u \\<in> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<union>\n          keys ((mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<in> keys\n             (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<Longrightarrow>\n    False\n 2. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "assume \"u \\<in> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2)\""], ["proof (state)\nthis:\n  u \\<in> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2)\n\ngoal (2 subgoals):\n 1. u \\<in> keys\n             (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<Longrightarrow>\n    False\n 2. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<in> keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2)\n\ngoal (2 subgoals):\n 1. u \\<in> keys\n             (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<Longrightarrow>\n    False\n 2. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> keys (q g2 \\<odot> g2) \\<union> keys ((mu * q' g2) \\<odot> g2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2)\n    \\<subseteq> keys (q g2 \\<odot> g2) \\<union>\n                keys ((mu * q' g2) \\<odot> g2)", "by (fact Poly_Mapping.keys_add)"], ["proof (state)\nthis:\n  keys (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2)\n  \\<subseteq> keys (q g2 \\<odot> g2) \\<union> keys ((mu * q' g2) \\<odot> g2)\n\ngoal (2 subgoals):\n 1. u \\<in> keys\n             (q g2 \\<odot> g2 + (mu * q' g2) \\<odot> g2) \\<Longrightarrow>\n    False\n 2. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<in> keys (q g2 \\<odot> g2) \\<union> keys ((mu * q' g2) \\<odot> g2)", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<in> keys (q g2 \\<odot> g2) \\<union> keys ((mu * q' g2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<in> keys (q g2 \\<odot> g2) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "assume \"u \\<in> keys (q g2 \\<odot> g2)\""], ["proof (state)\nthis:\n  u \\<in> keys (q g2 \\<odot> g2)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g2 \\<odot> g2) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "hence \"u \\<preceq>\\<^sub>t lt (q g2 \\<odot> g2)\""], ["proof (prove)\nusing this:\n  u \\<in> keys (q g2 \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t lt (q g2 \\<odot> g2)", "by (rule lt_max_keys)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt (q g2 \\<odot> g2)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g2 \\<odot> g2) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "with \\<open>v \\<prec>\\<^sub>t u\\<close>"], ["proof (chain)\npicking this:\n  v \\<prec>\\<^sub>t u\n  u \\<preceq>\\<^sub>t lt (q g2 \\<odot> g2)", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<prec>\\<^sub>t u\n  u \\<preceq>\\<^sub>t lt (q g2 \\<odot> g2)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: v2)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "assume \"u \\<in> keys ((mu * q' g2) \\<odot> g2)\""], ["proof (state)\nthis:\n  u \\<in> keys ((mu * q' g2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "hence \"(mu * q' g2) \\<odot> g2 \\<noteq> 0\" and \"u \\<preceq>\\<^sub>t lt ((mu * q' g2) \\<odot> g2)\""], ["proof (prove)\nusing this:\n  u \\<in> keys ((mu * q' g2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. (mu * q' g2) \\<odot> g2 \\<noteq> 0 &&&\n    u \\<preceq>\\<^sub>t lt ((mu * q' g2) \\<odot> g2)", "by (auto intro: lt_max_keys)"], ["proof (state)\nthis:\n  (mu * q' g2) \\<odot> g2 \\<noteq> 0\n  u \\<preceq>\\<^sub>t lt ((mu * q' g2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "note this(2)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "from \\<open>(mu * q' g2) \\<odot> g2 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  (mu * q' g2) \\<odot> g2 \\<noteq> 0", "have \"lt ((mu * q' g2) \\<odot> g2) \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  (mu * q' g2) \\<odot> g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g2) \\<odot> g2) \\<prec>\\<^sub>t v", "by (rule 1)"], ["proof (state)\nthis:\n  lt ((mu * q' g2) \\<odot> g2) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g2) \\<odot> g2) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<prec>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<prec>\\<^sub>t u\\<close>"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n  v \\<prec>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "assume \"u \\<in> keys ((mu * mu2) \\<odot> g2)\""], ["proof (state)\nthis:\n  u \\<in> keys ((mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "hence \"(mu * mu2) \\<odot> g2 \\<noteq> 0\" and \"u \\<preceq>\\<^sub>t lt ((mu * mu2) \\<odot> g2)\""], ["proof (prove)\nusing this:\n  u \\<in> keys ((mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. (mu * mu2) \\<odot> g2 \\<noteq> 0 &&&\n    u \\<preceq>\\<^sub>t lt ((mu * mu2) \\<odot> g2)", "by (auto intro: lt_max_keys)"], ["proof (state)\nthis:\n  (mu * mu2) \\<odot> g2 \\<noteq> 0\n  u \\<preceq>\\<^sub>t lt ((mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "from this(1)"], ["proof (chain)\npicking this:\n  (mu * mu2) \\<odot> g2 \\<noteq> 0", "have \"(mu * mu2) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (mu * mu2) \\<odot> g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. mu * mu2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  mu * mu2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "note \\<open>u \\<preceq>\\<^sub>t _\\<close>"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * mu2) \\<odot> g2)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "from \\<open>mu * mu2 \\<noteq> 0\\<close> \\<open>g2 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  mu * mu2 \\<noteq> 0\n  g2 \\<noteq> 0", "have \"lt ((mu * mu2) \\<odot> g2) = punit.lt (q g2) \\<oplus> lt g2\""], ["proof (prove)\nusing this:\n  mu * mu2 \\<noteq> 0\n  g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt ((mu * mu2) \\<odot> g2) = punit.lt (q g2) \\<oplus> lt g2", "by (simp add: lt_mult_scalar) (simp add: mu_times_mu2 punit.lt_monomial monomial_0_iff)"], ["proof (state)\nthis:\n  lt ((mu * mu2) \\<odot> g2) = punit.lt (q g2) \\<oplus> lt g2\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * mu2) \\<odot> g2) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<preceq>\\<^sub>t punit.lt (q g2) \\<oplus> lt g2", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<preceq>\\<^sub>t punit.lt (q g2) \\<oplus> lt g2\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<prec>\\<^sub>t u\\<close>"], ["proof (prove)\nusing this:\n  u \\<preceq>\\<^sub>t punit.lt (q g2) \\<oplus> lt g2\n  v \\<prec>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. False", "by (simp add: v2')"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<notin> keys (q'' g2 \\<odot> g2)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g2 \\<odot> g2) u = (0::'b)", "thus \"lookup (q'' g2 \\<odot> g2) u = 0\""], ["proof (prove)\nusing this:\n  u \\<notin> keys (q'' g2 \\<odot> g2)\n\ngoal (1 subgoal):\n 1. lookup (q'' g2 \\<odot> g2) u = (0::'b)", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  lookup (q'' g2 \\<odot> g2) u = (0::'b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lt (q'' g2 \\<odot> g2) \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have 4: \"lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\" if \"g \\<in> M\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "proof (cases \"g \\<in> {g1, g2}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<in> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n 2. g \\<notin> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "case True"], ["proof (state)\nthis:\n  g \\<in> {g1, g2}\n\ngoal (2 subgoals):\n 1. g \\<in> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n 2. g \\<notin> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "hence \"g = g1 \\<or> g = g2\""], ["proof (prove)\nusing this:\n  g \\<in> {g1, g2}\n\ngoal (1 subgoal):\n 1. g = g1 \\<or> g = g2", "by simp"], ["proof (state)\nthis:\n  g = g1 \\<or> g = g2\n\ngoal (2 subgoals):\n 1. g \\<in> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n 2. g \\<notin> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "thus ?thesis"], ["proof (prove)\nusing this:\n  g = g1 \\<or> g = g2\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. g = g1 \\<Longrightarrow> lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n 2. g = g2 \\<Longrightarrow> lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "assume \"g = g1\""], ["proof (state)\nthis:\n  g = g1\n\ngoal (2 subgoals):\n 1. g = g1 \\<Longrightarrow> lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n 2. g = g2 \\<Longrightarrow> lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "proof (cases \"q'' g1 \\<odot> g1 = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q'' g1 \\<odot> g1 = 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n 2. q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "case True"], ["proof (state)\nthis:\n  q'' g1 \\<odot> g1 = 0\n\ngoal (2 subgoals):\n 1. q'' g1 \\<odot> g1 = 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n 2. q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "thus ?thesis"], ["proof (prove)\nusing this:\n  q'' g1 \\<odot> g1 = 0\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "by (simp add: \\<open>g = g1\\<close> min_term_min)"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "case False"], ["proof (state)\nthis:\n  q'' g1 \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "hence \"lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  q'' g1 \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v", "unfolding \\<open>g = g1\\<close>"], ["proof (prove)\nusing this:\n  q'' g1 \\<odot> g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q'' g1 \\<odot> g1) \\<prec>\\<^sub>t v", "by (rule 2)"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "thus ?thesis"], ["proof (prove)\nusing this:\n  lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "by simp"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. g = g2 \\<Longrightarrow> lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g = g2 \\<Longrightarrow> lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "assume \"g = g2\""], ["proof (state)\nthis:\n  g = g2\n\ngoal (1 subgoal):\n 1. g = g2 \\<Longrightarrow> lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "with 3"], ["proof (chain)\npicking this:\n  lt (q'' g2 \\<odot> g2) \\<preceq>\\<^sub>t v\n  g = g2", "show ?thesis"], ["proof (prove)\nusing this:\n  lt (q'' g2 \\<odot> g2) \\<preceq>\\<^sub>t v\n  g = g2\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "by simp"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. g \\<notin> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<notin> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "case False"], ["proof (state)\nthis:\n  g \\<notin> {g1, g2}\n\ngoal (1 subgoal):\n 1. g \\<notin> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "hence q'': \"q'' g = q g + mu * q' g\""], ["proof (prove)\nusing this:\n  g \\<notin> {g1, g2}\n\ngoal (1 subgoal):\n 1. q'' g = q g + mu * q' g", "by (simp add: q''_def)"], ["proof (state)\nthis:\n  q'' g = q g + mu * q' g\n\ngoal (1 subgoal):\n 1. g \\<notin> {g1, g2} \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "proof (rule lt_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "assume \"v \\<prec>\\<^sub>t u\""], ["proof (state)\nthis:\n  v \\<prec>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "have \"u \\<notin> keys (q'' g \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<notin> keys (q'' g \\<odot> g)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "assume \"u \\<in> keys (q'' g \\<odot> g)\""], ["proof (state)\nthis:\n  u \\<in> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<in> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (q'' g \\<odot> g)\n    \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)", "unfolding q'' mult_scalar_distrib_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (q g \\<odot> g + (mu * q' g) \\<odot> g)\n    \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)", "by (fact Poly_Mapping.keys_add)"], ["proof (state)\nthis:\n  keys (q'' g \\<odot> g)\n  \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<in> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)", "show False"], ["proof (prove)\nusing this:\n  u \\<in> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "assume \"u \\<in> keys (q g \\<odot> g)\""], ["proof (state)\nthis:\n  u \\<in> keys (q g \\<odot> g)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "hence \"u \\<preceq>\\<^sub>t lt (q g \\<odot> g)\""], ["proof (prove)\nusing this:\n  u \\<in> keys (q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t lt (q g \\<odot> g)", "by (rule lt_max_keys)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "with \\<open>g \\<in> M\\<close> \\<open>v \\<prec>\\<^sub>t u\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> M\n  v \\<prec>\\<^sub>t u\n  u \\<preceq>\\<^sub>t lt (q g \\<odot> g)", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> M\n  v \\<prec>\\<^sub>t u\n  u \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: M_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "assume \"u \\<in> keys ((mu * q' g) \\<odot> g)\""], ["proof (state)\nthis:\n  u \\<in> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "hence \"(mu * q' g) \\<odot> g \\<noteq> 0\" and \"u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\""], ["proof (prove)\nusing this:\n  u \\<in> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. (mu * q' g) \\<odot> g \\<noteq> 0 &&&\n    u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)", "by (auto intro: lt_max_keys)"], ["proof (state)\nthis:\n  (mu * q' g) \\<odot> g \\<noteq> 0\n  u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "note this(2)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "from \\<open>(mu * q' g) \\<odot> g \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  (mu * q' g) \\<odot> g \\<noteq> 0", "have \"lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  (mu * q' g) \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "by (rule 1)"], ["proof (state)\nthis:\n  lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<prec>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<prec>\\<^sub>t u\\<close>"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n  v \\<prec>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<notin> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<prec>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "thus \"lookup (q'' g \\<odot> g) u = 0\""], ["proof (prove)\nusing this:\n  u \\<notin> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. lookup (q'' g \\<odot> g) u = (0::'b)", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  lookup (q'' g \\<odot> g) u = (0::'b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?g42 \\<in> M \\<Longrightarrow>\n  lt (q'' ?g42 \\<odot> ?g42) \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have 5: \"lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v\" if \"g \\<in> G\" and \"g \\<notin> M\" and \"q'' g \\<odot> g \\<noteq> 0\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v", "using that(3)"], ["proof (prove)\nusing this:\n  q'' g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v", "proof (rule lt_less)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "assume \"v \\<preceq>\\<^sub>t u\""], ["proof (state)\nthis:\n  v \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "from that(2) \\<open>g1 \\<in> M\\<close> \\<open>g2 \\<in> M\\<close>"], ["proof (chain)\npicking this:\n  g \\<notin> M\n  g1 \\<in> M\n  g2 \\<in> M", "have \"g \\<noteq> g1\" and \"g \\<noteq> g2\""], ["proof (prove)\nusing this:\n  g \\<notin> M\n  g1 \\<in> M\n  g2 \\<in> M\n\ngoal (1 subgoal):\n 1. g \\<noteq> g1 &&& g \\<noteq> g2", "by blast+"], ["proof (state)\nthis:\n  g \\<noteq> g1\n  g \\<noteq> g2\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "hence q'': \"q'' g = q g + mu * q' g\""], ["proof (prove)\nusing this:\n  g \\<noteq> g1\n  g \\<noteq> g2\n\ngoal (1 subgoal):\n 1. q'' g = q g + mu * q' g", "by (simp add: q''_def)"], ["proof (state)\nthis:\n  q'' g = q g + mu * q' g\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "have \"u \\<notin> keys (q'' g \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<notin> keys (q'' g \\<odot> g)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "assume \"u \\<in> keys (q'' g \\<odot> g)\""], ["proof (state)\nthis:\n  u \\<in> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<in> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (q'' g \\<odot> g)\n    \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)", "unfolding q'' mult_scalar_distrib_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. keys (q g \\<odot> g + (mu * q' g) \\<odot> g)\n    \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)", "by (fact Poly_Mapping.keys_add)"], ["proof (state)\nthis:\n  keys (q'' g \\<odot> g)\n  \\<subseteq> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys (q'' g \\<odot> g) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<in> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)", "show False"], ["proof (prove)\nusing this:\n  u \\<in> keys (q g \\<odot> g) \\<union> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "assume \"u \\<in> keys (q g \\<odot> g)\""], ["proof (state)\nthis:\n  u \\<in> keys (q g \\<odot> g)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "hence \"q g \\<odot> g \\<noteq> 0\" and \"u \\<preceq>\\<^sub>t lt (q g \\<odot> g)\""], ["proof (prove)\nusing this:\n  u \\<in> keys (q g \\<odot> g)\n\ngoal (1 subgoal):\n 1. q g \\<odot> g \\<noteq> 0 &&& u \\<preceq>\\<^sub>t lt (q g \\<odot> g)", "by (auto intro: lt_max_keys)"], ["proof (state)\nthis:\n  q g \\<odot> g \\<noteq> 0\n  u \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "note this(2)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt (q g \\<odot> g)\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "from that(1, 2) \\<open>q g \\<odot> g \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> G\n  g \\<notin> M\n  q g \\<odot> g \\<noteq> 0", "have \"\\<dots> \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<notin> M\n  q g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q g \\<odot> g) \\<prec>\\<^sub>t v", "by (rule v_max)"], ["proof (state)\nthis:\n  lt (q g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (2 subgoals):\n 1. u \\<in> keys (q g \\<odot> g) \\<Longrightarrow> False\n 2. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<prec>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<preceq>\\<^sub>t u\\<close>"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n  v \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "assume \"u \\<in> keys ((mu * q' g) \\<odot> g)\""], ["proof (state)\nthis:\n  u \\<in> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "hence \"(mu * q' g) \\<odot> g \\<noteq> 0\" and \"u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\""], ["proof (prove)\nusing this:\n  u \\<in> keys ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. (mu * q' g) \\<odot> g \\<noteq> 0 &&&\n    u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)", "by (auto intro: lt_max_keys)"], ["proof (state)\nthis:\n  (mu * q' g) \\<odot> g \\<noteq> 0\n  u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "note this(2)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t lt ((mu * q' g) \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "from \\<open>(mu * q' g) \\<odot> g \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  (mu * q' g) \\<odot> g \\<noteq> 0", "have \"lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  (mu * q' g) \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v", "by (rule 1)"], ["proof (state)\nthis:\n  lt ((mu * q' g) \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. u \\<in> keys ((mu * q' g) \\<odot> g) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u \\<prec>\\<^sub>t v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<preceq>\\<^sub>t u\\<close>"], ["proof (prove)\nusing this:\n  u \\<prec>\\<^sub>t v\n  v \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<notin> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       v \\<preceq>\\<^sub>t u \\<Longrightarrow>\n       lookup (q'' g \\<odot> g) u = (0::'b)", "thus \"lookup (q'' g \\<odot> g) u = 0\""], ["proof (prove)\nusing this:\n  u \\<notin> keys (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. lookup (q'' g \\<odot> g) u = (0::'b)", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  lookup (q'' g \\<odot> g) u = (0::'b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?g42 \\<in> G; ?g42 \\<notin> M;\n   q'' ?g42 \\<odot> ?g42 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> lt (q'' ?g42 \\<odot> ?g42) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "define u where \"u = mlt q''\""], ["proof (state)\nthis:\n  u = mlt q''\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have u_in: \"u \\<in> lt ` {q'' g \\<odot> g | g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> lt `\n            {q'' g \\<odot> g |g.\n             g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0}", "unfolding u_def mlt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_term_lin.Max\n     (lt `\n      {q'' g \\<odot> g |g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0})\n    \\<in> lt `\n          {q'' g \\<odot> g |g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0}", "proof (rule ord_term_lin.Max_in, simp_all add: assms(3), rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>g.\n       g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "assume \"\\<nexists>g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0\""], ["proof (state)\nthis:\n  \\<nexists>g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<nexists>g.\n       g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "hence \"q'' g \\<odot> g = 0\" if \"g \\<in> G\" for g"], ["proof (prove)\nusing this:\n  \\<nexists>g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q'' g \\<odot> g = 0", "using that"], ["proof (prove)\nusing this:\n  \\<nexists>g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. q'' g \\<odot> g = 0", "by simp"], ["proof (state)\nthis:\n  ?g42 \\<in> G \\<Longrightarrow> q'' ?g42 \\<odot> ?g42 = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>g.\n       g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "hence \"r = 0\""], ["proof (prove)\nusing this:\n  ?g42 \\<in> G \\<Longrightarrow> q'' ?g42 \\<odot> ?g42 = 0\n\ngoal (1 subgoal):\n 1. r = 0", "by (simp add: r)"], ["proof (state)\nthis:\n  r = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>g.\n       g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    False", "with \\<open>r \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  r \\<noteq> 0\n  r = 0", "show False"], ["proof (prove)\nusing this:\n  r \\<noteq> 0\n  r = 0\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<in> lt `\n          {q'' g \\<odot> g |g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have u_max: \"lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u\" if \"g \\<in> G\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "proof (cases \"q'' g \\<odot> g = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q'' g \\<odot> g = 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u\n 2. q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "case True"], ["proof (state)\nthis:\n  q'' g \\<odot> g = 0\n\ngoal (2 subgoals):\n 1. q'' g \\<odot> g = 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u\n 2. q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "thus ?thesis"], ["proof (prove)\nusing this:\n  q'' g \\<odot> g = 0\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "by (simp add: min_term_min)"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "case False"], ["proof (state)\nthis:\n  q'' g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q'' g \\<odot> g \\<noteq> 0 \\<Longrightarrow>\n    lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u", "unfolding u_def mlt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t\n    ord_term_lin.Max\n     (lt `\n      {q'' g \\<odot> g |g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0})", "by (rule ord_term_lin.Max_ge) (auto simp: assms(3) False intro!: imageI \\<open>g \\<in> G\\<close>)"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?g42 \\<in> G \\<Longrightarrow>\n  lt (q'' ?g42 \\<odot> ?g42) \\<preceq>\\<^sub>t u\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"q'' \\<in> rel_dom\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q'' \\<in> rel_dom", "proof (simp add: rel_dom_def r, intro subsetI, elim imageE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "assume \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "from assms(1) l_adds"], ["proof (chain)\npicking this:\n  dickson_grading d\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)", "have \"d (lp (q g1 \\<odot> g1) - ?l) \\<le> d (lp (q g1 \\<odot> g1))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  lcs (lp g1) (lp g2) adds lp (q g1 \\<odot> g1)\n\ngoal (1 subgoal):\n 1. d (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2))\n    \\<le> d (lp (q g1 \\<odot> g1))", "by (rule dickson_grading_minus)"], ["proof (state)\nthis:\n  d (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2))\n  \\<le> d (lp (q g1 \\<odot> g1))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "also"], ["proof (state)\nthis:\n  d (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2))\n  \\<le> d (lp (q g1 \\<odot> g1))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "have \"\\<dots> = d (punit.lt (q g1) + lp g1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (lp (q g1 \\<odot> g1)) = d (punit.lt (q g1) + lp g1)", "by (simp add: v1' term_simps flip: v1)"], ["proof (state)\nthis:\n  d (lp (q g1 \\<odot> g1)) = d (punit.lt (q g1) + lp g1)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "also"], ["proof (state)\nthis:\n  d (lp (q g1 \\<odot> g1)) = d (punit.lt (q g1) + lp g1)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "from assms(1)"], ["proof (chain)\npicking this:\n  dickson_grading d", "have \"\\<dots> = ord_class.max (d (punit.lt (q g1))) (d (lp g1))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. d (punit.lt (q g1) + lp g1) =\n    ord_class.max (d (punit.lt (q g1))) (d (lp g1))", "by (rule dickson_gradingD1)"], ["proof (state)\nthis:\n  d (punit.lt (q g1) + lp g1) =\n  ord_class.max (d (punit.lt (q g1))) (d (lp g1))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "also"], ["proof (state)\nthis:\n  d (punit.lt (q g1) + lp g1) =\n  ord_class.max (d (punit.lt (q g1))) (d (lp g1))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "have \"\\<dots> \\<le> m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.max (d (punit.lt (q g1))) (d (lp g1)) \\<le> m'", "proof (rule max.boundedI)"], ["proof (state)\ngoal (2 subgoals):\n 1. d (punit.lt (q g1)) \\<le> m'\n 2. d (lp g1) \\<le> m'", "from \\<open>g1 \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<in> G", "have \"q g1 \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n\ngoal (1 subgoal):\n 1. q g1 \\<in> punit.dgrad_p_set d m'", "by (rule q_in)"], ["proof (state)\nthis:\n  q g1 \\<in> punit.dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. d (punit.lt (q g1)) \\<le> m'\n 2. d (lp g1) \\<le> m'", "moreover"], ["proof (state)\nthis:\n  q g1 \\<in> punit.dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. d (punit.lt (q g1)) \\<le> m'\n 2. d (lp g1) \\<le> m'", "from \\<open>q g1 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q g1 \\<noteq> 0", "have \"punit.lt (q g1) \\<in> keys (q g1)\""], ["proof (prove)\nusing this:\n  q g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. punit.lt (q g1) \\<in> keys (q g1)", "by (rule punit.lt_in_keys)"], ["proof (state)\nthis:\n  punit.lt (q g1) \\<in> keys (q g1)\n\ngoal (2 subgoals):\n 1. d (punit.lt (q g1)) \\<le> m'\n 2. d (lp g1) \\<le> m'", "ultimately"], ["proof (chain)\npicking this:\n  q g1 \\<in> punit.dgrad_p_set d m'\n  punit.lt (q g1) \\<in> keys (q g1)", "show \"d (punit.lt (q g1)) \\<le> m'\""], ["proof (prove)\nusing this:\n  q g1 \\<in> punit.dgrad_p_set d m'\n  punit.lt (q g1) \\<in> keys (q g1)\n\ngoal (1 subgoal):\n 1. d (punit.lt (q g1)) \\<le> m'", "by (rule punit.dgrad_p_setD[simplified])"], ["proof (state)\nthis:\n  d (punit.lt (q g1)) \\<le> m'\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "from \\<open>g1 \\<in> G\\<close> G_sub"], ["proof (chain)\npicking this:\n  g1 \\<in> G\n  G \\<subseteq> dgrad_p_set d m'", "have \"g1 \\<in> dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n  G \\<subseteq> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. g1 \\<in> dgrad_p_set d m'", ".."], ["proof (state)\nthis:\n  g1 \\<in> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "moreover"], ["proof (state)\nthis:\n  g1 \\<in> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "from \\<open>g1 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<noteq> 0", "have \"lt g1 \\<in> keys g1\""], ["proof (prove)\nusing this:\n  g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt g1 \\<in> keys g1", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt g1 \\<in> keys g1\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "ultimately"], ["proof (chain)\npicking this:\n  g1 \\<in> dgrad_p_set d m'\n  lt g1 \\<in> keys g1", "show \"d (lp g1) \\<le> m'\""], ["proof (prove)\nusing this:\n  g1 \\<in> dgrad_p_set d m'\n  lt g1 \\<in> keys g1\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "by (rule dgrad_p_setD)"], ["proof (state)\nthis:\n  d (lp g1) \\<le> m'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ord_class.max (d (punit.lt (q g1))) (d (lp g1)) \\<le> m'\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "finally"], ["proof (chain)\npicking this:\n  d (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<le> m'", "have d1: \"d (lp (q g1 \\<odot> g1) - ?l) \\<le> m'\""], ["proof (prove)\nusing this:\n  d (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<le> m'\n\ngoal (1 subgoal):\n 1. d (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<le> m'", "."], ["proof (state)\nthis:\n  d (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) \\<le> m'\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "have \"d (?l - lp g2) \\<le> ord_class.max (d (lp g2)) (d (lp g1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (lcs (lp g1) (lp g2) - lp g2)\n    \\<le> ord_class.max (d (lp g2)) (d (lp g1))", "unfolding lcs_comm[of \"lp g1\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. d (lcs (lp g2) (lp g1) - lp g2)\n    \\<le> ord_class.max (d (lp g2)) (d (lp g1))", "using assms(1)"], ["proof (prove)\nusing this:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. d (lcs (lp g2) (lp g1) - lp g2)\n    \\<le> ord_class.max (d (lp g2)) (d (lp g1))", "by (rule dickson_grading_lcs_minus)"], ["proof (state)\nthis:\n  d (lcs (lp g1) (lp g2) - lp g2)\n  \\<le> ord_class.max (d (lp g2)) (d (lp g1))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "also"], ["proof (state)\nthis:\n  d (lcs (lp g1) (lp g2) - lp g2)\n  \\<le> ord_class.max (d (lp g2)) (d (lp g1))\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "have \"\\<dots> \\<le> m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.max (d (lp g2)) (d (lp g1)) \\<le> m'", "proof (rule max.boundedI)"], ["proof (state)\ngoal (2 subgoals):\n 1. d (lp g2) \\<le> m'\n 2. d (lp g1) \\<le> m'", "from \\<open>g2 \\<in> G\\<close> G_sub"], ["proof (chain)\npicking this:\n  g2 \\<in> G\n  G \\<subseteq> dgrad_p_set d m'", "have \"g2 \\<in> dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  g2 \\<in> G\n  G \\<subseteq> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. g2 \\<in> dgrad_p_set d m'", ".."], ["proof (state)\nthis:\n  g2 \\<in> dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. d (lp g2) \\<le> m'\n 2. d (lp g1) \\<le> m'", "moreover"], ["proof (state)\nthis:\n  g2 \\<in> dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. d (lp g2) \\<le> m'\n 2. d (lp g1) \\<le> m'", "from \\<open>g2 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g2 \\<noteq> 0", "have \"lt g2 \\<in> keys g2\""], ["proof (prove)\nusing this:\n  g2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt g2 \\<in> keys g2", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt g2 \\<in> keys g2\n\ngoal (2 subgoals):\n 1. d (lp g2) \\<le> m'\n 2. d (lp g1) \\<le> m'", "ultimately"], ["proof (chain)\npicking this:\n  g2 \\<in> dgrad_p_set d m'\n  lt g2 \\<in> keys g2", "show \"d (lp g2) \\<le> m'\""], ["proof (prove)\nusing this:\n  g2 \\<in> dgrad_p_set d m'\n  lt g2 \\<in> keys g2\n\ngoal (1 subgoal):\n 1. d (lp g2) \\<le> m'", "by (rule dgrad_p_setD)"], ["proof (state)\nthis:\n  d (lp g2) \\<le> m'\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "from \\<open>g1 \\<in> G\\<close> G_sub"], ["proof (chain)\npicking this:\n  g1 \\<in> G\n  G \\<subseteq> dgrad_p_set d m'", "have \"g1 \\<in> dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  g1 \\<in> G\n  G \\<subseteq> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. g1 \\<in> dgrad_p_set d m'", ".."], ["proof (state)\nthis:\n  g1 \\<in> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "moreover"], ["proof (state)\nthis:\n  g1 \\<in> dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "from \\<open>g1 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<noteq> 0", "have \"lt g1 \\<in> keys g1\""], ["proof (prove)\nusing this:\n  g1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt g1 \\<in> keys g1", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt g1 \\<in> keys g1\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "ultimately"], ["proof (chain)\npicking this:\n  g1 \\<in> dgrad_p_set d m'\n  lt g1 \\<in> keys g1", "show \"d (lp g1) \\<le> m'\""], ["proof (prove)\nusing this:\n  g1 \\<in> dgrad_p_set d m'\n  lt g1 \\<in> keys g1\n\ngoal (1 subgoal):\n 1. d (lp g1) \\<le> m'", "by (rule dgrad_p_setD)"], ["proof (state)\nthis:\n  d (lp g1) \\<le> m'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ord_class.max (d (lp g2)) (d (lp g1)) \\<le> m'\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "finally"], ["proof (chain)\npicking this:\n  d (lcs (lp g1) (lp g2) - lp g2) \\<le> m'", "have mu2: \"mu2 \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  d (lcs (lp g1) (lp g2) - lp g2) \\<le> m'\n\ngoal (1 subgoal):\n 1. mu2 \\<in> punit.dgrad_p_set d m'", "by (simp add: mu2_def punit.dgrad_p_set_def dgrad_set_def)"], ["proof (state)\nthis:\n  mu2 \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "assume z: \"z = q'' g\""], ["proof (state)\nthis:\n  z = q'' g\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "have \"g = g1 \\<or> g = g2 \\<or> (g \\<noteq> g1 \\<and> g \\<noteq> g2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = g1 \\<or> g = g2 \\<or> g \\<noteq> g1 \\<and> g \\<noteq> g2", "by blast"], ["proof (state)\nthis:\n  g = g1 \\<or> g = g2 \\<or> g \\<noteq> g1 \\<and> g \\<noteq> g2\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x = q'' xa; xa \\<in> G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> punit.dgrad_p_set d m'", "thus \"z \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\nusing this:\n  g = g1 \\<or> g = g2 \\<or> g \\<noteq> g1 \\<and> g \\<noteq> g2\n\ngoal (1 subgoal):\n 1. z \\<in> punit.dgrad_p_set d m'", "proof (elim disjE conjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. g = g1 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 3. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "assume \"g = g1\""], ["proof (state)\nthis:\n  g = g1\n\ngoal (3 subgoals):\n 1. g = g1 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 3. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "with \\<open>g1 \\<noteq> g2\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<noteq> g2\n  g = g1", "have \"q'' g = punit.tail (q g1) + mu * q' g1\""], ["proof (prove)\nusing this:\n  g1 \\<noteq> g2\n  g = g1\n\ngoal (1 subgoal):\n 1. q'' g = punit.tail (q g1) + mu * q' g1", "by (simp add: q''_def)"], ["proof (state)\nthis:\n  q'' g = punit.tail (q g1) + mu * q' g1\n\ngoal (3 subgoals):\n 1. g = g1 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 3. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "also"], ["proof (state)\nthis:\n  q'' g = punit.tail (q g1) + mu * q' g1\n\ngoal (3 subgoals):\n 1. g = g1 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 3. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "have \"\\<dots> \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.tail (q g1) + mu * q' g1 \\<in> punit.dgrad_p_set d m'", "unfolding mu_def times_monomial_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.tail (q g1) +\n    local.punit.monom_mult (lc (q g1 \\<odot> g1))\n     (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) (q' g1)\n    \\<in> punit.dgrad_p_set d m'", "by (intro punit.dgrad_p_set_closed_plus punit.dgrad_p_set_closed_tail\n                punit.dgrad_p_set_closed_monom_mult d1 assms(1) q_in q'_in \\<open>g1 \\<in> G\\<close>)"], ["proof (state)\nthis:\n  punit.tail (q g1) + mu * q' g1 \\<in> punit.dgrad_p_set d m'\n\ngoal (3 subgoals):\n 1. g = g1 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 3. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "finally"], ["proof (chain)\npicking this:\n  q'' g \\<in> punit.dgrad_p_set d m'", "show ?thesis"], ["proof (prove)\nusing this:\n  q'' g \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. z \\<in> punit.dgrad_p_set d m'", "by (simp only: z)"], ["proof (state)\nthis:\n  z \\<in> punit.dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "assume \"g = g2\""], ["proof (state)\nthis:\n  g = g2\n\ngoal (2 subgoals):\n 1. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "hence \"q'' g = q g2 + mu * q' g2 + mu * mu2\""], ["proof (prove)\nusing this:\n  g = g2\n\ngoal (1 subgoal):\n 1. q'' g = q g2 + mu * q' g2 + mu * mu2", "by (simp add: q''_def)"], ["proof (state)\nthis:\n  q'' g = q g2 + mu * q' g2 + mu * mu2\n\ngoal (2 subgoals):\n 1. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "also"], ["proof (state)\nthis:\n  q'' g = q g2 + mu * q' g2 + mu * mu2\n\ngoal (2 subgoals):\n 1. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "have \"\\<dots> \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q g2 + mu * q' g2 + mu * mu2 \\<in> punit.dgrad_p_set d m'", "unfolding mu_def times_monomial_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. q g2 +\n    local.punit.monom_mult (lc (q g1 \\<odot> g1))\n     (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) (q' g2) +\n    local.punit.monom_mult (lc (q g1 \\<odot> g1))\n     (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) mu2\n    \\<in> punit.dgrad_p_set d m'", "by (intro punit.dgrad_p_set_closed_plus punit.dgrad_p_set_closed_monom_mult\n                d1 mu2 q_in q'_in assms(1) \\<open>g2 \\<in> G\\<close>)"], ["proof (state)\nthis:\n  q g2 + mu * q' g2 + mu * mu2 \\<in> punit.dgrad_p_set d m'\n\ngoal (2 subgoals):\n 1. g = g2 \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'\n 2. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "finally"], ["proof (chain)\npicking this:\n  q'' g \\<in> punit.dgrad_p_set d m'", "show ?thesis"], ["proof (prove)\nusing this:\n  q'' g \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. z \\<in> punit.dgrad_p_set d m'", "by (simp only: z)"], ["proof (state)\nthis:\n  z \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "assume \"g \\<noteq> g1\" and \"g \\<noteq> g2\""], ["proof (state)\nthis:\n  g \\<noteq> g1\n  g \\<noteq> g2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "hence \"q'' g = q g + mu * q' g\""], ["proof (prove)\nusing this:\n  g \\<noteq> g1\n  g \\<noteq> g2\n\ngoal (1 subgoal):\n 1. q'' g = q g + mu * q' g", "by (simp add: q''_def)"], ["proof (state)\nthis:\n  q'' g = q g + mu * q' g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "also"], ["proof (state)\nthis:\n  q'' g = q g + mu * q' g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "have \"\\<dots> \\<in> punit.dgrad_p_set d m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q g + mu * q' g \\<in> punit.dgrad_p_set d m'", "unfolding mu_def times_monomial_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. q g +\n    local.punit.monom_mult (lc (q g1 \\<odot> g1))\n     (lp (q g1 \\<odot> g1) - lcs (lp g1) (lp g2)) (q' g)\n    \\<in> punit.dgrad_p_set d m'", "by (intro punit.dgrad_p_set_closed_plus punit.dgrad_p_set_closed_monom_mult\n                d1 assms(1) q_in q'_in \\<open>g \\<in> G\\<close>)"], ["proof (state)\nthis:\n  q g + mu * q' g \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>g \\<noteq> g1; g \\<noteq> g2\\<rbrakk>\n    \\<Longrightarrow> z \\<in> punit.dgrad_p_set d m'", "finally"], ["proof (chain)\npicking this:\n  q'' g \\<in> punit.dgrad_p_set d m'", "show ?thesis"], ["proof (prove)\nusing this:\n  q'' g \\<in> punit.dgrad_p_set d m'\n\ngoal (1 subgoal):\n 1. z \\<in> punit.dgrad_p_set d m'", "by (simp only: z)"], ["proof (state)\nthis:\n  z \\<in> punit.dgrad_p_set d m'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> punit.dgrad_p_set d m'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q'' \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "with q_min"], ["proof (chain)\npicking this:\n  rel ?q'41 q \\<Longrightarrow> ?q'41 \\<notin> rel_dom\n  q'' \\<in> rel_dom", "have \"\\<not> rel q'' q\""], ["proof (prove)\nusing this:\n  rel ?q'41 q \\<Longrightarrow> ?q'41 \\<notin> rel_dom\n  q'' \\<in> rel_dom\n\ngoal (1 subgoal):\n 1. \\<not> rel q'' q", "by blast"], ["proof (state)\nthis:\n  \\<not> rel q'' q\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "hence \"v \\<preceq>\\<^sub>t u\" and \"u \\<noteq> v \\<or> mnum q \\<le> mnum q''\""], ["proof (prove)\nusing this:\n  \\<not> rel q'' q\n\ngoal (1 subgoal):\n 1. v \\<preceq>\\<^sub>t u &&& u \\<noteq> v \\<or> mnum q \\<le> mnum q''", "by (auto simp: v_def u_def rel_def)"], ["proof (state)\nthis:\n  v \\<preceq>\\<^sub>t u\n  u \\<noteq> v \\<or> mnum q \\<le> mnum q''\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  v \\<preceq>\\<^sub>t u\n  u \\<noteq> v \\<or> mnum q \\<le> mnum q''\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"u \\<preceq>\\<^sub>t v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t v", "from u_in"], ["proof (chain)\npicking this:\n  u \\<in> lt `\n          {q'' g \\<odot> g |g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0}", "obtain g where \"g \\<in> G\" and \"q'' g \\<odot> g \\<noteq> 0\" and u: \"u = lt (q'' g \\<odot> g)\""], ["proof (prove)\nusing this:\n  u \\<in> lt `\n          {q'' g \\<odot> g |g. g \\<in> G \\<and> q'' g \\<odot> g \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; q'' g \\<odot> g \\<noteq> 0;\n         u = lt (q'' g \\<odot> g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n  q'' g \\<odot> g \\<noteq> 0\n  u = lt (q'' g \\<odot> g)\n\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t v", "proof (cases \"g \\<in> M\")"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<in> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v\n 2. g \\<notin> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v", "case True"], ["proof (state)\nthis:\n  g \\<in> M\n\ngoal (2 subgoals):\n 1. g \\<in> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v\n 2. g \\<notin> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v", "thus ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> M\n\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t v", "unfolding u"], ["proof (prove)\nusing this:\n  g \\<in> M\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<preceq>\\<^sub>t v", "by (rule 4)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. g \\<notin> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<notin> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v", "case False"], ["proof (state)\nthis:\n  g \\<notin> M\n\ngoal (1 subgoal):\n 1. g \\<notin> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v", "with \\<open>g \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> G\n  g \\<notin> M", "have \"lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<notin> M\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v", "using \\<open>q'' g \\<odot> g \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<notin> M\n  q'' g \\<odot> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v", "by (rule 5)"], ["proof (state)\nthis:\n  lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. g \\<notin> M \\<Longrightarrow> u \\<preceq>\\<^sub>t v", "thus ?thesis"], ["proof (prove)\nusing this:\n  lt (q'' g \\<odot> g) \\<prec>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. u \\<preceq>\\<^sub>t v", "by (simp add: u)"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  v \\<preceq>\\<^sub>t u\n  u \\<noteq> v \\<or> mnum q \\<le> mnum q''\n  u \\<preceq>\\<^sub>t v", "have u_v: \"u = v\" and \"mnum q \\<le> mnum q''\""], ["proof (prove)\nusing this:\n  v \\<preceq>\\<^sub>t u\n  u \\<noteq> v \\<or> mnum q \\<le> mnum q''\n  u \\<preceq>\\<^sub>t v\n\ngoal (1 subgoal):\n 1. u = v &&& mnum q \\<le> mnum q''", "by simp_all"], ["proof (state)\nthis:\n  u = v\n  mnum q \\<le> mnum q''\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "note this(2)"], ["proof (state)\nthis:\n  mnum q \\<le> mnum q''\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  mnum q \\<le> mnum q''\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"mnum q'' < card M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mnum q'' < card M", "unfolding mnum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {g \\<in> G.\n      q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    < card M", "proof (rule psubset_card_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite M\n 2. {g \\<in> G.\n     q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    \\<subset> M", "from \\<open>M \\<subseteq> G\\<close> \\<open>finite G\\<close>"], ["proof (chain)\npicking this:\n  M \\<subseteq> G\n  finite G", "show \"finite M\""], ["proof (prove)\nusing this:\n  M \\<subseteq> G\n  finite G\n\ngoal (1 subgoal):\n 1. finite M", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite M\n\ngoal (1 subgoal):\n 1. {g \\<in> G.\n     q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    \\<subset> M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {g \\<in> G.\n     q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    \\<subset> M", "have \"{g\\<in>G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v} \\<subseteq> M - {g1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\n    \\<subseteq> M - {g1}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {g \\<in> G.\n                q'' g \\<odot> g \\<noteq> 0 \\<and>\n                lt (q'' g \\<odot> g) = v} \\<Longrightarrow>\n       x \\<in> M - {g1}", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {g \\<in> G.\n                q'' g \\<odot> g \\<noteq> 0 \\<and>\n                lt (q'' g \\<odot> g) = v} \\<Longrightarrow>\n       x \\<in> M - {g1}", "assume \"g \\<in> {g\\<in>G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\""], ["proof (state)\nthis:\n  g \\<in> {g \\<in> G.\n           q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {g \\<in> G.\n                q'' g \\<odot> g \\<noteq> 0 \\<and>\n                lt (q'' g \\<odot> g) = v} \\<Longrightarrow>\n       x \\<in> M - {g1}", "hence \"g \\<in> G\" and \"q'' g \\<odot> g \\<noteq> 0\" and \"lt (q'' g \\<odot> g) = v\""], ["proof (prove)\nusing this:\n  g \\<in> {g \\<in> G.\n           q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\n\ngoal (1 subgoal):\n 1. g \\<in> G &&& q'' g \\<odot> g \\<noteq> 0 &&& lt (q'' g \\<odot> g) = v", "by simp_all"], ["proof (state)\nthis:\n  g \\<in> G\n  q'' g \\<odot> g \\<noteq> 0\n  lt (q'' g \\<odot> g) = v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {g \\<in> G.\n                q'' g \\<odot> g \\<noteq> 0 \\<and>\n                lt (q'' g \\<odot> g) = v} \\<Longrightarrow>\n       x \\<in> M - {g1}", "with 2 5"], ["proof (chain)\npicking this:\n  q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n  lt (q'' g1 \\<odot> g1) \\<prec>\\<^sub>t v\n  \\<lbrakk>?g42 \\<in> G; ?g42 \\<notin> M;\n   q'' ?g42 \\<odot> ?g42 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> lt (q'' ?g42 \\<odot> ?g42) \\<prec>\\<^sub>t v\n  g \\<in> G\n  q'' g \\<odot> g \\<noteq> 0\n  lt (q'' g \\<odot> g) = v", "show \"g \\<in> M - {g1}\""], ["proof (prove)\nusing this:\n  q'' g1 \\<odot> g1 \\<noteq> 0 \\<Longrightarrow>\n  lt (q'' g1 \\<odot> g1) \\<prec>\\<^sub>t v\n  \\<lbrakk>?g42 \\<in> G; ?g42 \\<notin> M;\n   q'' ?g42 \\<odot> ?g42 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> lt (q'' ?g42 \\<odot> ?g42) \\<prec>\\<^sub>t v\n  g \\<in> G\n  q'' g \\<odot> g \\<noteq> 0\n  lt (q'' g \\<odot> g) = v\n\ngoal (1 subgoal):\n 1. g \\<in> M - {g1}", "by blast"], ["proof (state)\nthis:\n  g \\<in> M - {g1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {g \\<in> G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\n  \\<subseteq> M - {g1}\n\ngoal (1 subgoal):\n 1. {g \\<in> G.\n     q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    \\<subset> M", "also"], ["proof (state)\nthis:\n  {g \\<in> G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\n  \\<subseteq> M - {g1}\n\ngoal (1 subgoal):\n 1. {g \\<in> G.\n     q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    \\<subset> M", "from \\<open>g1 \\<in> M\\<close>"], ["proof (chain)\npicking this:\n  g1 \\<in> M", "have \"\\<dots> \\<subset> M\""], ["proof (prove)\nusing this:\n  g1 \\<in> M\n\ngoal (1 subgoal):\n 1. M - {g1} \\<subset> M", "by blast"], ["proof (state)\nthis:\n  M - {g1} \\<subset> M\n\ngoal (1 subgoal):\n 1. {g \\<in> G.\n     q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    \\<subset> M", "finally"], ["proof (chain)\npicking this:\n  {g \\<in> G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\n  \\<subset> M", "show \"{g\\<in>G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''} \\<subset> M\""], ["proof (prove)\nusing this:\n  {g \\<in> G. q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = v}\n  \\<subset> M\n\ngoal (1 subgoal):\n 1. {g \\<in> G.\n     q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n    \\<subset> M", "by (simp only: u_v flip: u_def)"], ["proof (state)\nthis:\n  {g \\<in> G.\n   q'' g \\<odot> g \\<noteq> 0 \\<and> lt (q'' g \\<odot> g) = mlt q''}\n  \\<subset> M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mnum q'' < card M\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  mnum q'' < card M\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "have \"\\<dots> = mnum q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card M = mnum q", "by (simp only: M_def mnum_def v_def)"], ["proof (state)\nthis:\n  card M = mnum q\n\ngoal (1 subgoal):\n 1. \\<not> is_Groebner_basis G \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  mnum q < mnum q", "show False"], ["proof (prove)\nusing this:\n  mnum q < mnum q\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Replacing Elements in Gr\\\"obner Bases\\<close>"], ["", "lemma replace_in_dgrad_p_set:\n  assumes \"G \\<subseteq> dgrad_p_set d m\"\n  obtains n where \"q \\<in> dgrad_p_set d n\" and \"G \\<subseteq> dgrad_p_set d n\"\n    and \"insert q (G - {p}) \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>q \\<in> dgrad_p_set d n; G \\<subseteq> dgrad_p_set d n;\n         insert q (G - {p}) \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>q \\<in> dgrad_p_set d n; G \\<subseteq> dgrad_p_set d n;\n         insert q (G - {p}) \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m", "obtain n where \"m \\<le> n\" and 1: \"q \\<in> dgrad_p_set d n\" and 2: \"G \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>m \\<le> n; q \\<in> dgrad_p_set d n;\n         G \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule dgrad_p_set_insert)"], ["proof (state)\nthis:\n  m \\<le> n\n  q \\<in> dgrad_p_set d n\n  G \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>q \\<in> dgrad_p_set d n; G \\<subseteq> dgrad_p_set d n;\n         insert q (G - {p}) \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this(2, 3)"], ["proof (chain)\npicking this:\n  q \\<in> dgrad_p_set d n\n  G \\<subseteq> dgrad_p_set d n", "have \"insert q (G - {p}) \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  q \\<in> dgrad_p_set d n\n  G \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. insert q (G - {p}) \\<subseteq> dgrad_p_set d n", "by auto"], ["proof (state)\nthis:\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>q \\<in> dgrad_p_set d n; G \\<subseteq> dgrad_p_set d n;\n         insert q (G - {p}) \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with 1 2"], ["proof (chain)\npicking this:\n  q \\<in> dgrad_p_set d n\n  G \\<subseteq> dgrad_p_set d n\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n", "show ?thesis"], ["proof (prove)\nusing this:\n  q \\<in> dgrad_p_set d n\n  G \\<subseteq> dgrad_p_set d n\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_replace_lt_adds_stable_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"q \\<noteq> 0\" and q: \"q \\<in> (pmdl G)\" and \"lt q adds\\<^sub>t lt p\"\n  shows \"is_Groebner_basis (insert q (G - {p}))\" (is \"is_Groebner_basis ?G'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "from assms(2)"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m", "obtain n where 1: \"G \\<subseteq> dgrad_p_set d n\" and 2: \"?G' \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d n;\n         insert q (G - {p}) \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule replace_in_dgrad_p_set)"], ["proof (state)\nthis:\n  G \\<subseteq> dgrad_p_set d n\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "from isGB"], ["proof (chain)\npicking this:\n  is_Groebner_basis G", "show ?thesis"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "unfolding GB_alt_3_dgrad_p_set[OF assms(1) 1] GB_alt_3_dgrad_p_set[OF assms(1) 2]"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>pmdl G.\n     f \\<noteq> 0 \\<longrightarrow>\n     (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl (insert q (G - {p})).\n       f \\<noteq> 0 \\<longrightarrow>\n       (\\<exists>g\\<in>insert q (G - {p}).\n           g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow>\n                   (\\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f);\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>insert q (G - {p}).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow>\n                   (\\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f);\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>insert q (G - {p}).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "assume f1: \"f \\<in> (pmdl ?G')\" and \"f \\<noteq> 0\"\n      and a1: \"\\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\""], ["proof (state)\nthis:\n  f \\<in> pmdl (insert q (G - {p}))\n  f \\<noteq> 0\n  \\<forall>f\\<in>pmdl G.\n     f \\<noteq> 0 \\<longrightarrow>\n     (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow>\n                   (\\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f);\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>insert q (G - {p}).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "from f1 pmdl.replace_span[OF q, of p]"], ["proof (chain)\npicking this:\n  f \\<in> pmdl (insert q (G - {p}))\n  pmdl (insert q (G - {p})) \\<subseteq> pmdl G", "have \"f \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl (insert q (G - {p}))\n  pmdl (insert q (G - {p})) \\<subseteq> pmdl G\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl G", ".."], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow>\n                   (\\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f);\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>insert q (G - {p}).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "from a1[rule_format, OF this \\<open>f \\<noteq> 0\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow>\n                   (\\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f);\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g\\<in>insert q (G - {p}).\n                            g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "show \"\\<exists>g\\<in>?G'. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "proof (cases \"g = p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. g = p \\<Longrightarrow>\n    \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n 2. g \\<noteq> p \\<Longrightarrow>\n    \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "case True"], ["proof (state)\nthis:\n  g = p\n\ngoal (2 subgoals):\n 1. g = p \\<Longrightarrow>\n    \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n 2. g \\<noteq> p \\<Longrightarrow>\n    \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?g \\<noteq> 0 \\<and> lt ?g adds\\<^sub>t lt f\n 2. ?g \\<in> insert q (G - {p})", "from \\<open>lt q adds\\<^sub>t lt p\\<close>"], ["proof (chain)\npicking this:\n  lt q adds\\<^sub>t lt p", "have \"lt q adds\\<^sub>t lt g\""], ["proof (prove)\nusing this:\n  lt q adds\\<^sub>t lt p\n\ngoal (1 subgoal):\n 1. lt q adds\\<^sub>t lt g", "unfolding True"], ["proof (prove)\nusing this:\n  lt q adds\\<^sub>t lt p\n\ngoal (1 subgoal):\n 1. lt q adds\\<^sub>t lt p", "."], ["proof (state)\nthis:\n  lt q adds\\<^sub>t lt g\n\ngoal (2 subgoals):\n 1. ?g \\<noteq> 0 \\<and> lt ?g adds\\<^sub>t lt f\n 2. ?g \\<in> insert q (G - {p})", "also"], ["proof (state)\nthis:\n  lt q adds\\<^sub>t lt g\n\ngoal (2 subgoals):\n 1. ?g \\<noteq> 0 \\<and> lt ?g adds\\<^sub>t lt f\n 2. ?g \\<in> insert q (G - {p})", "have \"... adds\\<^sub>t lt f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lt g adds\\<^sub>t lt f", "by fact"], ["proof (state)\nthis:\n  lt g adds\\<^sub>t lt f\n\ngoal (2 subgoals):\n 1. ?g \\<noteq> 0 \\<and> lt ?g adds\\<^sub>t lt f\n 2. ?g \\<in> insert q (G - {p})", "finally"], ["proof (chain)\npicking this:\n  lt q adds\\<^sub>t lt f", "have \"lt q adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  lt q adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. lt q adds\\<^sub>t lt f", "."], ["proof (state)\nthis:\n  lt q adds\\<^sub>t lt f\n\ngoal (2 subgoals):\n 1. ?g \\<noteq> 0 \\<and> lt ?g adds\\<^sub>t lt f\n 2. ?g \\<in> insert q (G - {p})", "with \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  lt q adds\\<^sub>t lt f", "show \"q \\<noteq> 0 \\<and> lt q adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  lt q adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<and> lt q adds\\<^sub>t lt f", ".."], ["proof (state)\nthis:\n  q \\<noteq> 0 \\<and> lt q adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. q \\<in> insert q (G - {p})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<in> insert q (G - {p})", "show \"q \\<in> ?G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> insert q (G - {p})", "by simp"], ["proof (state)\nthis:\n  q \\<in> insert q (G - {p})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>g\\<in>insert q (G - {p}).\n     g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. g \\<noteq> p \\<Longrightarrow>\n    \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<noteq> p \\<Longrightarrow>\n    \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "case False"], ["proof (state)\nthis:\n  g \\<noteq> p\n\ngoal (1 subgoal):\n 1. g \\<noteq> p \\<Longrightarrow>\n    \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>insert q (G - {p}).\n       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?g \\<noteq> 0 \\<and> lt ?g adds\\<^sub>t lt f\n 2. ?g \\<in> insert q (G - {p})", "show \"g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "by (rule, fact+)"], ["proof (state)\nthis:\n  g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. g \\<in> insert q (G - {p})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> insert q (G - {p})", "from \\<open>g \\<in> G\\<close> False"], ["proof (chain)\npicking this:\n  g \\<in> G\n  g \\<noteq> p", "show \"g \\<in> ?G'\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> p\n\ngoal (1 subgoal):\n 1. g \\<in> insert q (G - {p})", "by blast"], ["proof (state)\nthis:\n  g \\<in> insert q (G - {p})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>g\\<in>insert q (G - {p}).\n     g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>g\\<in>insert q (G - {p}).\n     g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis (insert q (G - {p}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_replace_lt_adds_stable_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"q \\<noteq> 0\" and \"q \\<in> pmdl G\" and \"lt q adds\\<^sub>t lt p\"\n  shows \"pmdl (insert q (G - {p})) = pmdl G\" (is \"pmdl ?G' = pmdl G\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "proof (rule, rule pmdl.replace_span, fact, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "assume \"f \\<in> pmdl G\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "note assms(1)"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "moreover"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "from assms(2)"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m", "obtain n where \"?G' \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        insert q (G - {p}) \\<subseteq> dgrad_p_set d n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule replace_in_dgrad_p_set)"], ["proof (state)\nthis:\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "moreover"], ["proof (state)\nthis:\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"is_Groebner_basis ?G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "by (rule GB_replace_lt_adds_stable_GB_dgrad_p_set, fact+)"], ["proof (state)\nthis:\n  is_Groebner_basis (insert q (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "ultimately"], ["proof (chain)\npicking this:\n  dickson_grading d\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert q (G - {p}))", "have \"\\<exists>! h. (red ?G')\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red ?G' h\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert q (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n       \\<not> is_red (insert q (G - {p})) h", "by (rule GB_implies_unique_nf_dgrad_p_set)"], ["proof (state)\nthis:\n  \\<exists>!h.\n     (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n     \\<not> is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "then"], ["proof (chain)\npicking this:\n  \\<exists>!h.\n     (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n     \\<not> is_red (insert q (G - {p})) h", "obtain h where ftoh: \"(red ?G')\\<^sup>*\\<^sup>* f h\" and irredh: \"\\<not> is_red ?G' h\""], ["proof (prove)\nusing this:\n  \\<exists>!h.\n     (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n     \\<not> is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>(red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h;\n         \\<not> is_red (insert q (G - {p})) h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h\n  \\<not> is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"\\<not> is_red G h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_red G h", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. is_red G h \\<Longrightarrow> False", "assume \"is_red G h\""], ["proof (state)\nthis:\n  is_red G h\n\ngoal (1 subgoal):\n 1. is_red G h \\<Longrightarrow> False", "have \"is_red ?G' h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red (insert q (G - {p})) h", "by (rule replace_lt_adds_stable_is_red, fact+)"], ["proof (state)\nthis:\n  is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. is_red G h \\<Longrightarrow> False", "with irredh"], ["proof (chain)\npicking this:\n  \\<not> is_red (insert q (G - {p})) h\n  is_red (insert q (G - {p})) h", "show False"], ["proof (prove)\nusing this:\n  \\<not> is_red (insert q (G - {p})) h\n  is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> is_red G h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"f - h \\<in> pmdl ?G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f - h \\<in> pmdl (insert q (G - {p}))", "by (rule red_rtranclp_diff_in_pmdl, rule ftoh)"], ["proof (state)\nthis:\n  f - h \\<in> pmdl (insert q (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"f - h \\<in> pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f - h \\<in> pmdl G", "by (rule, fact, rule pmdl.replace_span, fact)"], ["proof (state)\nthis:\n  f - h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "from pmdl.span_diff[OF this \\<open>f \\<in> pmdl G\\<close>]"], ["proof (chain)\npicking this:\n  f - h - f \\<in> pmdl G", "have \"-h \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  f - h - f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. - h \\<in> pmdl G", "by simp"], ["proof (state)\nthis:\n  - h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "from pmdl.span_neg[OF this]"], ["proof (chain)\npicking this:\n  - (- h) \\<in> pmdl G", "have \"h \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  - (- h) \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. h \\<in> pmdl G", "by simp"], ["proof (state)\nthis:\n  h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "with isGB \\<open>\\<not> is_red G h\\<close>"], ["proof (chain)\npicking this:\n  is_Groebner_basis G\n  \\<not> is_red G h\n  h \\<in> pmdl G", "have \"h = 0\""], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  \\<not> is_red G h\n  h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. h = 0", "using GB_imp_reducibility"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  \\<not> is_red G h\n  h \\<in> pmdl G\n  \\<lbrakk>is_Groebner_basis ?G; ?f \\<noteq> 0; ?f \\<in> pmdl ?G\\<rbrakk>\n  \\<Longrightarrow> is_red ?G ?f\n\ngoal (1 subgoal):\n 1. h = 0", "by auto"], ["proof (state)\nthis:\n  h = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "with ftoh"], ["proof (chain)\npicking this:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h\n  h = 0", "have \"(red ?G')\\<^sup>*\\<^sup>* f 0\""], ["proof (prove)\nusing this:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h\n  h = 0\n\ngoal (1 subgoal):\n 1. (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f 0", "by simp"], ["proof (state)\nthis:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "thus \"f \\<in> pmdl ?G'\""], ["proof (prove)\nusing this:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl (insert q (G - {p}))", "by (simp add: red_rtranclp_0_in_pmdl)"], ["proof (state)\nthis:\n  f \\<in> pmdl (insert q (G - {p}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_replace_red_stable_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and q: \"red (G - {p}) p q\"\n  shows \"is_Groebner_basis (insert q (G - {p}))\" (is \"is_Groebner_basis ?G'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "from assms(2)"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m", "obtain n where 1: \"G \\<subseteq> dgrad_p_set d n\" and 2: \"?G' \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d n;\n         insert q (G - {p}) \\<subseteq> dgrad_p_set d n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule replace_in_dgrad_p_set)"], ["proof (state)\nthis:\n  G \\<subseteq> dgrad_p_set d n\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "from isGB"], ["proof (chain)\npicking this:\n  is_Groebner_basis G", "show ?thesis"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "unfolding GB_alt_2_dgrad_p_set[OF assms(1) 1] GB_alt_2_dgrad_p_set[OF assms(1) 2]"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>pmdl (insert q (G - {p})).\n       f \\<noteq> 0 \\<longrightarrow> is_red (insert q (G - {p})) f", "proof (intro ballI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow> is_red G f;\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red (insert q (G - {p})) f", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow> is_red G f;\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red (insert q (G - {p})) f", "assume f1: \"f \\<in> (pmdl ?G')\" and \"f \\<noteq> 0\"\n      and a1: \"\\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\""], ["proof (state)\nthis:\n  f \\<in> pmdl (insert q (G - {p}))\n  f \\<noteq> 0\n  \\<forall>f\\<in>pmdl G. f \\<noteq> 0 \\<longrightarrow> is_red G f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow> is_red G f;\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red (insert q (G - {p})) f", "have \"q \\<in> pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> pmdl G", "proof (rule pmdl_closed_red, rule pmdl.span_mono)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?B \\<subseteq> G\n 2. ?p \\<in> pmdl G\n 3. red ?B ?p q", "from pmdl.span_superset \\<open>p \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  ?S \\<subseteq> pmdl ?S\n  p \\<in> G", "show \"p \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  ?S \\<subseteq> pmdl ?S\n  p \\<in> G\n\ngoal (1 subgoal):\n 1. p \\<in> pmdl G", ".."], ["proof (state)\nthis:\n  p \\<in> pmdl G\n\ngoal (2 subgoals):\n 1. ?B \\<subseteq> G\n 2. red ?B p q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. ?B \\<subseteq> G\n 2. red ?B p q", "show \"G - {p} \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G - {p} \\<subseteq> G", "by (rule Diff_subset)"], ["proof (state)\nthis:\n  G - {p} \\<subseteq> G\n\ngoal (1 subgoal):\n 1. red (G - {p}) p q", "qed (rule q)"], ["proof (state)\nthis:\n  q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow> is_red G f;\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red (insert q (G - {p})) f", "from f1 pmdl.replace_span[OF this, of p]"], ["proof (chain)\npicking this:\n  f \\<in> pmdl (insert q (G - {p}))\n  pmdl (insert q (G - {p})) \\<subseteq> pmdl G", "have \"f \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl (insert q (G - {p}))\n  pmdl (insert q (G - {p})) \\<subseteq> pmdl G\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl G", ".."], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow> is_red G f;\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red (insert q (G - {p})) f", "have \"is_red G f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red G f", "by (rule a1[rule_format], fact+)"], ["proof (state)\nthis:\n  is_red G f\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>f\\<in>pmdl G.\n                   f \\<noteq> 0 \\<longrightarrow> is_red G f;\n        f \\<in> pmdl (insert q (G - {p})); f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red (insert q (G - {p})) f", "show \"is_red ?G' f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red (insert q (G - {p})) f", "by (rule replace_red_stable_is_red, fact+)"], ["proof (state)\nthis:\n  is_red (insert q (G - {p})) f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis (insert q (G - {p}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_replace_red_stable_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and ptoq: \"red (G - {p}) p q\"\n  shows \"pmdl (insert q (G - {p})) = pmdl G\" (is \"pmdl ?G' = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "from \\<open>p \\<in> G\\<close> pmdl.span_superset"], ["proof (chain)\npicking this:\n  p \\<in> G\n  ?S \\<subseteq> pmdl ?S", "have \"p \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  p \\<in> G\n  ?S \\<subseteq> pmdl ?S\n\ngoal (1 subgoal):\n 1. p \\<in> pmdl G", ".."], ["proof (state)\nthis:\n  p \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "have \"q \\<in> pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> pmdl G", "by (rule pmdl_closed_red, rule pmdl.span_mono, rule Diff_subset, rule \\<open>p \\<in> pmdl G\\<close>, rule ptoq)"], ["proof (state)\nthis:\n  q \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "proof (rule, rule pmdl.replace_span, fact, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "assume \"f \\<in> pmdl G\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "note assms(1)"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "moreover"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "from assms(2)"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m", "obtain n where \"?G' \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        insert q (G - {p}) \\<subseteq> dgrad_p_set d n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule replace_in_dgrad_p_set)"], ["proof (state)\nthis:\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "moreover"], ["proof (state)\nthis:\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"is_Groebner_basis ?G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "by (rule GB_replace_red_stable_GB_dgrad_p_set, fact+)"], ["proof (state)\nthis:\n  is_Groebner_basis (insert q (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "ultimately"], ["proof (chain)\npicking this:\n  dickson_grading d\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert q (G - {p}))", "have \"\\<exists>! h. (red ?G')\\<^sup>*\\<^sup>* f h \\<and> \\<not> is_red ?G' h\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  insert q (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert q (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n       \\<not> is_red (insert q (G - {p})) h", "by (rule GB_implies_unique_nf_dgrad_p_set)"], ["proof (state)\nthis:\n  \\<exists>!h.\n     (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n     \\<not> is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "then"], ["proof (chain)\npicking this:\n  \\<exists>!h.\n     (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n     \\<not> is_red (insert q (G - {p})) h", "obtain h where ftoh: \"(red ?G')\\<^sup>*\\<^sup>* f h\" and irredh: \"\\<not> is_red ?G' h\""], ["proof (prove)\nusing this:\n  \\<exists>!h.\n     (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h \\<and>\n     \\<not> is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>(red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h;\n         \\<not> is_red (insert q (G - {p})) h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h\n  \\<not> is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"\\<not> is_red G h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_red G h", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. is_red G h \\<Longrightarrow> False", "assume \"is_red G h\""], ["proof (state)\nthis:\n  is_red G h\n\ngoal (1 subgoal):\n 1. is_red G h \\<Longrightarrow> False", "have \"is_red ?G' h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red (insert q (G - {p})) h", "by (rule replace_red_stable_is_red, fact+)"], ["proof (state)\nthis:\n  is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. is_red G h \\<Longrightarrow> False", "with irredh"], ["proof (chain)\npicking this:\n  \\<not> is_red (insert q (G - {p})) h\n  is_red (insert q (G - {p})) h", "show False"], ["proof (prove)\nusing this:\n  \\<not> is_red (insert q (G - {p})) h\n  is_red (insert q (G - {p})) h\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> is_red G h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"f - h \\<in> pmdl ?G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f - h \\<in> pmdl (insert q (G - {p}))", "by (rule red_rtranclp_diff_in_pmdl, rule ftoh)"], ["proof (state)\nthis:\n  f - h \\<in> pmdl (insert q (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "have \"f - h \\<in> pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f - h \\<in> pmdl G", "by (rule, fact, rule pmdl.replace_span, fact)"], ["proof (state)\nthis:\n  f - h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "from pmdl.span_diff[OF this \\<open>f \\<in> pmdl G\\<close>]"], ["proof (chain)\npicking this:\n  f - h - f \\<in> pmdl G", "have \"-h \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  f - h - f \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. - h \\<in> pmdl G", "by simp"], ["proof (state)\nthis:\n  - h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "from pmdl.span_neg[OF this]"], ["proof (chain)\npicking this:\n  - (- h) \\<in> pmdl G", "have \"h \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  - (- h) \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. h \\<in> pmdl G", "by simp"], ["proof (state)\nthis:\n  h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "with isGB \\<open>\\<not> is_red G h\\<close>"], ["proof (chain)\npicking this:\n  is_Groebner_basis G\n  \\<not> is_red G h\n  h \\<in> pmdl G", "have \"h = 0\""], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  \\<not> is_red G h\n  h \\<in> pmdl G\n\ngoal (1 subgoal):\n 1. h = 0", "using GB_imp_reducibility"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  \\<not> is_red G h\n  h \\<in> pmdl G\n  \\<lbrakk>is_Groebner_basis ?G; ?f \\<noteq> 0; ?f \\<in> pmdl ?G\\<rbrakk>\n  \\<Longrightarrow> is_red ?G ?f\n\ngoal (1 subgoal):\n 1. h = 0", "by auto"], ["proof (state)\nthis:\n  h = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "with ftoh"], ["proof (chain)\npicking this:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h\n  h = 0", "have \"(red ?G')\\<^sup>*\\<^sup>* f 0\""], ["proof (prove)\nusing this:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f h\n  h = 0\n\ngoal (1 subgoal):\n 1. (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f 0", "by simp"], ["proof (state)\nthis:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> pmdl G \\<Longrightarrow> x \\<in> pmdl (insert q (G - {p}))", "thus \"f \\<in> pmdl ?G'\""], ["proof (prove)\nusing this:\n  (red (insert q (G - {p})))\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl (insert q (G - {p}))", "by (simp add: red_rtranclp_0_in_pmdl)"], ["proof (state)\nthis:\n  f \\<in> pmdl (insert q (G - {p}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmdl (insert q (G - {p})) = pmdl G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_replace_red_rtranclp_stable_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and ptoq: \"(red (G - {p}))\\<^sup>*\\<^sup>* p q\"\n  shows \"is_Groebner_basis (insert q (G - {p}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "using ptoq"], ["proof (prove)\nusing this:\n  (red (G - {p}))\\<^sup>*\\<^sup>* p q\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert q (G - {p}))", "proof (induct q rule: rtranclp_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_Groebner_basis (insert p (G - {p}))\n 2. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        is_Groebner_basis (insert y (G - {p}))\\<rbrakk>\n       \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. is_Groebner_basis (insert p (G - {p}))\n 2. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        is_Groebner_basis (insert y (G - {p}))\\<rbrakk>\n       \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "from isGB \\<open>p \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  is_Groebner_basis G\n  p \\<in> G", "show ?case"], ["proof (prove)\nusing this:\n  is_Groebner_basis G\n  p \\<in> G\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert p (G - {p}))", "by (simp add: insert_absorb)"], ["proof (state)\nthis:\n  is_Groebner_basis (insert p (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        is_Groebner_basis (insert y (G - {p}))\\<rbrakk>\n       \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        is_Groebner_basis (insert y (G - {p}))\\<rbrakk>\n       \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "case (step y z)"], ["proof (state)\nthis:\n  (red (G - {p}))\\<^sup>*\\<^sup>* p y\n  red (G - {p}) y z\n  is_Groebner_basis (insert y (G - {p}))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        is_Groebner_basis (insert y (G - {p}))\\<rbrakk>\n       \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert z (G - {p}))", "proof (cases \"y = p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y = p \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<noteq> p \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "case True"], ["proof (state)\nthis:\n  y = p\n\ngoal (2 subgoals):\n 1. y = p \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<noteq> p \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "from assms(1) assms(2) isGB \\<open>p \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  is_Groebner_basis G\n  p \\<in> G", "show ?thesis"], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  is_Groebner_basis G\n  p \\<in> G\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert z (G - {p}))", "proof (rule GB_replace_red_stable_GB_dgrad_p_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. red (G - {p}) p z", "from \\<open>red (G - {p}) y z\\<close>"], ["proof (chain)\npicking this:\n  red (G - {p}) y z", "show \"red (G - {p}) p z\""], ["proof (prove)\nusing this:\n  red (G - {p}) y z\n\ngoal (1 subgoal):\n 1. red (G - {p}) p z", "unfolding True"], ["proof (prove)\nusing this:\n  red (G - {p}) p z\n\ngoal (1 subgoal):\n 1. red (G - {p}) p z", "."], ["proof (state)\nthis:\n  red (G - {p}) p z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis (insert z (G - {p}))\n\ngoal (1 subgoal):\n 1. y \\<noteq> p \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> p \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "case False"], ["proof (state)\nthis:\n  y \\<noteq> p\n\ngoal (1 subgoal):\n 1. y \\<noteq> p \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert z (G - {p}))", "proof (cases \"y \\<in> G\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "case True"], ["proof (state)\nthis:\n  y \\<in> G\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "with \\<open>y \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  y \\<noteq> p\n  y \\<in> G", "have \"y \\<in> G - {p}\" (is \"_ \\<in> ?G'\")"], ["proof (prove)\nusing this:\n  y \\<noteq> p\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. y \\<in> G - {p}", "by blast"], ["proof (state)\nthis:\n  y \\<in> G - {p}\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "hence \"insert y (G - {p}) = ?G'\""], ["proof (prove)\nusing this:\n  y \\<in> G - {p}\n\ngoal (1 subgoal):\n 1. insert y (G - {p}) = G - {p}", "by auto"], ["proof (state)\nthis:\n  insert y (G - {p}) = G - {p}\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "with step(3)"], ["proof (chain)\npicking this:\n  is_Groebner_basis (insert y (G - {p}))\n  insert y (G - {p}) = G - {p}", "have \"is_Groebner_basis ?G'\""], ["proof (prove)\nusing this:\n  is_Groebner_basis (insert y (G - {p}))\n  insert y (G - {p}) = G - {p}\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (G - {p})", "by simp"], ["proof (state)\nthis:\n  is_Groebner_basis (G - {p})\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "from \\<open>y \\<in> ?G'\\<close> pmdl.span_superset"], ["proof (chain)\npicking this:\n  y \\<in> G - {p}\n  ?S \\<subseteq> pmdl ?S", "have \"y \\<in> pmdl ?G'\""], ["proof (prove)\nusing this:\n  y \\<in> G - {p}\n  ?S \\<subseteq> pmdl ?S\n\ngoal (1 subgoal):\n 1. y \\<in> pmdl (G - {p})", ".."], ["proof (state)\nthis:\n  y \\<in> pmdl (G - {p})\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "have \"z \\<in> pmdl ?G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> pmdl (G - {p})", "by (rule pmdl_closed_red, rule subset_refl, fact+)"], ["proof (state)\nthis:\n  z \\<in> pmdl (G - {p})\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))\n 2. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "show \"is_Groebner_basis (insert z ?G')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert z (G - {p}))", "by (rule GB_insert, fact+)"], ["proof (state)\nthis:\n  is_Groebner_basis (insert z (G - {p}))\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "case False"], ["proof (state)\nthis:\n  y \\<notin> G\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "from assms(2)"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m", "obtain n where \"insert y (G - {p}) \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        insert y (G - {p}) \\<subseteq> dgrad_p_set d n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule replace_in_dgrad_p_set)"], ["proof (state)\nthis:\n  insert y (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "from assms(1) this step(3)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  insert y (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert y (G - {p}))", "have \"is_Groebner_basis (insert z (insert y (G - {p}) - {y}))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  insert y (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert y (G - {p}))\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert z (insert y (G - {p}) - {y}))", "proof (rule GB_replace_red_stable_GB_dgrad_p_set)"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> insert y (G - {p})\n 2. red (insert y (G - {p}) - {y}) y z", "from \\<open>red (G - {p}) y z\\<close> False"], ["proof (chain)\npicking this:\n  red (G - {p}) y z\n  y \\<notin> G", "show \"red ((insert y (G - {p})) - {y}) y z\""], ["proof (prove)\nusing this:\n  red (G - {p}) y z\n  y \\<notin> G\n\ngoal (1 subgoal):\n 1. red (insert y (G - {p}) - {y}) y z", "by simp"], ["proof (state)\nthis:\n  red (insert y (G - {p}) - {y}) y z\n\ngoal (1 subgoal):\n 1. y \\<in> insert y (G - {p})", "qed simp"], ["proof (state)\nthis:\n  is_Groebner_basis (insert z (insert y (G - {p}) - {y}))\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "moreover"], ["proof (state)\nthis:\n  is_Groebner_basis (insert z (insert y (G - {p}) - {y}))\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "from False"], ["proof (chain)\npicking this:\n  y \\<notin> G", "have \"... = (insert z (G - {p}))\""], ["proof (prove)\nusing this:\n  y \\<notin> G\n\ngoal (1 subgoal):\n 1. insert z (insert y (G - {p}) - {y}) = insert z (G - {p})", "by simp"], ["proof (state)\nthis:\n  insert z (insert y (G - {p}) - {y}) = insert z (G - {p})\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> is_Groebner_basis (insert z (G - {p}))", "ultimately"], ["proof (chain)\npicking this:\n  is_Groebner_basis (insert z (insert y (G - {p}) - {y}))\n  insert z (insert y (G - {p}) - {y}) = insert z (G - {p})", "show ?thesis"], ["proof (prove)\nusing this:\n  is_Groebner_basis (insert z (insert y (G - {p}) - {y}))\n  insert z (insert y (G - {p}) - {y}) = insert z (G - {p})\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert z (G - {p}))", "by simp"], ["proof (state)\nthis:\n  is_Groebner_basis (insert z (G - {p}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis (insert z (G - {p}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis (insert z (G - {p}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GB_replace_red_rtranclp_stable_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"G \\<subseteq> dgrad_p_set d m\"\n  assumes isGB: \"is_Groebner_basis G\" and \"p \\<in> G\" and ptoq: \"(red (G - {p}))\\<^sup>*\\<^sup>* p q\"\n  shows \"pmdl (insert q (G - {p})) = pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "using ptoq"], ["proof (prove)\nusing this:\n  (red (G - {p}))\\<^sup>*\\<^sup>* p q\n\ngoal (1 subgoal):\n 1. pmdl (insert q (G - {p})) = pmdl G", "proof (induct q rule: rtranclp_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. pmdl (insert p (G - {p})) = pmdl G\n 2. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        pmdl (insert y (G - {p})) = pmdl G\\<rbrakk>\n       \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. pmdl (insert p (G - {p})) = pmdl G\n 2. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        pmdl (insert y (G - {p})) = pmdl G\\<rbrakk>\n       \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "from \\<open>p \\<in> G\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> G", "show ?case"], ["proof (prove)\nusing this:\n  p \\<in> G\n\ngoal (1 subgoal):\n 1. pmdl (insert p (G - {p})) = pmdl G", "by (simp add: insert_absorb)"], ["proof (state)\nthis:\n  pmdl (insert p (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        pmdl (insert y (G - {p})) = pmdl G\\<rbrakk>\n       \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        pmdl (insert y (G - {p})) = pmdl G\\<rbrakk>\n       \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "case (step y z)"], ["proof (state)\nthis:\n  (red (G - {p}))\\<^sup>*\\<^sup>* p y\n  red (G - {p}) y z\n  pmdl (insert y (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(red (G - {p}))\\<^sup>*\\<^sup>* p y; red (G - {p}) y z;\n        pmdl (insert y (G - {p})) = pmdl G\\<rbrakk>\n       \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl G", "proof (cases \"y = p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y = p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<noteq> p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "case True"], ["proof (state)\nthis:\n  y = p\n\ngoal (2 subgoals):\n 1. y = p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<noteq> p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "from assms(1) assms(2) isGB \\<open>p \\<in> G\\<close> step(2)"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  is_Groebner_basis G\n  p \\<in> G\n  red (G - {p}) y z", "show ?thesis"], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  is_Groebner_basis G\n  p \\<in> G\n  red (G - {p}) y z\n\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl G", "unfolding True"], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  is_Groebner_basis G\n  p \\<in> G\n  red (G - {p}) p z\n\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl G", "by (rule GB_replace_red_stable_pmdl_dgrad_p_set)"], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. y \\<noteq> p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "case False"], ["proof (state)\nthis:\n  y \\<noteq> p\n\ngoal (1 subgoal):\n 1. y \\<noteq> p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "have gb: \"is_Groebner_basis (insert y (G - {p}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (insert y (G - {p}))", "by (rule GB_replace_red_rtranclp_stable_GB_dgrad_p_set, fact+)"], ["proof (state)\nthis:\n  is_Groebner_basis (insert y (G - {p}))\n\ngoal (1 subgoal):\n 1. y \\<noteq> p \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl G", "proof (cases \"y \\<in> G\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "case True"], ["proof (state)\nthis:\n  y \\<in> G\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "with \\<open>y \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  y \\<noteq> p\n  y \\<in> G", "have \"y \\<in> G - {p}\" (is \"_ \\<in> ?G'\")"], ["proof (prove)\nusing this:\n  y \\<noteq> p\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. y \\<in> G - {p}", "by blast"], ["proof (state)\nthis:\n  y \\<in> G - {p}\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "hence eq: \"insert y ?G' = ?G'\""], ["proof (prove)\nusing this:\n  y \\<in> G - {p}\n\ngoal (1 subgoal):\n 1. insert y (G - {p}) = G - {p}", "by auto"], ["proof (state)\nthis:\n  insert y (G - {p}) = G - {p}\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "from \\<open>y \\<in> ?G'\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> G - {p}", "have \"y \\<in> pmdl ?G'\""], ["proof (prove)\nusing this:\n  y \\<in> G - {p}\n\ngoal (1 subgoal):\n 1. y \\<in> pmdl (G - {p})", "by (rule pmdl.span_base)"], ["proof (state)\nthis:\n  y \\<in> pmdl (G - {p})\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "have \"z \\<in> pmdl ?G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> pmdl (G - {p})", "by (rule pmdl_closed_red, rule subset_refl, fact+)"], ["proof (state)\nthis:\n  z \\<in> pmdl (G - {p})\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "hence \"pmdl (insert z ?G') = pmdl ?G'\""], ["proof (prove)\nusing this:\n  z \\<in> pmdl (G - {p})\n\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl (G - {p})", "by (rule pmdl.span_insert_idI)"], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl (G - {p})\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "also"], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl (G - {p})\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "from step(3)"], ["proof (chain)\npicking this:\n  pmdl (insert y (G - {p})) = pmdl G", "have \"... = pmdl G\""], ["proof (prove)\nusing this:\n  pmdl (insert y (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. pmdl (G - {p}) = pmdl G", "by (simp only: eq)"], ["proof (state)\nthis:\n  pmdl (G - {p}) = pmdl G\n\ngoal (2 subgoals):\n 1. y \\<in> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G\n 2. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "finally"], ["proof (chain)\npicking this:\n  pmdl (insert z (G - {p})) = pmdl G", "show ?thesis"], ["proof (prove)\nusing this:\n  pmdl (insert z (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl G", "."], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "case False"], ["proof (state)\nthis:\n  y \\<notin> G\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "from assms(2)"], ["proof (chain)\npicking this:\n  G \\<subseteq> dgrad_p_set d m", "obtain n where 1: \"insert y (G - {p}) \\<subseteq> dgrad_p_set d n\""], ["proof (prove)\nusing this:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        insert y (G - {p}) \\<subseteq> dgrad_p_set d n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule replace_in_dgrad_p_set)"], ["proof (state)\nthis:\n  insert y (G - {p}) \\<subseteq> dgrad_p_set d n\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "from False"], ["proof (chain)\npicking this:\n  y \\<notin> G", "have \"pmdl (insert z (G - {p})) = pmdl (insert z (insert y (G - {p}) - {y}))\""], ["proof (prove)\nusing this:\n  y \\<notin> G\n\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl (insert z (insert y (G - {p}) - {y}))", "by auto"], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl (insert z (insert y (G - {p}) - {y}))\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "also"], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl (insert z (insert y (G - {p}) - {y}))\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "from assms(1) 1 gb"], ["proof (chain)\npicking this:\n  dickson_grading d\n  insert y (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert y (G - {p}))", "have \"... = pmdl (insert y (G - {p}))\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  insert y (G - {p}) \\<subseteq> dgrad_p_set d n\n  is_Groebner_basis (insert y (G - {p}))\n\ngoal (1 subgoal):\n 1. pmdl (insert z (insert y (G - {p}) - {y})) = pmdl (insert y (G - {p}))", "proof (rule GB_replace_red_stable_pmdl_dgrad_p_set)"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> insert y (G - {p})\n 2. red (insert y (G - {p}) - {y}) y z", "from step(2) False"], ["proof (chain)\npicking this:\n  red (G - {p}) y z\n  y \\<notin> G", "show \"red ((insert y (G - {p})) - {y}) y z\""], ["proof (prove)\nusing this:\n  red (G - {p}) y z\n  y \\<notin> G\n\ngoal (1 subgoal):\n 1. red (insert y (G - {p}) - {y}) y z", "by simp"], ["proof (state)\nthis:\n  red (insert y (G - {p}) - {y}) y z\n\ngoal (1 subgoal):\n 1. y \\<in> insert y (G - {p})", "qed simp"], ["proof (state)\nthis:\n  pmdl (insert z (insert y (G - {p}) - {y})) = pmdl (insert y (G - {p}))\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "also"], ["proof (state)\nthis:\n  pmdl (insert z (insert y (G - {p}) - {y})) = pmdl (insert y (G - {p}))\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "have \"... = pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (insert y (G - {p})) = pmdl G", "by fact"], ["proof (state)\nthis:\n  pmdl (insert y (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. y \\<notin> G \\<Longrightarrow> pmdl (insert z (G - {p})) = pmdl G", "finally"], ["proof (chain)\npicking this:\n  pmdl (insert z (G - {p})) = pmdl G", "show ?thesis"], ["proof (prove)\nusing this:\n  pmdl (insert z (G - {p})) = pmdl G\n\ngoal (1 subgoal):\n 1. pmdl (insert z (G - {p})) = pmdl G", "."], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmdl (insert z (G - {p})) = pmdl G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas GB_replace_lt_adds_stable_GB_finite =\n  GB_replace_lt_adds_stable_GB_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_replace_lt_adds_stable_pmdl_finite =\n  GB_replace_lt_adds_stable_pmdl_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_replace_red_stable_GB_finite =\n  GB_replace_red_stable_GB_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_replace_red_stable_pmdl_finite =\n  GB_replace_red_stable_pmdl_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_replace_red_rtranclp_stable_GB_finite =\n  GB_replace_red_rtranclp_stable_GB_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "lemmas GB_replace_red_rtranclp_stable_pmdl_finite =\n  GB_replace_red_rtranclp_stable_pmdl_dgrad_p_set[OF dickson_grading_dgrad_dummy dgrad_p_set_exhaust_expl]"], ["", "subsection \\<open>An Inconstructive Proof of the Existence of Finite Gr\\\"obner Bases\\<close>"], ["", "lemma ex_finite_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  obtains G where \"G \\<subseteq> dgrad_p_set d m\" and \"finite G\" and \"is_Groebner_basis G\" and \"pmdl G = pmdl F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define S where \"S = {lt f | f. f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0}\""], ["proof (state)\nthis:\n  S =\n  {lt f |f.\n   f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note assms(1)"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  dickson_grading d\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from _ assms(2)"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  finite (component_of_term ` Keys F)", "have \"finite (component_of_term ` S)\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  finite (component_of_term ` Keys F)\n\ngoal (1 subgoal):\n 1. finite (component_of_term ` S)", "proof (rule finite_subset)"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term ` S \\<subseteq> component_of_term ` Keys F", "have \"component_of_term ` S \\<subseteq> component_of_term ` Keys (pmdl F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term ` S \\<subseteq> component_of_term ` Keys (pmdl F)", "by (rule image_mono, rule, auto simp add: S_def intro!: in_KeysI lt_in_keys)"], ["proof (state)\nthis:\n  component_of_term ` S \\<subseteq> component_of_term ` Keys (pmdl F)\n\ngoal (1 subgoal):\n 1. component_of_term ` S \\<subseteq> component_of_term ` Keys F", "thus \"component_of_term ` S \\<subseteq> component_of_term ` Keys F\""], ["proof (prove)\nusing this:\n  component_of_term ` S \\<subseteq> component_of_term ` Keys (pmdl F)\n\ngoal (1 subgoal):\n 1. component_of_term ` S \\<subseteq> component_of_term ` Keys F", "by (simp only: components_pmdl)"], ["proof (state)\nthis:\n  component_of_term ` S \\<subseteq> component_of_term ` Keys F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (component_of_term ` S)\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  finite (component_of_term ` S)\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"pp_of_term ` S \\<subseteq> dgrad_set d m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp_of_term ` S \\<subseteq> dgrad_set d m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "assume \"s \\<in> pp_of_term ` S\""], ["proof (state)\nthis:\n  s \\<in> pp_of_term ` S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "then"], ["proof (chain)\npicking this:\n  s \\<in> pp_of_term ` S", "obtain u where \"u \\<in> S\" and \"s = pp_of_term u\""], ["proof (prove)\nusing this:\n  s \\<in> pp_of_term ` S\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> S; s = pp_of_term u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  u \\<in> S\n  s = pp_of_term u\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "from this(1)"], ["proof (chain)\npicking this:\n  u \\<in> S", "obtain f where \"f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0\" and u: \"u = lt f\""], ["proof (prove)\nusing this:\n  u \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> pmdl F \\<and>\n                 f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0;\n         u = lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding S_def"], ["proof (prove)\nusing this:\n  u \\<in> {lt f |f.\n           f \\<in> pmdl F \\<and>\n           f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> pmdl F \\<and>\n                 f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0;\n         u = lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0\n  u = lt f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "from this(1)"], ["proof (chain)\npicking this:\n  f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0", "have \"f \\<in> dgrad_p_set d m\" and \"f \\<noteq> 0\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f \\<in> dgrad_p_set d m &&& f \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "have \"u \\<in> keys f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> keys f", "unfolding u"], ["proof (prove)\ngoal (1 subgoal):\n 1. lt f \\<in> keys f", "by (rule lt_in_keys, fact)"], ["proof (state)\nthis:\n  u \\<in> keys f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "with \\<open>f \\<in> dgrad_p_set d m\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> dgrad_p_set d m\n  u \\<in> keys f", "have \"d (pp_of_term u) \\<le> m\""], ["proof (prove)\nusing this:\n  f \\<in> dgrad_p_set d m\n  u \\<in> keys f\n\ngoal (1 subgoal):\n 1. d (pp_of_term u) \\<le> m", "unfolding u"], ["proof (prove)\nusing this:\n  f \\<in> dgrad_p_set d m\n  lt f \\<in> keys f\n\ngoal (1 subgoal):\n 1. d (lp f) \\<le> m", "by (rule dgrad_p_setD)"], ["proof (state)\nthis:\n  d (pp_of_term u) \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> pp_of_term ` S \\<Longrightarrow> x \\<in> dgrad_set d m", "thus \"s \\<in> dgrad_set d m\""], ["proof (prove)\nusing this:\n  d (pp_of_term u) \\<le> m\n\ngoal (1 subgoal):\n 1. s \\<in> dgrad_set d m", "by (simp add: \\<open>s = pp_of_term u\\<close> dgrad_set_def)"], ["proof (state)\nthis:\n  s \\<in> dgrad_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pp_of_term ` S \\<subseteq> dgrad_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  dickson_grading d\n  finite (component_of_term ` S)\n  pp_of_term ` S \\<subseteq> dgrad_set d m", "obtain T where \"finite T\" and \"T \\<subseteq> S\" and *: \"\\<And>s. s \\<in> S \\<Longrightarrow> (\\<exists>t\\<in>T. t adds\\<^sub>t s)\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  finite (component_of_term ` S)\n  pp_of_term ` S \\<subseteq> dgrad_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>finite T; T \\<subseteq> S;\n         \\<And>s.\n            s \\<in> S \\<Longrightarrow>\n            \\<exists>t\\<in>T. t adds\\<^sub>t s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule ex_finite_adds_term, blast)"], ["proof (state)\nthis:\n  finite T\n  T \\<subseteq> S\n  ?s39 \\<in> S \\<Longrightarrow> \\<exists>t\\<in>T. t adds\\<^sub>t ?s39\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define crit where \"crit = (\\<lambda>t f. f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0 \\<and> t = lt f)\""], ["proof (state)\nthis:\n  crit =\n  (\\<lambda>t f.\n      f \\<in> pmdl F \\<and>\n      f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0 \\<and> t = lt f)\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have ex_crit: \"t \\<in> T \\<Longrightarrow> (\\<exists>f. crit t f)\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>f. crit t f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>f. crit t f", "assume \"t \\<in> T\""], ["proof (state)\nthis:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>f. crit t f", "from this \\<open>T \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> T\n  T \\<subseteq> S", "have \"t \\<in> S\""], ["proof (prove)\nusing this:\n  t \\<in> T\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. t \\<in> S", ".."], ["proof (state)\nthis:\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>f. crit t f", "then"], ["proof (chain)\npicking this:\n  t \\<in> S", "obtain f where \"f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0\" and \"t = lt f\""], ["proof (prove)\nusing this:\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> pmdl F \\<and>\n                 f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0;\n         t = lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding S_def"], ["proof (prove)\nusing this:\n  t \\<in> {lt f |f.\n           f \\<in> pmdl F \\<and>\n           f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> pmdl F \\<and>\n                 f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0;\n         t = lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0\n  t = lt f\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>f. crit t f", "thus \"\\<exists>f. crit t f\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0\n  t = lt f\n\ngoal (1 subgoal):\n 1. \\<exists>f. crit t f", "unfolding crit_def"], ["proof (prove)\nusing this:\n  f \\<in> pmdl F \\<and> f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0\n  t = lt f\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       f \\<in> pmdl F \\<and>\n       f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0 \\<and> t = lt f", "by blast"], ["proof (state)\nthis:\n  \\<exists>f. crit t f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t39 \\<in> T \\<Longrightarrow> \\<exists>f. crit ?t39 f\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define G where \"G = (\\<lambda>t. SOME g. crit t g) ` T\""], ["proof (state)\nthis:\n  G = (\\<lambda>t. SOME g. crit t g) ` T\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have G: \"g \\<in> G \\<Longrightarrow> g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow>\n    g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow>\n    g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "assume \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow>\n    g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  g \\<in> G", "obtain t where \"t \\<in> T\" and g: \"g = (SOME h. crit t h)\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> T; g = (SOME h. crit t h)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding G_def"], ["proof (prove)\nusing this:\n  g \\<in> (\\<lambda>t. Eps (crit t)) ` T\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> T; g = (SOME h. crit t h)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  t \\<in> T\n  g = (SOME h. crit t h)\n\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow>\n    g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "have \"crit t g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit t g", "unfolding g"], ["proof (prove)\ngoal (1 subgoal):\n 1. crit t (Eps (crit t))", "by (rule someI_ex, rule ex_crit, fact)"], ["proof (state)\nthis:\n  crit t g\n\ngoal (1 subgoal):\n 1. g \\<in> G \\<Longrightarrow>\n    g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "thus \"g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\""], ["proof (prove)\nusing this:\n  crit t g\n\ngoal (1 subgoal):\n 1. g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "by (simp add: crit_def)"], ["proof (state)\nthis:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?g39 \\<in> G \\<Longrightarrow>\n  ?g39 \\<in> pmdl F \\<and> ?g39 \\<in> dgrad_p_set d m \\<and> ?g39 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have **: \"t \\<in> T \\<Longrightarrow> (\\<exists>g\\<in>G. lt g = t)\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>g\\<in>G. lt g = t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>g\\<in>G. lt g = t", "assume \"t \\<in> T\""], ["proof (state)\nthis:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>g\\<in>G. lt g = t", "define g where \"g = (SOME h. crit t h)\""], ["proof (state)\nthis:\n  g = (SOME h. crit t h)\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>g\\<in>G. lt g = t", "from \\<open>t \\<in> T\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> T", "have \"g \\<in> G\""], ["proof (prove)\nusing this:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. g \\<in> G", "unfolding g_def G_def"], ["proof (prove)\nusing this:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. Eps (crit t) \\<in> (\\<lambda>t. Eps (crit t)) ` T", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> \\<exists>g\\<in>G. lt g = t", "thus \"\\<exists>g\\<in>G. lt g = t\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. lt g = t", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. lt g = t", "have \"crit t g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. crit t g", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. crit t (Eps (crit t))", "by (rule someI_ex, rule ex_crit, fact)"], ["proof (state)\nthis:\n  crit t g\n\ngoal (1 subgoal):\n 1. lt g = t", "thus \"lt g = t\""], ["proof (prove)\nusing this:\n  crit t g\n\ngoal (1 subgoal):\n 1. lt g = t", "by (simp add: crit_def)"], ["proof (state)\nthis:\n  lt g = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. lt g = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t39 \\<in> T \\<Longrightarrow> \\<exists>g\\<in>G. lt g = ?t39\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have adds: \"f \\<in> pmdl F \\<Longrightarrow> f \\<in> dgrad_p_set d m \\<Longrightarrow> f \\<noteq> 0 \\<Longrightarrow> (\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f)\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "assume \"f \\<in> pmdl F\" and \"f \\<in> dgrad_p_set d m\" and \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  f \\<in> pmdl F\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "hence \"lt f \\<in> S\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl F\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt f \\<in> S", "unfolding S_def"], ["proof (prove)\nusing this:\n  f \\<in> pmdl F\n  f \\<in> dgrad_p_set d m\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt f\n    \\<in> {lt f |f.\n           f \\<in> pmdl F \\<and>\n           f \\<in> dgrad_p_set d m \\<and> f \\<noteq> 0}", "by blast"], ["proof (state)\nthis:\n  lt f \\<in> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "hence \"\\<exists>t\\<in>T. t adds\\<^sub>t (lt f)\""], ["proof (prove)\nusing this:\n  lt f \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>T. t adds\\<^sub>t lt f", "by (rule *)"], ["proof (state)\nthis:\n  \\<exists>t\\<in>T. t adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "then"], ["proof (chain)\npicking this:\n  \\<exists>t\\<in>T. t adds\\<^sub>t lt f", "obtain t where \"t \\<in> T\" and \"t adds\\<^sub>t (lt f)\""], ["proof (prove)\nusing this:\n  \\<exists>t\\<in>T. t adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> T; t adds\\<^sub>t lt f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  t \\<in> T\n  t adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "from this(1)"], ["proof (chain)\npicking this:\n  t \\<in> T", "have \"\\<exists>g\\<in>G. lt g = t\""], ["proof (prove)\nusing this:\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. lt g = t", "by (rule **)"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. lt g = t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "then"], ["proof (chain)\npicking this:\n  \\<exists>g\\<in>G. lt g = t", "obtain g where \"g \\<in> G\" and \"lt g = t\""], ["proof (prove)\nusing this:\n  \\<exists>g\\<in>G. lt g = t\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; lt g = t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  g \\<in> G\n  lt g = t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> pmdl F; f \\<in> dgrad_p_set d m; f \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>g\\<in>G.\n                         g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "show \"\\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f", "proof (intro bexI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?g \\<noteq> 0\n 2. lt ?g adds\\<^sub>t lt f\n 3. ?g \\<in> G", "from G[OF \\<open>g \\<in> G\\<close>]"], ["proof (chain)\npicking this:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "show \"g \\<noteq> 0\""], ["proof (prove)\nusing this:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g \\<noteq> 0", "by (elim conjE)"], ["proof (state)\nthis:\n  g \\<noteq> 0\n\ngoal (2 subgoals):\n 1. lt g adds\\<^sub>t lt f\n 2. g \\<in> G", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. lt g adds\\<^sub>t lt f\n 2. g \\<in> G", "from \\<open>t adds\\<^sub>t lt f\\<close>"], ["proof (chain)\npicking this:\n  t adds\\<^sub>t lt f", "show \"lt g adds\\<^sub>t lt f\""], ["proof (prove)\nusing this:\n  t adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. lt g adds\\<^sub>t lt f", "by (simp only: \\<open>lt g = t\\<close>)"], ["proof (state)\nthis:\n  lt g adds\\<^sub>t lt f\n\ngoal (1 subgoal):\n 1. g \\<in> G", "qed fact"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?f39 \\<in> pmdl F; ?f39 \\<in> dgrad_p_set d m;\n   ?f39 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt ?f39\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have sub1: \"pmdl G \\<subseteq> pmdl F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl G \\<subseteq> pmdl F", "proof (rule pmdl.span_subset_spanI, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> pmdl F", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> pmdl F", "assume \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> pmdl F", "from G[OF this]"], ["proof (chain)\npicking this:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "show \"g \\<in> pmdl F\""], ["proof (prove)\nusing this:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g \\<in> pmdl F", ".."], ["proof (state)\nthis:\n  g \\<in> pmdl F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmdl G \\<subseteq> pmdl F\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have sub2: \"G \\<subseteq> dgrad_p_set d m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> dgrad_p_set d m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> dgrad_p_set d m", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> dgrad_p_set d m", "assume \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> dgrad_p_set d m", "from G[OF this]"], ["proof (chain)\npicking this:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "show \"g \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g \\<in> dgrad_p_set d m", "by (elim conjE)"], ["proof (state)\nthis:\n  g \\<in> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<subseteq> dgrad_p_set d m; finite G;\n         is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. ?G39 \\<subseteq> dgrad_p_set d m\n 2. finite ?G39\n 3. is_Groebner_basis ?G39\n 4. pmdl ?G39 = pmdl F", "from \\<open>finite T\\<close>"], ["proof (chain)\npicking this:\n  finite T", "show \"finite G\""], ["proof (prove)\nusing this:\n  finite T\n\ngoal (1 subgoal):\n 1. finite G", "unfolding G_def"], ["proof (prove)\nusing this:\n  finite T\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>t. Eps (crit t)) ` T)", ".."], ["proof (state)\nthis:\n  finite G\n\ngoal (3 subgoals):\n 1. G \\<subseteq> dgrad_p_set d m\n 2. is_Groebner_basis G\n 3. pmdl G = pmdl F", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. G \\<subseteq> dgrad_p_set d m\n 2. is_Groebner_basis G\n 3. pmdl G = pmdl F", "from assms(1) sub2 adds"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  \\<lbrakk>?f39 \\<in> pmdl F; ?f39 \\<in> dgrad_p_set d m;\n   ?f39 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt ?f39", "show \"is_Groebner_basis G\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  \\<lbrakk>?f39 \\<in> pmdl F; ?f39 \\<in> dgrad_p_set d m;\n   ?f39 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g\\<in>G.\n                       g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt ?f39\n\ngoal (1 subgoal):\n 1. is_Groebner_basis G", "proof (rule isGB_I_adds_lt)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<in> pmdl F\n 2. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<in> dgrad_p_set d m\n 3. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<noteq> 0", "fix f"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<in> pmdl F\n 2. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<in> dgrad_p_set d m\n 3. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<noteq> 0", "assume \"f \\<in> pmdl G\""], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal (3 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<in> pmdl F\n 2. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<in> dgrad_p_set d m\n 3. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<noteq> 0", "from this sub1"], ["proof (chain)\npicking this:\n  f \\<in> pmdl G\n  pmdl G \\<subseteq> pmdl F", "show \"f \\<in> pmdl F\""], ["proof (prove)\nusing this:\n  f \\<in> pmdl G\n  pmdl G \\<subseteq> pmdl F\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl F", ".."], ["proof (state)\nthis:\n  f \\<in> pmdl F\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<in> dgrad_p_set d m\n 2. \\<And>f.\n       \\<lbrakk>f \\<in> pmdl G; f \\<in> dgrad_p_set d m;\n        f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> f \\<noteq> 0", "qed"], ["proof (state)\nthis:\n  is_Groebner_basis G\n\ngoal (2 subgoals):\n 1. G \\<subseteq> dgrad_p_set d m\n 2. pmdl G = pmdl F", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. G \\<subseteq> dgrad_p_set d m\n 2. pmdl G = pmdl F", "show \"pmdl G = pmdl F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl G = pmdl F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pmdl G \\<subseteq> pmdl F\n 2. pmdl F \\<subseteq> pmdl G", "show \"pmdl F \\<subseteq> pmdl G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl F \\<subseteq> pmdl G", "proof (rule pmdl.span_subset_spanI, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> pmdl G", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> pmdl G", "assume \"f \\<in> F\""], ["proof (state)\nthis:\n  f \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> pmdl G", "hence \"f \\<in> pmdl F\""], ["proof (prove)\nusing this:\n  f \\<in> F\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl F", "by (rule pmdl.span_base)"], ["proof (state)\nthis:\n  f \\<in> pmdl F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> pmdl G", "from \\<open>f \\<in> F\\<close> assms(3)"], ["proof (chain)\npicking this:\n  f \\<in> F\n  F \\<subseteq> dgrad_p_set d m", "have \"f \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  f \\<in> F\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. f \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  f \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> pmdl G", "with assms(1) sub2 sub1 _ \\<open>f \\<in> pmdl F\\<close>"], ["proof (chain)\npicking this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  pmdl G \\<subseteq> pmdl F\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  f \\<in> pmdl F\n  f \\<in> dgrad_p_set d m", "have \"(red G)\\<^sup>*\\<^sup>* f 0\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  G \\<subseteq> dgrad_p_set d m\n  pmdl G \\<subseteq> pmdl F\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  f \\<in> pmdl F\n  f \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (red G)\\<^sup>*\\<^sup>* f 0", "proof (rule is_red_implies_0_red_dgrad_p_set)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl F; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl F; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "assume \"q \\<in> pmdl F\" and \"q \\<in> dgrad_p_set d m\" and \"q \\<noteq> 0\""], ["proof (state)\nthis:\n  q \\<in> pmdl F\n  q \\<in> dgrad_p_set d m\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl F; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "hence \"(\\<exists>g \\<in> G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt q)\""], ["proof (prove)\nusing this:\n  q \\<in> pmdl F\n  q \\<in> dgrad_p_set d m\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt q", "by (rule adds)"], ["proof (state)\nthis:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt q\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl F; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "then"], ["proof (chain)\npicking this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt q", "obtain g where \"g \\<in> G\" and \"g \\<noteq> 0\" and \"lt g adds\\<^sub>t lt q\""], ["proof (prove)\nusing this:\n  \\<exists>g\\<in>G. g \\<noteq> 0 \\<and> lt g adds\\<^sub>t lt q\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> G; g \\<noteq> 0; lt g adds\\<^sub>t lt q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt q\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> pmdl F; q \\<in> dgrad_p_set d m;\n        q \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> is_red G q", "thus \"is_red G q\""], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt q\n\ngoal (1 subgoal):\n 1. is_red G q", "using \\<open>q \\<noteq> 0\\<close> is_red_indI1"], ["proof (prove)\nusing this:\n  g \\<in> G\n  g \\<noteq> 0\n  lt g adds\\<^sub>t lt q\n  q \\<noteq> 0\n  \\<lbrakk>?f \\<in> ?F; ?f \\<noteq> 0; ?p \\<noteq> 0;\n   lt ?f adds\\<^sub>t lt ?p\\<rbrakk>\n  \\<Longrightarrow> is_red ?F ?p\n\ngoal (1 subgoal):\n 1. is_red G q", "by blast"], ["proof (state)\nthis:\n  is_red G q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (red G)\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> pmdl G", "thus \"f \\<in> pmdl G\""], ["proof (prove)\nusing this:\n  (red G)\\<^sup>*\\<^sup>* f 0\n\ngoal (1 subgoal):\n 1. f \\<in> pmdl G", "by (rule red_rtranclp_0_in_pmdl)"], ["proof (state)\nthis:\n  f \\<in> pmdl G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pmdl F \\<subseteq> pmdl G\n\ngoal (1 subgoal):\n 1. pmdl G \\<subseteq> pmdl F", "qed fact"], ["proof (state)\nthis:\n  pmdl G = pmdl F\n\ngoal (1 subgoal):\n 1. G \\<subseteq> dgrad_p_set d m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. G \\<subseteq> dgrad_p_set d m", "show \"G \\<subseteq> dgrad_p_set d m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> dgrad_p_set d m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> dgrad_p_set d m", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> dgrad_p_set d m", "assume \"g \\<in> G\""], ["proof (state)\nthis:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> dgrad_p_set d m", "hence \"g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\""], ["proof (prove)\nusing this:\n  g \\<in> G\n\ngoal (1 subgoal):\n 1. g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0", "by (rule G)"], ["proof (state)\nthis:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G \\<Longrightarrow> x \\<in> dgrad_p_set d m", "thus \"g \\<in> dgrad_p_set d m\""], ["proof (prove)\nusing this:\n  g \\<in> pmdl F \\<and> g \\<in> dgrad_p_set d m \\<and> g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g \\<in> dgrad_p_set d m", "by (elim conjE)"], ["proof (state)\nthis:\n  g \\<in> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  G \\<subseteq> dgrad_p_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The preceding lemma justifies the following definition.\\<close>"], ["", "definition some_GB :: \"('t \\<Rightarrow>\\<^sub>0 'b) set \\<Rightarrow> ('t \\<Rightarrow>\\<^sub>0 'b::field) set\"\n  where \"some_GB F = (SOME G. finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F)\""], ["", "lemma some_GB_props_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"finite (some_GB F) \\<and> is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (some_GB F) \\<and>\n    is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (some_GB F) \\<and>\n    is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F", "from assms"], ["proof (chain)\npicking this:\n  dickson_grading d\n  finite (component_of_term ` Keys F)\n  F \\<subseteq> dgrad_p_set d m", "obtain G where \"finite G\" and \"is_Groebner_basis G\" and \"pmdl G = pmdl F\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  finite (component_of_term ` Keys F)\n  F \\<subseteq> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>finite G; is_Groebner_basis G; pmdl G = pmdl F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule ex_finite_GB_dgrad_p_set)"], ["proof (state)\nthis:\n  finite G\n  is_Groebner_basis G\n  pmdl G = pmdl F\n\ngoal (1 subgoal):\n 1. finite (some_GB F) \\<and>\n    is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F", "hence \"finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F\""], ["proof (prove)\nusing this:\n  finite G\n  is_Groebner_basis G\n  pmdl G = pmdl F\n\ngoal (1 subgoal):\n 1. finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F", "by simp"], ["proof (state)\nthis:\n  finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F\n\ngoal (1 subgoal):\n 1. finite (some_GB F) \\<and>\n    is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F", "thus \"finite (some_GB F) \\<and> is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F\""], ["proof (prove)\nusing this:\n  finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F\n\ngoal (1 subgoal):\n 1. finite (some_GB F) \\<and>\n    is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F", "unfolding some_GB_def"], ["proof (prove)\nusing this:\n  finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F\n\ngoal (1 subgoal):\n 1. finite\n     (SOME G.\n         finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F) \\<and>\n    is_Groebner_basis\n     (SOME G.\n         finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F) \\<and>\n    pmdl\n     (SOME G. finite G \\<and> is_Groebner_basis G \\<and> pmdl G = pmdl F) =\n    pmdl F", "by (rule someI)"], ["proof (state)\nthis:\n  finite (some_GB F) \\<and>\n  is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_some_GB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"finite (some_GB F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (some_GB F)", "using some_GB_props_dgrad_p_set[OF assms]"], ["proof (prove)\nusing this:\n  finite (some_GB F) \\<and>\n  is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F\n\ngoal (1 subgoal):\n 1. finite (some_GB F)", ".."], ["", "lemma some_GB_isGB_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"is_Groebner_basis (some_GB F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_Groebner_basis (some_GB F)", "using some_GB_props_dgrad_p_set[OF assms]"], ["proof (prove)\nusing this:\n  finite (some_GB F) \\<and>\n  is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F\n\ngoal (1 subgoal):\n 1. is_Groebner_basis (some_GB F)", "by (elim conjE)"], ["", "lemma some_GB_pmdl_dgrad_p_set:\n  assumes \"dickson_grading d\" and \"finite (component_of_term ` Keys F)\" and \"F \\<subseteq> dgrad_p_set d m\"\n  shows \"pmdl (some_GB F) = pmdl F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmdl (some_GB F) = pmdl F", "using some_GB_props_dgrad_p_set[OF assms]"], ["proof (prove)\nusing this:\n  finite (some_GB F) \\<and>\n  is_Groebner_basis (some_GB F) \\<and> pmdl (some_GB F) = pmdl F\n\ngoal (1 subgoal):\n 1. pmdl (some_GB F) = pmdl F", "by (elim conjE)"], ["", "lemma finite_imp_finite_component_Keys:\n  assumes \"finite F\"\n  shows \"finite (component_of_term ` Keys F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (component_of_term ` Keys F)", "by (rule finite_imageI, rule finite_Keys, fact)"], ["", "lemma finite_some_GB_finite: \"finite F \\<Longrightarrow> finite (some_GB F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<Longrightarrow> finite (some_GB F)", "by (rule finite_some_GB_dgrad_p_set, rule dickson_grading_dgrad_dummy,\n      erule finite_imp_finite_component_Keys, erule dgrad_p_set_exhaust_expl)"], ["", "lemma some_GB_isGB_finite: \"finite F \\<Longrightarrow> is_Groebner_basis (some_GB F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<Longrightarrow> is_Groebner_basis (some_GB F)", "by (rule some_GB_isGB_dgrad_p_set, rule dickson_grading_dgrad_dummy,\n      erule finite_imp_finite_component_Keys, erule dgrad_p_set_exhaust_expl)"], ["", "lemma some_GB_pmdl_finite: \"finite F \\<Longrightarrow> pmdl (some_GB F) = pmdl F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<Longrightarrow> pmdl (some_GB F) = pmdl F", "by (rule some_GB_pmdl_dgrad_p_set, rule dickson_grading_dgrad_dummy,\n      erule finite_imp_finite_component_Keys, erule dgrad_p_set_exhaust_expl)"], ["", "text \\<open>Theory \\<open>Buchberger\\<close> implements an algorithm for effectively computing Gr\\\"obner bases.\\<close>"], ["", "subsection \\<open>Relation \\<open>red_supset\\<close>\\<close>"], ["", "text \\<open>The following relation is needed for proving the termination of Buchberger's algorithm (i.\\,e.\n  function \\<open>gb_schema_aux\\<close>).\\<close>"], ["", "definition red_supset::\"('t \\<Rightarrow>\\<^sub>0 'b::field) set \\<Rightarrow> ('t \\<Rightarrow>\\<^sub>0 'b) set \\<Rightarrow> bool\" (infixl \"\\<sqsupset>p\" 50)\n  where \"red_supset A B \\<equiv> (\\<exists>p. is_red A p \\<and> \\<not> is_red B p) \\<and> (\\<forall>p. is_red B p \\<longrightarrow> is_red A p)\""], ["", "lemma red_supsetE:\n  assumes \"A \\<sqsupset>p B\"\n  obtains p where \"is_red A p\" and \"\\<not> is_red B p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>is_red A p; \\<not> is_red B p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>is_red A p; \\<not> is_red B p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  A \\<sqsupset>p B", "have \"\\<exists>p. is_red A p \\<and> \\<not> is_red B p\""], ["proof (prove)\nusing this:\n  A \\<sqsupset>p B\n\ngoal (1 subgoal):\n 1. \\<exists>p. is_red A p \\<and> \\<not> is_red B p", "by (simp add: red_supset_def)"], ["proof (state)\nthis:\n  \\<exists>p. is_red A p \\<and> \\<not> is_red B p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>is_red A p; \\<not> is_red B p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this"], ["proof (chain)\npicking this:\n  \\<exists>p. is_red A p \\<and> \\<not> is_red B p", "obtain p where \"is_red A p\" and \" \\<not> is_red B p\""], ["proof (prove)\nusing this:\n  \\<exists>p. is_red A p \\<and> \\<not> is_red B p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>is_red A p; \\<not> is_red B p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_red A p\n  \\<not> is_red B p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>is_red A p; \\<not> is_red B p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_red A p\n  \\<not> is_red B p\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma red_supsetD:\n  assumes a1: \"A \\<sqsupset>p B\" and a2: \"is_red B p\"\n  shows \"is_red A p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red A p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_red A p", "from assms"], ["proof (chain)\npicking this:\n  A \\<sqsupset>p B\n  is_red B p", "have \"\\<forall>p. is_red B p \\<longrightarrow> is_red A p\""], ["proof (prove)\nusing this:\n  A \\<sqsupset>p B\n  is_red B p\n\ngoal (1 subgoal):\n 1. \\<forall>p. is_red B p \\<longrightarrow> is_red A p", "by (simp add: red_supset_def)"], ["proof (state)\nthis:\n  \\<forall>p. is_red B p \\<longrightarrow> is_red A p\n\ngoal (1 subgoal):\n 1. is_red A p", "hence \"is_red B p \\<longrightarrow> is_red A p\""], ["proof (prove)\nusing this:\n  \\<forall>p. is_red B p \\<longrightarrow> is_red A p\n\ngoal (1 subgoal):\n 1. is_red B p \\<longrightarrow> is_red A p", ".."], ["proof (state)\nthis:\n  is_red B p \\<longrightarrow> is_red A p\n\ngoal (1 subgoal):\n 1. is_red A p", "from a2 this"], ["proof (chain)\npicking this:\n  is_red B p\n  is_red B p \\<longrightarrow> is_red A p", "show ?thesis"], ["proof (prove)\nusing this:\n  is_red B p\n  is_red B p \\<longrightarrow> is_red A p\n\ngoal (1 subgoal):\n 1. is_red A p", "by simp"], ["proof (state)\nthis:\n  is_red A p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma red_supsetI [intro]:\n  assumes \"\\<And>q. is_red B q \\<Longrightarrow> is_red A q\" and \"is_red A p\" and \"\\<not> is_red B p\"\n  shows \"A \\<sqsupset>p B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<sqsupset>p B", "unfolding red_supset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>p. is_red A p \\<and> \\<not> is_red B p) \\<and>\n    (\\<forall>p. is_red B p \\<longrightarrow> is_red A p)", "using assms"], ["proof (prove)\nusing this:\n  is_red B ?q41 \\<Longrightarrow> is_red A ?q41\n  is_red A p\n  \\<not> is_red B p\n\ngoal (1 subgoal):\n 1. (\\<exists>p. is_red A p \\<and> \\<not> is_red B p) \\<and>\n    (\\<forall>p. is_red B p \\<longrightarrow> is_red A p)", "by auto"], ["", "lemma red_supset_insertI:\n  assumes \"x \\<noteq> 0\" and \"\\<not> is_red A x\"\n  shows \"(insert x A) \\<sqsupset>p A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x A \\<sqsupset>p A", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q. is_red A q \\<Longrightarrow> is_red (insert x A) q\n 2. is_red (insert x A) ?p\n 3. \\<not> is_red A ?p", "fix q"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q. is_red A q \\<Longrightarrow> is_red (insert x A) q\n 2. is_red (insert x A) ?p\n 3. \\<not> is_red A ?p", "assume \"is_red A q\""], ["proof (state)\nthis:\n  is_red A q\n\ngoal (3 subgoals):\n 1. \\<And>q. is_red A q \\<Longrightarrow> is_red (insert x A) q\n 2. is_red (insert x A) ?p\n 3. \\<not> is_red A ?p", "thus \"is_red (insert x A) q\""], ["proof (prove)\nusing this:\n  is_red A q\n\ngoal (1 subgoal):\n 1. is_red (insert x A) q", "unfolding is_red_alt"], ["proof (prove)\nusing this:\n  Ex (red A q)\n\ngoal (1 subgoal):\n 1. Ex (red (insert x A) q)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. red A q xa \\<Longrightarrow> Ex (red (insert x A) q)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. red A q xa \\<Longrightarrow> Ex (red (insert x A) q)", "assume \"red A q a\""], ["proof (state)\nthis:\n  red A q a\n\ngoal (1 subgoal):\n 1. \\<And>xa. red A q xa \\<Longrightarrow> Ex (red (insert x A) q)", "from red_unionI2[OF this, of \"{x}\"]"], ["proof (chain)\npicking this:\n  red ({x} \\<union> A) q a", "have \"red (insert x A) q a\""], ["proof (prove)\nusing this:\n  red ({x} \\<union> A) q a\n\ngoal (1 subgoal):\n 1. red (insert x A) q a", "by simp"], ["proof (state)\nthis:\n  red (insert x A) q a\n\ngoal (1 subgoal):\n 1. \\<And>xa. red A q xa \\<Longrightarrow> Ex (red (insert x A) q)", "show \"\\<exists>qa. red (insert x A) q qa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>qa. red (insert x A) q qa", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. red (insert x A) q ?qa", "show \"red (insert x A) q a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. red (insert x A) q a", "by fact"], ["proof (state)\nthis:\n  red (insert x A) q a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>qa. red (insert x A) q qa\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_red (insert x A) q\n\ngoal (2 subgoals):\n 1. is_red (insert x A) ?p\n 2. \\<not> is_red A ?p", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. is_red (insert x A) ?p\n 2. \\<not> is_red A ?p", "show \"is_red (insert x A) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red (insert x A) x", "unfolding is_red_alt"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (red (insert x A) x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. red (insert x A) x ?x", "from red_unionI1[OF red_self[OF \\<open>x \\<noteq> 0\\<close>], of A]"], ["proof (chain)\npicking this:\n  red ({x} \\<union> A) x 0", "show \"red (insert x A) x 0\""], ["proof (prove)\nusing this:\n  red ({x} \\<union> A) x 0\n\ngoal (1 subgoal):\n 1. red (insert x A) x 0", "by simp"], ["proof (state)\nthis:\n  red (insert x A) x 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_red (insert x A) x\n\ngoal (1 subgoal):\n 1. \\<not> is_red A x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> is_red A x", "show \"\\<not> is_red A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_red A x", "by fact"], ["proof (state)\nthis:\n  \\<not> is_red A x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma red_supset_transitive:\n  assumes \"A \\<sqsupset>p B\" and \"B \\<sqsupset>p C\"\n  shows \"A \\<sqsupset>p C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<sqsupset>p C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<sqsupset>p C", "from assms(2)"], ["proof (chain)\npicking this:\n  B \\<sqsupset>p C", "obtain p where \"is_red B p\" and \"\\<not> is_red C p\""], ["proof (prove)\nusing this:\n  B \\<sqsupset>p C\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>is_red B p; \\<not> is_red C p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule red_supsetE)"], ["proof (state)\nthis:\n  is_red B p\n  \\<not> is_red C p\n\ngoal (1 subgoal):\n 1. A \\<sqsupset>p C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<sqsupset>p C", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q. is_red C q \\<Longrightarrow> is_red A q\n 2. is_red A ?p\n 3. \\<not> is_red C ?p", "fix q"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q. is_red C q \\<Longrightarrow> is_red A q\n 2. is_red A ?p\n 3. \\<not> is_red C ?p", "assume \"is_red C q\""], ["proof (state)\nthis:\n  is_red C q\n\ngoal (3 subgoals):\n 1. \\<And>q. is_red C q \\<Longrightarrow> is_red A q\n 2. is_red A ?p\n 3. \\<not> is_red C ?p", "with assms(2)"], ["proof (chain)\npicking this:\n  B \\<sqsupset>p C\n  is_red C q", "have \"is_red B q\""], ["proof (prove)\nusing this:\n  B \\<sqsupset>p C\n  is_red C q\n\ngoal (1 subgoal):\n 1. is_red B q", "by (rule red_supsetD)"], ["proof (state)\nthis:\n  is_red B q\n\ngoal (3 subgoals):\n 1. \\<And>q. is_red C q \\<Longrightarrow> is_red A q\n 2. is_red A ?p\n 3. \\<not> is_red C ?p", "with assms(1)"], ["proof (chain)\npicking this:\n  A \\<sqsupset>p B\n  is_red B q", "show \"is_red A q\""], ["proof (prove)\nusing this:\n  A \\<sqsupset>p B\n  is_red B q\n\ngoal (1 subgoal):\n 1. is_red A q", "by (rule red_supsetD)"], ["proof (state)\nthis:\n  is_red A q\n\ngoal (2 subgoals):\n 1. is_red A ?p\n 2. \\<not> is_red C ?p", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. is_red A ?p\n 2. \\<not> is_red C ?p", "from assms(1) \\<open>is_red B p\\<close>"], ["proof (chain)\npicking this:\n  A \\<sqsupset>p B\n  is_red B p", "show \"is_red A p\""], ["proof (prove)\nusing this:\n  A \\<sqsupset>p B\n  is_red B p\n\ngoal (1 subgoal):\n 1. is_red A p", "by (rule red_supsetD)"], ["proof (state)\nthis:\n  is_red A p\n\ngoal (1 subgoal):\n 1. \\<not> is_red C p", "qed fact"], ["proof (state)\nthis:\n  A \\<sqsupset>p C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma red_supset_wf_on:\n  assumes \"dickson_grading d\" and \"finite K\"\n  shows \"wfp_on (\\<sqsupset>p) (Pow (dgrad_p_set d m) \\<inter> {F. component_of_term ` Keys F \\<subseteq> K})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (\\<sqsupset>p)\n     (Pow (dgrad_p_set d m) \\<inter>\n      {F. component_of_term ` Keys F \\<subseteq> K})", "proof (rule wfp_onI_chain, rule, erule exE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "let ?A = \"dgrad_p_set d m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "fix f::\"nat \\<Rightarrow> (('t \\<Rightarrow>\\<^sub>0 'b) set)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "assume \"\\<forall>i. f i \\<in> Pow ?A \\<inter> {F. component_of_term ` Keys F \\<subseteq> K} \\<and> f (Suc i) \\<sqsupset>p f i\""], ["proof (state)\nthis:\n  \\<forall>i.\n     f i\n     \\<in> Pow (dgrad_p_set d m) \\<inter>\n           {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n     f (Suc i) \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "hence a1_subset: \"f i \\<subseteq> ?A\" and comp_sub: \"component_of_term ` Keys (f i) \\<subseteq> K\"\n    and a1: \"f (Suc i) \\<sqsupset>p f i\" for i"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     f i\n     \\<in> Pow (dgrad_p_set d m) \\<inter>\n           {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n     f (Suc i) \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. f i \\<subseteq> dgrad_p_set d m &&&\n    component_of_term ` Keys (f i) \\<subseteq> K &&&\n    f (Suc i) \\<sqsupset>p f i", "by simp_all"], ["proof (state)\nthis:\n  f ?i42 \\<subseteq> dgrad_p_set d m\n  component_of_term ` Keys (f ?i42) \\<subseteq> K\n  f (Suc ?i42) \\<sqsupset>p f ?i42\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "have a1_trans: \"i < j \\<Longrightarrow> f j \\<sqsupset>p f i\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f j \\<sqsupset>p f i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f j \\<sqsupset>p f i", "assume \"i < j\""], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f j \\<sqsupset>p f i", "thus \"f j \\<sqsupset>p f i\""], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. f j \\<sqsupset>p f i", "proof (induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < 0 \\<Longrightarrow> f 0 \\<sqsupset>p f i\n 2. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> f j \\<sqsupset>p f i;\n        i < Suc j\\<rbrakk>\n       \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "case 0"], ["proof (state)\nthis:\n  i < 0\n\ngoal (2 subgoals):\n 1. i < 0 \\<Longrightarrow> f 0 \\<sqsupset>p f i\n 2. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> f j \\<sqsupset>p f i;\n        i < Suc j\\<rbrakk>\n       \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "thus ?case"], ["proof (prove)\nusing this:\n  i < 0\n\ngoal (1 subgoal):\n 1. f 0 \\<sqsupset>p f i", "by simp"], ["proof (state)\nthis:\n  f 0 \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> f j \\<sqsupset>p f i;\n        i < Suc j\\<rbrakk>\n       \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> f j \\<sqsupset>p f i;\n        i < Suc j\\<rbrakk>\n       \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "case (Suc j)"], ["proof (state)\nthis:\n  i < j \\<Longrightarrow> f j \\<sqsupset>p f i\n  i < Suc j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> f j \\<sqsupset>p f i;\n        i < Suc j\\<rbrakk>\n       \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "from Suc(2)"], ["proof (chain)\npicking this:\n  i < Suc j", "have \"i = j \\<or> i < j\""], ["proof (prove)\nusing this:\n  i < Suc j\n\ngoal (1 subgoal):\n 1. i = j \\<or> i < j", "by auto"], ["proof (state)\nthis:\n  i = j \\<or> i < j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> f j \\<sqsupset>p f i;\n        i < Suc j\\<rbrakk>\n       \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "thus ?case"], ["proof (prove)\nusing this:\n  i = j \\<or> i < j\n\ngoal (1 subgoal):\n 1. f (Suc j) \\<sqsupset>p f i", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i = j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i\n 2. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "assume \"i = j\""], ["proof (state)\nthis:\n  i = j\n\ngoal (2 subgoals):\n 1. i = j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i\n 2. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc j) \\<sqsupset>p f i", "unfolding \\<open>i = j\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc j) \\<sqsupset>p f j", "by (fact a1)"], ["proof (state)\nthis:\n  f (Suc j) \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "assume \"i < j\""], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "from a1"], ["proof (chain)\npicking this:\n  f (Suc ?i42) \\<sqsupset>p f ?i42", "have \"f (Suc j) \\<sqsupset>p f j\""], ["proof (prove)\nusing this:\n  f (Suc ?i42) \\<sqsupset>p f ?i42\n\ngoal (1 subgoal):\n 1. f (Suc j) \\<sqsupset>p f j", "."], ["proof (state)\nthis:\n  f (Suc j) \\<sqsupset>p f j\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "also"], ["proof (state)\nthis:\n  f (Suc j) \\<sqsupset>p f j\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "from \\<open>i < j\\<close>"], ["proof (chain)\npicking this:\n  i < j", "have \"... \\<sqsupset>p f i\""], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. f j \\<sqsupset>p f i", "by (rule Suc(1))"], ["proof (state)\nthis:\n  f j \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> f (Suc j) \\<sqsupset>p f i", "finally(red_supset_transitive)"], ["proof (chain)\npicking this:\n  f (Suc j) \\<sqsupset>p f i", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc j) \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. f (Suc j) \\<sqsupset>p f i", "."], ["proof (state)\nthis:\n  f (Suc j) \\<sqsupset>p f i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (Suc j) \\<sqsupset>p f i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f j \\<sqsupset>p f i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i42 < ?j42 \\<Longrightarrow> f ?j42 \\<sqsupset>p f ?i42\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "have a2: \"\\<exists>p \\<in> f (Suc i). \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>f (Suc i).\n       \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>f (Suc i).\n       \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "from a1"], ["proof (chain)\npicking this:\n  f (Suc ?i42) \\<sqsupset>p f ?i42", "have \"f (Suc i) \\<sqsupset>p f i\""], ["proof (prove)\nusing this:\n  f (Suc ?i42) \\<sqsupset>p f ?i42\n\ngoal (1 subgoal):\n 1. f (Suc i) \\<sqsupset>p f i", "."], ["proof (state)\nthis:\n  f (Suc i) \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>f (Suc i).\n       \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "then"], ["proof (chain)\npicking this:\n  f (Suc i) \\<sqsupset>p f i", "obtain q where red: \"is_red (f (Suc i)) q\" and irred: \"\\<not> is_red (f i) q\""], ["proof (prove)\nusing this:\n  f (Suc i) \\<sqsupset>p f i\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>is_red (f (Suc i)) q; \\<not> is_red (f i) q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule red_supsetE)"], ["proof (state)\nthis:\n  is_red (f (Suc i)) q\n  \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>f (Suc i).\n       \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "from red"], ["proof (chain)\npicking this:\n  is_red (f (Suc i)) q", "obtain p where \"p \\<in> f (Suc i)\" and \"is_red {p} q\""], ["proof (prove)\nusing this:\n  is_red (f (Suc i)) q\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> f (Suc i); is_red {p} q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule is_red_singletonI)"], ["proof (state)\nthis:\n  p \\<in> f (Suc i)\n  is_red {p} q\n\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>f (Suc i).\n       \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "show \"\\<exists>p\\<in>f (Suc i). \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p\\<in>f (Suc i).\n       \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>q. is_red {?p} q \\<and> \\<not> is_red (f i) q\n 2. ?p \\<in> f (Suc i)", "show \"\\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "proof (intro exI, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_red {p} ?q\n 2. \\<not> is_red (f i) ?q", "show \"is_red {p} q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_red {p} q", "by fact"], ["proof (state)\nthis:\n  is_red {p} q\n\ngoal (1 subgoal):\n 1. \\<not> is_red (f i) q", "qed (fact)"], ["proof (state)\nthis:\n  \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. p \\<in> f (Suc i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<in> f (Suc i)", "show \"p \\<in> f (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> f (Suc i)", "by fact"], ["proof (state)\nthis:\n  p \\<in> f (Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p\\<in>f (Suc i).\n     \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p\\<in>f (Suc ?i42).\n     \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f ?i42) q\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "let ?P = \"\\<lambda>i p. p \\<in> (f (Suc i)) \\<and> (\\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "define g where \"g \\<equiv> \\<lambda>i::nat. (SOME p. ?P i p)\""], ["proof (state)\nthis:\n  g \\<equiv>\n  \\<lambda>i.\n     SOME p.\n        p \\<in> f (Suc i) \\<and>\n        (\\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "have a3: \"?P i (g i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<in> f (Suc i) \\<and>\n    (\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g i \\<in> f (Suc i) \\<and>\n    (\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q)", "from a2[of i]"], ["proof (chain)\npicking this:\n  \\<exists>p\\<in>f (Suc i).\n     \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q", "obtain gi where \"gi \\<in> f (Suc i)\" and \"\\<exists>q. is_red {gi} q \\<and> \\<not> is_red (f i) q\""], ["proof (prove)\nusing this:\n  \\<exists>p\\<in>f (Suc i).\n     \\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. (\\<And>gi.\n        \\<lbrakk>gi \\<in> f (Suc i);\n         \\<exists>q. is_red {gi} q \\<and> \\<not> is_red (f i) q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  gi \\<in> f (Suc i)\n  \\<exists>q. is_red {gi} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. g i \\<in> f (Suc i) \\<and>\n    (\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<in> f (Suc i) \\<and>\n    (\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q)", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME p.\n        p \\<in> f (Suc i) \\<and>\n        (\\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q))\n    \\<in> f (Suc i) \\<and>\n    (\\<exists>q.\n        is_red\n         {SOME p.\n             p \\<in> f (Suc i) \\<and>\n             (\\<exists>q. is_red {p} q \\<and> \\<not> is_red (f i) q)}\n         q \\<and>\n        \\<not> is_red (f i) q)", "by (rule someI[of _ gi], intro conjI, fact+)"], ["proof (state)\nthis:\n  g i \\<in> f (Suc i) \\<and>\n  (\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "have a4: \"i < j \\<Longrightarrow> \\<not> lt (g i) adds\\<^sub>t (lt (g j))\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> \\<not> lt (g i) adds\\<^sub>t lt (g j)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"i < j\" and adds: \"lt (g i) adds\\<^sub>t lt (g j)\""], ["proof (state)\nthis:\n  i < j\n  lt (g i) adds\\<^sub>t lt (g j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "from a3"], ["proof (chain)\npicking this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)", "have \"\\<exists>q. is_red {g j} q \\<and> \\<not> is_red (f j) q\""], ["proof (prove)\nusing this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)\n\ngoal (1 subgoal):\n 1. \\<exists>q. is_red {g j} q \\<and> \\<not> is_red (f j) q", ".."], ["proof (state)\nthis:\n  \\<exists>q. is_red {g j} q \\<and> \\<not> is_red (f j) q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>q. is_red {g j} q \\<and> \\<not> is_red (f j) q", "obtain q where redj: \"is_red {g j} q\" and \"\\<not> is_red (f j) q\""], ["proof (prove)\nusing this:\n  \\<exists>q. is_red {g j} q \\<and> \\<not> is_red (f j) q\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>is_red {g j} q; \\<not> is_red (f j) q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_red {g j} q\n  \\<not> is_red (f j) q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "have *: \"\\<not> is_red (f (Suc i)) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_red (f (Suc i)) q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> is_red (f (Suc i)) q", "from \\<open>i < j\\<close>"], ["proof (chain)\npicking this:\n  i < j", "have \"i + 1 < j \\<or> i + 1 = j\""], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. i + 1 < j \\<or> i + 1 = j", "by auto"], ["proof (state)\nthis:\n  i + 1 < j \\<or> i + 1 = j\n\ngoal (1 subgoal):\n 1. \\<not> is_red (f (Suc i)) q", "thus ?thesis"], ["proof (prove)\nusing this:\n  i + 1 < j \\<or> i + 1 = j\n\ngoal (1 subgoal):\n 1. \\<not> is_red (f (Suc i)) q", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i + 1 < j \\<Longrightarrow> \\<not> is_red (f (Suc i)) q\n 2. i + 1 = j \\<Longrightarrow> \\<not> is_red (f (Suc i)) q", "assume \"i + 1 < j\""], ["proof (state)\nthis:\n  i + 1 < j\n\ngoal (2 subgoals):\n 1. i + 1 < j \\<Longrightarrow> \\<not> is_red (f (Suc i)) q\n 2. i + 1 = j \\<Longrightarrow> \\<not> is_red (f (Suc i)) q", "from red_supsetD[OF a1_trans[rule_format, OF this], of q] \\<open>\\<not> is_red (f j) q\\<close>"], ["proof (chain)\npicking this:\n  is_red (f (i + 1)) q \\<Longrightarrow> is_red (f j) q\n  \\<not> is_red (f j) q", "show ?thesis"], ["proof (prove)\nusing this:\n  is_red (f (i + 1)) q \\<Longrightarrow> is_red (f j) q\n  \\<not> is_red (f j) q\n\ngoal (1 subgoal):\n 1. \\<not> is_red (f (Suc i)) q", "by auto"], ["proof (state)\nthis:\n  \\<not> is_red (f (Suc i)) q\n\ngoal (1 subgoal):\n 1. i + 1 = j \\<Longrightarrow> \\<not> is_red (f (Suc i)) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i + 1 = j \\<Longrightarrow> \\<not> is_red (f (Suc i)) q", "assume \"i + 1 = j\""], ["proof (state)\nthis:\n  i + 1 = j\n\ngoal (1 subgoal):\n 1. i + 1 = j \\<Longrightarrow> \\<not> is_red (f (Suc i)) q", "thus ?thesis"], ["proof (prove)\nusing this:\n  i + 1 = j\n\ngoal (1 subgoal):\n 1. \\<not> is_red (f (Suc i)) q", "using \\<open>\\<not> is_red (f j) q\\<close>"], ["proof (prove)\nusing this:\n  i + 1 = j\n  \\<not> is_red (f j) q\n\ngoal (1 subgoal):\n 1. \\<not> is_red (f (Suc i)) q", "by simp"], ["proof (state)\nthis:\n  \\<not> is_red (f (Suc i)) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> is_red (f (Suc i)) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> is_red (f (Suc i)) q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "from a3"], ["proof (chain)\npicking this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)", "have \"g i \\<in> f (i + 1)\" and redi: \"\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\""], ["proof (prove)\nusing this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)\n\ngoal (1 subgoal):\n 1. g i \\<in> f (i + 1) &&&\n    \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q", "by simp_all"], ["proof (state)\nthis:\n  g i \\<in> f (i + 1)\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "have \"\\<not> is_red {g i} q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_red {g i} q", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. is_red {g i} q \\<Longrightarrow> False", "assume \"is_red {g i} q\""], ["proof (state)\nthis:\n  is_red {g i} q\n\ngoal (1 subgoal):\n 1. is_red {g i} q \\<Longrightarrow> False", "from is_red_singletonD[OF this \\<open>g i \\<in> f (i + 1)\\<close>] *"], ["proof (chain)\npicking this:\n  is_red (f (i + 1)) q\n  \\<not> is_red (f (Suc i)) q", "show False"], ["proof (prove)\nusing this:\n  is_red (f (i + 1)) q\n  \\<not> is_red (f (Suc i)) q\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> is_red {g i} q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "have \"g i \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g i \\<noteq> 0", "from redi"], ["proof (chain)\npicking this:\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q", "obtain q0 where \"is_red {g i} q0\""], ["proof (prove)\nusing this:\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. (\\<And>q0. is_red {g i} q0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_red {g i} q0\n\ngoal (1 subgoal):\n 1. g i \\<noteq> 0", "from is_red_singleton_not_0[OF this]"], ["proof (chain)\npicking this:\n  g i \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  g i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g i \\<noteq> 0", "."], ["proof (state)\nthis:\n  g i \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < j; lt (g i) adds\\<^sub>t lt (g j)\\<rbrakk>\n    \\<Longrightarrow> False", "from \\<open>\\<not> is_red {g i} q\\<close> is_red_singleton_trans[OF redj adds \\<open>g i \\<noteq> 0\\<close>]"], ["proof (chain)\npicking this:\n  \\<not> is_red {g i} q\n  is_red {g i} q", "show False"], ["proof (prove)\nusing this:\n  \\<not> is_red {g i} q\n  is_red {g i} q\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i42 < ?j42 \\<Longrightarrow> \\<not> lt (g ?i42) adds\\<^sub>t lt (g ?j42)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "from _ assms(2)"], ["proof (chain)\npicking this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  finite K", "have a5: \"finite (component_of_term ` range (lt \\<circ> g))\""], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  finite K\n\ngoal (1 subgoal):\n 1. finite (component_of_term ` range (lt \\<circ> g))", "proof (rule finite_subset)"], ["proof (state)\ngoal (1 subgoal):\n 1. component_of_term ` range (lt \\<circ> g) \\<subseteq> K", "show \"component_of_term ` range (lt \\<circ> g) \\<subseteq> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term ` range (lt \\<circ> g) \\<subseteq> K", "proof (rule, elim imageE, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "from a3"], ["proof (chain)\npicking this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)", "have \"g i \\<in> f (Suc i)\" and \"\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\""], ["proof (prove)\nusing this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)\n\ngoal (1 subgoal):\n 1. g i \\<in> f (Suc i) &&&\n    \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q", "by simp_all"], ["proof (state)\nthis:\n  g i \\<in> f (Suc i)\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "from this(2)"], ["proof (chain)\npicking this:\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q", "obtain q where \"is_red {g i} q\""], ["proof (prove)\nusing this:\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. (\\<And>q. is_red {g i} q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_red {g i} q\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "hence \"g i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  is_red {g i} q\n\ngoal (1 subgoal):\n 1. g i \\<noteq> 0", "by (rule is_red_singleton_not_0)"], ["proof (state)\nthis:\n  g i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "hence \"lt (g i) \\<in> keys (g i)\""], ["proof (prove)\nusing this:\n  g i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lt (g i) \\<in> keys (g i)", "by (rule lt_in_keys)"], ["proof (state)\nthis:\n  lt (g i) \\<in> keys (g i)\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "hence \"component_of_term (lt (g i)) \\<in> component_of_term ` keys (g i)\""], ["proof (prove)\nusing this:\n  lt (g i) \\<in> keys (g i)\n\ngoal (1 subgoal):\n 1. component_of_term (lt (g i)) \\<in> component_of_term ` keys (g i)", "by simp"], ["proof (state)\nthis:\n  component_of_term (lt (g i)) \\<in> component_of_term ` keys (g i)\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "also"], ["proof (state)\nthis:\n  component_of_term (lt (g i)) \\<in> component_of_term ` keys (g i)\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "have \"... \\<subseteq> component_of_term ` Keys (f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term ` keys (g i)\n    \\<subseteq> component_of_term ` Keys (f (Suc i))", "by (rule image_mono, rule keys_subset_Keys, fact)"], ["proof (state)\nthis:\n  component_of_term ` keys (g i)\n  \\<subseteq> component_of_term ` Keys (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "also"], ["proof (state)\nthis:\n  component_of_term ` keys (g i)\n  \\<subseteq> component_of_term ` Keys (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "have \"... \\<subseteq> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. component_of_term ` Keys (f (Suc i)) \\<subseteq> K", "by (fact comp_sub)"], ["proof (state)\nthis:\n  component_of_term ` Keys (f (Suc i)) \\<subseteq> K\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = component_of_term (lt (g xb)); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> component_of_term (lt (g xb)) \\<in> K", "finally"], ["proof (chain)\npicking this:\n  component_of_term (lt (g i)) \\<in> K", "show \"component_of_term (lt (g i)) \\<in> K\""], ["proof (prove)\nusing this:\n  component_of_term (lt (g i)) \\<in> K\n\ngoal (1 subgoal):\n 1. component_of_term (lt (g i)) \\<in> K", "."], ["proof (state)\nthis:\n  component_of_term (lt (g i)) \\<in> K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  component_of_term ` range (lt \\<circ> g) \\<subseteq> K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (component_of_term ` range (lt \\<circ> g))\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "have a6: \"pp_of_term ` range (lt \\<circ> g) \\<subseteq> dgrad_set d m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pp_of_term ` range (lt \\<circ> g) \\<subseteq> dgrad_set d m", "proof (rule, elim imageE, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = lp (g xb); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> lp (g xb) \\<in> dgrad_set d m", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = lp (g xb); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> lp (g xb) \\<in> dgrad_set d m", "from a3"], ["proof (chain)\npicking this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)", "have \"g i \\<in> f (Suc i)\" and \"\\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\""], ["proof (prove)\nusing this:\n  g ?i42 \\<in> f (Suc ?i42) \\<and>\n  (\\<exists>q. is_red {g ?i42} q \\<and> \\<not> is_red (f ?i42) q)\n\ngoal (1 subgoal):\n 1. g i \\<in> f (Suc i) &&&\n    \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q", "by simp_all"], ["proof (state)\nthis:\n  g i \\<in> f (Suc i)\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = lp (g xb); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> lp (g xb) \\<in> dgrad_set d m", "from this(2)"], ["proof (chain)\npicking this:\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q", "obtain q where \"is_red {g i} q\""], ["proof (prove)\nusing this:\n  \\<exists>q. is_red {g i} q \\<and> \\<not> is_red (f i) q\n\ngoal (1 subgoal):\n 1. (\\<And>q. is_red {g i} q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_red {g i} q\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = lp (g xb); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> lp (g xb) \\<in> dgrad_set d m", "hence \"g i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  is_red {g i} q\n\ngoal (1 subgoal):\n 1. g i \\<noteq> 0", "by (rule is_red_singleton_not_0)"], ["proof (state)\nthis:\n  g i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = lp (g xb); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> lp (g xb) \\<in> dgrad_set d m", "from a1_subset \\<open>g i \\<in> f (Suc i)\\<close>"], ["proof (chain)\npicking this:\n  f ?i42 \\<subseteq> dgrad_p_set d m\n  g i \\<in> f (Suc i)", "have \"g i \\<in> ?A\""], ["proof (prove)\nusing this:\n  f ?i42 \\<subseteq> dgrad_p_set d m\n  g i \\<in> f (Suc i)\n\ngoal (1 subgoal):\n 1. g i \\<in> dgrad_p_set d m", ".."], ["proof (state)\nthis:\n  g i \\<in> dgrad_p_set d m\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = lp (g xb); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> lp (g xb) \\<in> dgrad_set d m", "from this \\<open>g i \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  g i \\<in> dgrad_p_set d m\n  g i \\<noteq> 0", "have \"d (lp (g i)) \\<le> m\""], ["proof (prove)\nusing this:\n  g i \\<in> dgrad_p_set d m\n  g i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. d (lp (g i)) \\<le> m", "by (rule dgrad_p_setD_lp)"], ["proof (state)\nthis:\n  d (lp (g i)) \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>x xa xb.\n       \\<lbrakk>x = lp (g xb); xa = lt (g xb)\\<rbrakk>\n       \\<Longrightarrow> lp (g xb) \\<in> dgrad_set d m", "thus \"lp (g i) \\<in> dgrad_set d m\""], ["proof (prove)\nusing this:\n  d (lp (g i)) \\<le> m\n\ngoal (1 subgoal):\n 1. lp (g i) \\<in> dgrad_set d m", "by (rule dgrad_setI)"], ["proof (state)\nthis:\n  lp (g i) \\<in> dgrad_set d m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pp_of_term ` range (lt \\<circ> g) \\<subseteq> dgrad_set d m\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "from assms(1) a5 a6"], ["proof (chain)\npicking this:\n  dickson_grading d\n  finite (component_of_term ` range (lt \\<circ> g))\n  pp_of_term ` range (lt \\<circ> g) \\<subseteq> dgrad_set d m", "obtain i j where \"i < j\" and \"(lt \\<circ> g) i adds\\<^sub>t (lt \\<circ> g) j\""], ["proof (prove)\nusing this:\n  dickson_grading d\n  finite (component_of_term ` range (lt \\<circ> g))\n  pp_of_term ` range (lt \\<circ> g) \\<subseteq> dgrad_set d m\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < j;\n         (lt \\<circ> g) i adds\\<^sub>t (lt \\<circ> g) j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule Dickson_termE)"], ["proof (state)\nthis:\n  i < j\n  (lt \\<circ> g) i adds\\<^sub>t (lt \\<circ> g) j\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          f i\n          \\<in> Pow (dgrad_p_set d m) \\<inter>\n                {F. component_of_term ` Keys F \\<subseteq> K} \\<and>\n          f (Suc i) \\<sqsupset>p f i \\<Longrightarrow>\n       False", "from this a4[OF \\<open>i < j\\<close>]"], ["proof (chain)\npicking this:\n  i < j\n  (lt \\<circ> g) i adds\\<^sub>t (lt \\<circ> g) j\n  \\<not> lt (g i) adds\\<^sub>t lt (g j)", "show False"], ["proof (prove)\nusing this:\n  i < j\n  (lt \\<circ> g) i adds\\<^sub>t (lt \\<circ> g) j\n  \\<not> lt (g i) adds\\<^sub>t lt (g j)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* gd_term *)"], ["", "lemma in_lex_prod_alt:\n  \"(x, y) \\<in> r <*lex*> s \\<longleftrightarrow> (((fst x), (fst y)) \\<in> r \\<or> (fst x = fst y \\<and> ((snd x), (snd y)) \\<in> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> r <*lex*> s) =\n    ((fst x, fst y) \\<in> r \\<or>\n     fst x = fst y \\<and> (snd x, snd y) \\<in> s)", "by (metis in_lex_prod prod.collapse prod.inject surj_pair)"], ["", "subsection \\<open>Context @{locale od_term}\\<close>"], ["", "context od_term\nbegin"], ["", "lemmas red_wf = red_wf_dgrad_p_set[OF dickson_grading_zero subset_dgrad_p_set_zero]"], ["", "lemmas Buchberger_criterion = Buchberger_criterion_dgrad_p_set[OF dickson_grading_zero subset_dgrad_p_set_zero]"], ["", "end"], ["", "(* od_term *)"], ["", "end"], ["", "(* theory *)"]]}