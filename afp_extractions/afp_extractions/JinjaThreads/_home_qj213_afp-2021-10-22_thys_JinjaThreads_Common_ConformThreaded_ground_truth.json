{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaThreads/Common/ConformThreaded.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaThreads", "problem_names": ["lemma thread_confI:\n  \"(\\<And>t xln. ts t = \\<lfloor>xln\\<rfloor> \\<Longrightarrow> P,h \\<turnstile> t \\<surd>t) \\<Longrightarrow> thread_conf P ts h\"", "lemma thread_confD:\n  assumes \"thread_conf P ts h\" \"ts t = \\<lfloor>xln\\<rfloor>\"\n  shows \"P,h \\<turnstile> t \\<surd>t\"", "lemma thread_conf_ts_upd_eq [simp]:\n  assumes tst: \"ts t = \\<lfloor>xln\\<rfloor>\"\n  shows \"thread_conf P (ts(t \\<mapsto> xln')) h \\<longleftrightarrow> thread_conf P ts h\"", "lemma thread_conf_hext:\n  \"\\<lbrakk> thread_conf P ts h; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> thread_conf P ts h'\"", "lemma thread_conf_start_state:\n  \"\\<lbrakk> start_heap_ok; wf_syscls P \\<rbrakk> \\<Longrightarrow> thread_conf P (thr (start_state f P C M vs)) (shr (start_state f P C M vs))\"", "lemma lock_thread_ok_start_state:\n  \"lock_thread_ok (locks (start_state f P C M vs)) (thr (start_state f P C M vs))\"", "lemma wset_thread_ok_start_state:\n  \"wset_thread_ok (wset (start_state f P C M vs)) (thr (start_state f P C M vs))\"", "lemma wset_final_ok_start_state:\n  \"final_thread.wset_final_ok final (wset (start_state f P C M vs)) (thr (start_state f P C M vs))\""], "translations": [["", "lemma thread_confI:\n  \"(\\<And>t xln. ts t = \\<lfloor>xln\\<rfloor> \\<Longrightarrow> P,h \\<turnstile> t \\<surd>t) \\<Longrightarrow> thread_conf P ts h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t xln.\n        ts t = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n        P,h \\<turnstile> t \\<surd>t) \\<Longrightarrow>\n    thread_conf P ts h", "by(blast intro: ts_okI)"], ["", "lemma thread_confD:\n  assumes \"thread_conf P ts h\" \"ts t = \\<lfloor>xln\\<rfloor>\"\n  shows \"P,h \\<turnstile> t \\<surd>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> t \\<surd>t", "using assms"], ["proof (prove)\nusing this:\n  thread_conf P ts h\n  ts t = \\<lfloor>xln\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> t \\<surd>t", "by(cases xln)(auto dest: ts_okD)"], ["", "lemma thread_conf_ts_upd_eq [simp]:\n  assumes tst: \"ts t = \\<lfloor>xln\\<rfloor>\"\n  shows \"thread_conf P (ts(t \\<mapsto> xln')) h \\<longleftrightarrow> thread_conf P ts h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. thread_conf P (ts(t \\<mapsto> xln')) h = thread_conf P ts h", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. thread_conf P (ts(t \\<mapsto> xln')) h \\<Longrightarrow>\n    thread_conf P ts h\n 2. thread_conf P ts h \\<Longrightarrow>\n    thread_conf P (ts(t \\<mapsto> xln')) h", "assume tc: \"thread_conf P (ts(t \\<mapsto> xln')) h\""], ["proof (state)\nthis:\n  thread_conf P (ts(t \\<mapsto> xln')) h\n\ngoal (2 subgoals):\n 1. thread_conf P (ts(t \\<mapsto> xln')) h \\<Longrightarrow>\n    thread_conf P ts h\n 2. thread_conf P ts h \\<Longrightarrow>\n    thread_conf P (ts(t \\<mapsto> xln')) h", "show \"thread_conf P ts h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. thread_conf P ts h", "proof(rule thread_confI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t xln.\n       ts t = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n       P,h \\<turnstile> t \\<surd>t", "fix T XLN"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t xln.\n       ts t = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n       P,h \\<turnstile> t \\<surd>t", "assume \"ts T = \\<lfloor>XLN\\<rfloor>\""], ["proof (state)\nthis:\n  ts T = \\<lfloor>XLN\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>t xln.\n       ts t = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n       P,h \\<turnstile> t \\<surd>t", "with tc"], ["proof (chain)\npicking this:\n  thread_conf P (ts(t \\<mapsto> xln')) h\n  ts T = \\<lfloor>XLN\\<rfloor>", "show \"P,h \\<turnstile> T \\<surd>t\""], ["proof (prove)\nusing this:\n  thread_conf P (ts(t \\<mapsto> xln')) h\n  ts T = \\<lfloor>XLN\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> T \\<surd>t", "by(cases \"T = t\")(auto dest: thread_confD)"], ["proof (state)\nthis:\n  P,h \\<turnstile> T \\<surd>t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thread_conf P ts h\n\ngoal (1 subgoal):\n 1. thread_conf P ts h \\<Longrightarrow>\n    thread_conf P (ts(t \\<mapsto> xln')) h", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. thread_conf P ts h \\<Longrightarrow>\n    thread_conf P (ts(t \\<mapsto> xln')) h", "assume tc: \"thread_conf P ts h\""], ["proof (state)\nthis:\n  thread_conf P ts h\n\ngoal (1 subgoal):\n 1. thread_conf P ts h \\<Longrightarrow>\n    thread_conf P (ts(t \\<mapsto> xln')) h", "show \"thread_conf P (ts(t \\<mapsto> xln')) h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. thread_conf P (ts(t \\<mapsto> xln')) h", "proof(rule thread_confI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta xln.\n       (ts(t \\<mapsto> xln')) ta = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n       P,h \\<turnstile> ta \\<surd>t", "fix T XLN"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta xln.\n       (ts(t \\<mapsto> xln')) ta = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n       P,h \\<turnstile> ta \\<surd>t", "assume \"(ts(t \\<mapsto> xln')) T = \\<lfloor>XLN\\<rfloor>\""], ["proof (state)\nthis:\n  (ts(t \\<mapsto> xln')) T = \\<lfloor>XLN\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>ta xln.\n       (ts(t \\<mapsto> xln')) ta = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n       P,h \\<turnstile> ta \\<surd>t", "with tst"], ["proof (chain)\npicking this:\n  ts t = \\<lfloor>xln\\<rfloor>\n  (ts(t \\<mapsto> xln')) T = \\<lfloor>XLN\\<rfloor>", "obtain XLN' where \"ts T = \\<lfloor>XLN'\\<rfloor>\""], ["proof (prove)\nusing this:\n  ts t = \\<lfloor>xln\\<rfloor>\n  (ts(t \\<mapsto> xln')) T = \\<lfloor>XLN\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>XLN'.\n        ts T = \\<lfloor>XLN'\\<rfloor> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(cases \"T = t\")(auto)"], ["proof (state)\nthis:\n  ts T = \\<lfloor>XLN'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>ta xln.\n       (ts(t \\<mapsto> xln')) ta = \\<lfloor>xln\\<rfloor> \\<Longrightarrow>\n       P,h \\<turnstile> ta \\<surd>t", "with tc"], ["proof (chain)\npicking this:\n  thread_conf P ts h\n  ts T = \\<lfloor>XLN'\\<rfloor>", "show \"P,h \\<turnstile> T \\<surd>t\""], ["proof (prove)\nusing this:\n  thread_conf P ts h\n  ts T = \\<lfloor>XLN'\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> T \\<surd>t", "by(auto dest: thread_confD)"], ["proof (state)\nthis:\n  P,h \\<turnstile> T \\<surd>t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thread_conf P (ts(t \\<mapsto> xln')) h\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context heap begin"], ["", "lemma thread_conf_hext:\n  \"\\<lbrakk> thread_conf P ts h; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> thread_conf P ts h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>thread_conf P ts h; h \\<unlhd> h'\\<rbrakk>\n    \\<Longrightarrow> thread_conf P ts h'", "by(blast intro: thread_confI tconf_hext_mono dest: thread_confD)"], ["", "lemma thread_conf_start_state:\n  \"\\<lbrakk> start_heap_ok; wf_syscls P \\<rbrakk> \\<Longrightarrow> thread_conf P (thr (start_state f P C M vs)) (shr (start_state f P C M vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>start_heap_ok; wf_syscls P\\<rbrakk>\n    \\<Longrightarrow> thread_conf P (thr (start_state f P C M vs))\n                       (shr (start_state f P C M vs))", "by(auto intro!: thread_confI simp add: start_state_def split_beta split: if_split_asm intro: tconf_start_heap_start_tid)"], ["", "end"], ["", "context heap_base begin"], ["", "lemma lock_thread_ok_start_state:\n  \"lock_thread_ok (locks (start_state f P C M vs)) (thr (start_state f P C M vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lock_thread_ok (locks (start_state f P C M vs))\n     (thr (start_state f P C M vs))", "by(rule lock_thread_okI)(simp add: start_state_def split_beta)"], ["", "lemma wset_thread_ok_start_state:\n  \"wset_thread_ok (wset (start_state f P C M vs)) (thr (start_state f P C M vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wset_thread_ok (wset (start_state f P C M vs))\n     (thr (start_state f P C M vs))", "by(auto simp add: wset_thread_ok_def start_state_def split_beta)"], ["", "lemma wset_final_ok_start_state:\n  \"final_thread.wset_final_ok final (wset (start_state f P C M vs)) (thr (start_state f P C M vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. final_thread.wset_final_ok final (wset (start_state f P C M vs))\n     (thr (start_state f P C M vs))", "by(rule final_thread.wset_final_okI)(simp add: start_state_def split_beta)"], ["", "end"], ["", "end"]]}