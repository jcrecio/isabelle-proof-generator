{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaThreads/Common/Exceptions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaThreads", "problem_names": ["lemma [simp]:\n  \"NullPointer \\<in> sys_xcpts \\<and> \n   OutOfMemory \\<in> sys_xcpts \\<and> \n   ClassCast \\<in> sys_xcpts \\<and> \n   ArrayIndexOutOfBounds \\<in> sys_xcpts \\<and> \n   ArrayStore \\<in> sys_xcpts \\<and> \n   NegativeArraySize \\<in> sys_xcpts \\<and> \n   IllegalMonitorState \\<in> sys_xcpts \\<and>\n   IllegalThreadState \\<in> sys_xcpts \\<and>\n   InterruptedException \\<in> sys_xcpts \\<and>\n   ArithmeticException \\<in> sys_xcpts\"", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast; \n     P ArrayIndexOutOfBounds; P ArrayStore; P NegativeArraySize;\n     P ArithmeticException;\n     P IllegalMonitorState; P IllegalThreadState; P InterruptedException \\<rbrakk>\n  \\<Longrightarrow> P C\"", "lemma OutOfMemory_not_Object[simp]: \"OutOfMemory \\<noteq> Object\"", "lemma ClassCast_not_Object[simp]: \"ClassCast \\<noteq> Object\"", "lemma NullPointer_not_Object[simp]: \"NullPointer \\<noteq> Object\"", "lemma ArrayIndexOutOfBounds_not_Object[simp]: \"ArrayIndexOutOfBounds \\<noteq> Object\"", "lemma ArrayStore_not_Object[simp]: \"ArrayStore \\<noteq> Object\"", "lemma NegativeArraySize_not_Object[simp]: \"NegativeArraySize \\<noteq> Object\"", "lemma ArithmeticException_not_Object[simp]: \"ArithmeticException \\<noteq> Object\"", "lemma IllegalMonitorState_not_Object[simp]: \"IllegalMonitorState \\<noteq> Object\"", "lemma IllegalThreadState_not_Object[simp]: \"IllegalThreadState \\<noteq> Object\"", "lemma InterruptedException_not_Object[simp]: \"InterruptedException \\<noteq> Object\"", "lemma sys_xcpts_neqs_aux:\n  \"NullPointer \\<noteq> ClassCast\" \"NullPointer \\<noteq> OutOfMemory\" \"NullPointer \\<noteq> ArrayIndexOutOfBounds\"\n  \"NullPointer \\<noteq> ArrayStore\" \"NullPointer \\<noteq> NegativeArraySize\" \"NullPointer \\<noteq> IllegalMonitorState\"\n  \"NullPointer \\<noteq> IllegalThreadState\" \"NullPointer \\<noteq> InterruptedException\" \"NullPointer \\<noteq> ArithmeticException\"\n  \"ClassCast \\<noteq> OutOfMemory\" \"ClassCast \\<noteq> ArrayIndexOutOfBounds\"\n  \"ClassCast \\<noteq> ArrayStore\" \"ClassCast \\<noteq> NegativeArraySize\" \"ClassCast \\<noteq> IllegalMonitorState\"\n  \"ClassCast \\<noteq> IllegalThreadState\" \"ClassCast \\<noteq> InterruptedException\" \"ClassCast \\<noteq> ArithmeticException\"\n  \"OutOfMemory \\<noteq> ArrayIndexOutOfBounds\"\n  \"OutOfMemory \\<noteq> ArrayStore\" \"OutOfMemory \\<noteq> NegativeArraySize\" \"OutOfMemory \\<noteq> IllegalMonitorState\"\n  \"OutOfMemory \\<noteq> IllegalThreadState\" \"OutOfMemory \\<noteq> InterruptedException\"\n  \"OutOfMemory \\<noteq> ArithmeticException\"\n  \"ArrayIndexOutOfBounds \\<noteq> ArrayStore\" \"ArrayIndexOutOfBounds \\<noteq> NegativeArraySize\" \"ArrayIndexOutOfBounds \\<noteq> IllegalMonitorState\"\n  \"ArrayIndexOutOfBounds \\<noteq> IllegalThreadState\" \"ArrayIndexOutOfBounds \\<noteq> InterruptedException\" \"ArrayIndexOutOfBounds \\<noteq> ArithmeticException\"\n  \"ArrayStore \\<noteq> NegativeArraySize\" \"ArrayStore \\<noteq> IllegalMonitorState\"\n  \"ArrayStore \\<noteq> IllegalThreadState\" \"ArrayStore \\<noteq> InterruptedException\"\n  \"ArrayStore \\<noteq> ArithmeticException\"\n  \"NegativeArraySize \\<noteq> IllegalMonitorState\"\n  \"NegativeArraySize \\<noteq> IllegalThreadState\" \"NegativeArraySize \\<noteq> InterruptedException\"\n  \"NegativeArraySize \\<noteq> ArithmeticException\"\n  \"IllegalMonitorState \\<noteq> IllegalThreadState\" \"IllegalMonitorState \\<noteq> InterruptedException\"\n  \"IllegalMonitorState \\<noteq> ArithmeticException\"\n  \"IllegalThreadState \\<noteq> InterruptedException\"\n  \"IllegalThreadState \\<noteq> ArithmeticException\"\n  \"InterruptedException \\<noteq> ArithmeticException\"", "lemmas sys_xcpts_neqs = sys_xcpts_neqs_aux sys_xcpts_neqs_aux[symmetric]", "lemma Thread_neq_sys_xcpts_aux:\n  \"Thread \\<noteq> NullPointer\"\n  \"Thread \\<noteq> ClassCast\"\n  \"Thread \\<noteq> OutOfMemory\"\n  \"Thread \\<noteq> ArrayIndexOutOfBounds\"\n  \"Thread \\<noteq> ArrayStore\"\n  \"Thread \\<noteq> NegativeArraySize\"\n  \"Thread \\<noteq> ArithmeticException\"\n  \"Thread \\<noteq> IllegalMonitorState\"\n  \"Thread \\<noteq> IllegalThreadState\"\n  \"Thread \\<noteq> InterruptedException\"", "lemmas Thread_neq_sys_xcpts = Thread_neq_sys_xcpts_aux Thread_neq_sys_xcpts_aux[symmetric]", "lemma\n  assumes \"wf_syscls P\"\n  shows wf_syscls_class_Object: \"\\<exists>C fs ms. class P Object = Some (C,fs,ms)\"\n  and wf_syscls_class_Thread:  \"\\<exists>C fs ms. class P Thread = Some (C,fs,ms)\"", "lemma [simp]:\n  assumes \"wf_syscls P\"\n  shows wf_syscls_is_class_Object: \"is_class P Object\"\n  and wf_syscls_is_class_Thread: \"is_class P Thread\"", "lemma wf_syscls_xcpt_subcls_Throwable:\n  \"\\<lbrakk> C \\<in> sys_xcpts; wf_syscls P \\<rbrakk> \\<Longrightarrow> P \\<turnstile> C \\<preceq>\\<^sup>* Throwable\"", "lemma wf_syscls_is_class_Throwable:\n  \"wf_syscls P \\<Longrightarrow> is_class P Throwable\"", "lemma wf_syscls_is_class_sub_Throwable:\n  \"\\<lbrakk> wf_syscls P; P \\<turnstile> C \\<preceq>\\<^sup>* Throwable \\<rbrakk> \\<Longrightarrow> is_class P C\"", "lemma wf_syscls_is_class_xcpt:\n  \"\\<lbrakk> C \\<in> sys_xcpts; wf_syscls P \\<rbrakk> \\<Longrightarrow> is_class P C\"", "lemma wf_syscls_code [code]:\n  \"wf_syscls P \\<longleftrightarrow>\n   (\\<forall>C \\<in> set [Object, Throwable, Thread]. is_class P C) \\<and> (\\<forall>C \\<in> sys_xcpts. P \\<turnstile> C \\<preceq>\\<^sup>* Throwable)\""], "translations": [["", "lemma [simp]:\n  \"NullPointer \\<in> sys_xcpts \\<and> \n   OutOfMemory \\<in> sys_xcpts \\<and> \n   ClassCast \\<in> sys_xcpts \\<and> \n   ArrayIndexOutOfBounds \\<in> sys_xcpts \\<and> \n   ArrayStore \\<in> sys_xcpts \\<and> \n   NegativeArraySize \\<in> sys_xcpts \\<and> \n   IllegalMonitorState \\<in> sys_xcpts \\<and>\n   IllegalThreadState \\<in> sys_xcpts \\<and>\n   InterruptedException \\<in> sys_xcpts \\<and>\n   ArithmeticException \\<in> sys_xcpts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NullPointer \\<in> sys_xcpts \\<and>\n    OutOfMemory \\<in> sys_xcpts \\<and>\n    ClassCast \\<in> sys_xcpts \\<and>\n    ArrayIndexOutOfBounds \\<in> sys_xcpts \\<and>\n    ArrayStore \\<in> sys_xcpts \\<and>\n    NegativeArraySize \\<in> sys_xcpts \\<and>\n    IllegalMonitorState \\<in> sys_xcpts \\<and>\n    IllegalThreadState \\<in> sys_xcpts \\<and>\n    InterruptedException \\<in> sys_xcpts \\<and>\n    ArithmeticException \\<in> sys_xcpts", "by(simp add: sys_xcpts_def sys_xcpts_list_def)"], ["", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast; \n     P ArrayIndexOutOfBounds; P ArrayStore; P NegativeArraySize;\n     P ArithmeticException;\n     P IllegalMonitorState; P IllegalThreadState; P InterruptedException \\<rbrakk>\n  \\<Longrightarrow> P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast;\n     P ArrayIndexOutOfBounds; P ArrayStore; P NegativeArraySize;\n     P ArithmeticException; P IllegalMonitorState; P IllegalThreadState;\n     P InterruptedException\\<rbrakk>\n    \\<Longrightarrow> P C", "by (auto simp add: sys_xcpts_def sys_xcpts_list_def)"], ["", "lemma OutOfMemory_not_Object[simp]: \"OutOfMemory \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OutOfMemory \\<noteq> Object", "by(simp add: OutOfMemory_def Object_def)"], ["", "lemma ClassCast_not_Object[simp]: \"ClassCast \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ClassCast \\<noteq> Object", "by(simp add: ClassCast_def Object_def)"], ["", "lemma NullPointer_not_Object[simp]: \"NullPointer \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NullPointer \\<noteq> Object", "by(simp add: NullPointer_def Object_def)"], ["", "lemma ArrayIndexOutOfBounds_not_Object[simp]: \"ArrayIndexOutOfBounds \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ArrayIndexOutOfBounds \\<noteq> Object", "by(simp add: ArrayIndexOutOfBounds_def Object_def)"], ["", "lemma ArrayStore_not_Object[simp]: \"ArrayStore \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ArrayStore \\<noteq> Object", "by(simp add: ArrayStore_def Object_def)"], ["", "lemma NegativeArraySize_not_Object[simp]: \"NegativeArraySize \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NegativeArraySize \\<noteq> Object", "by(simp add: NegativeArraySize_def Object_def)"], ["", "lemma ArithmeticException_not_Object[simp]: \"ArithmeticException \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ArithmeticException \\<noteq> Object", "by(simp add: ArithmeticException_def Object_def)"], ["", "lemma IllegalMonitorState_not_Object[simp]: \"IllegalMonitorState \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IllegalMonitorState \\<noteq> Object", "by(simp add: IllegalMonitorState_def Object_def)"], ["", "lemma IllegalThreadState_not_Object[simp]: \"IllegalThreadState \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IllegalThreadState \\<noteq> Object", "by(simp add: IllegalThreadState_def Object_def)"], ["", "lemma InterruptedException_not_Object[simp]: \"InterruptedException \\<noteq> Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. InterruptedException \\<noteq> Object", "by(simp add: InterruptedException_def Object_def)"], ["", "lemma sys_xcpts_neqs_aux:\n  \"NullPointer \\<noteq> ClassCast\" \"NullPointer \\<noteq> OutOfMemory\" \"NullPointer \\<noteq> ArrayIndexOutOfBounds\"\n  \"NullPointer \\<noteq> ArrayStore\" \"NullPointer \\<noteq> NegativeArraySize\" \"NullPointer \\<noteq> IllegalMonitorState\"\n  \"NullPointer \\<noteq> IllegalThreadState\" \"NullPointer \\<noteq> InterruptedException\" \"NullPointer \\<noteq> ArithmeticException\"\n  \"ClassCast \\<noteq> OutOfMemory\" \"ClassCast \\<noteq> ArrayIndexOutOfBounds\"\n  \"ClassCast \\<noteq> ArrayStore\" \"ClassCast \\<noteq> NegativeArraySize\" \"ClassCast \\<noteq> IllegalMonitorState\"\n  \"ClassCast \\<noteq> IllegalThreadState\" \"ClassCast \\<noteq> InterruptedException\" \"ClassCast \\<noteq> ArithmeticException\"\n  \"OutOfMemory \\<noteq> ArrayIndexOutOfBounds\"\n  \"OutOfMemory \\<noteq> ArrayStore\" \"OutOfMemory \\<noteq> NegativeArraySize\" \"OutOfMemory \\<noteq> IllegalMonitorState\"\n  \"OutOfMemory \\<noteq> IllegalThreadState\" \"OutOfMemory \\<noteq> InterruptedException\"\n  \"OutOfMemory \\<noteq> ArithmeticException\"\n  \"ArrayIndexOutOfBounds \\<noteq> ArrayStore\" \"ArrayIndexOutOfBounds \\<noteq> NegativeArraySize\" \"ArrayIndexOutOfBounds \\<noteq> IllegalMonitorState\"\n  \"ArrayIndexOutOfBounds \\<noteq> IllegalThreadState\" \"ArrayIndexOutOfBounds \\<noteq> InterruptedException\" \"ArrayIndexOutOfBounds \\<noteq> ArithmeticException\"\n  \"ArrayStore \\<noteq> NegativeArraySize\" \"ArrayStore \\<noteq> IllegalMonitorState\"\n  \"ArrayStore \\<noteq> IllegalThreadState\" \"ArrayStore \\<noteq> InterruptedException\"\n  \"ArrayStore \\<noteq> ArithmeticException\"\n  \"NegativeArraySize \\<noteq> IllegalMonitorState\"\n  \"NegativeArraySize \\<noteq> IllegalThreadState\" \"NegativeArraySize \\<noteq> InterruptedException\"\n  \"NegativeArraySize \\<noteq> ArithmeticException\"\n  \"IllegalMonitorState \\<noteq> IllegalThreadState\" \"IllegalMonitorState \\<noteq> InterruptedException\"\n  \"IllegalMonitorState \\<noteq> ArithmeticException\"\n  \"IllegalThreadState \\<noteq> InterruptedException\"\n  \"IllegalThreadState \\<noteq> ArithmeticException\"\n  \"InterruptedException \\<noteq> ArithmeticException\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((((NullPointer \\<noteq> ClassCast &&&\n        NullPointer \\<noteq> OutOfMemory) &&&\n       NullPointer \\<noteq> ArrayIndexOutOfBounds &&&\n       NullPointer \\<noteq> ArrayStore &&&\n       NullPointer \\<noteq> NegativeArraySize) &&&\n      (NullPointer \\<noteq> IllegalMonitorState &&&\n       NullPointer \\<noteq> IllegalThreadState &&&\n       NullPointer \\<noteq> InterruptedException) &&&\n      NullPointer \\<noteq> ArithmeticException &&&\n      ClassCast \\<noteq> OutOfMemory &&&\n      ClassCast \\<noteq> ArrayIndexOutOfBounds) &&&\n     ((ClassCast \\<noteq> ArrayStore &&&\n       ClassCast \\<noteq> NegativeArraySize) &&&\n      ClassCast \\<noteq> IllegalMonitorState &&&\n      ClassCast \\<noteq> IllegalThreadState &&&\n      ClassCast \\<noteq> InterruptedException) &&&\n     (ClassCast \\<noteq> ArithmeticException &&&\n      OutOfMemory \\<noteq> ArrayIndexOutOfBounds &&&\n      OutOfMemory \\<noteq> ArrayStore) &&&\n     OutOfMemory \\<noteq> NegativeArraySize &&&\n     OutOfMemory \\<noteq> IllegalMonitorState &&&\n     OutOfMemory \\<noteq> IllegalThreadState) &&&\n    (((OutOfMemory \\<noteq> InterruptedException &&&\n       OutOfMemory \\<noteq> ArithmeticException) &&&\n      ArrayIndexOutOfBounds \\<noteq> ArrayStore &&&\n      ArrayIndexOutOfBounds \\<noteq> NegativeArraySize &&&\n      ArrayIndexOutOfBounds \\<noteq> IllegalMonitorState) &&&\n     (ArrayIndexOutOfBounds \\<noteq> IllegalThreadState &&&\n      ArrayIndexOutOfBounds \\<noteq> InterruptedException &&&\n      ArrayIndexOutOfBounds \\<noteq> ArithmeticException) &&&\n     ArrayStore \\<noteq> NegativeArraySize &&&\n     ArrayStore \\<noteq> IllegalMonitorState &&&\n     ArrayStore \\<noteq> IllegalThreadState) &&&\n    ((ArrayStore \\<noteq> InterruptedException &&&\n      ArrayStore \\<noteq> ArithmeticException &&&\n      NegativeArraySize \\<noteq> IllegalMonitorState) &&&\n     NegativeArraySize \\<noteq> IllegalThreadState &&&\n     NegativeArraySize \\<noteq> InterruptedException &&&\n     NegativeArraySize \\<noteq> ArithmeticException) &&&\n    (IllegalMonitorState \\<noteq> IllegalThreadState &&&\n     IllegalMonitorState \\<noteq> InterruptedException &&&\n     IllegalMonitorState \\<noteq> ArithmeticException) &&&\n    IllegalThreadState \\<noteq> InterruptedException &&&\n    IllegalThreadState \\<noteq> ArithmeticException &&&\n    InterruptedException \\<noteq> ArithmeticException", "by(simp_all add: NullPointer_def ClassCast_def OutOfMemory_def ArrayIndexOutOfBounds_def ArrayStore_def NegativeArraySize_def IllegalMonitorState_def IllegalThreadState_def InterruptedException_def ArithmeticException_def)"], ["", "lemmas sys_xcpts_neqs = sys_xcpts_neqs_aux sys_xcpts_neqs_aux[symmetric]"], ["", "lemma Thread_neq_sys_xcpts_aux:\n  \"Thread \\<noteq> NullPointer\"\n  \"Thread \\<noteq> ClassCast\"\n  \"Thread \\<noteq> OutOfMemory\"\n  \"Thread \\<noteq> ArrayIndexOutOfBounds\"\n  \"Thread \\<noteq> ArrayStore\"\n  \"Thread \\<noteq> NegativeArraySize\"\n  \"Thread \\<noteq> ArithmeticException\"\n  \"Thread \\<noteq> IllegalMonitorState\"\n  \"Thread \\<noteq> IllegalThreadState\"\n  \"Thread \\<noteq> InterruptedException\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Thread \\<noteq> NullPointer &&& Thread \\<noteq> ClassCast) &&&\n     Thread \\<noteq> OutOfMemory &&&\n     Thread \\<noteq> ArrayIndexOutOfBounds &&&\n     Thread \\<noteq> ArrayStore) &&&\n    (Thread \\<noteq> NegativeArraySize &&&\n     Thread \\<noteq> ArithmeticException) &&&\n    Thread \\<noteq> IllegalMonitorState &&&\n    Thread \\<noteq> IllegalThreadState &&&\n    Thread \\<noteq> InterruptedException", "by(simp_all add: Thread_def NullPointer_def ClassCast_def OutOfMemory_def ArrayIndexOutOfBounds_def ArrayStore_def NegativeArraySize_def IllegalMonitorState_def IllegalThreadState_def InterruptedException_def ArithmeticException_def)"], ["", "lemmas Thread_neq_sys_xcpts = Thread_neq_sys_xcpts_aux Thread_neq_sys_xcpts_aux[symmetric]"], ["", "subsection \\<open>Well-formedness for system classes and exceptions\\<close>"], ["", "lemma\n  assumes \"wf_syscls P\"\n  shows wf_syscls_class_Object: \"\\<exists>C fs ms. class P Object = Some (C,fs,ms)\"\n  and wf_syscls_class_Thread:  \"\\<exists>C fs ms. class P Thread = Some (C,fs,ms)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C fs ms. class P Object = \\<lfloor>(C, fs, ms)\\<rfloor> &&&\n    \\<exists>C fs ms. class P Thread = \\<lfloor>(C, fs, ms)\\<rfloor>", "using assms"], ["proof (prove)\nusing this:\n  wf_syscls P\n\ngoal (1 subgoal):\n 1. \\<exists>C fs ms. class P Object = \\<lfloor>(C, fs, ms)\\<rfloor> &&&\n    \\<exists>C fs ms. class P Thread = \\<lfloor>(C, fs, ms)\\<rfloor>", "by(auto simp: map_of_SomeI wf_syscls_def is_class_def)"], ["", "lemma [simp]:\n  assumes \"wf_syscls P\"\n  shows wf_syscls_is_class_Object: \"is_class P Object\"\n  and wf_syscls_is_class_Thread: \"is_class P Thread\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_class P Object &&& is_class P Thread", "using assms"], ["proof (prove)\nusing this:\n  wf_syscls P\n\ngoal (1 subgoal):\n 1. is_class P Object &&& is_class P Thread", "by(simp_all add: is_class_def wf_syscls_class_Object wf_syscls_class_Thread)"], ["", "lemma wf_syscls_xcpt_subcls_Throwable:\n  \"\\<lbrakk> C \\<in> sys_xcpts; wf_syscls P \\<rbrakk> \\<Longrightarrow> P \\<turnstile> C \\<preceq>\\<^sup>* Throwable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; wf_syscls P\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> C \\<preceq>\\<^sup>* Throwable", "by(simp add: wf_syscls_def is_class_def class_def)"], ["", "lemma wf_syscls_is_class_Throwable:\n  \"wf_syscls P \\<Longrightarrow> is_class P Throwable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_syscls P \\<Longrightarrow> is_class P Throwable", "by(auto simp add: wf_syscls_def is_class_def class_def map_of_SomeI)"], ["", "lemma wf_syscls_is_class_sub_Throwable:\n  \"\\<lbrakk> wf_syscls P; P \\<turnstile> C \\<preceq>\\<^sup>* Throwable \\<rbrakk> \\<Longrightarrow> is_class P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_syscls P;\n     P \\<turnstile> C \\<preceq>\\<^sup>* Throwable\\<rbrakk>\n    \\<Longrightarrow> is_class P C", "by(erule subcls_is_class1)(erule wf_syscls_is_class_Throwable)"], ["", "lemma wf_syscls_is_class_xcpt:\n  \"\\<lbrakk> C \\<in> sys_xcpts; wf_syscls P \\<rbrakk> \\<Longrightarrow> is_class P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; wf_syscls P\\<rbrakk>\n    \\<Longrightarrow> is_class P C", "by(blast intro: wf_syscls_is_class_sub_Throwable wf_syscls_xcpt_subcls_Throwable)"], ["", "lemma wf_syscls_code [code]:\n  \"wf_syscls P \\<longleftrightarrow>\n   (\\<forall>C \\<in> set [Object, Throwable, Thread]. is_class P C) \\<and> (\\<forall>C \\<in> sys_xcpts. P \\<turnstile> C \\<preceq>\\<^sup>* Throwable)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_syscls P =\n    ((\\<forall>C\\<in>set [Object, Throwable, Thread]. is_class P C) \\<and>\n     (\\<forall>C\\<in>sys_xcpts.\n         P \\<turnstile> C \\<preceq>\\<^sup>* Throwable))", "by(simp only: wf_syscls_def) simp"], ["", "end"]]}