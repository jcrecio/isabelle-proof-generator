{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaThreads/DFA/LBVComplete.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaThreads", "problem_names": ["lemma [code]:\n  \"is_target step \\<tau>s pc' =\n  list_ex (\\<lambda>pc. pc' \\<noteq> pc+1 \\<and> List.member (map fst (step pc (\\<tau>s!pc))) pc') [0..<size \\<tau>s]\"", "lemma (in lbvc) cert: \"cert_ok c (size \\<tau>s) \\<top> \\<bottom> A\"", "lemmas [simp del] = split_paired_Ex", "lemma (in lbvc) cert_target [intro?]:\n  \"\\<lbrakk> (pc',s') \\<in> set (step pc (\\<tau>s!pc));\n      pc' \\<noteq> pc+1; pc < size \\<tau>s; pc' < size \\<tau>s \\<rbrakk>\n  \\<Longrightarrow> c!pc' = \\<tau>s!pc'\"", "lemma (in lbvc) cert_approx [intro?]:\n  \"\\<lbrakk> pc < size \\<tau>s; c!pc \\<noteq> \\<bottom> \\<rbrakk> \\<Longrightarrow> c!pc = \\<tau>s!pc\"", "lemma (in lbv) le_top [simp, intro]: \"x <=_r \\<top>\"", "lemma (in lbv) merge_mono:\n  assumes less:  \"set ss\\<^sub>2 {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set ss\\<^sub>1\"\n  assumes x:     \"x \\<in> A\"\n  assumes ss\\<^sub>1:   \"snd`set ss\\<^sub>1 \\<subseteq> A\"\n  assumes ss\\<^sub>2:   \"snd`set ss\\<^sub>2 \\<subseteq> A\"\n  shows \"merge c pc ss\\<^sub>2 x \\<sqsubseteq>\\<^sub>r merge c pc ss\\<^sub>1 x\" (is \"?s\\<^sub>2 \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1\")", "lemma (in lbvc) wti_mono:\n  assumes less: \"s\\<^sub>2 \\<sqsubseteq>\\<^sub>r s\\<^sub>1\"\n  assumes pc: \"pc < size \\<tau>s\" and s\\<^sub>1: \"s\\<^sub>1 \\<in> A\" and s\\<^sub>2: \"s\\<^sub>2 \\<in> A\"\n  shows \"wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^sub>r wti c pc s\\<^sub>1\" (is \"?s\\<^sub>2' \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1'\")", "lemma (in lbvc) wtc_mono:\n  assumes less: \"s\\<^sub>2 \\<sqsubseteq>\\<^sub>r s\\<^sub>1\"\n  assumes pc: \"pc < size \\<tau>s\" and s\\<^sub>1: \"s\\<^sub>1 \\<in> A\" and s\\<^sub>2: \"s\\<^sub>2 \\<in> A\"\n  shows \"wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^sub>r wtc c pc s\\<^sub>1\" (is \"?s\\<^sub>2' \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1'\")", "lemma (in lbv) top_le_conv [simp]: \"\\<top> \\<sqsubseteq>\\<^sub>r x = (x = \\<top>)\"", "lemma (in lbv) neq_top [simp, elim]: \"\\<lbrakk> x \\<sqsubseteq>\\<^sub>r y; y \\<noteq> \\<top> \\<rbrakk> \\<Longrightarrow> x \\<noteq> \\<top>\"", "lemma (in lbvc) stable_wti:\n  assumes stable:  \"stable r step \\<tau>s pc\" and pc: \"pc < size \\<tau>s\"\n  shows \"wti c pc (\\<tau>s!pc) \\<noteq> \\<top>\"", "lemma (in lbvc) wti_less:\n  assumes stable: \"stable r step \\<tau>s pc\" and suc_pc: \"Suc pc < size \\<tau>s\"\n  shows \"wti c pc (\\<tau>s!pc) \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\" (is \"?wti \\<sqsubseteq>\\<^sub>r _\")", "lemma (in lbvc) stable_wtc:\n  assumes stable: \"stable r step \\<tau>s pc\" and pc: \"pc < size \\<tau>s\"\n  shows \"wtc c pc (\\<tau>s!pc) \\<noteq> \\<top>\"", "lemma (in lbvc) wtc_less:\n  assumes stable: \"stable r step \\<tau>s pc\" and suc_pc: \"Suc pc < size \\<tau>s\"\n  shows \"wtc c pc (\\<tau>s!pc) \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\" (is \"?wtc \\<sqsubseteq>\\<^sub>r _\")", "lemma (in lbvc) wt_step_wtl_lemma:\n  assumes wt_step: \"wt_step r \\<top> step \\<tau>s\"\n  shows \"\\<And>pc s. pc+size ls = size \\<tau>s \\<Longrightarrow> s \\<sqsubseteq>\\<^sub>r \\<tau>s!pc \\<Longrightarrow> s \\<in> A \\<Longrightarrow> s\\<noteq>\\<top> \\<Longrightarrow>\n                wtl ls c pc s \\<noteq> \\<top>\"\n  (is \"\\<And>pc s. _ \\<Longrightarrow> _ \\<Longrightarrow> _ \\<Longrightarrow> _ \\<Longrightarrow> ?wtl ls pc s \\<noteq> _\")", "theorem (in lbvc) wtl_complete:\n  assumes wt: \"wt_step r \\<top> step \\<tau>s\"\n  assumes s: \"s \\<sqsubseteq>\\<^sub>r \\<tau>s!0\" \"s \\<in> A\" \"s \\<noteq> \\<top>\" and eq: \"size ins = size \\<tau>s\"\n  shows \"wtl ins c 0 s \\<noteq> \\<top>\""], "translations": [["", "lemma [code]:\n  \"is_target step \\<tau>s pc' =\n  list_ex (\\<lambda>pc. pc' \\<noteq> pc+1 \\<and> List.member (map fst (step pc (\\<tau>s!pc))) pc') [0..<size \\<tau>s]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_target step \\<tau>s pc' =\n    list_ex\n     (\\<lambda>pc.\n         pc' \\<noteq> pc + 1 \\<and>\n         List.member (map fst (step pc (\\<tau>s ! pc))) pc')\n     [0..<length \\<tau>s]", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_target step \\<tau>s pc' =\n    list_ex\n     (\\<lambda>pc.\n         pc' \\<noteq> pc + 1 \\<and>\n         List.member (map fst (step pc (\\<tau>s ! pc))) pc')\n     [0..<length \\<tau>s]", "apply (simp add: list_ex_iff is_target_def member_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>pc.\n        pc' \\<noteq> Suc pc \\<and>\n        pc < length \\<tau>s \\<and>\n        (\\<exists>s'. (pc', s') \\<in> set (step pc (\\<tau>s ! pc)))) =\n    (\\<exists>pc\\<in>{0..<length \\<tau>s}.\n        pc' \\<noteq> Suc pc \\<and>\n        pc' \\<in> fst ` set (step pc (\\<tau>s ! pc)))", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "locale lbvc = lbv + \n  fixes \\<tau>s :: \"'a list\" \n  fixes c :: \"'a list\" \n  defines cert_def: \"c \\<equiv> make_cert step \\<tau>s \\<bottom>\"\n\n  assumes mono: \"mono r step (size \\<tau>s) A\"\n  assumes pres: \"pres_type step (size \\<tau>s) A\" \n  assumes \\<tau>s:  \"\\<forall>pc < size \\<tau>s. \\<tau>s!pc \\<in> A \\<and> \\<tau>s!pc \\<noteq> \\<top>\"\n  assumes bounded: \"bounded step (size \\<tau>s)\"\n\n  assumes B_neq_T: \"\\<bottom> \\<noteq> \\<top>\""], ["", "lemma (in lbvc) cert: \"cert_ok c (size \\<tau>s) \\<top> \\<bottom> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cert_ok c (length \\<tau>s) \\<top> \\<bottom> A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. cert_ok c (length \\<tau>s) \\<top> \\<bottom> A", "proof (unfold cert_ok_def, intro strip conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<in> A\n 2. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<noteq> \\<top>\n 3. c ! length \\<tau>s = \\<bottom>", "note [simp] = make_cert_def cert_def nth_append"], ["proof (state)\nthis:\n  make_cert ?step ?\\<tau>s ?B =\n  map (\\<lambda>pc.\n          if is_target ?step ?\\<tau>s pc then ?\\<tau>s ! pc else ?B)\n   [0..<length ?\\<tau>s] @\n  [?B]\n  c \\<equiv> make_cert step \\<tau>s \\<bottom>\n  (?xs @ ?ys) ! ?n =\n  (if ?n < length ?xs then ?xs ! ?n else ?ys ! (?n - length ?xs))\n\ngoal (3 subgoals):\n 1. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<in> A\n 2. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<noteq> \\<top>\n 3. c ! length \\<tau>s = \\<bottom>", "show \"c!size \\<tau>s = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ! length \\<tau>s = \\<bottom>", "by simp"], ["proof (state)\nthis:\n  c ! length \\<tau>s = \\<bottom>\n\ngoal (2 subgoals):\n 1. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<in> A\n 2. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<noteq> \\<top>", "fix pc"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<in> A\n 2. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<noteq> \\<top>", "assume pc: \"pc < size \\<tau>s\""], ["proof (state)\nthis:\n  pc < length \\<tau>s\n\ngoal (2 subgoals):\n 1. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<in> A\n 2. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<noteq> \\<top>", "from pc \\<tau>s B_A"], ["proof (chain)\npicking this:\n  pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  \\<bottom> \\<in> A", "show \"c!pc \\<in> A\""], ["proof (prove)\nusing this:\n  pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  \\<bottom> \\<in> A\n\ngoal (1 subgoal):\n 1. c ! pc \\<in> A", "by simp"], ["proof (state)\nthis:\n  c ! pc \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length \\<tau>s \\<Longrightarrow> c ! i \\<noteq> \\<top>", "from pc \\<tau>s B_neq_T"], ["proof (chain)\npicking this:\n  pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  \\<bottom> \\<noteq> \\<top>", "show \"c!pc \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  \\<bottom> \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<top>", "by simp"], ["proof (state)\nthis:\n  c ! pc \\<noteq> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemmas [simp del] = split_paired_Ex"], ["", "lemma (in lbvc) cert_target [intro?]:\n  \"\\<lbrakk> (pc',s') \\<in> set (step pc (\\<tau>s!pc));\n      pc' \\<noteq> pc+1; pc < size \\<tau>s; pc' < size \\<tau>s \\<rbrakk>\n  \\<Longrightarrow> c!pc' = \\<tau>s!pc'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(pc', s') \\<in> set (step pc (\\<tau>s ! pc));\n     pc' \\<noteq> pc + 1; pc < length \\<tau>s; pc' < length \\<tau>s\\<rbrakk>\n    \\<Longrightarrow> c ! pc' = \\<tau>s ! pc'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(pc', s') \\<in> set (step pc (\\<tau>s ! pc));\n     pc' \\<noteq> pc + 1; pc < length \\<tau>s; pc' < length \\<tau>s\\<rbrakk>\n    \\<Longrightarrow> c ! pc' = \\<tau>s ! pc'", "by (auto simp add: cert_def make_cert_def nth_append is_target_def)"], ["", "(*>*)"], ["", "lemma (in lbvc) cert_approx [intro?]:\n  \"\\<lbrakk> pc < size \\<tau>s; c!pc \\<noteq> \\<bottom> \\<rbrakk> \\<Longrightarrow> c!pc = \\<tau>s!pc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pc < length \\<tau>s; c ! pc \\<noteq> \\<bottom>\\<rbrakk>\n    \\<Longrightarrow> c ! pc = \\<tau>s ! pc", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pc < length \\<tau>s; c ! pc \\<noteq> \\<bottom>\\<rbrakk>\n    \\<Longrightarrow> c ! pc = \\<tau>s ! pc", "by (auto simp add: cert_def make_cert_def nth_append)"], ["", "(*>*)"], ["", "lemma (in lbv) le_top [simp, intro]: \"x <=_r \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<top>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<top>", "by (insert top) simp"], ["", "(*>*)"], ["", "lemma (in lbv) merge_mono:\n  assumes less:  \"set ss\\<^sub>2 {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set ss\\<^sub>1\"\n  assumes x:     \"x \\<in> A\"\n  assumes ss\\<^sub>1:   \"snd`set ss\\<^sub>1 \\<subseteq> A\"\n  assumes ss\\<^sub>2:   \"snd`set ss\\<^sub>2 \\<subseteq> A\"\n  shows \"merge c pc ss\\<^sub>2 x \\<sqsubseteq>\\<^sub>r merge c pc ss\\<^sub>1 x\" (is \"?s\\<^sub>2 \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "have \"?s\\<^sub>1 = \\<top> \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>1 x = \\<top> \\<Longrightarrow>\n    merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "by simp"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x = \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "moreover"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x = \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "{"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x = \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "assume merge: \"?s\\<^sub>1 \\<noteq> T\""], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "from x ss\\<^sub>1"], ["proof (chain)\npicking this:\n  x \\<in> A\n  snd ` set ss\\<^sub>1 \\<subseteq> A", "have \"?s\\<^sub>1 =\n      (if \\<forall>(pc',s')\\<in>set ss\\<^sub>1. pc' \\<noteq> pc + 1 \\<longrightarrow> s' \\<sqsubseteq>\\<^sub>r c!pc'\n      then (map snd [(p', t') \\<leftarrow> ss\\<^sub>1 . p'=pc+1]) \\<Squnion>\\<^bsub>f\\<^esub> x\n      else \\<top>)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  snd ` set ss\\<^sub>1 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>1 x =\n    (if \\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n           pc' \\<noteq> pc + 1 \\<longrightarrow>\n           s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n     then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n          \\<Squnion>\\<^bsub>f\\<^esub> x\n     else \\<top>)", "by (rule merge_def)"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x =\n  (if \\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n        \\<Squnion>\\<^bsub>f\\<^esub> x\n   else \\<top>)\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "with merge"], ["proof (chain)\npicking this:\n  merge c pc ss\\<^sub>1 x \\<noteq> \\<top>\n  merge c pc ss\\<^sub>1 x =\n  (if \\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n        \\<Squnion>\\<^bsub>f\\<^esub> x\n   else \\<top>)", "obtain\n      app: \"\\<forall>(pc',s')\\<in>set ss\\<^sub>1. pc' \\<noteq> pc+1 \\<longrightarrow> s' \\<sqsubseteq>\\<^sub>r c!pc'\" \n           (is \"?app ss\\<^sub>1\") and\n      sum: \"(map snd [(p',t') \\<leftarrow> ss\\<^sub>1 . p' = pc+1] \\<Squnion>\\<^bsub>f\\<^esub> x) = ?s\\<^sub>1\" \n           (is \"?map ss\\<^sub>1 \\<Squnion>\\<^bsub>f\\<^esub> x = _\" is \"?sum ss\\<^sub>1 = _\")"], ["proof (prove)\nusing this:\n  merge c pc ss\\<^sub>1 x \\<noteq> \\<top>\n  merge c pc ss\\<^sub>1 x =\n  (if \\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n        \\<Squnion>\\<^bsub>f\\<^esub> x\n   else \\<top>)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n                 pc' \\<noteq> pc + 1 \\<longrightarrow>\n                 s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc';\n      map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n      \\<Squnion>\\<^bsub>f\\<^esub> x =\n      merge c pc ss\\<^sub>1 x\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp split: if_split_asm)"], ["proof (state)\nthis:\n  \\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n     pc' \\<noteq> pc + 1 \\<longrightarrow>\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n  map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x =\n  merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "from app less"], ["proof (chain)\npicking this:\n  \\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n     pc' \\<noteq> pc + 1 \\<longrightarrow>\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n  set ss\\<^sub>2 {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set ss\\<^sub>1", "have \"?app ss\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<forall>(pc', s')\\<in>set ss\\<^sub>1.\n     pc' \\<noteq> pc + 1 \\<longrightarrow>\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n  set ss\\<^sub>2 {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set ss\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set ss\\<^sub>2.\n       case a of\n       (pc', s') \\<Rightarrow>\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'", "by (blast dest: trans_r lesub_step_typeD)"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set ss\\<^sub>2.\n     case a of\n     (pc', s') \\<Rightarrow>\n       pc' \\<noteq> pc + 1 \\<longrightarrow>\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "moreover"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set ss\\<^sub>2.\n     case a of\n     (pc', s') \\<Rightarrow>\n       pc' \\<noteq> pc + 1 \\<longrightarrow>\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "{"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set ss\\<^sub>2.\n     case a of\n     (pc', s') \\<Rightarrow>\n       pc' \\<noteq> pc + 1 \\<longrightarrow>\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "from ss\\<^sub>1"], ["proof (chain)\npicking this:\n  snd ` set ss\\<^sub>1 \\<subseteq> A", "have map1: \"set (?map ss\\<^sub>1) \\<subseteq> A\""], ["proof (prove)\nusing this:\n  snd ` set ss\\<^sub>1 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. set (map snd\n          (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n            ss\\<^sub>1))\n    \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>1))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "with x and semilat Semilat_axioms"], ["proof (chain)\npicking this:\n  x \\<in> A\n  semilat (A, r, f)\n  Semilat A r f\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>1))\n  \\<subseteq> A", "have \"?sum ss\\<^sub>1 \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  semilat (A, r, f)\n  Semilat A r f\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>1))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n       ss\\<^sub>1) \n    \\<Squnion>\\<^bsub>f\\<^esub> x\n    \\<in> A", "by (auto intro!: plusplus_closed)"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x\n  \\<in> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "with sum"], ["proof (chain)\npicking this:\n  map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x =\n  merge c pc ss\\<^sub>1 x\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x\n  \\<in> A", "have \"?s\\<^sub>1 \\<in> A\""], ["proof (prove)\nusing this:\n  map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x =\n  merge c pc ss\\<^sub>1 x\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x\n  \\<in> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>1 x \\<in> A", "by simp"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x \\<in> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "moreover"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x \\<in> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "have mapD: \"\\<And>x ss. x \\<in> set (?map ss) \\<Longrightarrow> \\<exists>p. (p,x) \\<in> set ss \\<and> p=pc+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x ss.\n       x \\<in> set (map snd\n                     (filter\n                       (\\<lambda>a.\n                           case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                       ss)) \\<Longrightarrow>\n       \\<exists>p. (p, x) \\<in> set ss \\<and> p = pc + 1", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> set (map snd\n                 (filter\n                   (\\<lambda>a.\n                       case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                   ?ss)) \\<Longrightarrow>\n  \\<exists>p. (p, ?x) \\<in> set ?ss \\<and> p = pc + 1\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "from x map1"], ["proof (chain)\npicking this:\n  x \\<in> A\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>1))\n  \\<subseteq> A", "have \"\\<forall>x \\<in> set (?map ss\\<^sub>1). x \\<sqsubseteq>\\<^sub>r ?sum ss\\<^sub>1\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>1))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (map snd\n                          (filter\n                            (\\<lambda>a.\n                                case a of\n                                (p', t') \\<Rightarrow> p' = pc + 1)\n                            ss\\<^sub>1)).\n       xa \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n    (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n      ss\\<^sub>1) \n   \\<Squnion>\\<^bsub>f\\<^esub> x", "by clarify (rule pp_ub1)"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>1)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n  (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n    ss\\<^sub>1) \n \\<Squnion>\\<^bsub>f\\<^esub> x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "with sum"], ["proof (chain)\npicking this:\n  map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x =\n  merge c pc ss\\<^sub>1 x\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>1)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n  (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n    ss\\<^sub>1) \n \\<Squnion>\\<^bsub>f\\<^esub> x", "have \"\\<forall>x \\<in> set (?map ss\\<^sub>1). x \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1\""], ["proof (prove)\nusing this:\n  map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x =\n  merge c pc ss\\<^sub>1 x\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>1)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n  (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n    ss\\<^sub>1) \n \\<Squnion>\\<^bsub>f\\<^esub> x\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (map snd\n                          (filter\n                            (\\<lambda>a.\n                                case a of\n                                (p', t') \\<Rightarrow> p' = pc + 1)\n                            ss\\<^sub>1)).\n       xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "by simp"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>1)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "with less"], ["proof (chain)\npicking this:\n  set ss\\<^sub>2 {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set ss\\<^sub>1\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>1)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "have \"\\<forall>x \\<in> set (?map ss\\<^sub>2). x \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1\""], ["proof (prove)\nusing this:\n  set ss\\<^sub>2 {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set ss\\<^sub>1\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>1)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (map snd\n                          (filter\n                            (\\<lambda>a.\n                                case a of\n                                (p', t') \\<Rightarrow> p' = pc + 1)\n                            ss\\<^sub>2)).\n       xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "by (fastforce dest!: mapD lesub_step_typeD intro: trans_r)"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>2)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "moreover"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>2)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "from map1 x"], ["proof (chain)\npicking this:\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>1))\n  \\<subseteq> A\n  x \\<in> A", "have \"x \\<sqsubseteq>\\<^sub>r (?sum ss\\<^sub>1)\""], ["proof (prove)\nusing this:\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>1))\n  \\<subseteq> A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n(filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n  ss\\<^sub>1) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> x", "by (rule pp_ub2)"], ["proof (state)\nthis:\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                                    (filter\n(\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1) ss\\<^sub>1) \n                                   \\<Squnion>\\<^bsub>f\\<^esub> x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "with sum"], ["proof (chain)\npicking this:\n  map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x =\n  merge c pc ss\\<^sub>1 x\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                                    (filter\n(\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1) ss\\<^sub>1) \n                                   \\<Squnion>\\<^bsub>f\\<^esub> x", "have \"x \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1\""], ["proof (prove)\nusing this:\n  map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>1) \n  \\<Squnion>\\<^bsub>f\\<^esub> x =\n  merge c pc ss\\<^sub>1 x\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                                    (filter\n(\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1) ss\\<^sub>1) \n                                   \\<Squnion>\\<^bsub>f\\<^esub> x\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "by simp"], ["proof (state)\nthis:\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "moreover"], ["proof (state)\nthis:\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "from ss\\<^sub>2"], ["proof (chain)\npicking this:\n  snd ` set ss\\<^sub>2 \\<subseteq> A", "have \"set (?map ss\\<^sub>2) \\<subseteq> A\""], ["proof (prove)\nusing this:\n  snd ` set ss\\<^sub>2 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. set (map snd\n          (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n            ss\\<^sub>2))\n    \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>2))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "ultimately"], ["proof (chain)\npicking this:\n  merge c pc ss\\<^sub>1 x \\<in> A\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>2)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>2))\n  \\<subseteq> A", "have \"?sum ss\\<^sub>2 \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1\""], ["proof (prove)\nusing this:\n  merge c pc ss\\<^sub>1 x \\<in> A\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>2)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>2))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n       ss\\<^sub>2) \n    \\<Squnion>\\<^bsub>f\\<^esub> x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "using x"], ["proof (prove)\nusing this:\n  merge c pc ss\\<^sub>1 x \\<in> A\n  \\<forall>xa\\<in>set (map snd\n                        (filter\n                          (\\<lambda>a.\n                              case a of (p', t') \\<Rightarrow> p' = pc + 1)\n                          ss\\<^sub>2)).\n     xa \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  x \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  set (map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n          ss\\<^sub>2))\n  \\<subseteq> A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n       ss\\<^sub>2) \n    \\<Squnion>\\<^bsub>f\\<^esub> x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "by - (rule pp_lub)"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>2) \n  \\<Squnion>\\<^bsub>f\\<^esub> x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "}"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>2) \n  \\<Squnion>\\<^bsub>f\\<^esub> x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "moreover"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>2) \n  \\<Squnion>\\<^bsub>f\\<^esub> x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "from x ss\\<^sub>2"], ["proof (chain)\npicking this:\n  x \\<in> A\n  snd ` set ss\\<^sub>2 \\<subseteq> A", "have \"?s\\<^sub>2 =\n      (if \\<forall>(pc', s')\\<in>set ss\\<^sub>2. pc' \\<noteq> pc + 1 \\<longrightarrow> s' \\<sqsubseteq>\\<^sub>r c!pc'\n      then map snd [(p', t') \\<leftarrow> ss\\<^sub>2 . p' = pc + 1] \\<Squnion>\\<^bsub>f\\<^esub> x\n      else \\<top>)\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  snd ` set ss\\<^sub>2 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x =\n    (if \\<forall>(pc', s')\\<in>set ss\\<^sub>2.\n           pc' \\<noteq> pc + 1 \\<longrightarrow>\n           s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n     then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>2) \n          \\<Squnion>\\<^bsub>f\\<^esub> x\n     else \\<top>)", "by (rule merge_def)"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>2 x =\n  (if \\<forall>(pc', s')\\<in>set ss\\<^sub>2.\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>2) \n        \\<Squnion>\\<^bsub>f\\<^esub> x\n   else \\<top>)\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>set ss\\<^sub>2.\n     case a of\n     (pc', s') \\<Rightarrow>\n       pc' \\<noteq> pc + 1 \\<longrightarrow>\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>2) \n  \\<Squnion>\\<^bsub>f\\<^esub> x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  merge c pc ss\\<^sub>2 x =\n  (if \\<forall>(pc', s')\\<in>set ss\\<^sub>2.\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>2) \n        \\<Squnion>\\<^bsub>f\\<^esub> x\n   else \\<top>)", "have ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set ss\\<^sub>2.\n     case a of\n     (pc', s') \\<Rightarrow>\n       pc' \\<noteq> pc + 1 \\<longrightarrow>\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = pc + 1)\n     ss\\<^sub>2) \n  \\<Squnion>\\<^bsub>f\\<^esub> x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  merge c pc ss\\<^sub>2 x =\n  (if \\<forall>(pc', s')\\<in>set ss\\<^sub>2.\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd (filter (\\<lambda>(p', t'). p' = pc + 1) ss\\<^sub>2) \n        \\<Squnion>\\<^bsub>f\\<^esub> x\n   else \\<top>)\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "by simp"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "}"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>1 x \\<noteq> \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "ultimately"], ["proof (chain)\npicking this:\n  merge c pc ss\\<^sub>1 x = \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  merge c pc ss\\<^sub>1 x \\<noteq> \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "show ?thesis"], ["proof (prove)\nusing this:\n  merge c pc ss\\<^sub>1 x = \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n  merge c pc ss\\<^sub>1 x \\<noteq> \\<top> \\<Longrightarrow>\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal (1 subgoal):\n 1. merge c pc ss\\<^sub>2 x \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x", "by (cases \"?s\\<^sub>1 = \\<top>\") auto"], ["proof (state)\nthis:\n  merge c pc ss\\<^sub>2 x \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> merge c pc ss\\<^sub>1 x\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma (in lbvc) wti_mono:\n  assumes less: \"s\\<^sub>2 \\<sqsubseteq>\\<^sub>r s\\<^sub>1\"\n  assumes pc: \"pc < size \\<tau>s\" and s\\<^sub>1: \"s\\<^sub>1 \\<in> A\" and s\\<^sub>2: \"s\\<^sub>2 \\<in> A\"\n  shows \"wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^sub>r wti c pc s\\<^sub>1\" (is \"?s\\<^sub>2' \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "from mono pc s\\<^sub>2 less"], ["proof (chain)\npicking this:\n  SemilatAlg.mono r step (length \\<tau>s) A\n  pc < length \\<tau>s\n  s\\<^sub>2 \\<in> A\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> s\\<^sub>1", "have \"set (step pc s\\<^sub>2) {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step pc s\\<^sub>1)\""], ["proof (prove)\nusing this:\n  SemilatAlg.mono r step (length \\<tau>s) A\n  pc < length \\<tau>s\n  s\\<^sub>2 \\<in> A\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> s\\<^sub>1\n\ngoal (1 subgoal):\n 1. set (step pc s\\<^sub>2) \n    {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step pc s\\<^sub>1)", "by (rule monoD)"], ["proof (state)\nthis:\n  set (step pc s\\<^sub>2) \n  {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step pc s\\<^sub>1)\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "moreover"], ["proof (state)\nthis:\n  set (step pc s\\<^sub>2) \n  {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step pc s\\<^sub>1)\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "from cert B_A pc"], ["proof (chain)\npicking this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  \\<bottom> \\<in> A\n  pc < length \\<tau>s", "have \"c!Suc pc \\<in> A\""], ["proof (prove)\nusing this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  \\<bottom> \\<in> A\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! Suc pc \\<in> A", "by (rule cert_okD3)"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "moreover"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "from pres s\\<^sub>1 pc"], ["proof (chain)\npicking this:\n  pres_type step (length \\<tau>s) A\n  s\\<^sub>1 \\<in> A\n  pc < length \\<tau>s", "have \"snd`set (step pc s\\<^sub>1) \\<subseteq> A\""], ["proof (prove)\nusing this:\n  pres_type step (length \\<tau>s) A\n  s\\<^sub>1 \\<in> A\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. snd ` set (step pc s\\<^sub>1) \\<subseteq> A", "by (rule pres_typeD2)"], ["proof (state)\nthis:\n  snd ` set (step pc s\\<^sub>1) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "moreover"], ["proof (state)\nthis:\n  snd ` set (step pc s\\<^sub>1) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "from pres s\\<^sub>2 pc"], ["proof (chain)\npicking this:\n  pres_type step (length \\<tau>s) A\n  s\\<^sub>2 \\<in> A\n  pc < length \\<tau>s", "have \"snd`set (step pc s\\<^sub>2) \\<subseteq> A\""], ["proof (prove)\nusing this:\n  pres_type step (length \\<tau>s) A\n  s\\<^sub>2 \\<in> A\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. snd ` set (step pc s\\<^sub>2) \\<subseteq> A", "by (rule pres_typeD2)"], ["proof (state)\nthis:\n  snd ` set (step pc s\\<^sub>2) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "ultimately"], ["proof (chain)\npicking this:\n  set (step pc s\\<^sub>2) \n  {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step pc s\\<^sub>1)\n  c ! Suc pc \\<in> A\n  snd ` set (step pc s\\<^sub>1) \\<subseteq> A\n  snd ` set (step pc s\\<^sub>2) \\<subseteq> A", "show ?thesis"], ["proof (prove)\nusing this:\n  set (step pc s\\<^sub>2) \n  {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step pc s\\<^sub>1)\n  c ! Suc pc \\<in> A\n  snd ` set (step pc s\\<^sub>1) \\<subseteq> A\n  snd ` set (step pc s\\<^sub>2) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "by (simp add: wti merge_mono)"], ["proof (state)\nthis:\n  wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma (in lbvc) wtc_mono:\n  assumes less: \"s\\<^sub>2 \\<sqsubseteq>\\<^sub>r s\\<^sub>1\"\n  assumes pc: \"pc < size \\<tau>s\" and s\\<^sub>1: \"s\\<^sub>1 \\<in> A\" and s\\<^sub>2: \"s\\<^sub>2 \\<in> A\"\n  shows \"wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^sub>r wtc c pc s\\<^sub>1\" (is \"?s\\<^sub>2' \\<sqsubseteq>\\<^sub>r ?s\\<^sub>1'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "proof (cases \"c!pc = \\<bottom>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "case True"], ["proof (state)\nthis:\n  c ! pc = \\<bottom>\n\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "moreover"], ["proof (state)\nthis:\n  c ! pc = \\<bottom>\n\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "from less pc s\\<^sub>1 s\\<^sub>2"], ["proof (chain)\npicking this:\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> s\\<^sub>1\n  pc < length \\<tau>s\n  s\\<^sub>1 \\<in> A\n  s\\<^sub>2 \\<in> A", "have \"wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^sub>r wti c pc s\\<^sub>1\""], ["proof (prove)\nusing this:\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> s\\<^sub>1\n  pc < length \\<tau>s\n  s\\<^sub>1 \\<in> A\n  s\\<^sub>2 \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "by (rule wti_mono)"], ["proof (state)\nthis:\n  wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1\n\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "ultimately"], ["proof (chain)\npicking this:\n  c ! pc = \\<bottom>\n  wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1", "show ?thesis"], ["proof (prove)\nusing this:\n  c ! pc = \\<bottom>\n  wti c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wti c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "by (simp add: wtc)"], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "case False"], ["proof (state)\nthis:\n  c ! pc \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "have \"?s\\<^sub>1' = \\<top> \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc s\\<^sub>1 = \\<top> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>1 = \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "moreover"], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>1 = \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "{"], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>1 = \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "assume \"?s\\<^sub>1' \\<noteq> \\<top>\""], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>1 \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "with False"], ["proof (chain)\npicking this:\n  c ! pc \\<noteq> \\<bottom>\n  wtc c pc s\\<^sub>1 \\<noteq> \\<top>", "have c: \"s\\<^sub>1 \\<sqsubseteq>\\<^sub>r c!pc\""], ["proof (prove)\nusing this:\n  c ! pc \\<noteq> \\<bottom>\n  wtc c pc s\\<^sub>1 \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. s\\<^sub>1 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc", "by (simp add: wtc split: if_split_asm)"], ["proof (state)\nthis:\n  s\\<^sub>1 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "with less"], ["proof (chain)\npicking this:\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> s\\<^sub>1\n  s\\<^sub>1 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc", "have \"s\\<^sub>2 \\<sqsubseteq>\\<^sub>r c!pc\""], ["proof (prove)\nusing this:\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> s\\<^sub>1\n  s\\<^sub>1 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc\n\ngoal (1 subgoal):\n 1. s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc", ".."], ["proof (state)\nthis:\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "with False c"], ["proof (chain)\npicking this:\n  c ! pc \\<noteq> \\<bottom>\n  s\\<^sub>1 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc", "have ?thesis"], ["proof (prove)\nusing this:\n  c ! pc \\<noteq> \\<bottom>\n  s\\<^sub>1 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc\n  s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc\n\ngoal (1 subgoal):\n 1. wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "by (simp add: wtc)"], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "}"], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>1 \\<noteq> \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "ultimately"], ["proof (chain)\npicking this:\n  wtc c pc s\\<^sub>1 = \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n  wtc c pc s\\<^sub>1 \\<noteq> \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "show ?thesis"], ["proof (prove)\nusing this:\n  wtc c pc s\\<^sub>1 = \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n  wtc c pc s\\<^sub>1 \\<noteq> \\<top> \\<Longrightarrow>\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal (1 subgoal):\n 1. wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1", "by (cases \"?s\\<^sub>1' = \\<top>\") auto"], ["proof (state)\nthis:\n  wtc c pc s\\<^sub>2 \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc s\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma (in lbv) top_le_conv [simp]: \"\\<top> \\<sqsubseteq>\\<^sub>r x = (x = \\<top>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<top> \\<sqsubseteq>\\<^bsub>r\\<^esub> x) = (x = \\<top>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<top> \\<sqsubseteq>\\<^bsub>r\\<^esub> x) = (x = \\<top>)", "by (insert semilat) (simp add: top top_le_conv)"], ["", "(*>*)"], ["", "lemma (in lbv) neq_top [simp, elim]: \"\\<lbrakk> x \\<sqsubseteq>\\<^sub>r y; y \\<noteq> \\<top> \\<rbrakk> \\<Longrightarrow> x \\<noteq> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq>\\<^bsub>r\\<^esub> y; y \\<noteq> \\<top>\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> \\<top>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq>\\<^bsub>r\\<^esub> y; y \\<noteq> \\<top>\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> \\<top>", "by (cases \"x = T\") auto"], ["", "(*>*)"], ["", "lemma (in lbvc) stable_wti:\n  assumes stable:  \"stable r step \\<tau>s pc\" and pc: \"pc < size \\<tau>s\"\n  shows \"wti c pc (\\<tau>s!pc) \\<noteq> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "let ?step = \"step pc (\\<tau>s!pc)\""], ["proof (state)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "from stable"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc", "have less: \"\\<forall>(q,s')\\<in>set ?step. s' \\<sqsubseteq>\\<^sub>r \\<tau>s!q\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n\ngoal (1 subgoal):\n 1. \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q", "by (simp add: stable_def)"], ["proof (state)\nthis:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "from cert B_A pc"], ["proof (chain)\npicking this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  \\<bottom> \\<in> A\n  pc < length \\<tau>s", "have cert_suc: \"c!Suc pc \\<in> A\""], ["proof (prove)\nusing this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  \\<bottom> \\<in> A\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! Suc pc \\<in> A", "by (rule cert_okD3)"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "from \\<tau>s pc"], ["proof (chain)\npicking this:\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  pc < length \\<tau>s", "have \"\\<tau>s!pc \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<tau>s ! pc \\<in> A", "by simp"], ["proof (state)\nthis:\n  \\<tau>s ! pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "with pres pc"], ["proof (chain)\npicking this:\n  pres_type step (length \\<tau>s) A\n  pc < length \\<tau>s\n  \\<tau>s ! pc \\<in> A", "have stepA: \"snd`set ?step \\<subseteq> A\""], ["proof (prove)\nusing this:\n  pres_type step (length \\<tau>s) A\n  pc < length \\<tau>s\n  \\<tau>s ! pc \\<in> A\n\ngoal (1 subgoal):\n 1. snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A", "by - (rule pres_typeD2)"], ["proof (state)\nthis:\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  c ! Suc pc \\<in> A\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A", "have \"merge c pc ?step (c!Suc pc) =\n    (if \\<forall>(pc',s')\\<in>set ?step. pc'\\<noteq>pc+1 \\<longrightarrow> s' \\<sqsubseteq>\\<^sub>r c!pc'\n    then map snd [(p',t') \\<leftarrow> ?step.p'=pc+1] \\<Squnion>\\<^bsub>f\\<^esub> c!Suc pc\n    else \\<top>)\""], ["proof (prove)\nusing this:\n  c ! Suc pc \\<in> A\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n    (if \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n           pc' \\<noteq> pc + 1 \\<longrightarrow>\n           s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n     then map snd\n           (filter (\\<lambda>(p', t'). p' = pc + 1)\n             (step pc (\\<tau>s ! pc))) \n          \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n     else \\<top>)", "unfolding mrg_def"], ["proof (prove)\nusing this:\n  c ! Suc pc \\<in> A\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. merge c f r \\<top> pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n    (if \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n           pc' \\<noteq> pc + 1 \\<longrightarrow>\n           s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n     then map snd\n           (filter (\\<lambda>(p', t'). p' = pc + 1)\n             (step pc (\\<tau>s ! pc))) \n          \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n     else \\<top>)", "by (rule lbv.merge_def [OF lbvc.axioms(1), OF lbvc_axioms])"], ["proof (state)\nthis:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n  (if \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd\n         (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n        \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n   else \\<top>)\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n  (if \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd\n         (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n        \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n   else \\<top>)\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "{"], ["proof (state)\nthis:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n  (if \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd\n         (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n        \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n   else \\<top>)\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "fix pc' s'"], ["proof (state)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "assume s': \"(pc',s') \\<in> set ?step\" and suc_pc: \"pc' \\<noteq> pc+1\""], ["proof (state)\nthis:\n  (pc', s') \\<in> set (step pc (\\<tau>s ! pc))\n  pc' \\<noteq> pc + 1\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "with less"], ["proof (chain)\npicking this:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n  (pc', s') \\<in> set (step pc (\\<tau>s ! pc))\n  pc' \\<noteq> pc + 1", "have \"s' \\<sqsubseteq>\\<^sub>r \\<tau>s!pc'\""], ["proof (prove)\nusing this:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n  (pc', s') \\<in> set (step pc (\\<tau>s ! pc))\n  pc' \\<noteq> pc + 1\n\ngoal (1 subgoal):\n 1. s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc'", "by auto"], ["proof (state)\nthis:\n  s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc'\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "also"], ["proof (state)\nthis:\n  s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc'\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "from bounded pc s'"], ["proof (chain)\npicking this:\n  bounded step (length \\<tau>s)\n  pc < length \\<tau>s\n  (pc', s') \\<in> set (step pc (\\<tau>s ! pc))", "have \"pc' < size \\<tau>s\""], ["proof (prove)\nusing this:\n  bounded step (length \\<tau>s)\n  pc < length \\<tau>s\n  (pc', s') \\<in> set (step pc (\\<tau>s ! pc))\n\ngoal (1 subgoal):\n 1. pc' < length \\<tau>s", "by (rule boundedD)"], ["proof (state)\nthis:\n  pc' < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "with s' suc_pc pc"], ["proof (chain)\npicking this:\n  (pc', s') \\<in> set (step pc (\\<tau>s ! pc))\n  pc' \\<noteq> pc + 1\n  pc < length \\<tau>s\n  pc' < length \\<tau>s", "have \"c!pc' = \\<tau>s!pc'\""], ["proof (prove)\nusing this:\n  (pc', s') \\<in> set (step pc (\\<tau>s ! pc))\n  pc' \\<noteq> pc + 1\n  pc < length \\<tau>s\n  pc' < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! pc' = \\<tau>s ! pc'", ".."], ["proof (state)\nthis:\n  c ! pc' = \\<tau>s ! pc'\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "hence \"\\<tau>s!pc' = c!pc'\""], ["proof (prove)\nusing this:\n  c ! pc' = \\<tau>s ! pc'\n\ngoal (1 subgoal):\n 1. \\<tau>s ! pc' = c ! pc'", ".."], ["proof (state)\nthis:\n  \\<tau>s ! pc' = c ! pc'\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "finally"], ["proof (chain)\npicking this:\n  s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'", "have \"s' \\<sqsubseteq>\\<^sub>r c!pc'\""], ["proof (prove)\nusing this:\n  s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n\ngoal (1 subgoal):\n 1. s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'", "."], ["proof (state)\nthis:\n  s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(?pc'2, ?s'2) \\<in> set (step pc (\\<tau>s ! pc));\n   ?pc'2 \\<noteq> pc + 1\\<rbrakk>\n  \\<Longrightarrow> ?s'2 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! ?pc'2\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "hence \"\\<forall>(pc',s')\\<in>set ?step. pc'\\<noteq>pc+1 \\<longrightarrow> s' \\<sqsubseteq>\\<^sub>r c!pc'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?pc'2, ?s'2) \\<in> set (step pc (\\<tau>s ! pc));\n   ?pc'2 \\<noteq> pc + 1\\<rbrakk>\n  \\<Longrightarrow> ?s'2 \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! ?pc'2\n\ngoal (1 subgoal):\n 1. \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n       pc' \\<noteq> pc + 1 \\<longrightarrow>\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'", "by auto"], ["proof (state)\nthis:\n  \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n     pc' \\<noteq> pc + 1 \\<longrightarrow>\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n     pc' \\<noteq> pc + 1 \\<longrightarrow>\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "from pc"], ["proof (chain)\npicking this:\n  pc < length \\<tau>s", "have \"Suc pc = size \\<tau>s \\<or> Suc pc < size \\<tau>s\""], ["proof (prove)\nusing this:\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. Suc pc = length \\<tau>s \\<or> Suc pc < length \\<tau>s", "by auto"], ["proof (state)\nthis:\n  Suc pc = length \\<tau>s \\<or> Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "hence \"map snd [(p',t') \\<leftarrow> ?step.p'=pc+1] \\<Squnion>\\<^bsub>f\\<^esub> c!Suc pc \\<noteq> \\<top>\" (is \"?map \\<Squnion>\\<^bsub>f\\<^esub> _ \\<noteq> _\")"], ["proof (prove)\nusing this:\n  Suc pc = length \\<tau>s \\<or> Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "proof (rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc pc = length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>\n 2. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "assume pc': \"Suc pc = size \\<tau>s\""], ["proof (state)\nthis:\n  Suc pc = length \\<tau>s\n\ngoal (2 subgoals):\n 1. Suc pc = length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>\n 2. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "with cert"], ["proof (chain)\npicking this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  Suc pc = length \\<tau>s", "have \"c!Suc pc = \\<bottom>\""], ["proof (prove)\nusing this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  Suc pc = length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! Suc pc = \\<bottom>", "by (simp add: cert_okD2)"], ["proof (state)\nthis:\n  c ! Suc pc = \\<bottom>\n\ngoal (2 subgoals):\n 1. Suc pc = length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>\n 2. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "moreover"], ["proof (state)\nthis:\n  c ! Suc pc = \\<bottom>\n\ngoal (2 subgoals):\n 1. Suc pc = length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>\n 2. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "from pc' bounded pc"], ["proof (chain)\npicking this:\n  Suc pc = length \\<tau>s\n  bounded step (length \\<tau>s)\n  pc < length \\<tau>s", "have \"\\<forall>(p',t')\\<in>set ?step. p'\\<noteq>pc+1\""], ["proof (prove)\nusing this:\n  Suc pc = length \\<tau>s\n  bounded step (length \\<tau>s)\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<forall>(p', t')\\<in>set (step pc (\\<tau>s ! pc)). p' \\<noteq> pc + 1", "by clarify (drule boundedD, auto)"], ["proof (state)\nthis:\n  \\<forall>(p', t')\\<in>set (step pc (\\<tau>s ! pc)). p' \\<noteq> pc + 1\n\ngoal (2 subgoals):\n 1. Suc pc = length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>\n 2. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "hence \"[(p',t') \\<leftarrow> ?step. p'=pc+1] = []\""], ["proof (prove)\nusing this:\n  \\<forall>(p', t')\\<in>set (step pc (\\<tau>s ! pc)). p' \\<noteq> pc + 1\n\ngoal (1 subgoal):\n 1. filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc)) = []", "by (blast intro: filter_False)"], ["proof (state)\nthis:\n  filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc)) = []\n\ngoal (2 subgoals):\n 1. Suc pc = length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>\n 2. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "hence \"?map = []\""], ["proof (prove)\nusing this:\n  filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc)) = []\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) =\n    []", "by simp"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) =\n  []\n\ngoal (2 subgoals):\n 1. Suc pc = length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>\n 2. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  c ! Suc pc = \\<bottom>\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) =\n  []", "show ?thesis"], ["proof (prove)\nusing this:\n  c ! Suc pc = \\<bottom>\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) =\n  []\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "by (simp add: B_neq_T)"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n  \\<top>\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "assume pc': \"Suc pc < size \\<tau>s\""], ["proof (state)\nthis:\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "from pc' \\<tau>s"], ["proof (chain)\npicking this:\n  Suc pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>", "have \"\\<tau>s!Suc pc \\<in> A\""], ["proof (prove)\nusing this:\n  Suc pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<tau>s ! Suc pc \\<in> A", "by simp"], ["proof (state)\nthis:\n  \\<tau>s ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "moreover"], ["proof (state)\nthis:\n  \\<tau>s ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "note cert_suc"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "moreover"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "from stepA"], ["proof (chain)\npicking this:\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A", "have \"set ?map \\<subseteq> A\""], ["proof (prove)\nusing this:\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. set (map snd\n          (filter (\\<lambda>(p', t'). p' = pc + 1)\n            (step pc (\\<tau>s ! pc))))\n    \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "moreover"], ["proof (state)\nthis:\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "have \"\\<And>s. s \\<in> set ?map \\<Longrightarrow> \\<exists>t. (Suc pc, t) \\<in> set ?step\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> set (map snd\n                     (filter (\\<lambda>(p', t'). p' = pc + 1)\n                       (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n       \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))", "by auto"], ["proof (state)\nthis:\n  ?s \\<in> set (map snd\n                 (filter (\\<lambda>(p', t'). p' = pc + 1)\n                   (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n  \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "with less"], ["proof (chain)\npicking this:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n  ?s \\<in> set (map snd\n                 (filter (\\<lambda>(p', t'). p' = pc + 1)\n                   (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n  \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))", "have \"\\<forall>s' \\<in> set ?map. s' \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n  ?s \\<in> set (map snd\n                 (filter (\\<lambda>(p', t'). p' = pc + 1)\n                   (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n  \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))\n\ngoal (1 subgoal):\n 1. \\<forall>s'\\<in>set (map snd\n                          (filter (\\<lambda>(p', t'). p' = pc + 1)\n                            (step pc (\\<tau>s ! pc)))).\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by auto"], ["proof (state)\nthis:\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "moreover"], ["proof (state)\nthis:\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "from pc'"], ["proof (chain)\npicking this:\n  Suc pc < length \\<tau>s", "have \"c!Suc pc \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (cases \"c!Suc pc = \\<bottom>\") (auto dest: cert_approx)"], ["proof (state)\nthis:\n  c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>s ! Suc pc \\<in> A\n  c ! Suc pc \\<in> A\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "have \"?map \\<Squnion>\\<^bsub>f\\<^esub> c!Suc pc \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  \\<tau>s ! Suc pc \\<in> A\n  c ! Suc pc \\<in> A\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (rule pp_lub)"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "moreover"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "from pc' \\<tau>s"], ["proof (chain)\npicking this:\n  Suc pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>", "have \"\\<tau>s!Suc pc \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  Suc pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<tau>s ! Suc pc \\<noteq> \\<top>", "by simp"], ["proof (state)\nthis:\n  \\<tau>s ! Suc pc \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s \\<Longrightarrow>\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  \\<tau>s ! Suc pc \\<noteq> \\<top>", "show ?thesis"], ["proof (prove)\nusing this:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  \\<tau>s ! Suc pc \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n    \\<top>", "by auto"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n  \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n  \\<top>\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n  (if \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd\n         (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n        \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n   else \\<top>)\n  \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n     pc' \\<noteq> pc + 1 \\<longrightarrow>\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n  \\<top>", "have \"merge c pc ?step (c!Suc pc) \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n  (if \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n         pc' \\<noteq> pc + 1 \\<longrightarrow>\n         s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n   then map snd\n         (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n        \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n   else \\<top>)\n  \\<forall>(pc', s')\\<in>set (step pc (\\<tau>s ! pc)).\n     pc' \\<noteq> pc + 1 \\<longrightarrow>\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> c ! pc'\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \\<noteq>\n  \\<top>\n\ngoal (1 subgoal):\n 1. merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) \\<noteq> \\<top>", "by simp"], ["proof (state)\nthis:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "thus ?thesis"], ["proof (prove)\nusing this:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "by (simp add: wti)"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma (in lbvc) wti_less:\n  assumes stable: \"stable r step \\<tau>s pc\" and suc_pc: \"Suc pc < size \\<tau>s\"\n  shows \"wti c pc (\\<tau>s!pc) \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\" (is \"?wti \\<sqsubseteq>\\<^sub>r _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "let ?step = \"step pc (\\<tau>s!pc)\""], ["proof (state)\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from stable"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc", "have less: \"\\<forall>(q,s')\\<in>set ?step. s' \\<sqsubseteq>\\<^sub>r \\<tau>s!q\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n\ngoal (1 subgoal):\n 1. \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q", "by (simp add: stable_def)"], ["proof (state)\nthis:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from suc_pc"], ["proof (chain)\npicking this:\n  Suc pc < length \\<tau>s", "have pc: \"pc < size \\<tau>s\""], ["proof (prove)\nusing this:\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. pc < length \\<tau>s", "by simp"], ["proof (state)\nthis:\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "with cert B_A"], ["proof (chain)\npicking this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  \\<bottom> \\<in> A\n  pc < length \\<tau>s", "have cert_suc: \"c!Suc pc \\<in> A\""], ["proof (prove)\nusing this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  \\<bottom> \\<in> A\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! Suc pc \\<in> A", "by (rule cert_okD3)"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "moreover"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from \\<tau>s pc"], ["proof (chain)\npicking this:\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  pc < length \\<tau>s", "have \"\\<tau>s!pc \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<tau>s ! pc \\<in> A", "by simp"], ["proof (state)\nthis:\n  \\<tau>s ! pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "with pres pc"], ["proof (chain)\npicking this:\n  pres_type step (length \\<tau>s) A\n  pc < length \\<tau>s\n  \\<tau>s ! pc \\<in> A", "have stepA: \"snd`set ?step \\<subseteq> A\""], ["proof (prove)\nusing this:\n  pres_type step (length \\<tau>s) A\n  pc < length \\<tau>s\n  \\<tau>s ! pc \\<in> A\n\ngoal (1 subgoal):\n 1. snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A", "by - (rule pres_typeD2)"], ["proof (state)\nthis:\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "moreover"], ["proof (state)\nthis:\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from stable pc"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s", "have \"?wti \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "by (rule stable_wti)"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "hence \"merge c pc ?step (c!Suc pc) \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) \\<noteq> \\<top>", "by (simp add: wti)"], ["proof (state)\nthis:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "ultimately"], ["proof (chain)\npicking this:\n  c ! Suc pc \\<in> A\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) \\<noteq> \\<top>", "have \"merge c pc ?step (c!Suc pc) =\n    map snd [(p',t') \\<leftarrow> ?step.p'=pc+1] \\<Squnion>\\<^bsub>f\\<^esub> c!Suc pc\""], ["proof (prove)\nusing this:\n  c ! Suc pc \\<in> A\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc", "by (rule merge_not_top_s)"], ["proof (state)\nthis:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "hence \"?wti = \\<dots>\" (is \"_ = (?map \\<Squnion>\\<^bsub>f\\<^esub> _)\" is \"_ = ?sum\")"], ["proof (prove)\nusing this:\n  merge c pc (step pc (\\<tau>s ! pc)) (c ! Suc pc) =\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) =\n    map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc", "by (simp add: wti)"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) =\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "also"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) =\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "{"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) =\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from suc_pc \\<tau>s"], ["proof (chain)\npicking this:\n  Suc pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>", "have \"\\<tau>s!Suc pc \\<in> A\""], ["proof (prove)\nusing this:\n  Suc pc < length \\<tau>s\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<tau>s ! Suc pc \\<in> A", "by simp"], ["proof (state)\nthis:\n  \\<tau>s ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "moreover"], ["proof (state)\nthis:\n  \\<tau>s ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "note cert_suc"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "moreover"], ["proof (state)\nthis:\n  c ! Suc pc \\<in> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from stepA"], ["proof (chain)\npicking this:\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A", "have \"set ?map \\<subseteq> A\""], ["proof (prove)\nusing this:\n  snd ` set (step pc (\\<tau>s ! pc)) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. set (map snd\n          (filter (\\<lambda>(p', t'). p' = pc + 1)\n            (step pc (\\<tau>s ! pc))))\n    \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "moreover"], ["proof (state)\nthis:\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "have \"\\<And>s. s \\<in> set ?map \\<Longrightarrow> \\<exists>t. (Suc pc, t) \\<in> set ?step\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> set (map snd\n                     (filter (\\<lambda>(p', t'). p' = pc + 1)\n                       (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n       \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))", "by auto"], ["proof (state)\nthis:\n  ?s \\<in> set (map snd\n                 (filter (\\<lambda>(p', t'). p' = pc + 1)\n                   (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n  \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "with less"], ["proof (chain)\npicking this:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n  ?s \\<in> set (map snd\n                 (filter (\\<lambda>(p', t'). p' = pc + 1)\n                   (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n  \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))", "have \"\\<forall>s' \\<in> set ?map. s' \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  \\<forall>(q, s')\\<in>set (step pc (\\<tau>s ! pc)).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! q\n  ?s \\<in> set (map snd\n                 (filter (\\<lambda>(p', t'). p' = pc + 1)\n                   (step pc (\\<tau>s ! pc)))) \\<Longrightarrow>\n  \\<exists>t. (Suc pc, t) \\<in> set (step pc (\\<tau>s ! pc))\n\ngoal (1 subgoal):\n 1. \\<forall>s'\\<in>set (map snd\n                          (filter (\\<lambda>(p', t'). p' = pc + 1)\n                            (step pc (\\<tau>s ! pc)))).\n       s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by auto"], ["proof (state)\nthis:\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "moreover"], ["proof (state)\nthis:\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from suc_pc"], ["proof (chain)\npicking this:\n  Suc pc < length \\<tau>s", "have \"c!Suc pc \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (cases \"c!Suc pc = \\<bottom>\") (auto dest: cert_approx)"], ["proof (state)\nthis:\n  c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>s ! Suc pc \\<in> A\n  c ! Suc pc \\<in> A\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "have \"?sum \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  \\<tau>s ! Suc pc \\<in> A\n  c ! Suc pc \\<in> A\n  set (map snd\n        (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))))\n  \\<subseteq> A\n  \\<forall>s'\\<in>set (map snd\n                        (filter (\\<lambda>(p', t'). p' = pc + 1)\n                          (step pc (\\<tau>s ! pc)))).\n     s' \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  c ! Suc pc \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. map snd\n     (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n    \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n    \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (rule pp_lub)"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "}"], ["proof (state)\nthis:\n  map snd\n   (filter (\\<lambda>(p', t'). p' = pc + 1) (step pc (\\<tau>s ! pc))) \n  \\<Squnion>\\<^bsub>f\\<^esub> c ! Suc pc \n  \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "finally"], ["proof (chain)\npicking this:\n  wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "show ?thesis"], ["proof (prove)\nusing this:\n  wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "."], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma (in lbvc) stable_wtc:\n  assumes stable: \"stable r step \\<tau>s pc\" and pc: \"pc < size \\<tau>s\"\n  shows \"wtc c pc (\\<tau>s!pc) \\<noteq> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "from stable pc"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s", "have wti: \"wti c pc (\\<tau>s!pc) \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "by (rule stable_wti)"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "proof (cases \"c!pc = \\<bottom>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "case True"], ["proof (state)\nthis:\n  c ! pc = \\<bottom>\n\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "with wti"], ["proof (chain)\npicking this:\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n  c ! pc = \\<bottom>", "show ?thesis"], ["proof (prove)\nusing this:\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n  c ! pc = \\<bottom>\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "by (simp add: wtc)"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "case False"], ["proof (state)\nthis:\n  c ! pc \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "with pc"], ["proof (chain)\npicking this:\n  pc < length \\<tau>s\n  c ! pc \\<noteq> \\<bottom>", "have \"c!pc = \\<tau>s!pc\""], ["proof (prove)\nusing this:\n  pc < length \\<tau>s\n  c ! pc \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. c ! pc = \\<tau>s ! pc", ".."], ["proof (state)\nthis:\n  c ! pc = \\<tau>s ! pc\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "with False wti"], ["proof (chain)\npicking this:\n  c ! pc \\<noteq> \\<bottom>\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n  c ! pc = \\<tau>s ! pc", "show ?thesis"], ["proof (prove)\nusing this:\n  c ! pc \\<noteq> \\<bottom>\n  wti c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n  c ! pc = \\<tau>s ! pc\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "by (simp add: wtc)"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma (in lbvc) wtc_less:\n  assumes stable: \"stable r step \\<tau>s pc\" and suc_pc: \"Suc pc < size \\<tau>s\"\n  shows \"wtc c pc (\\<tau>s!pc) \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\" (is \"?wtc \\<sqsubseteq>\\<^sub>r _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "proof (cases \"c!pc = \\<bottom>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "case True"], ["proof (state)\nthis:\n  c ! pc = \\<bottom>\n\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "moreover"], ["proof (state)\nthis:\n  c ! pc = \\<bottom>\n\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from stable suc_pc"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc\n  Suc pc < length \\<tau>s", "have \"wti c pc (\\<tau>s!pc) \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (rule wti_less)"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (2 subgoals):\n 1. c ! pc = \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n 2. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "ultimately"], ["proof (chain)\npicking this:\n  c ! pc = \\<bottom>\n  wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "show ?thesis"], ["proof (prove)\nusing this:\n  c ! pc = \\<bottom>\n  wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (simp add: wtc)"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "case False"], ["proof (state)\nthis:\n  c ! pc \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from suc_pc"], ["proof (chain)\npicking this:\n  Suc pc < length \\<tau>s", "have pc: \"pc < size \\<tau>s\""], ["proof (prove)\nusing this:\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. pc < length \\<tau>s", "by simp"], ["proof (state)\nthis:\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "with stable"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s", "have \"?wtc \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "by (rule stable_wtc)"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "with False"], ["proof (chain)\npicking this:\n  c ! pc \\<noteq> \\<bottom>\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "have \"?wtc = wti c pc (c!pc)\""], ["proof (prove)\nusing this:\n  c ! pc \\<noteq> \\<bottom>\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) = wti c pc (c ! pc)", "by (unfold wtc) (simp split: if_split_asm)"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) = wti c pc (c ! pc)\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "also"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) = wti c pc (c ! pc)\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from pc False"], ["proof (chain)\npicking this:\n  pc < length \\<tau>s\n  c ! pc \\<noteq> \\<bottom>", "have \"c!pc = \\<tau>s!pc\""], ["proof (prove)\nusing this:\n  pc < length \\<tau>s\n  c ! pc \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. c ! pc = \\<tau>s ! pc", ".."], ["proof (state)\nthis:\n  c ! pc = \\<tau>s ! pc\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "finally"], ["proof (chain)\npicking this:\n  wtc c pc (\\<tau>s ! pc) = wti c pc (\\<tau>s ! pc)", "have \"?wtc = wti c pc (\\<tau>s!pc)\""], ["proof (prove)\nusing this:\n  wtc c pc (\\<tau>s ! pc) = wti c pc (\\<tau>s ! pc)\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) = wti c pc (\\<tau>s ! pc)", "."], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) = wti c pc (\\<tau>s ! pc)\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "also"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) = wti c pc (\\<tau>s ! pc)\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "from stable suc_pc"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc\n  Suc pc < length \\<tau>s", "have \"wti c pc (\\<tau>s!pc) \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (rule wti_less)"], ["proof (state)\nthis:\n  wti c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. c ! pc \\<noteq> \\<bottom> \\<Longrightarrow>\n    wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "finally"], ["proof (chain)\npicking this:\n  wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "show ?thesis"], ["proof (prove)\nusing this:\n  wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "."], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma (in lbvc) wt_step_wtl_lemma:\n  assumes wt_step: \"wt_step r \\<top> step \\<tau>s\"\n  shows \"\\<And>pc s. pc+size ls = size \\<tau>s \\<Longrightarrow> s \\<sqsubseteq>\\<^sub>r \\<tau>s!pc \\<Longrightarrow> s \\<in> A \\<Longrightarrow> s\\<noteq>\\<top> \\<Longrightarrow>\n                wtl ls c pc s \\<noteq> \\<top>\"\n  (is \"\\<And>pc s. _ \\<Longrightarrow> _ \\<Longrightarrow> _ \\<Longrightarrow> _ \\<Longrightarrow> ?wtl ls pc s \\<noteq> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pc s.\n       \\<lbrakk>pc + length ls = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pc s.\n       \\<lbrakk>pc + length ls = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>", "proof (induct ls)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>pc s.\n       \\<lbrakk>pc + length [] = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl [] c pc s \\<noteq> \\<top>\n 2. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "fix pc s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>pc s.\n       \\<lbrakk>pc + length [] = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl [] c pc s \\<noteq> \\<top>\n 2. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "assume \"s\\<noteq>\\<top>\""], ["proof (state)\nthis:\n  s \\<noteq> \\<top>\n\ngoal (2 subgoals):\n 1. \\<And>pc s.\n       \\<lbrakk>pc + length [] = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl [] c pc s \\<noteq> \\<top>\n 2. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "thus \"?wtl [] pc s \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wtl [] c pc s \\<noteq> \\<top>", "by simp"], ["proof (state)\nthis:\n  wtl [] c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "fix pc s i ls"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "assume \"\\<And>pc s. pc+size ls=size \\<tau>s \\<Longrightarrow> s \\<sqsubseteq>\\<^sub>r \\<tau>s!pc \\<Longrightarrow> s \\<in> A \\<Longrightarrow> s\\<noteq>\\<top> \\<Longrightarrow> \n                  ?wtl ls pc s \\<noteq> \\<top>\""], ["proof (state)\nthis:\n  \\<lbrakk>?pc + length ls = length \\<tau>s;\n   ?s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! ?pc; ?s \\<in> A;\n   ?s \\<noteq> \\<top>\\<rbrakk>\n  \\<Longrightarrow> wtl ls c ?pc ?s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?pc + length ls = length \\<tau>s;\n   ?s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! ?pc; ?s \\<in> A;\n   ?s \\<noteq> \\<top>\\<rbrakk>\n  \\<Longrightarrow> wtl ls c ?pc ?s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "assume pc_l: \"pc + size (i#ls) = size \\<tau>s\""], ["proof (state)\nthis:\n  pc + length (i # ls) = length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "hence suc_pc_l: \"Suc pc + size ls = size \\<tau>s\""], ["proof (prove)\nusing this:\n  pc + length (i # ls) = length \\<tau>s\n\ngoal (1 subgoal):\n 1. Suc pc + length ls = length \\<tau>s", "by simp"], ["proof (state)\nthis:\n  Suc pc + length ls = length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?pc + length ls = length \\<tau>s;\n   ?s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! ?pc; ?s \\<in> A;\n   ?s \\<noteq> \\<top>\\<rbrakk>\n  \\<Longrightarrow> wtl ls c ?pc ?s \\<noteq> \\<top>\n  Suc pc + length ls = length \\<tau>s", "have IH: \"\\<And>s. s \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc \\<Longrightarrow> s \\<in> A \\<Longrightarrow> s \\<noteq> \\<top> \\<Longrightarrow> ?wtl ls (Suc pc) s \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?pc + length ls = length \\<tau>s;\n   ?s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! ?pc; ?s \\<in> A;\n   ?s \\<noteq> \\<top>\\<rbrakk>\n  \\<Longrightarrow> wtl ls c ?pc ?s \\<noteq> \\<top>\n  Suc pc + length ls = length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc;\n        s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl ls c (Suc pc) s \\<noteq> \\<top>", "."], ["proof (state)\nthis:\n  \\<lbrakk>?s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc; ?s \\<in> A;\n   ?s \\<noteq> \\<top>\\<rbrakk>\n  \\<Longrightarrow> wtl ls c (Suc pc) ?s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "from pc_l"], ["proof (chain)\npicking this:\n  pc + length (i # ls) = length \\<tau>s", "obtain pc: \"pc < size \\<tau>s\""], ["proof (prove)\nusing this:\n  pc + length (i # ls) = length \\<tau>s\n\ngoal (1 subgoal):\n 1. (pc < length \\<tau>s \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by simp"], ["proof (state)\nthis:\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "with wt_step"], ["proof (chain)\npicking this:\n  wt_step r \\<top> step \\<tau>s\n  pc < length \\<tau>s", "have stable: \"stable r step \\<tau>s pc\""], ["proof (prove)\nusing this:\n  wt_step r \\<top> step \\<tau>s\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. stable r step \\<tau>s pc", "by (simp add: wt_step_def)"], ["proof (state)\nthis:\n  stable r step \\<tau>s pc\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  stable r step \\<tau>s pc\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "note pc"], ["proof (state)\nthis:\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s", "have wt_\\<tau>s: \"wtc c pc (\\<tau>s!pc) \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>", "by (rule stable_wtc)"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "assume s_\\<tau>s: \"s \\<sqsubseteq>\\<^sub>r \\<tau>s!pc\""], ["proof (state)\nthis:\n  s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "assume sA: \"s \\<in> A\""], ["proof (state)\nthis:\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "from \\<tau>s pc"], ["proof (chain)\npicking this:\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  pc < length \\<tau>s", "have \\<tau>s_pc: \"\\<tau>s!pc \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>pc<length \\<tau>s.\n     \\<tau>s ! pc \\<in> A \\<and> \\<tau>s ! pc \\<noteq> \\<top>\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<tau>s ! pc \\<in> A", "by simp"], ["proof (state)\nthis:\n  \\<tau>s ! pc \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "from s_\\<tau>s pc \\<tau>s_pc sA"], ["proof (chain)\npicking this:\n  s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc\n  pc < length \\<tau>s\n  \\<tau>s ! pc \\<in> A\n  s \\<in> A", "have wt_s_\\<tau>s: \"wtc c pc s \\<sqsubseteq>\\<^sub>r wtc c pc (\\<tau>s!pc)\""], ["proof (prove)\nusing this:\n  s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc\n  pc < length \\<tau>s\n  \\<tau>s ! pc \\<in> A\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc (\\<tau>s ! pc)", "by (rule wtc_mono)"], ["proof (state)\nthis:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc (\\<tau>s ! pc)\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "with wt_\\<tau>s"], ["proof (chain)\npicking this:\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc (\\<tau>s ! pc)", "have wt_s: \"wtc c pc s \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  wtc c pc (\\<tau>s ! pc) \\<noteq> \\<top>\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc (\\<tau>s ! pc)\n\ngoal (1 subgoal):\n 1. wtc c pc s \\<noteq> \\<top>", "by simp"], ["proof (state)\nthis:\n  wtc c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  wtc c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "assume s: \"s \\<noteq> \\<top>\""], ["proof (state)\nthis:\n  s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  wtc c pc s \\<noteq> \\<top>\n  s \\<noteq> \\<top>", "have \"ls = [] \\<Longrightarrow> ?wtl (i#ls) pc s \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  wtc c pc s \\<noteq> \\<top>\n  s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. ls = [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>", "by simp"], ["proof (state)\nthis:\n  ls = [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  ls = [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "{"], ["proof (state)\nthis:\n  ls = [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "assume \"ls \\<noteq> []\""], ["proof (state)\nthis:\n  ls \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "with pc_l"], ["proof (chain)\npicking this:\n  pc + length (i # ls) = length \\<tau>s\n  ls \\<noteq> []", "have suc_pc: \"Suc pc < size \\<tau>s\""], ["proof (prove)\nusing this:\n  pc + length (i # ls) = length \\<tau>s\n  ls \\<noteq> []\n\ngoal (1 subgoal):\n 1. Suc pc < length \\<tau>s", "by (auto simp add: neq_Nil_conv)"], ["proof (state)\nthis:\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "with stable"], ["proof (chain)\npicking this:\n  stable r step \\<tau>s pc\n  Suc pc < length \\<tau>s", "have \"wtc c pc (\\<tau>s!pc) \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  stable r step \\<tau>s pc\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (rule wtc_less)"], ["proof (state)\nthis:\n  wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "with wt_s_\\<tau>s"], ["proof (chain)\npicking this:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc (\\<tau>s ! pc)\n  wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "have \"wtc c pc s \\<sqsubseteq>\\<^sub>r \\<tau>s!Suc pc\""], ["proof (prove)\nusing this:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> wtc c pc (\\<tau>s ! pc)\n  wtc c pc (\\<tau>s ! pc) \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc", "by (rule trans_r)"], ["proof (state)\nthis:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "moreover"], ["proof (state)\nthis:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "from cert suc_pc"], ["proof (chain)\npicking this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  Suc pc < length \\<tau>s", "have \"c!pc \\<in> A\" \"c!(pc+1) \\<in> A\""], ["proof (prove)\nusing this:\n  cert_ok c (length \\<tau>s) \\<top> \\<bottom> A\n  Suc pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. c ! pc \\<in> A &&& c ! (pc + 1) \\<in> A", "by (auto simp add: cert_ok_def)"], ["proof (state)\nthis:\n  c ! pc \\<in> A\n  c ! (pc + 1) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "from pres this sA pc"], ["proof (chain)\npicking this:\n  pres_type step (length \\<tau>s) A\n  c ! pc \\<in> A\n  c ! (pc + 1) \\<in> A\n  s \\<in> A\n  pc < length \\<tau>s", "have \"wtc c pc s \\<in> A\""], ["proof (prove)\nusing this:\n  pres_type step (length \\<tau>s) A\n  c ! pc \\<in> A\n  c ! (pc + 1) \\<in> A\n  s \\<in> A\n  pc < length \\<tau>s\n\ngoal (1 subgoal):\n 1. wtc c pc s \\<in> A", "by (rule wtc_pres)"], ["proof (state)\nthis:\n  wtc c pc s \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  wtc c pc s \\<in> A", "have \"?wtl ls (Suc pc) (wtc c pc s) \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  wtc c pc s \\<in> A\n\ngoal (1 subgoal):\n 1. wtl ls c (Suc pc) (wtc c pc s) \\<noteq> \\<top>", "using IH wt_s"], ["proof (prove)\nusing this:\n  wtc c pc s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc\n  wtc c pc s \\<in> A\n  \\<lbrakk>?s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! Suc pc; ?s \\<in> A;\n   ?s \\<noteq> \\<top>\\<rbrakk>\n  \\<Longrightarrow> wtl ls c (Suc pc) ?s \\<noteq> \\<top>\n  wtc c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wtl ls c (Suc pc) (wtc c pc s) \\<noteq> \\<top>", "by blast"], ["proof (state)\nthis:\n  wtl ls c (Suc pc) (wtc c pc s) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "with s wt_s"], ["proof (chain)\npicking this:\n  s \\<noteq> \\<top>\n  wtc c pc s \\<noteq> \\<top>\n  wtl ls c (Suc pc) (wtc c pc s) \\<noteq> \\<top>", "have \"?wtl (i#ls) pc s \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  s \\<noteq> \\<top>\n  wtc c pc s \\<noteq> \\<top>\n  wtl ls c (Suc pc) (wtc c pc s) \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wtl (i # ls) c pc s \\<noteq> \\<top>", "by simp"], ["proof (state)\nthis:\n  wtl (i # ls) c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "}"], ["proof (state)\nthis:\n  ls \\<noteq> [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. \\<And>a ls pc s.\n       \\<lbrakk>\\<And>pc s.\n                   \\<lbrakk>pc + length ls = length \\<tau>s;\n                    s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc;\n                    s \\<in> A; s \\<noteq> \\<top>\\<rbrakk>\n                   \\<Longrightarrow> wtl ls c pc s \\<noteq> \\<top>;\n        pc + length (a # ls) = length \\<tau>s;\n        s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! pc; s \\<in> A;\n        s \\<noteq> \\<top>\\<rbrakk>\n       \\<Longrightarrow> wtl (a # ls) c pc s \\<noteq> \\<top>", "ultimately"], ["proof (chain)\npicking this:\n  ls = [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>\n  ls \\<noteq> [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>", "show \"?wtl (i#ls) pc s \\<noteq> \\<top>\""], ["proof (prove)\nusing this:\n  ls = [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>\n  ls \\<noteq> [] \\<Longrightarrow> wtl (i # ls) c pc s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wtl (i # ls) c pc s \\<noteq> \\<top>", "by (cases ls) blast+"], ["proof (state)\nthis:\n  wtl (i # ls) c pc s \\<noteq> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "theorem (in lbvc) wtl_complete:\n  assumes wt: \"wt_step r \\<top> step \\<tau>s\"\n  assumes s: \"s \\<sqsubseteq>\\<^sub>r \\<tau>s!0\" \"s \\<in> A\" \"s \\<noteq> \\<top>\" and eq: \"size ins = size \\<tau>s\"\n  shows \"wtl ins c 0 s \\<noteq> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wtl ins c 0 s \\<noteq> \\<top>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wtl ins c 0 s \\<noteq> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wtl ins c 0 s \\<noteq> \\<top>", "from eq"], ["proof (chain)\npicking this:\n  length ins = length \\<tau>s", "have \"0+size ins = size \\<tau>s\""], ["proof (prove)\nusing this:\n  length ins = length \\<tau>s\n\ngoal (1 subgoal):\n 1. 0 + length ins = length \\<tau>s", "by simp"], ["proof (state)\nthis:\n  0 + length ins = length \\<tau>s\n\ngoal (1 subgoal):\n 1. wtl ins c 0 s \\<noteq> \\<top>", "from wt this s"], ["proof (chain)\npicking this:\n  wt_step r \\<top> step \\<tau>s\n  0 + length ins = length \\<tau>s\n  s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! 0\n  s \\<in> A\n  s \\<noteq> \\<top>", "show ?thesis"], ["proof (prove)\nusing this:\n  wt_step r \\<top> step \\<tau>s\n  0 + length ins = length \\<tau>s\n  s \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! 0\n  s \\<in> A\n  s \\<noteq> \\<top>\n\ngoal (1 subgoal):\n 1. wtl ins c 0 s \\<noteq> \\<top>", "by (rule wt_step_wtl_lemma)"], ["proof (state)\nthis:\n  wtl ins c 0 s \\<noteq> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "end"]]}