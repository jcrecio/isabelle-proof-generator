{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaThreads/DFA/Err.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaThreads", "problem_names": ["lemma err_def':\n  \"err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}\"", "lemma strict_Some [simp]: \n  \"(strict f x = OK y) = (\\<exists>z. x = OK z \\<and> f z = OK y)\"", "lemma not_Err_eq: \"(x \\<noteq> Err) = (\\<exists>a. x = OK a)\"", "lemma not_OK_eq: \"(\\<forall>y. x \\<noteq> OK y) = (x = Err)\"", "lemma unfold_lesub_err: \"e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 = le r e1 e2\"", "lemma le_err_refl: \"\\<forall>x. x \\<sqsubseteq>\\<^sub>r x \\<Longrightarrow> e \\<sqsubseteq>\\<^bsub>le r\\<^esub> e\"", "lemma le_err_trans [rule_format]:\n  \"order r \\<Longrightarrow> e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow> e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3 \\<longrightarrow> e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3\"", "lemma le_err_antisym [rule_format]:\n  \"order r \\<Longrightarrow> e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow> e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e1 \\<longrightarrow> e1=e2\"", "lemma OK_le_err_OK: \"(OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK y) = (x \\<sqsubseteq>\\<^sub>r y)\"", "lemma order_le_err [iff]: \"order(le r) = order r\"", "lemma le_Err [iff]: \"e \\<sqsubseteq>\\<^bsub>le r\\<^esub> Err\"", "lemma Err_le_conv [iff]: \"Err \\<sqsubseteq>\\<^bsub>le r\\<^esub> e  = (e = Err)\"", "lemma le_OK_conv [iff]: \"e \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK x  =  (\\<exists>y. e = OK y \\<and> y \\<sqsubseteq>\\<^sub>r x)\"", "lemma OK_le_conv: \"OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> e = (e = Err \\<or> (\\<exists>y. e = OK y \\<and> x \\<sqsubseteq>\\<^sub>r y))\"", "lemma top_Err [iff]: \"top (le r) Err\"", "lemma OK_less_conv [rule_format, iff]:\n  \"OK x \\<sqsubset>\\<^bsub>le r\\<^esub> e = (e=Err \\<or> (\\<exists>y. e = OK y \\<and> x \\<sqsubset>\\<^sub>r y))\"", "lemma not_Err_less [rule_format, iff]: \"\\<not>(Err \\<sqsubset>\\<^bsub>le r\\<^esub> x)\"", "lemma semilat_errI [intro]: assumes \"Semilat A r f\"\nshows \"semilat(err A, le r, lift2(\\<lambda>x y. OK(f x y)))\"", "lemma err_semilat_eslI_aux:\nassumes \"Semilat A r f\" shows \"err_semilat(esl(A,r,f))\"", "lemma err_semilat_eslI [intro, simp]:\n  \"semilat L \\<Longrightarrow> err_semilat (esl L)\"", "lemma acc_err [simp, intro!]:  \"acc A r \\<Longrightarrow> acc (err A) (le r)\"", "lemma Err_in_err [iff]: \"Err : err A\"", "lemma Ok_in_err [iff]: \"(OK x \\<in> err A) = (x\\<in>A)\"", "lemma lift_in_errI:\n  \"\\<lbrakk> e \\<in> err S; \\<forall>x\\<in>S. e = OK x \\<longrightarrow> f x \\<in> err S \\<rbrakk> \\<Longrightarrow> lift f e \\<in> err S\"", "lemma Err_lift2 [simp]: \"Err \\<squnion>\\<^bsub>lift2 f\\<^esub> x = Err\"", "lemma lift2_Err [simp]: \"x \\<squnion>\\<^bsub>lift2 f\\<^esub> Err = Err\"", "lemma OK_lift2_OK [simp]: \"OK x \\<squnion>\\<^bsub>lift2 f\\<^esub> OK y = x \\<squnion>\\<^sub>f y\"", "lemma Err_sup_Err [simp]: \"Err \\<squnion>\\<^bsub>sup f\\<^esub> x = Err\"", "lemma Err_sup_Err2 [simp]: \"x \\<squnion>\\<^bsub>sup f\\<^esub> Err = Err\"", "lemma Err_sup_OK [simp]: \"OK x \\<squnion>\\<^bsub>sup f\\<^esub> OK y = OK (x \\<squnion>\\<^sub>f y)\"", "lemma Err_sup_eq_OK_conv [iff]:\n  \"(sup f ex ey = OK z) = (\\<exists>x y. ex = OK x \\<and> ey = OK y \\<and> f x y = z)\"", "lemma Err_sup_eq_Err [iff]: \"(sup f ex ey = Err) = (ex=Err \\<or> ey=Err)\"", "lemma semilat_le_err_Err_plus [simp]:\n  \"\\<lbrakk> x\\<in> err A; semilat(err A, le r, f) \\<rbrakk> \\<Longrightarrow> Err \\<squnion>\\<^sub>f x = Err\"", "lemma semilat_le_err_plus_Err [simp]:\n  \"\\<lbrakk> x\\<in> err A; semilat(err A, le r, f) \\<rbrakk> \\<Longrightarrow> x \\<squnion>\\<^sub>f Err = Err\"", "lemma semilat_le_err_OK1:\n  \"\\<lbrakk> x\\<in>A; y\\<in>A; semilat(err A, le r, f); OK x \\<squnion>\\<^sub>f OK y = OK z \\<rbrakk> \n  \\<Longrightarrow> x \\<sqsubseteq>\\<^sub>r z\"", "lemma semilat_le_err_OK2:\n  \"\\<lbrakk> x\\<in>A; y\\<in>A; semilat(err A, le r, f); OK x \\<squnion>\\<^sub>f OK y = OK z \\<rbrakk> \n  \\<Longrightarrow> y \\<sqsubseteq>\\<^sub>r z\"", "lemma eq_order_le:\n  \"\\<lbrakk> x=y; order r \\<rbrakk> \\<Longrightarrow> x \\<sqsubseteq>\\<^sub>r y\"", "lemma OK_plus_OK_eq_Err_conv [simp]:\n  assumes \"x\\<in>A\"  \"y\\<in>A\"  \"semilat(err A, le r, fe)\"\n  shows \"(OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) = (\\<not>(\\<exists>z\\<in>A. x \\<sqsubseteq>\\<^sub>r z \\<and> y \\<sqsubseteq>\\<^sub>r z))\"", "lemma all_bex_swap_lemma [iff]:\n  \"(\\<forall>x. (\\<exists>y\\<in>A. x = f y) \\<longrightarrow> P x) = (\\<forall>y\\<in>A. P(f y))\"", "lemma closed_err_Union_lift2I: \n  \"\\<lbrakk> \\<forall>A\\<in>AS. closed (err A) (lift2 f); AS \\<noteq> {}; \n      \\<forall>A\\<in>AS.\\<forall>B\\<in>AS. A\\<noteq>B \\<longrightarrow> (\\<forall>a\\<in>A.\\<forall>b\\<in>B. a \\<squnion>\\<^sub>f b = Err) \\<rbrakk> \n  \\<Longrightarrow> closed (err(Union AS)) (lift2 f)\"", "lemma err_semilat_UnionI:\n  \"\\<lbrakk> \\<forall>A\\<in>AS. err_semilat(A, r, f); AS \\<noteq> {}; \n      \\<forall>A\\<in>AS.\\<forall>B\\<in>AS. A\\<noteq>B \\<longrightarrow> (\\<forall>a\\<in>A.\\<forall>b\\<in>B. \\<not>a \\<sqsubseteq>\\<^sub>r b \\<and> a \\<squnion>\\<^sub>f b = Err) \\<rbrakk> \n  \\<Longrightarrow> err_semilat(Union AS, r, f)\""], "translations": [["", "lemma err_def':\n  \"err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}", "have eq: \"err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}", "by (unfold err_def) blast"], ["proof (state)\nthis:\n  err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}\n\ngoal (1 subgoal):\n 1. err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}", "show \"err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}", "by (simp add: eq)"], ["proof (state)\nthis:\n  err A = insert Err {x. \\<exists>y\\<in>A. x = OK y}\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma strict_Some [simp]: \n  \"(strict f x = OK y) = (\\<exists>z. x = OK z \\<and> f z = OK y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strict f x = OK y) = (\\<exists>z. x = OK z \\<and> f z = OK y)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (strict f x = OK y) = (\\<exists>z. x = OK z \\<and> f z = OK y)", "by (cases x, auto)"], ["", "(*>*)"], ["", "lemma not_Err_eq: \"(x \\<noteq> Err) = (\\<exists>a. x = OK a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<noteq> Err) = (\\<exists>a. x = OK a)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<noteq> Err) = (\\<exists>a. x = OK a)", "by (cases x) auto"], ["", "(*>*)"], ["", "lemma not_OK_eq: \"(\\<forall>y. x \\<noteq> OK y) = (x = Err)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>y. x \\<noteq> OK y) = (x = Err)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>y. x \\<noteq> OK y) = (x = Err)", "by (cases x) auto"], ["", "(*>*)"], ["", "lemma unfold_lesub_err: \"e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 = le r e1 e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2) = le r e1 e2", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2) = le r e1 e2", "by (simp add: lesub_def)"], ["", "(*>*)"], ["", "lemma le_err_refl: \"\\<forall>x. x \\<sqsubseteq>\\<^sub>r x \\<Longrightarrow> e \\<sqsubseteq>\\<^bsub>le r\\<^esub> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<sqsubseteq>\\<^bsub>r\\<^esub> x \\<Longrightarrow>\n    e \\<sqsubseteq>\\<^bsub>le r\\<^esub> e", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<sqsubseteq>\\<^bsub>r\\<^esub> x \\<Longrightarrow>\n    e \\<sqsubseteq>\\<^bsub>le r\\<^esub> e", "apply (unfold lesub_def le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. r x x \\<Longrightarrow>\n    case e of Err \\<Rightarrow> True\n    | OK y \\<Rightarrow>\n        case e of Err \\<Rightarrow> False | OK x \\<Rightarrow> r x y", "apply (simp split: err.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma le_err_trans [rule_format]:\n  \"order r \\<Longrightarrow> e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow> e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3 \\<longrightarrow> e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow>\n    e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3 \\<longrightarrow>\n    e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow>\n    e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3 \\<longrightarrow>\n    e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e3", "apply (unfold unfold_lesub_err le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    (case e2 of Err \\<Rightarrow> True\n     | OK y \\<Rightarrow>\n         case e1 of Err \\<Rightarrow> False\n         | OK x \\<Rightarrow>\n             x \\<sqsubseteq>\\<^bsub>r\\<^esub> y) \\<longrightarrow>\n    (case e3 of Err \\<Rightarrow> True\n     | OK y \\<Rightarrow>\n         case e2 of Err \\<Rightarrow> False\n         | OK x \\<Rightarrow>\n             x \\<sqsubseteq>\\<^bsub>r\\<^esub> y) \\<longrightarrow>\n    (case e3 of Err \\<Rightarrow> True\n     | OK y \\<Rightarrow>\n         case e1 of Err \\<Rightarrow> False\n         | OK x \\<Rightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> y)", "apply (simp split: err.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    \\<forall>x2 x2a.\n       e1 = OK x2a \\<longrightarrow>\n       e3 = OK x2 \\<longrightarrow>\n       (\\<forall>x2b.\n           e2 = OK x2b \\<longrightarrow>\n           x2a \\<sqsubseteq>\\<^bsub>r\\<^esub> x2b \\<longrightarrow>\n           x2b \\<sqsubseteq>\\<^bsub>r\\<^esub> x2 \\<longrightarrow>\n           x2a \\<sqsubseteq>\\<^bsub>r\\<^esub> x2)", "apply (blast intro: order_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma le_err_antisym [rule_format]:\n  \"order r \\<Longrightarrow> e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow> e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e1 \\<longrightarrow> e1=e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow>\n    e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e1 \\<longrightarrow> e1 = e2", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    e1 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e2 \\<longrightarrow>\n    e2 \\<sqsubseteq>\\<^bsub>le r\\<^esub> e1 \\<longrightarrow> e1 = e2", "apply (unfold unfold_lesub_err le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    (case e2 of Err \\<Rightarrow> True\n     | OK y \\<Rightarrow>\n         case e1 of Err \\<Rightarrow> False\n         | OK x \\<Rightarrow>\n             x \\<sqsubseteq>\\<^bsub>r\\<^esub> y) \\<longrightarrow>\n    (case e1 of Err \\<Rightarrow> True\n     | OK y \\<Rightarrow>\n         case e2 of Err \\<Rightarrow> False\n         | OK x \\<Rightarrow>\n             x \\<sqsubseteq>\\<^bsub>r\\<^esub> y) \\<longrightarrow>\n    e1 = e2", "apply (simp split: err.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    \\<forall>x2.\n       e1 = OK x2 \\<longrightarrow>\n       (\\<forall>x2a.\n           e2 = OK x2a \\<longrightarrow>\n           x2 \\<sqsubseteq>\\<^bsub>r\\<^esub> x2a \\<longrightarrow>\n           x2a \\<sqsubseteq>\\<^bsub>r\\<^esub> x2 \\<longrightarrow> x2 = x2a)", "apply (blast intro: order_antisym)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma OK_le_err_OK: \"(OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK y) = (x \\<sqsubseteq>\\<^sub>r y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK y) =\n    (x \\<sqsubseteq>\\<^bsub>r\\<^esub> y)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK y) =\n    (x \\<sqsubseteq>\\<^bsub>r\\<^esub> y)", "by (simp add: unfold_lesub_err le_def)"], ["", "(*>*)"], ["", "lemma order_le_err [iff]: \"order(le r) = order r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (le r) = order r", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order (le r) = order r", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. order (le r) \\<Longrightarrow> order r\n 2. order r \\<Longrightarrow> order (le r)", "apply (subst order_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. order (le r) \\<Longrightarrow>\n    (\\<forall>x. x \\<sqsubseteq>\\<^bsub>r\\<^esub> x) \\<and>\n    (\\<forall>x y.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> y \\<and>\n        y \\<sqsubseteq>\\<^bsub>r\\<^esub> x \\<longrightarrow>\n        x = y) \\<and>\n    (\\<forall>x y z.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> y \\<and>\n        y \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<longrightarrow>\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\n 2. order r \\<Longrightarrow> order (le r)", "apply (blast dest: order_antisym OK_le_err_OK [THEN iffD2]\n              intro: order_trans OK_le_err_OK [THEN iffD1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow> order (le r)", "apply (subst order_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<Longrightarrow>\n    (\\<forall>x. x \\<sqsubseteq>\\<^bsub>le r\\<^esub> x) \\<and>\n    (\\<forall>x y.\n        x \\<sqsubseteq>\\<^bsub>le r\\<^esub> y \\<and>\n        y \\<sqsubseteq>\\<^bsub>le r\\<^esub> x \\<longrightarrow>\n        x = y) \\<and>\n    (\\<forall>x y z.\n        x \\<sqsubseteq>\\<^bsub>le r\\<^esub> y \\<and>\n        y \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<longrightarrow>\n        x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)", "apply (blast intro: le_err_refl le_err_trans le_err_antisym\n             dest: order_refl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma le_Err [iff]: \"e \\<sqsubseteq>\\<^bsub>le r\\<^esub> Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<sqsubseteq>\\<^bsub>le r\\<^esub> Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<sqsubseteq>\\<^bsub>le r\\<^esub> Err", "by (simp add: unfold_lesub_err le_def)"], ["", "(*>*)"], ["", "lemma Err_le_conv [iff]: \"Err \\<sqsubseteq>\\<^bsub>le r\\<^esub> e  = (e = Err)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Err \\<sqsubseteq>\\<^bsub>le r\\<^esub> e) = (e = Err)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Err \\<sqsubseteq>\\<^bsub>le r\\<^esub> e) = (e = Err)", "by (simp add: unfold_lesub_err le_def  split: err.split)"], ["", "(*>*)"], ["", "lemma le_OK_conv [iff]: \"e \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK x  =  (\\<exists>y. e = OK y \\<and> y \\<sqsubseteq>\\<^sub>r x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (e \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK x) =\n    (\\<exists>y. e = OK y \\<and> y \\<sqsubseteq>\\<^bsub>r\\<^esub> x)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (e \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK x) =\n    (\\<exists>y. e = OK y \\<and> y \\<sqsubseteq>\\<^bsub>r\\<^esub> x)", "by (simp add: unfold_lesub_err le_def split: err.split)"], ["", "(*>*)"], ["", "lemma OK_le_conv: \"OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> e = (e = Err \\<or> (\\<exists>y. e = OK y \\<and> x \\<sqsubseteq>\\<^sub>r y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> e) =\n    (e = Err \\<or>\n     (\\<exists>y. e = OK y \\<and> x \\<sqsubseteq>\\<^bsub>r\\<^esub> y))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> e) =\n    (e = Err \\<or>\n     (\\<exists>y. e = OK y \\<and> x \\<sqsubseteq>\\<^bsub>r\\<^esub> y))", "by (simp add: unfold_lesub_err le_def split: err.split)"], ["", "(*>*)"], ["", "lemma top_Err [iff]: \"top (le r) Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat.top (le r) Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat.top (le r) Err", "by (simp add: top_def)"], ["", "(*>*)"], ["", "lemma OK_less_conv [rule_format, iff]:\n  \"OK x \\<sqsubset>\\<^bsub>le r\\<^esub> e = (e=Err \\<or> (\\<exists>y. e = OK y \\<and> x \\<sqsubset>\\<^sub>r y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<sqsubset>\\<^bsub>le r\\<^esub> e) =\n    (e = Err \\<or>\n     (\\<exists>y. e = OK y \\<and> x \\<sqsubset>\\<^bsub>r\\<^esub> y))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<sqsubset>\\<^bsub>le r\\<^esub> e) =\n    (e = Err \\<or>\n     (\\<exists>y. e = OK y \\<and> x \\<sqsubset>\\<^bsub>r\\<^esub> y))", "by (simp add: lesssub_def lesub_def le_def split: err.split)"], ["", "(*>*)"], ["", "lemma not_Err_less [rule_format, iff]: \"\\<not>(Err \\<sqsubset>\\<^bsub>le r\\<^esub> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Err \\<sqsubset>\\<^bsub>le r\\<^esub> x", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Err \\<sqsubset>\\<^bsub>le r\\<^esub> x", "by (simp add: lesssub_def lesub_def le_def split: err.split)"], ["", "(*>*)"], ["", "lemma semilat_errI [intro]: assumes \"Semilat A r f\"\nshows \"semilat(err A, le r, lift2(\\<lambda>x y. OK(f x y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat (err A, le r, lift2 (\\<lambda>x y. OK (f x y)))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat (err A, le r, lift2 (\\<lambda>x y. OK (f x y)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. semilat (err A, le r, lift2 (\\<lambda>x y. OK (f x y)))", "interpret Semilat A r f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat A r f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. semilat (err A, le r, lift2 (\\<lambda>x y. OK (f x y)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat (err A, le r, lift2 (\\<lambda>x y. OK (f x y)))", "apply(insert semilat)"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat (A, r, f) \\<Longrightarrow>\n    semilat (err A, le r, lift2 (\\<lambda>x y. OK (f x y)))", "apply (simp only: semilat_Def closed_def plussub_def lesub_def \n              lift2_def le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. order r \\<and>\n    (\\<forall>x\\<in>A. \\<forall>y\\<in>A. f x y \\<in> A) \\<and>\n    (\\<forall>x\\<in>A. \\<forall>y\\<in>A. r x (f x y)) \\<and>\n    (\\<forall>x\\<in>A. \\<forall>y\\<in>A. r y (f x y)) \\<and>\n    (\\<forall>x\\<in>A.\n        \\<forall>y\\<in>A.\n           \\<forall>z\\<in>A.\n              r x z \\<and> r y z \\<longrightarrow>\n              r (f x y) z) \\<Longrightarrow>\n    order (le r) \\<and>\n    (\\<forall>x\\<in>err A.\n        \\<forall>y\\<in>err A.\n           (case x of Err \\<Rightarrow> Err\n            | OK x \\<Rightarrow>\n                case y of Err \\<Rightarrow> Err\n                | OK y \\<Rightarrow> OK (f x y))\n           \\<in> err A) \\<and>\n    (\\<forall>x\\<in>err A.\n        \\<forall>y\\<in>err A.\n           case case x of Err \\<Rightarrow> Err\n                | OK x \\<Rightarrow>\n                    case y of Err \\<Rightarrow> Err\n                    | OK y \\<Rightarrow> OK (f x y) of\n           Err \\<Rightarrow> True\n           | OK y \\<Rightarrow>\n               case x of Err \\<Rightarrow> False\n               | OK x \\<Rightarrow> r x y) \\<and>\n    (\\<forall>x\\<in>err A.\n        \\<forall>y\\<in>err A.\n           case case x of Err \\<Rightarrow> Err\n                | OK x \\<Rightarrow>\n                    case y of Err \\<Rightarrow> Err\n                    | OK y \\<Rightarrow> OK (f x y) of\n           Err \\<Rightarrow> True\n           | OK ya \\<Rightarrow>\n               case y of Err \\<Rightarrow> False\n               | OK x \\<Rightarrow> r x ya) \\<and>\n    (\\<forall>x\\<in>err A.\n        \\<forall>y\\<in>err A.\n           \\<forall>z\\<in>err A.\n              (case z of Err \\<Rightarrow> True\n               | OK y \\<Rightarrow>\n                   case x of Err \\<Rightarrow> False\n                   | OK x \\<Rightarrow> r x y) \\<and>\n              (case z of Err \\<Rightarrow> True\n               | OK ya \\<Rightarrow>\n                   case y of Err \\<Rightarrow> False\n                   | OK x \\<Rightarrow> r x ya) \\<longrightarrow>\n              (case z of Err \\<Rightarrow> True\n               | OK ya \\<Rightarrow>\n                   case case x of Err \\<Rightarrow> Err\n                        | OK x \\<Rightarrow>\n                            case y of Err \\<Rightarrow> Err\n                            | OK y \\<Rightarrow> OK (f x y) of\n                   Err \\<Rightarrow> False | OK x \\<Rightarrow> r x ya))", "apply (simp add: err_def' split: err.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  semilat (err A, le r, lift2 (\\<lambda>x y. OK (f x y)))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma err_semilat_eslI_aux:\nassumes \"Semilat A r f\" shows \"err_semilat(esl(A,r,f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. err_semilat (esl (A, r, f))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. err_semilat (esl (A, r, f))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. err_semilat (esl (A, r, f))", "interpret Semilat A r f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat A r f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. err_semilat (esl (A, r, f))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. err_semilat (esl (A, r, f))", "apply (unfold sl_def esl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat\n     (case case (A, r, f) of\n           (A, r, f) \\<Rightarrow> (A, r, \\<lambda>x y. OK (f x y)) of\n      (A, r, f) \\<Rightarrow> (err A, le r, lift2 f))", "apply (simp add: semilat_errI [OF \\<open>Semilat A r f\\<close>])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  err_semilat (esl (A, r, f))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma err_semilat_eslI [intro, simp]:\n  \"semilat L \\<Longrightarrow> err_semilat (esl L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat L \\<Longrightarrow> err_semilat (esl L)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat L \\<Longrightarrow> err_semilat (esl L)", "apply (cases L)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>semilat L; L = (a, b, c)\\<rbrakk>\n       \\<Longrightarrow> err_semilat (esl L)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>semilat (a, b, c); L = (a, b, c)\\<rbrakk>\n       \\<Longrightarrow> err_semilat (esl (a, b, c))", "apply (drule Semilat.intro)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>L = (a, b, c); Semilat a b c\\<rbrakk>\n       \\<Longrightarrow> err_semilat (esl (a, b, c))", "apply (simp add: err_semilat_eslI_aux split_tupled_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma acc_err [simp, intro!]:  \"acc A r \\<Longrightarrow> acc (err A) (le r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. acc A r \\<Longrightarrow> acc (err A) (le r)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. acc A r \\<Longrightarrow> acc (err A) (le r)", "apply (unfold acc_def lesub_def le_def lesssub_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(y, x).\n        x \\<in> A \\<and>\n        y \\<in> A \\<and> r x y \\<and> x \\<noteq> y} \\<Longrightarrow>\n    wf {(y, x).\n        x \\<in> err A \\<and>\n        y \\<in> err A \\<and>\n        (case y of Err \\<Rightarrow> True\n         | OK y \\<Rightarrow>\n             case x of Err \\<Rightarrow> False\n             | OK x \\<Rightarrow> r x y) \\<and>\n        x \\<noteq> y}", "apply (simp add: wf_eq_minimal split: err.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Q.\n       (\\<exists>x. x \\<in> Q) \\<longrightarrow>\n       (\\<exists>z\\<in>Q.\n           \\<forall>y.\n              z \\<in> A \\<and>\n              y \\<in> A \\<and> r z y \\<and> z \\<noteq> y \\<longrightarrow>\n              y \\<notin> Q) \\<Longrightarrow>\n    \\<forall>Q.\n       (\\<exists>x. x \\<in> Q) \\<longrightarrow>\n       (\\<exists>z\\<in>Q.\n           \\<forall>y.\n              (y = Err \\<longrightarrow>\n               z \\<in> err A \\<and>\n               Err \\<in> err A \\<and> z \\<noteq> Err \\<longrightarrow>\n               Err \\<notin> Q) \\<and>\n              (\\<forall>x2 x2a.\n                  z = OK x2a \\<longrightarrow>\n                  y = OK x2 \\<longrightarrow>\n                  OK x2a \\<in> err A \\<and>\n                  OK x2 \\<in> err A \\<and>\n                  r x2a x2 \\<and> x2a \\<noteq> x2 \\<longrightarrow>\n                  OK x2 \\<notin> Q))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q x.\n       \\<lbrakk>\\<forall>Q.\n                   (\\<exists>x. x \\<in> Q) \\<longrightarrow>\n                   (\\<exists>z\\<in>Q.\n                       \\<forall>y.\n                          z \\<in> A \\<and>\n                          y \\<in> A \\<and>\n                          r z y \\<and> z \\<noteq> y \\<longrightarrow>\n                          y \\<notin> Q);\n        x \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)", "apply (case_tac \"Err : Q\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q x.\n       \\<lbrakk>\\<forall>Q.\n                   (\\<exists>x. x \\<in> Q) \\<longrightarrow>\n                   (\\<exists>z\\<in>Q.\n                       \\<forall>y.\n                          z \\<in> A \\<and>\n                          y \\<in> A \\<and>\n                          r z y \\<and> z \\<noteq> y \\<longrightarrow>\n                          y \\<notin> Q);\n        x \\<in> Q; Err \\<in> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)\n 2. \\<And>Q x.\n       \\<lbrakk>\\<forall>Q.\n                   (\\<exists>x. x \\<in> Q) \\<longrightarrow>\n                   (\\<exists>z\\<in>Q.\n                       \\<forall>y.\n                          z \\<in> A \\<and>\n                          y \\<in> A \\<and>\n                          r z y \\<and> z \\<noteq> y \\<longrightarrow>\n                          y \\<notin> Q);\n        x \\<in> Q; Err \\<notin> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q x.\n       \\<lbrakk>\\<forall>Q.\n                   (\\<exists>x. x \\<in> Q) \\<longrightarrow>\n                   (\\<exists>z\\<in>Q.\n                       \\<forall>y.\n                          z \\<in> A \\<and>\n                          y \\<in> A \\<and>\n                          r z y \\<and> z \\<noteq> y \\<longrightarrow>\n                          y \\<notin> Q);\n        x \\<in> Q; Err \\<notin> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)", "apply (erule_tac x = \"{a . OK a : Q}\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q x.\n       \\<lbrakk>x \\<in> Q; Err \\<notin> Q;\n        (\\<exists>x. x \\<in> {a. OK a \\<in> Q}) \\<longrightarrow>\n        (\\<exists>z\\<in>{a. OK a \\<in> Q}.\n            \\<forall>y.\n               z \\<in> A \\<and>\n               y \\<in> A \\<and> r z y \\<and> z \\<noteq> y \\<longrightarrow>\n               y \\<notin> {a. OK a \\<in> Q})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)", "apply (case_tac \"x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q x.\n       \\<lbrakk>x \\<in> Q; Err \\<notin> Q;\n        (\\<exists>x. x \\<in> {a. OK a \\<in> Q}) \\<longrightarrow>\n        (\\<exists>z\\<in>{a. OK a \\<in> Q}.\n            \\<forall>y.\n               z \\<in> A \\<and>\n               y \\<in> A \\<and> r z y \\<and> z \\<noteq> y \\<longrightarrow>\n               y \\<notin> {a. OK a \\<in> Q});\n        x = Err\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)\n 2. \\<And>Q x x2.\n       \\<lbrakk>x \\<in> Q; Err \\<notin> Q;\n        (\\<exists>x. x \\<in> {a. OK a \\<in> Q}) \\<longrightarrow>\n        (\\<exists>z\\<in>{a. OK a \\<in> Q}.\n            \\<forall>y.\n               z \\<in> A \\<and>\n               y \\<in> A \\<and> r z y \\<and> z \\<noteq> y \\<longrightarrow>\n               y \\<notin> {a. OK a \\<in> Q});\n        x = OK x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q x x2.\n       \\<lbrakk>x \\<in> Q; Err \\<notin> Q;\n        (\\<exists>x. x \\<in> {a. OK a \\<in> Q}) \\<longrightarrow>\n        (\\<exists>z\\<in>{a. OK a \\<in> Q}.\n            \\<forall>y.\n               z \\<in> A \\<and>\n               y \\<in> A \\<and> r z y \\<and> z \\<noteq> y \\<longrightarrow>\n               y \\<notin> {a. OK a \\<in> Q});\n        x = OK x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>Q.\n                            \\<forall>y.\n                               (y = Err \\<longrightarrow>\n                                z \\<in> err A \\<and>\n                                Err \\<in> err A \\<and>\n                                z \\<noteq> Err \\<longrightarrow>\n                                Err \\<notin> Q) \\<and>\n                               (\\<forall>x2 x2a.\n                                   z = OK x2a \\<longrightarrow>\n                                   y = OK x2 \\<longrightarrow>\n                                   OK x2a \\<in> err A \\<and>\n                                   OK x2 \\<in> err A \\<and>\n                                   r x2a x2 \\<and>\n                                   x2a \\<noteq> x2 \\<longrightarrow>\n                                   OK x2 \\<notin> Q)", "apply (auto simp: err_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma Err_in_err [iff]: \"Err : err A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Err \\<in> err A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Err \\<in> err A", "by (simp add: err_def')"], ["", "(*>*)"], ["", "lemma Ok_in_err [iff]: \"(OK x \\<in> err A) = (x\\<in>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<in> err A) = (x \\<in> A)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<in> err A) = (x \\<in> A)", "by (auto simp add: err_def')"], ["", "(*>*)"], ["", "subsection \\<open>lift\\<close>"], ["", "lemma lift_in_errI:\n  \"\\<lbrakk> e \\<in> err S; \\<forall>x\\<in>S. e = OK x \\<longrightarrow> f x \\<in> err S \\<rbrakk> \\<Longrightarrow> lift f e \\<in> err S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>e \\<in> err S;\n     \\<forall>x\\<in>S. e = OK x \\<longrightarrow> f x \\<in> err S\\<rbrakk>\n    \\<Longrightarrow> lift f e \\<in> err S", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>e \\<in> err S;\n     \\<forall>x\\<in>S. e = OK x \\<longrightarrow> f x \\<in> err S\\<rbrakk>\n    \\<Longrightarrow> lift f e \\<in> err S", "apply (unfold lift_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>e \\<in> err S;\n     \\<forall>x\\<in>S. e = OK x \\<longrightarrow> f x \\<in> err S\\<rbrakk>\n    \\<Longrightarrow> (case e of Err \\<Rightarrow> Err\n                       | OK x \\<Rightarrow> f x)\n                      \\<in> err S", "apply (simp split: err.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>e \\<in> err S;\n     \\<forall>x\\<in>S. e = OK x \\<longrightarrow> f x \\<in> err S\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x2.\n                         e = OK x2 \\<longrightarrow> f x2 \\<in> err S", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma Err_lift2 [simp]: \"Err \\<squnion>\\<^bsub>lift2 f\\<^esub> x = Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Err \\<squnion>\\<^bsub>lift2 f\\<^esub> x = Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Err \\<squnion>\\<^bsub>lift2 f\\<^esub> x = Err", "by (simp add: lift2_def plussub_def)"], ["", "(*>*)"], ["", "lemma lift2_Err [simp]: \"x \\<squnion>\\<^bsub>lift2 f\\<^esub> Err = Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion>\\<^bsub>lift2 f\\<^esub> Err = Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion>\\<^bsub>lift2 f\\<^esub> Err = Err", "by (simp add: lift2_def plussub_def split: err.split)"], ["", "(*>*)"], ["", "lemma OK_lift2_OK [simp]: \"OK x \\<squnion>\\<^bsub>lift2 f\\<^esub> OK y = x \\<squnion>\\<^sub>f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OK x \\<squnion>\\<^bsub>lift2 f\\<^esub> OK y =\n    x \\<squnion>\\<^bsub>f\\<^esub> y", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. OK x \\<squnion>\\<^bsub>lift2 f\\<^esub> OK y =\n    x \\<squnion>\\<^bsub>f\\<^esub> y", "by (simp add: lift2_def plussub_def split: err.split)"], ["", "(*>*)"], ["", "subsection \\<open>sup\\<close>"], ["", "lemma Err_sup_Err [simp]: \"Err \\<squnion>\\<^bsub>sup f\\<^esub> x = Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Err \\<squnion>\\<^bsub>Err.sup f\\<^esub> x = Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Err \\<squnion>\\<^bsub>Err.sup f\\<^esub> x = Err", "by (simp add: plussub_def sup_def lift2_def)"], ["", "(*>*)"], ["", "lemma Err_sup_Err2 [simp]: \"x \\<squnion>\\<^bsub>sup f\\<^esub> Err = Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion>\\<^bsub>Err.sup f\\<^esub> Err = Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion>\\<^bsub>Err.sup f\\<^esub> Err = Err", "by (simp add: plussub_def sup_def lift2_def split: err.split)"], ["", "(*>*)"], ["", "lemma Err_sup_OK [simp]: \"OK x \\<squnion>\\<^bsub>sup f\\<^esub> OK y = OK (x \\<squnion>\\<^sub>f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OK x \\<squnion>\\<^bsub>Err.sup f\\<^esub> OK y =\n    OK (x \\<squnion>\\<^bsub>f\\<^esub> y)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. OK x \\<squnion>\\<^bsub>Err.sup f\\<^esub> OK y =\n    OK (x \\<squnion>\\<^bsub>f\\<^esub> y)", "by (simp add: plussub_def sup_def lift2_def)"], ["", "(*>*)"], ["", "lemma Err_sup_eq_OK_conv [iff]:\n  \"(sup f ex ey = OK z) = (\\<exists>x y. ex = OK x \\<and> ey = OK y \\<and> f x y = z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Err.sup f ex ey = OK z) =\n    (\\<exists>x y. ex = OK x \\<and> ey = OK y \\<and> f x y = z)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Err.sup f ex ey = OK z) =\n    (\\<exists>x y. ex = OK x \\<and> ey = OK y \\<and> f x y = z)", "apply (unfold sup_def lift2_def plussub_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((case ex of Err \\<Rightarrow> Err\n      | OK x \\<Rightarrow>\n          case ey of Err \\<Rightarrow> Err\n          | OK y \\<Rightarrow> OK (f x y)) =\n     OK z) =\n    (\\<exists>x y. ex = OK x \\<and> ey = OK y \\<and> f x y = z)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (case ex of Err \\<Rightarrow> Err\n     | OK x \\<Rightarrow>\n         case ey of Err \\<Rightarrow> Err | OK y \\<Rightarrow> OK (f x y)) =\n    OK z \\<Longrightarrow>\n    \\<exists>x y. ex = OK x \\<and> ey = OK y \\<and> f x y = z\n 2. \\<exists>x y.\n       ex = OK x \\<and> ey = OK y \\<and> f x y = z \\<Longrightarrow>\n    (case ex of Err \\<Rightarrow> Err\n     | OK x \\<Rightarrow>\n         case ey of Err \\<Rightarrow> Err | OK y \\<Rightarrow> OK (f x y)) =\n    OK z", "apply (simp split: err.split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y.\n       ex = OK x \\<and> ey = OK y \\<and> f x y = z \\<Longrightarrow>\n    (case ex of Err \\<Rightarrow> Err\n     | OK x \\<Rightarrow>\n         case ey of Err \\<Rightarrow> Err | OK y \\<Rightarrow> OK (f x y)) =\n    OK z", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>ex = OK x; ey = OK y; z = f x y\\<rbrakk>\n       \\<Longrightarrow> (case OK x of Err \\<Rightarrow> Err\n                          | OK x \\<Rightarrow>\n                              case OK y of Err \\<Rightarrow> Err\n                              | OK y \\<Rightarrow> OK (f x y)) =\n                         OK (f x y)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma Err_sup_eq_Err [iff]: \"(sup f ex ey = Err) = (ex=Err \\<or> ey=Err)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Err.sup f ex ey = Err) = (ex = Err \\<or> ey = Err)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Err.sup f ex ey = Err) = (ex = Err \\<or> ey = Err)", "apply (unfold sup_def lift2_def plussub_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((case ex of Err \\<Rightarrow> Err\n      | OK x \\<Rightarrow>\n          case ey of Err \\<Rightarrow> Err\n          | OK y \\<Rightarrow> OK (f x y)) =\n     Err) =\n    (ex = Err \\<or> ey = Err)", "apply (simp split: err.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection \\<open>semilat (err A) (le r) f\\<close>"], ["", "lemma semilat_le_err_Err_plus [simp]:\n  \"\\<lbrakk> x\\<in> err A; semilat(err A, le r, f) \\<rbrakk> \\<Longrightarrow> Err \\<squnion>\\<^sub>f x = Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> err A; semilat (err A, le r, f)\\<rbrakk>\n    \\<Longrightarrow> Err \\<squnion>\\<^bsub>f\\<^esub> x = Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> err A; semilat (err A, le r, f)\\<rbrakk>\n    \\<Longrightarrow> Err \\<squnion>\\<^bsub>f\\<^esub> x = Err", "by (blast intro: Semilat.le_iff_plus_unchanged [THEN iffD1, OF Semilat.intro] \n                   Semilat.le_iff_plus_unchanged2 [THEN iffD1, OF Semilat.intro])"], ["", "(*>*)"], ["", "lemma semilat_le_err_plus_Err [simp]:\n  \"\\<lbrakk> x\\<in> err A; semilat(err A, le r, f) \\<rbrakk> \\<Longrightarrow> x \\<squnion>\\<^sub>f Err = Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> err A; semilat (err A, le r, f)\\<rbrakk>\n    \\<Longrightarrow> x \\<squnion>\\<^bsub>f\\<^esub> Err = Err", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> err A; semilat (err A, le r, f)\\<rbrakk>\n    \\<Longrightarrow> x \\<squnion>\\<^bsub>f\\<^esub> Err = Err", "by (blast intro: Semilat.le_iff_plus_unchanged [THEN iffD1, OF Semilat.intro]\n                   Semilat.le_iff_plus_unchanged2 [THEN iffD1, OF Semilat.intro])"], ["", "(*>*)"], ["", "lemma semilat_le_err_OK1:\n  \"\\<lbrakk> x\\<in>A; y\\<in>A; semilat(err A, le r, f); OK x \\<squnion>\\<^sub>f OK y = OK z \\<rbrakk> \n  \\<Longrightarrow> x \\<sqsubseteq>\\<^sub>r z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f);\n     OK x \\<squnion>\\<^bsub>f\\<^esub> OK y = OK z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> z", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f);\n     OK x \\<squnion>\\<^bsub>f\\<^esub> OK y = OK z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> z", "apply (rule OK_le_err_OK [THEN iffD1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f);\n     OK x \\<squnion>\\<^bsub>f\\<^esub> OK y = OK z\\<rbrakk>\n    \\<Longrightarrow> OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z", "apply (erule subst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f)\\<rbrakk>\n    \\<Longrightarrow> OK x \n                      \\<sqsubseteq>\\<^bsub>le\n      r\\<^esub> OK x \\<squnion>\\<^bsub>f\\<^esub> OK y", "apply (simp add: Semilat.ub1 [OF Semilat.intro])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma semilat_le_err_OK2:\n  \"\\<lbrakk> x\\<in>A; y\\<in>A; semilat(err A, le r, f); OK x \\<squnion>\\<^sub>f OK y = OK z \\<rbrakk> \n  \\<Longrightarrow> y \\<sqsubseteq>\\<^sub>r z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f);\n     OK x \\<squnion>\\<^bsub>f\\<^esub> OK y = OK z\\<rbrakk>\n    \\<Longrightarrow> y \\<sqsubseteq>\\<^bsub>r\\<^esub> z", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f);\n     OK x \\<squnion>\\<^bsub>f\\<^esub> OK y = OK z\\<rbrakk>\n    \\<Longrightarrow> y \\<sqsubseteq>\\<^bsub>r\\<^esub> z", "apply (rule OK_le_err_OK [THEN iffD1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f);\n     OK x \\<squnion>\\<^bsub>f\\<^esub> OK y = OK z\\<rbrakk>\n    \\<Longrightarrow> OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z", "apply (erule subst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, f)\\<rbrakk>\n    \\<Longrightarrow> OK y \n                      \\<sqsubseteq>\\<^bsub>le\n      r\\<^esub> OK x \\<squnion>\\<^bsub>f\\<^esub> OK y", "apply (simp add: Semilat.ub2 [OF Semilat.intro])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma eq_order_le:\n  \"\\<lbrakk> x=y; order r \\<rbrakk> \\<Longrightarrow> x \\<sqsubseteq>\\<^sub>r y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; order r\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> y", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; order r\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> y", "apply (unfold order_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y;\n     (\\<forall>x. x \\<sqsubseteq>\\<^bsub>r\\<^esub> x) \\<and>\n     (\\<forall>x y.\n         x \\<sqsubseteq>\\<^bsub>r\\<^esub> y \\<and>\n         y \\<sqsubseteq>\\<^bsub>r\\<^esub> x \\<longrightarrow>\n         x = y) \\<and>\n     (\\<forall>x y z.\n         x \\<sqsubseteq>\\<^bsub>r\\<^esub> y \\<and>\n         y \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<longrightarrow>\n         x \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> y", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma OK_plus_OK_eq_Err_conv [simp]:\n  assumes \"x\\<in>A\"  \"y\\<in>A\"  \"semilat(err A, le r, fe)\"\n  shows \"(OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) = (\\<not>(\\<exists>z\\<in>A. x \\<sqsubseteq>\\<^sub>r z \\<and> y \\<sqsubseteq>\\<^sub>r z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) =\n    (\\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) =\n    (\\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) =\n    (\\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z))", "have plus_le_conv3: \"\\<And>A x y z f r. \n    \\<lbrakk> semilat (A,r,f); x \\<squnion>\\<^sub>f y \\<sqsubseteq>\\<^sub>r z; x\\<in>A; y\\<in>A; z\\<in>A \\<rbrakk> \n    \\<Longrightarrow> x \\<sqsubseteq>\\<^sub>r z \\<and> y \\<sqsubseteq>\\<^sub>r z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A x y z f r.\n       \\<lbrakk>semilat (A, r, f);\n        x \\<squnion>\\<^bsub>f\\<^esub> y \\<sqsubseteq>\\<^bsub>r\\<^esub> z;\n        x \\<in> A; y \\<in> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                         y \\<sqsubseteq>\\<^bsub>r\\<^esub> z", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A x y z f r.\n       \\<lbrakk>semilat (A, r, f);\n        x \\<squnion>\\<^bsub>f\\<^esub> y \\<sqsubseteq>\\<^bsub>r\\<^esub> z;\n        x \\<in> A; y \\<in> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                         y \\<sqsubseteq>\\<^bsub>r\\<^esub> z", "by (rule Semilat.plus_le_conv [OF Semilat.intro, THEN iffD1])"], ["proof (state)\nthis:\n  \\<lbrakk>semilat (?A, ?r, ?f);\n   ?x \\<squnion>\\<^bsub>?f\\<^esub> ?y \\<sqsubseteq>\\<^bsub>?r\\<^esub> ?z;\n   ?x \\<in> ?A; ?y \\<in> ?A; ?z \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqsubseteq>\\<^bsub>?r\\<^esub> ?z \\<and>\n                    ?y \\<sqsubseteq>\\<^bsub>?r\\<^esub> ?z\n\ngoal (1 subgoal):\n 1. (OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) =\n    (\\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z))", "(*>*)"], ["proof (state)\nthis:\n  \\<lbrakk>semilat (?A, ?r, ?f);\n   ?x \\<squnion>\\<^bsub>?f\\<^esub> ?y \\<sqsubseteq>\\<^bsub>?r\\<^esub> ?z;\n   ?x \\<in> ?A; ?y \\<in> ?A; ?z \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqsubseteq>\\<^bsub>?r\\<^esub> ?z \\<and>\n                    ?y \\<sqsubseteq>\\<^bsub>?r\\<^esub> ?z\n\ngoal (1 subgoal):\n 1. (OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) =\n    (\\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z))", "from assms"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A\n  semilat (err A, le r, fe)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  semilat (err A, le r, fe)\n\ngoal (1 subgoal):\n 1. (OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) =\n    (\\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z))", "apply (rule_tac iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err\\<rbrakk>\n    \\<Longrightarrow> \\<not> (\\<exists>z\\<in>A.\n                                 x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                                 y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\n 2. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> z;\n        y \\<sqsubseteq>\\<^bsub>r\\<^esub> z\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply (drule OK_le_err_OK [THEN iffD2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        y \\<sqsubseteq>\\<^bsub>r\\<^esub> z;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply (drule OK_le_err_OK [THEN iffD2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply (drule Semilat.lub[OF Semilat.intro, of _ _ _ \"OK x\" _ \"OK y\"])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> ?z13 z\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> ?z13 z\n 3. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK x \\<in> err A\n 4. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK y \\<in> err A\n 5. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> ?z13 z \\<in> err A\n 6. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>le r\\<^esub> ?z13 z\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK x \\<in> err A\n 3. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK y \\<in> err A\n 4. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A\n 5. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK x \\<in> err A\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK y \\<in> err A\n 3. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A\n 4. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK y \\<in> err A\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A\n 3. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err; z \\<in> A;\n        OK x \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK y \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply (case_tac \"OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n     \\<not> (\\<exists>z\\<in>A.\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n     OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err\\<rbrakk>\n    \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err\n 2. \\<And>x2.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK x2\\<rbrakk>\n       \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK x2\\<rbrakk>\n       \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply (rename_tac z)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK z\\<rbrakk>\n       \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err", "apply (subgoal_tac \"OK z\\<in> err A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK z;\n        OK z \\<in> err A\\<rbrakk>\n       \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A", "apply (drule eq_order_le)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK z \\<in> err A\\<rbrakk>\n       \\<Longrightarrow> order (?r22 z)\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK z \\<in> err A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>?r22 z\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err\n 3. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A", "apply (erule Semilat.orderI [OF Semilat.intro])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK z \\<in> err A;\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \n        \\<sqsubseteq>\\<^bsub>le r\\<^esub> OK z\\<rbrakk>\n       \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err\n 2. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A", "apply (blast dest: plus_le_conv3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n        OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = OK z\\<rbrakk>\n       \\<Longrightarrow> OK z \\<in> err A", "apply (erule subst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>x \\<in> A; y \\<in> A; semilat (err A, le r, fe);\n        \\<not> (\\<exists>z\\<in>A.\n                   x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                   y \\<sqsubseteq>\\<^bsub>r\\<^esub> z)\\<rbrakk>\n       \\<Longrightarrow> OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y \\<in> err A", "apply (blast intro: Semilat.closedI [OF Semilat.intro] closedD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (OK x \\<squnion>\\<^bsub>fe\\<^esub> OK y = Err) =\n  (\\<not> (\\<exists>z\\<in>A.\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n              y \\<sqsubseteq>\\<^bsub>r\\<^esub> z))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "subsection \\<open>semilat (err(Union AS))\\<close>"], ["", "(* FIXME? *)"], ["", "lemma all_bex_swap_lemma [iff]:\n  \"(\\<forall>x. (\\<exists>y\\<in>A. x = f y) \\<longrightarrow> P x) = (\\<forall>y\\<in>A. P(f y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. (\\<exists>y\\<in>A. x = f y) \\<longrightarrow> P x) =\n    (\\<forall>y\\<in>A. P (f y))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. (\\<exists>y\\<in>A. x = f y) \\<longrightarrow> P x) =\n    (\\<forall>y\\<in>A. P (f y))", "by blast"], ["", "(*>*)"], ["", "lemma closed_err_Union_lift2I: \n  \"\\<lbrakk> \\<forall>A\\<in>AS. closed (err A) (lift2 f); AS \\<noteq> {}; \n      \\<forall>A\\<in>AS.\\<forall>B\\<in>AS. A\\<noteq>B \\<longrightarrow> (\\<forall>a\\<in>A.\\<forall>b\\<in>B. a \\<squnion>\\<^sub>f b = Err) \\<rbrakk> \n  \\<Longrightarrow> closed (err(Union AS)) (lift2 f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS. closed (err A) (lift2 f); AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> closed (err (\\<Union> AS)) (lift2 f)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS. closed (err A) (lift2 f); AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> closed (err (\\<Union> AS)) (lift2 f)", "apply (unfold closed_def err_def')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                \\<forall>x\\<in>insert Err {x. \\<exists>y\\<in>A. x = OK y}.\n                   \\<forall>y\\<in>insert Err\n                                   {x. \\<exists>y\\<in>A. x = OK y}.\n                      x \\<squnion>\\<^bsub>lift2 f\\<^esub> y\n                      \\<in> insert Err {x. \\<exists>y\\<in>A. x = OK y};\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>insert Err\n{x. \\<exists>y\\<in>\\<Union> AS. x = OK y}.\n                         \\<forall>y\\<in>insert Err\n   {x. \\<exists>y\\<in>\\<Union> AS. x = OK y}.\n                            x \\<squnion>\\<^bsub>lift2 f\\<^esub> y\n                            \\<in> insert Err\n                                   {x. \\<exists>y\\<in>\\<Union> AS. x = OK y}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                \\<forall>y\\<in>A.\n                   \\<forall>ya\\<in>A.\n                      y \\<squnion>\\<^bsub>f\\<^esub> ya = Err \\<or>\n                      (\\<exists>yb\\<in>A.\n                          y \\<squnion>\\<^bsub>f\\<^esub> ya = OK yb);\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             x \\<squnion>\\<^bsub>lift2 f\\<^esub> y =\n                             Err \\<or>\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    x \\<squnion>\\<^bsub>lift2 f\\<^esub> y =\n                                    OK ya))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y ya yb yc yd.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   \\<forall>y\\<in>A.\n                      \\<forall>ya\\<in>A.\n                         y \\<squnion>\\<^bsub>f\\<^esub> ya = Err \\<or>\n                         (\\<exists>yb\\<in>A.\n                             y \\<squnion>\\<^bsub>f\\<^esub> ya = OK yb);\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B. a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        y \\<in> AS; ya \\<in> y; yc \\<in> AS; yd \\<in> yc;\n        \\<not> (\\<exists>y\\<in>AS.\n                   \\<exists>y\\<in>y.\n                      OK ya \\<squnion>\\<^bsub>lift2 f\\<^esub> OK yd =\n                      OK y)\\<rbrakk>\n       \\<Longrightarrow> OK ya \\<squnion>\\<^bsub>lift2 f\\<^esub> OK yd = Err", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y ya yc yd.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   \\<forall>y\\<in>A.\n                      \\<forall>ya\\<in>A.\n                         y \\<squnion>\\<^bsub>f\\<^esub> ya = Err \\<or>\n                         (\\<exists>yb\\<in>A.\n                             y \\<squnion>\\<^bsub>f\\<^esub> ya = OK yb);\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B. a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        y \\<in> AS; ya \\<in> y; yc \\<in> AS; yd \\<in> yc;\n        \\<forall>y\\<in>AS.\n           \\<forall>y\\<in>y.\n              ya \\<squnion>\\<^bsub>f\\<^esub> yd \\<noteq> OK y\\<rbrakk>\n       \\<Longrightarrow> ya \\<squnion>\\<^bsub>f\\<^esub> yd = Err", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text \\<open>\n  If @{term \"AS = {}\"} the thm collapses to\n  @{prop \"order r \\<and> closed {Err} f \\<and> Err \\<squnion>\\<^sub>f Err = Err\"}\n  which may not hold \n\\<close>"], ["", "lemma err_semilat_UnionI:\n  \"\\<lbrakk> \\<forall>A\\<in>AS. err_semilat(A, r, f); AS \\<noteq> {}; \n      \\<forall>A\\<in>AS.\\<forall>B\\<in>AS. A\\<noteq>B \\<longrightarrow> (\\<forall>a\\<in>A.\\<forall>b\\<in>B. \\<not>a \\<sqsubseteq>\\<^sub>r b \\<and> a \\<squnion>\\<^sub>f b = Err) \\<rbrakk> \n  \\<Longrightarrow> err_semilat(Union AS, r, f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS. err_semilat (A, r, f); AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> err_semilat (\\<Union> AS, r, f)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS. err_semilat (A, r, f); AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> err_semilat (\\<Union> AS, r, f)", "apply (unfold semilat_def sl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                case case (A, r, f) of\n                     (A, r, f) \\<Rightarrow> (err A, le r, lift2 f) of\n                (A, r, f) \\<Rightarrow>\n                  order r \\<and>\n                  closed A f \\<and>\n                  (\\<forall>x\\<in>A.\n                      \\<forall>y\\<in>A.\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> x \n                    \\<squnion>\\<^bsub>f\\<^esub> y) \\<and>\n                  (\\<forall>x\\<in>A.\n                      \\<forall>y\\<in>A.\n                         y \\<sqsubseteq>\\<^bsub>r\\<^esub> x \n                    \\<squnion>\\<^bsub>f\\<^esub> y) \\<and>\n                  (\\<forall>x\\<in>A.\n                      \\<forall>y\\<in>A.\n                         \\<forall>z\\<in>A.\n                            x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<longrightarrow>\n                            x \\<squnion>\\<^bsub>f\\<^esub> y \n                            \\<sqsubseteq>\\<^bsub>r\\<^esub> z);\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> case case (\\<Union> AS, r, f) of\n                           (A, r, f) \\<Rightarrow> (err A, le r, lift2 f) of\n                      (A, r, f) \\<Rightarrow>\n                        order r \\<and>\n                        closed A f \\<and>\n                        (\\<forall>x\\<in>A.\n                            \\<forall>y\\<in>A.\n                               x \\<sqsubseteq>\\<^bsub>r\\<^esub> x \n                          \\<squnion>\\<^bsub>f\\<^esub> y) \\<and>\n                        (\\<forall>x\\<in>A.\n                            \\<forall>y\\<in>A.\n                               y \\<sqsubseteq>\\<^bsub>r\\<^esub> x \n                          \\<squnion>\\<^bsub>f\\<^esub> y) \\<and>\n                        (\\<forall>x\\<in>A.\n                            \\<forall>y\\<in>A.\n                               \\<forall>z\\<in>A.\n                                  x \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>r\\<^esub> z)", "apply (simp add: closed_err_Union_lift2I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (err A) (lift2 f) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       x \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       y \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       \\<forall>z\\<in>err A.\n                          x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<and>\n                          y \\<sqsubseteq>\\<^bsub>le\n            r\\<^esub> z \\<longrightarrow>\n                          x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                          \\<sqsubseteq>\\<^bsub>le r\\<^esub> z);\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> order r \\<and>\n                      (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             x \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                      (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             y \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                      (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             \\<forall>z\\<in>err (\\<Union> AS).\n                                x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<and>\n                                y \\<sqsubseteq>\\<^bsub>le\n                  r\\<^esub> z \\<longrightarrow>\n                                x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (err A) (lift2 f) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       x \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       y \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       \\<forall>z\\<in>err A.\n                          x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<and>\n                          y \\<sqsubseteq>\\<^bsub>le\n            r\\<^esub> z \\<longrightarrow>\n                          x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                          \\<sqsubseteq>\\<^bsub>le r\\<^esub> z);\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> order r\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (err A) (lift2 f) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       x \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       y \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       \\<forall>z\\<in>err A.\n                          x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<and>\n                          y \\<sqsubseteq>\\<^bsub>le\n            r\\<^esub> z \\<longrightarrow>\n                          x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                          \\<sqsubseteq>\\<^bsub>le r\\<^esub> z);\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             x \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                      (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             y \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                      (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             \\<forall>z\\<in>err (\\<Union> AS).\n                                x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<and>\n                                y \\<sqsubseteq>\\<^bsub>le\n                  r\\<^esub> z \\<longrightarrow>\n                                x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (err A) (lift2 f) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       x \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       y \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                (\\<forall>x\\<in>err A.\n                    \\<forall>y\\<in>err A.\n                       \\<forall>z\\<in>err A.\n                          x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<and>\n                          y \\<sqsubseteq>\\<^bsub>le\n            r\\<^esub> z \\<longrightarrow>\n                          x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                          \\<sqsubseteq>\\<^bsub>le r\\<^esub> z);\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             x \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                      (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             y \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y) \\<and>\n                      (\\<forall>x\\<in>err (\\<Union> AS).\n                          \\<forall>y\\<in>err (\\<Union> AS).\n                             \\<forall>z\\<in>err (\\<Union> AS).\n                                x \\<sqsubseteq>\\<^bsub>le r\\<^esub> z \\<and>\n                                y \\<sqsubseteq>\\<^bsub>le\n                  r\\<^esub> z \\<longrightarrow>\n                                x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)", "apply (simp add: err_def')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              x \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              y \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              (\\<forall>z.\n                                  (\\<exists>y\\<in>AS.\n\\<exists>y\\<in>y. z = OK y) \\<longrightarrow>\n                                  x \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             x \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              y \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              (\\<forall>z.\n                                  (\\<exists>y\\<in>AS.\n\\<exists>y\\<in>y. z = OK y) \\<longrightarrow>\n                                  x \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)))", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y ya yb yc yd.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        y \\<in> AS; ya \\<in> y; yc \\<in> AS; yd \\<in> yc\\<rbrakk>\n       \\<Longrightarrow> OK ya \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK ya \\<squnion>\\<^bsub>lift2 f\\<^esub> OK yd\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              y \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              (\\<forall>z.\n                                  (\\<exists>y\\<in>AS.\n\\<exists>y\\<in>y. z = OK y) \\<longrightarrow>\n                                  x \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)))", "apply (rename_tac A a u B b)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B\\<rbrakk>\n       \\<Longrightarrow> OK a \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              y \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              (\\<forall>z.\n                                  (\\<exists>y\\<in>AS.\n\\<exists>y\\<in>y. z = OK y) \\<longrightarrow>\n                                  x \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)))", "apply (case_tac \"A = B\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; A = B\\<rbrakk>\n       \\<Longrightarrow> OK a \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 2. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> OK a \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 3. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              y \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              (\\<forall>z.\n                                  (\\<exists>y\\<in>AS.\n\\<exists>y\\<in>y. z = OK y) \\<longrightarrow>\n                                  x \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> OK a \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              y \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              (\\<forall>z.\n                                  (\\<exists>y\\<in>AS.\n\\<exists>y\\<in>y. z = OK y) \\<longrightarrow>\n                                  x \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              y \\<sqsubseteq>\\<^bsub>le\n                r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)) \\<and>\n                      (\\<forall>x.\n                          (\\<exists>y\\<in>AS.\n                              \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                          (\\<forall>y.\n                              (\\<exists>ya\\<in>AS.\n                                  \\<exists>ya\\<in>ya.\n                                     y = OK ya) \\<longrightarrow>\n                              (\\<forall>z.\n                                  (\\<exists>y\\<in>AS.\n\\<exists>y\\<in>y. z = OK y) \\<longrightarrow>\n                                  x \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<and>\n                                  y \\<sqsubseteq>\\<^bsub>le\n                    r\\<^esub> z \\<longrightarrow>\n                                  x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                  \\<sqsubseteq>\\<^bsub>le r\\<^esub> z)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             y \\<sqsubseteq>\\<^bsub>le\n               r\\<^esub> x \\<squnion>\\<^bsub>lift2 f\\<^esub> y)\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             (\\<forall>z.\n                                 (\\<exists>y\\<in>AS.\n                                     \\<exists>y\\<in>y.\n  z = OK y) \\<longrightarrow>\n                                 x \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<and>\n                                 y \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<longrightarrow>\n                                 x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                 \\<sqsubseteq>\\<^bsub>le r\\<^esub> z))", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y ya yb yc yd.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        y \\<in> AS; ya \\<in> y; yc \\<in> AS; yd \\<in> yc\\<rbrakk>\n       \\<Longrightarrow> OK yd \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK ya \\<squnion>\\<^bsub>lift2 f\\<^esub> OK yd\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             (\\<forall>z.\n                                 (\\<exists>y\\<in>AS.\n                                     \\<exists>y\\<in>y.\n  z = OK y) \\<longrightarrow>\n                                 x \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<and>\n                                 y \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<longrightarrow>\n                                 x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                 \\<sqsubseteq>\\<^bsub>le r\\<^esub> z))", "apply (rename_tac A a u B b)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B\\<rbrakk>\n       \\<Longrightarrow> OK b \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             (\\<forall>z.\n                                 (\\<exists>y\\<in>AS.\n                                     \\<exists>y\\<in>y.\n  z = OK y) \\<longrightarrow>\n                                 x \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<and>\n                                 y \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<longrightarrow>\n                                 x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                 \\<sqsubseteq>\\<^bsub>le r\\<^esub> z))", "apply (case_tac \"A = B\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; A = B\\<rbrakk>\n       \\<Longrightarrow> OK b \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 2. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> OK b \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 3. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             (\\<forall>z.\n                                 (\\<exists>y\\<in>AS.\n                                     \\<exists>y\\<in>y.\n  z = OK y) \\<longrightarrow>\n                                 x \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<and>\n                                 y \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<longrightarrow>\n                                 x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                 \\<sqsubseteq>\\<^bsub>le r\\<^esub> z))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x A a u B b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> OK b \n                         \\<sqsubseteq>\\<^bsub>le\n         r\\<^esub> OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b\n 2. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             (\\<forall>z.\n                                 (\\<exists>y\\<in>AS.\n                                     \\<exists>y\\<in>y.\n  z = OK y) \\<longrightarrow>\n                                 x \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<and>\n                                 y \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<longrightarrow>\n                                 x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                 \\<sqsubseteq>\\<^bsub>le r\\<^esub> z))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>A\\<in>AS.\n                order r \\<and>\n                closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                 (lift2 f) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK y \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       OK ya \n                       \\<sqsubseteq>\\<^bsub>le\n       r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                (\\<forall>y\\<in>A.\n                    \\<forall>ya\\<in>A.\n                       \\<forall>yb\\<in>A.\n                          y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                          ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                          (\\<exists>yc.\n                              y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                              OK yc \\<and>\n                              yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n     AS \\<noteq> {};\n     \\<forall>A\\<in>AS.\n        \\<forall>B\\<in>AS.\n           A \\<noteq> B \\<longrightarrow>\n           (\\<forall>a\\<in>A.\n               \\<forall>b\\<in>B.\n                  \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                  a \\<squnion>\\<^bsub>f\\<^esub> b = Err)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         (\\<exists>y\\<in>AS.\n                             \\<exists>y\\<in>y. x = OK y) \\<longrightarrow>\n                         (\\<forall>y.\n                             (\\<exists>ya\\<in>AS.\n                                 \\<exists>ya\\<in>ya.\n                                    y = OK ya) \\<longrightarrow>\n                             (\\<forall>z.\n                                 (\\<exists>y\\<in>AS.\n                                     \\<exists>y\\<in>y.\n  z = OK y) \\<longrightarrow>\n                                 x \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<and>\n                                 y \\<sqsubseteq>\\<^bsub>le\n                   r\\<^esub> z \\<longrightarrow>\n                                 x \\<squnion>\\<^bsub>lift2 f\\<^esub> y \n                                 \\<sqsubseteq>\\<^bsub>le r\\<^esub> z))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y ya yb yc yd z ye yf yg yh.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        y \\<in> AS; yg \\<in> y; yc \\<in> AS; yh \\<in> yc; ye \\<in> AS;\n        yf \\<in> ye; yg \\<sqsubseteq>\\<^bsub>r\\<^esub> yf;\n        yh \\<sqsubseteq>\\<^bsub>r\\<^esub> yf\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK yg \\<squnion>\\<^bsub>lift2 f\\<^esub> OK yh =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> yf", "apply (rename_tac A ya yb B yd z C c a b)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c", "apply (case_tac \"A = B\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A = B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c\n 2. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c", "apply (case_tac \"A = C\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A = B; A = C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c\n 2. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A = B; A \\<noteq> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c\n 3. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A = B; A \\<noteq> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c\n 2. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A \\<noteq> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c", "apply (case_tac \"B = C\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A \\<noteq> B; B = C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c\n 2. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A \\<noteq> B;\n        B \\<noteq> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x A ya yb B yd z C c a b.\n       \\<lbrakk>\\<forall>A\\<in>AS.\n                   order r \\<and>\n                   closed (insert Err {x. \\<exists>y\\<in>A. x = OK y})\n                    (lift2 f) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK y \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          OK ya \n                          \\<sqsubseteq>\\<^bsub>le\n          r\\<^esub> y \\<squnion>\\<^bsub>f\\<^esub> ya) \\<and>\n                   (\\<forall>y\\<in>A.\n                       \\<forall>ya\\<in>A.\n                          \\<forall>yb\\<in>A.\n                             y \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<and>\n                             ya \\<sqsubseteq>\\<^bsub>r\\<^esub> yb \\<longrightarrow>\n                             (\\<exists>yc.\n                                 y \\<squnion>\\<^bsub>f\\<^esub> ya =\n                                 OK yc \\<and>\n                                 yc \\<sqsubseteq>\\<^bsub>r\\<^esub> yb));\n        AS \\<noteq> {};\n        \\<forall>A\\<in>AS.\n           \\<forall>B\\<in>AS.\n              A \\<noteq> B \\<longrightarrow>\n              (\\<forall>a\\<in>A.\n                  \\<forall>b\\<in>B.\n                     \\<not> a \\<sqsubseteq>\\<^bsub>r\\<^esub> b \\<and>\n                     a \\<squnion>\\<^bsub>f\\<^esub> b = Err);\n        A \\<in> AS; a \\<in> A; B \\<in> AS; b \\<in> B; C \\<in> AS; c \\<in> C;\n        a \\<sqsubseteq>\\<^bsub>r\\<^esub> c;\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> c; A \\<noteq> B;\n        B \\<noteq> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            OK a \\<squnion>\\<^bsub>lift2 f\\<^esub> OK b =\n                            OK y \\<and>\n                            y \\<sqsubseteq>\\<^bsub>r\\<^esub> c", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "end"]]}