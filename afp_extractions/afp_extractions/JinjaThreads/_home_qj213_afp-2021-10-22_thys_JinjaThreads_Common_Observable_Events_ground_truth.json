{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaThreads/Common/Observable_Events.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaThreads", "problem_names": ["lemma range_ty_of_htype: \"range ty_of_htype \\<subseteq> range Class \\<union> range Array\"", "lemma some_choice: \"(\\<exists>a. \\<forall>b. P b (a b)) \\<longleftrightarrow> (\\<forall>b. \\<exists>a. P b a)\"", "lemma set_convert_RA_not_New [simp]:\n  \"\\<And>ln. NewHeapElem a CTn \\<notin> set (convert_RA ln)\"", "lemma set_convert_RA_not_Read [simp]:\n  \"\\<And>ln. ReadMem ad al v \\<notin> set (convert_RA ln)\""], "translations": [["", "lemma range_ty_of_htype: \"range ty_of_htype \\<subseteq> range Class \\<union> range Array\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range ty_of_htype \\<subseteq> range Class \\<union> range Array", "apply(rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> range ty_of_htype \\<Longrightarrow>\n       x \\<in> range Class \\<union> range Array", "apply(erule rangeE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       x = ty_of_htype xa \\<Longrightarrow>\n       x \\<in> range Class \\<union> range Array", "apply(rename_tac ht)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x ht.\n       x = ty_of_htype ht \\<Longrightarrow>\n       x \\<in> range Class \\<union> range Array", "apply(case_tac ht)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x ht x1.\n       \\<lbrakk>x = ty_of_htype ht; ht = Class_type x1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> range Class \\<union> range Array\n 2. \\<And>x ht x21 x22.\n       \\<lbrakk>x = ty_of_htype ht; ht = Array_type x21 x22\\<rbrakk>\n       \\<Longrightarrow> x \\<in> range Class \\<union> range Array", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma some_choice: \"(\\<exists>a. \\<forall>b. P b (a b)) \\<longleftrightarrow> (\\<forall>b. \\<exists>a. P b a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a. \\<forall>b. P b (a b)) = (\\<forall>b. \\<exists>a. P b a)", "by metis"], ["", "definition convert_RA :: \"'addr released_locks \\<Rightarrow> ('addr :: addr, 'thread_id) obs_event list\"\nwhere \"\\<And>ln. convert_RA ln = concat (map (\\<lambda>ad. replicate (ln $ ad) (SyncLock ad)) (monitor_finfun_to_list ln))\""], ["", "lemma set_convert_RA_not_New [simp]:\n  \"\\<And>ln. NewHeapElem a CTn \\<notin> set (convert_RA ln)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ln. NewHeapElem a CTn \\<notin> set (convert_RA ln)", "by(auto simp add: convert_RA_def)"], ["", "lemma set_convert_RA_not_Read [simp]:\n  \"\\<And>ln. ReadMem ad al v \\<notin> set (convert_RA ln)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ln. ReadMem ad al v \\<notin> set (convert_RA ln)", "by(auto simp add: convert_RA_def)"], ["", "end"]]}