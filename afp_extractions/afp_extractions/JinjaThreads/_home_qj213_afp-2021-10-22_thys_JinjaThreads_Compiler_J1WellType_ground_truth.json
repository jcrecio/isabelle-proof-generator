{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaThreads/Compiler/J1WellType.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaThreads", "problem_names": ["lemma WTs1_same_size: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> size es = size Ts\"", "lemma WTs1_snoc_cases:\n  assumes wt: \"P,E \\<turnstile>1 es @ [e] [::] Ts\"\n  obtains T Ts' where \"P,E \\<turnstile>1 es [::] Ts'\" \"P,E \\<turnstile>1 e :: T\"", "lemma WTs1_append:\n  assumes wt: \"P,Env \\<turnstile>1 es @ es' [::] Ts\"\n  obtains Ts' Ts'' where \"P,Env \\<turnstile>1 es [::] Ts'\" \"P,Env \\<turnstile>1 es' [::] Ts''\"", "lemma WT1_not_contains_insync: \"P,E \\<turnstile>1 e :: T \\<Longrightarrow> \\<not> contains_insync e\"\n  and WTs1_not_contains_insyncs: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> \\<not> contains_insyncs es\"", "lemma WT1_expr_locks: \"P,E \\<turnstile>1 e :: T \\<Longrightarrow> expr_locks e = (\\<lambda>a. 0)\"\n  and WTs1_expr_lockss: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> expr_lockss es = (\\<lambda>a. 0)\"", "lemma assumes wf: \"wf_prog wfmd P\"\n  shows WT1_unique: \"P,E \\<turnstile>1 e :: T1 \\<Longrightarrow> P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T1 = T2\" \n  and WTs1_unique: \"P,E \\<turnstile>1 es [::] Ts1 \\<Longrightarrow> P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts1 = Ts2\"", "lemma assumes wf: \"wf_prog p P\"\n  shows WT1_is_type: \"P,E \\<turnstile>1 e :: T \\<Longrightarrow> set E \\<subseteq> types P \\<Longrightarrow> is_type P T\"\n  and WTs1_is_type: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> set E \\<subseteq> types P \\<Longrightarrow> set Ts \\<subseteq> types P\"", "lemma blocks1_WT:\n  \"\\<lbrakk> P,Env @ Ts \\<turnstile>1 body :: T; set Ts \\<subseteq> types P \\<rbrakk> \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) Ts body :: T\"", "lemma WT1_fv: \"\\<lbrakk> P,E \\<turnstile>1 e :: T; \\<B> e (length E); syncvars e \\<rbrakk> \\<Longrightarrow> fv e \\<subseteq> {0..<length E}\"\n  and WTs1_fvs: \"\\<lbrakk> P,E \\<turnstile>1 es [::] Ts; \\<B>s es (length E); syncvarss es \\<rbrakk> \\<Longrightarrow> fvs es \\<subseteq> {0..<length E}\""], "translations": [["", "lemma WTs1_same_size: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> size es = size Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> length es = length Ts", "by (induct es arbitrary: Ts) auto"], ["", "lemma WTs1_snoc_cases:\n  assumes wt: \"P,E \\<turnstile>1 es @ [e] [::] Ts\"\n  obtains T Ts' where \"P,E \\<turnstile>1 es [::] Ts'\" \"P,E \\<turnstile>1 e :: T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Ts' T.\n        \\<lbrakk>P,E \\<turnstile>1 es [::] Ts';\n         P,E \\<turnstile>1 e :: T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>Ts' T.\n        \\<lbrakk>P,E \\<turnstile>1 es [::] Ts';\n         P,E \\<turnstile>1 e :: T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from wt"], ["proof (chain)\npicking this:\n  P,E \\<turnstile>1 es @ [e] [::] Ts", "have \"\\<exists>T Ts'. P,E \\<turnstile>1 es [::] Ts' \\<and> P,E \\<turnstile>1 e :: T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile>1 es @ [e] [::] Ts\n\ngoal (1 subgoal):\n 1. \\<exists>T Ts'.\n       P,E \\<turnstile>1 es [::] Ts' \\<and> P,E \\<turnstile>1 e :: T", "by(induct es arbitrary: Ts) auto"], ["proof (state)\nthis:\n  \\<exists>T Ts'.\n     P,E \\<turnstile>1 es [::] Ts' \\<and> P,E \\<turnstile>1 e :: T\n\ngoal (1 subgoal):\n 1. (\\<And>Ts' T.\n        \\<lbrakk>P,E \\<turnstile>1 es [::] Ts';\n         P,E \\<turnstile>1 e :: T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus thesis"], ["proof (prove)\nusing this:\n  \\<exists>T Ts'.\n     P,E \\<turnstile>1 es [::] Ts' \\<and> P,E \\<turnstile>1 e :: T\n\ngoal (1 subgoal):\n 1. thesis", "by(auto intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WTs1_append:\n  assumes wt: \"P,Env \\<turnstile>1 es @ es' [::] Ts\"\n  obtains Ts' Ts'' where \"P,Env \\<turnstile>1 es [::] Ts'\" \"P,Env \\<turnstile>1 es' [::] Ts''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Ts' Ts''.\n        \\<lbrakk>P,Env \\<turnstile>1 es [::] Ts';\n         P,Env \\<turnstile>1 es' [::] Ts''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>Ts' Ts''.\n        \\<lbrakk>P,Env \\<turnstile>1 es [::] Ts';\n         P,Env \\<turnstile>1 es' [::] Ts''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from wt"], ["proof (chain)\npicking this:\n  P,Env \\<turnstile>1 es @ es' [::] Ts", "have \"\\<exists>Ts' Ts''. P,Env \\<turnstile>1 es [::] Ts' \\<and> P,Env \\<turnstile>1 es' [::] Ts''\""], ["proof (prove)\nusing this:\n  P,Env \\<turnstile>1 es @ es' [::] Ts\n\ngoal (1 subgoal):\n 1. \\<exists>Ts' Ts''.\n       P,Env \\<turnstile>1 es [::] Ts' \\<and>\n       P,Env \\<turnstile>1 es' [::] Ts''", "by(induct es arbitrary: Ts) auto"], ["proof (state)\nthis:\n  \\<exists>Ts' Ts''.\n     P,Env \\<turnstile>1 es [::] Ts' \\<and>\n     P,Env \\<turnstile>1 es' [::] Ts''\n\ngoal (1 subgoal):\n 1. (\\<And>Ts' Ts''.\n        \\<lbrakk>P,Env \\<turnstile>1 es [::] Ts';\n         P,Env \\<turnstile>1 es' [::] Ts''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>Ts' Ts''.\n     P,Env \\<turnstile>1 es [::] Ts' \\<and>\n     P,Env \\<turnstile>1 es' [::] Ts''\n\ngoal (1 subgoal):\n 1. thesis", "by(auto intro: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WT1_not_contains_insync: \"P,E \\<turnstile>1 e :: T \\<Longrightarrow> \\<not> contains_insync e\"\n  and WTs1_not_contains_insyncs: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> \\<not> contains_insyncs es\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile>1 e :: T \\<Longrightarrow>\n     \\<not> contains_insync e) &&&\n    (P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow>\n     \\<not> contains_insyncs es)", "by(induct rule: WT1_WTs1.inducts) auto"], ["", "lemma WT1_expr_locks: \"P,E \\<turnstile>1 e :: T \\<Longrightarrow> expr_locks e = (\\<lambda>a. 0)\"\n  and WTs1_expr_lockss: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> expr_lockss es = (\\<lambda>a. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile>1 e :: T \\<Longrightarrow>\n     expr_locks e = (\\<lambda>a. 0)) &&&\n    (P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow>\n     expr_lockss es = (\\<lambda>a. 0))", "by(induct rule: WT1_WTs1.inducts)(auto)"], ["", "lemma assumes wf: \"wf_prog wfmd P\"\n  shows WT1_unique: \"P,E \\<turnstile>1 e :: T1 \\<Longrightarrow> P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T1 = T2\" \n  and WTs1_unique: \"P,E \\<turnstile>1 es [::] Ts1 \\<Longrightarrow> P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts1 = Ts2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P,E \\<turnstile>1 e :: T1; P,E \\<turnstile>1 e :: T2\\<rbrakk>\n     \\<Longrightarrow> T1 = T2) &&&\n    (\\<lbrakk>P,E \\<turnstile>1 es [::] Ts1;\n      P,E \\<turnstile>1 es [::] Ts2\\<rbrakk>\n     \\<Longrightarrow> Ts1 = Ts2)", "apply(induct arbitrary: T2 and Ts2 rule:WT1_WTs1.inducts)"], ["proof (prove)\ngoal (24 subgoals):\n 1. \\<And>C E T2.\n       \\<lbrakk>is_class P C; P,E \\<turnstile>1 new C :: T2\\<rbrakk>\n       \\<Longrightarrow> Class C = T2\n 2. \\<And>E e T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Integer = T2;\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 newA T\\<lfloor>e\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<lfloor>\\<rceil> = T2\n 3. \\<And>E e T U T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; P,E \\<turnstile>1 Cast U e :: T2\\<rbrakk>\n       \\<Longrightarrow> U = T2\n 4. \\<And>E e T U T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U;\n        P,E \\<turnstile>1 e instanceof U :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 5. \\<And>v T E T2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>1 Val v :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E V T T2.\n       \\<lbrakk>E ! V = T; V < length E;\n        P,E \\<turnstile>1 Var V :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 7. \\<And>E e1 T1 e2 T2 bop T T2a.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> T1 = T2;\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<And>T2a. P,E \\<turnstile>1 e2 :: T2a \\<Longrightarrow> T2 = T2a;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        P,E \\<turnstile>1 e1 \\<guillemotleft>bop\\<guillemotright> e2 :: T2a\\<rbrakk>\n       \\<Longrightarrow> T = T2a\n 8. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 9. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 10. \\<And>E a T i e T' T2.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<And>T2.\n            P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n            T\\<lfloor>\\<rceil> = T2;\n         P,E \\<turnstile>1 i :: Integer;\n         \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n         P,E \\<turnstile>1 e :: T';\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n         P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n        \\<Longrightarrow> Void = T2\nA total of 24 subgoals...", "apply blast"], ["proof (prove)\ngoal (23 subgoals):\n 1. \\<And>E e T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Integer = T2;\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 newA T\\<lfloor>e\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<lfloor>\\<rceil> = T2\n 2. \\<And>E e T U T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; P,E \\<turnstile>1 Cast U e :: T2\\<rbrakk>\n       \\<Longrightarrow> U = T2\n 3. \\<And>E e T U T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U;\n        P,E \\<turnstile>1 e instanceof U :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 4. \\<And>v T E T2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>1 Val v :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>E V T T2.\n       \\<lbrakk>E ! V = T; V < length E;\n        P,E \\<turnstile>1 Var V :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E e1 T1 e2 T2 bop T T2a.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> T1 = T2;\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<And>T2a. P,E \\<turnstile>1 e2 :: T2a \\<Longrightarrow> T2 = T2a;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        P,E \\<turnstile>1 e1 \\<guillemotleft>bop\\<guillemotright> e2 :: T2a\\<rbrakk>\n       \\<Longrightarrow> T = T2a\n 7. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 8. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 9. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 10. \\<And>E a T T2.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<And>T2.\n            P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n            T\\<lfloor>\\<rceil> = T2;\n         P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n        \\<Longrightarrow> Integer = T2\nA total of 23 subgoals...", "apply blast"], ["proof (prove)\ngoal (22 subgoals):\n 1. \\<And>E e T U T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; P,E \\<turnstile>1 Cast U e :: T2\\<rbrakk>\n       \\<Longrightarrow> U = T2\n 2. \\<And>E e T U T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U;\n        P,E \\<turnstile>1 e instanceof U :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 3. \\<And>v T E T2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>1 Val v :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 4. \\<And>E V T T2.\n       \\<lbrakk>E ! V = T; V < length E;\n        P,E \\<turnstile>1 Var V :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>E e1 T1 e2 T2 bop T T2a.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> T1 = T2;\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<And>T2a. P,E \\<turnstile>1 e2 :: T2a \\<Longrightarrow> T2 = T2a;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        P,E \\<turnstile>1 e1 \\<guillemotleft>bop\\<guillemotright> e2 :: T2a\\<rbrakk>\n       \\<Longrightarrow> T = T2a\n 6. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 7. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 8. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 9. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 10. \\<And>E e U C F T fm D T2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: U;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees F:T (fm) in D;\n         P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n        \\<Longrightarrow> T = T2\nA total of 22 subgoals...", "apply blast"], ["proof (prove)\ngoal (21 subgoals):\n 1. \\<And>E e T U T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U;\n        P,E \\<turnstile>1 e instanceof U :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 2. \\<And>v T E T2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>1 Val v :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 3. \\<And>E V T T2.\n       \\<lbrakk>E ! V = T; V < length E;\n        P,E \\<turnstile>1 Var V :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 4. \\<And>E e1 T1 e2 T2 bop T T2a.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> T1 = T2;\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<And>T2a. P,E \\<turnstile>1 e2 :: T2a \\<Longrightarrow> T2 = T2a;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        P,E \\<turnstile>1 e1 \\<guillemotleft>bop\\<guillemotright> e2 :: T2a\\<rbrakk>\n       \\<Longrightarrow> T = T2a\n 5. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 6. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 7. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 8. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 9. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 10. \\<And>E e1 U C F T fm D e2 T' T2.\n        \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n         \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n         \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n         P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n        \\<Longrightarrow> Void = T2\nA total of 21 subgoals...", "apply blast"], ["proof (prove)\ngoal (20 subgoals):\n 1. \\<And>v T E T2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>1 Val v :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>E V T T2.\n       \\<lbrakk>E ! V = T; V < length E;\n        P,E \\<turnstile>1 Var V :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 3. \\<And>E e1 T1 e2 T2 bop T T2a.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> T1 = T2;\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<And>T2a. P,E \\<turnstile>1 e2 :: T2a \\<Longrightarrow> T2 = T2a;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        P,E \\<turnstile>1 e1 \\<guillemotleft>bop\\<guillemotright> e2 :: T2a\\<rbrakk>\n       \\<Longrightarrow> T = T2a\n 4. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 5. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 7. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 8. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 9. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 10. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n        \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n         \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n         P,E \\<turnstile>1 e2 :: T';\n         \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n         P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n         \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n         P \\<turnstile> T'' \\<le> T;\n         P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n        \\<Longrightarrow> Boolean = T2\nA total of 20 subgoals...", "apply clarsimp"], ["proof (prove)\ngoal (19 subgoals):\n 1. \\<And>E V T T2.\n       \\<lbrakk>E ! V = T; V < length E;\n        P,E \\<turnstile>1 Var V :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>E e1 T1 e2 T2 bop T T2a.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> T1 = T2;\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<And>T2a. P,E \\<turnstile>1 e2 :: T2a \\<Longrightarrow> T2 = T2a;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        P,E \\<turnstile>1 e1 \\<guillemotleft>bop\\<guillemotright> e2 :: T2a\\<rbrakk>\n       \\<Longrightarrow> T = T2a\n 3. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 4. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 6. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 7. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 8. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 9. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 10. \\<And>E e U C M Ts T m D es Ts' T2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: U;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n         P,E \\<turnstile>1 es [::] Ts';\n         \\<And>Ts2.\n            P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n         P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n        \\<Longrightarrow> T = T2\nA total of 19 subgoals...", "apply blast"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>E e1 T1 e2 T2 bop T T2a.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> T1 = T2;\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<And>T2a. P,E \\<turnstile>1 e2 :: T2a \\<Longrightarrow> T2 = T2a;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        P,E \\<turnstile>1 e1 \\<guillemotleft>bop\\<guillemotright> e2 :: T2a\\<rbrakk>\n       \\<Longrightarrow> T = T2a\n 2. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 3. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 4. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 5. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 6. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 7. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 8. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 9. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 10. \\<And>T E e T' vo V T2.\n        \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n         \\<And>T2.\n            P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n         case vo of None \\<Rightarrow> True\n         | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n             \\<exists>T'.\n                typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n                P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n        \\<Longrightarrow> T' = T2\nA total of 18 subgoals...", "apply(blast dest: WT_binop_fun)"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>E i T e T' T2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 i:=e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 2. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 3. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 4. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 5. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 7. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 8. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 9. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 10. \\<And>E o' T e T' V T2.\n        \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n         \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n         is_refT T; T \\<noteq> NT;\n         P,E @ [Class Object] \\<turnstile>1 e :: T';\n         \\<And>T2.\n            P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n            T' = T2;\n         P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n        \\<Longrightarrow> T' = T2\nA total of 17 subgoals...", "apply blast"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>E a T i T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 3. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 4. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 6. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 7. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 8. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 9. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 10. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n        \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n         \\<And>T2.\n            P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n            T\\<^sub>1 = T2;\n         P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n         \\<And>T2.\n            P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n            T\\<^sub>2 = T2;\n         P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n        \\<Longrightarrow> T\\<^sub>2 = T2\nA total of 16 subgoals...", "apply blast"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>E a T i e T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 i :: Integer;\n        \\<And>T2. P,E \\<turnstile>1 i :: T2 \\<Longrightarrow> Integer = T2;\n        P,E \\<turnstile>1 e :: T';\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 a\\<lfloor>i\\<rceil> := e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 2. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 3. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 4. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 5. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 6. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 7. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 8. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 9. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 10. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n         P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n         \\<And>T2.\n            P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n            T\\<^sub>1 = T2;\n         P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n         \\<And>T2.\n            P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n            T\\<^sub>2 = T2;\n         P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n         P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n        \\<Longrightarrow> T = T2\nA total of 15 subgoals...", "apply blast"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>E a T T2.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<And>T2.\n           P,E \\<turnstile>1 a :: T2 \\<Longrightarrow>\n           T\\<lfloor>\\<rceil> = T2;\n        P,E \\<turnstile>1 a\\<bullet>length :: T2\\<rbrakk>\n       \\<Longrightarrow> Integer = T2\n 2. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 3. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 4. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 5. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 7. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 8. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 9. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 10. \\<And>E e c T T2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n         P,E \\<turnstile>1 c :: T;\n         \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n         P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n        \\<Longrightarrow> Void = T2\nA total of 14 subgoals...", "apply blast"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e U C F T fm D T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        P,E \\<turnstile>1 e\\<bullet>F{D} :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 3. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 4. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 6. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 7. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 8. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 9. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 10. \\<And>E e C T2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n         P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n         P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n        \\<Longrightarrow> Void = T2\nA total of 13 subgoals...", "apply (blast dest:sees_field_idemp sees_field_fun)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>E e1 U C F T fm D e2 T' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>F{D} := e2 :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 2. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 3. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 4. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 5. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 6. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 7. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 8. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 9. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 10. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n        \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n         \\<And>T2.\n            P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n         P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n         \\<And>T2.\n            P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n            T = T2;\n         is_class P C;\n         P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n        \\<Longrightarrow> T = T2\nA total of 12 subgoals...", "apply (blast dest: sees_field_fun)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>E e1 U C F T fm D e2 T' e3 T'' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        \\<And>T2. P,E \\<turnstile>1 e1 :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        \\<And>T2. P,E \\<turnstile>1 e2 :: T2 \\<Longrightarrow> T' = T2;\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        \\<And>T2. P,E \\<turnstile>1 e3 :: T2 \\<Longrightarrow> T'' = T2;\n        P \\<turnstile> T'' \\<le> T;\n        P,E \\<turnstile>1 e1\\<bullet>compareAndSwap(D\\<bullet>F, e2, e3) :: T2\\<rbrakk>\n       \\<Longrightarrow> Boolean = T2\n 2. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 3. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 4. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 6. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 7. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 8. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 9. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 10. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\nA total of 11 subgoals...", "apply blast"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E e U C M Ts T m D es Ts' T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile>1 e\\<bullet>M(es) :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 3. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 5. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 7. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 8. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 9. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 10. \\<And>E e T es Ts Ts2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: T;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n         P,E \\<turnstile>1 es [::] Ts;\n         \\<And>Ts2.\n            P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n         P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n        \\<Longrightarrow> T # Ts = Ts2", "apply(erule WT1_WTs1_cases)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E e U C M Ts T m D es Ts' T2 Ua Ca Tsa ma Da Ts'a.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts' [\\<le>] Ts; P,E \\<turnstile>1 e :: Ua;\n        class_type_of' Ua = \\<lfloor>Ca\\<rfloor>;\n        P \\<turnstile> Ca sees M: Tsa\\<rightarrow>T2 = ma in Da;\n        P,E \\<turnstile>1 es [::] Ts'a;\n        P \\<turnstile> Ts'a [\\<le>] Tsa\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 3. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 5. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 7. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 8. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 9. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 10. \\<And>E e T es Ts Ts2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: T;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n         P,E \\<turnstile>1 es [::] Ts;\n         \\<And>Ts2.\n            P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n         P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n        \\<Longrightarrow> T # Ts = Ts2", "apply(simp)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E e U C M Ts T m D es Ts' T2 Ua Ca Tsa ma Da Ts'a.\n       \\<lbrakk>\\<And>T2.\n                   P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> U = T2;\n        Ca = C; P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        \\<And>Ts2.\n           P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts' = Ts2;\n        P \\<turnstile> Ts'a [\\<le>] Ts; P,E \\<turnstile>1 e :: Ua;\n        class_type_of' Ua = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Tsa\\<rightarrow>T2 = ma in Da;\n        P,E \\<turnstile>1 es [::] Ts'a;\n        P \\<turnstile> Ts'a [\\<le>] Tsa\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 3. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 5. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 7. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 8. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 9. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 10. \\<And>E e T es Ts Ts2.\n        \\<lbrakk>P,E \\<turnstile>1 e :: T;\n         \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n         P,E \\<turnstile>1 es [::] Ts;\n         \\<And>Ts2.\n            P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n         P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n        \\<Longrightarrow> T # Ts = Ts2", "apply (blast dest:sees_method_idemp sees_method_fun)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>T E e T' vo V T2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        \\<And>T2. P,E @ [T] \\<turnstile>1 e :: T2 \\<Longrightarrow> T' = T2;\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>1 {V:T=vo; e} :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 2. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 4. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 6. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 7. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 8. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 9. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>E o' T e T' V T2.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        \\<And>T2. P,E \\<turnstile>1 o' :: T2 \\<Longrightarrow> T = T2;\n        is_refT T; T \\<noteq> NT;\n        P,E @ [Class Object] \\<turnstile>1 e :: T';\n        \\<And>T2.\n           P,E @ [Class Object] \\<turnstile>1 e :: T2 \\<Longrightarrow>\n           T' = T2;\n        P,E \\<turnstile>1 sync\\<^bsub>V\\<^esub> (o') e :: T2\\<rbrakk>\n       \\<Longrightarrow> T' = T2\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 3. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 4. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 5. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 6. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 7. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 8. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P,E \\<turnstile>1 e\\<^sub>1;; e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T2\n 2. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 3. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 4. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 5. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 6. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 7. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow>\n           T\\<^sub>1 = T2;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T\\<^sub>2 = T2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        P,E \\<turnstile>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 3. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 4. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 5. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 6. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply(blast dest: is_lub_unique[OF wf])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>E e c T T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Boolean = T2;\n        P,E \\<turnstile>1 c :: T;\n        \\<And>T2. P,E \\<turnstile>1 c :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 while (e) c :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 2. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 3. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 4. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 5. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>E e C T2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> Class C = T2;\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        P,E \\<turnstile>1 throw e :: T2\\<rbrakk>\n       \\<Longrightarrow> Void = T2\n 2. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 3. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 4. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V T2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        \\<And>T2.\n           P,E \\<turnstile>1 e\\<^sub>1 :: T2 \\<Longrightarrow> T = T2;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        \\<And>T2.\n           P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T2 \\<Longrightarrow>\n           T = T2;\n        is_class P C;\n        P,E \\<turnstile>1 try e\\<^sub>1 catch(C V) e\\<^sub>2 :: T2\\<rbrakk>\n       \\<Longrightarrow> T = T2\n 2. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 3. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>E Ts2. P,E \\<turnstile>1 [] [::] Ts2 \\<Longrightarrow> [] = Ts2\n 2. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E e T es Ts Ts2.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<And>T2. P,E \\<turnstile>1 e :: T2 \\<Longrightarrow> T = T2;\n        P,E \\<turnstile>1 es [::] Ts;\n        \\<And>Ts2. P,E \\<turnstile>1 es [::] Ts2 \\<Longrightarrow> Ts = Ts2;\n        P,E \\<turnstile>1 e # es [::] Ts2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts2", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma assumes wf: \"wf_prog p P\"\n  shows WT1_is_type: \"P,E \\<turnstile>1 e :: T \\<Longrightarrow> set E \\<subseteq> types P \\<Longrightarrow> is_type P T\"\n  and WTs1_is_type: \"P,E \\<turnstile>1 es [::] Ts \\<Longrightarrow> set E \\<subseteq> types P \\<Longrightarrow> set Ts \\<subseteq> types P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P,E \\<turnstile>1 e :: T; set E \\<subseteq> types P\\<rbrakk>\n     \\<Longrightarrow> is_type P T) &&&\n    (\\<lbrakk>P,E \\<turnstile>1 es [::] Ts;\n      set E \\<subseteq> types P\\<rbrakk>\n     \\<Longrightarrow> set Ts \\<subseteq> types P)", "apply(induct rule:WT1_WTs1.inducts)"], ["proof (prove)\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P (Class C)\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        is_type P (T\\<lfloor>\\<rceil>); set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P (T\\<lfloor>\\<rceil>)\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P U\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T1;\n        P,E \\<turnstile>1 e2 :: T2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T2;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         set E \\<subseteq> types P \\<Longrightarrow>\n         is_type P (T\\<lfloor>\\<rceil>);\n         P,E \\<turnstile>1 i :: Integer;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n         P,E \\<turnstile>1 e :: T';\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n         P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Void\nA total of 24 subgoals...", "apply simp"], ["proof (prove)\ngoal (23 subgoals):\n 1. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        is_type P (T\\<lfloor>\\<rceil>); set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P (T\\<lfloor>\\<rceil>)\n 2. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P U\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 4. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T1;\n        P,E \\<turnstile>1 e2 :: T2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T2;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 10. \\<And>E a T.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         set E \\<subseteq> types P \\<Longrightarrow>\n         is_type P (T\\<lfloor>\\<rceil>);\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Integer\nA total of 23 subgoals...", "apply simp"], ["proof (prove)\ngoal (22 subgoals):\n 1. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P U\n 2. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 3. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T1;\n        P,E \\<turnstile>1 e2 :: T2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T2;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 10. \\<And>E e U C F T fm D.\n        \\<lbrakk>P,E \\<turnstile>1 e :: U;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees F:T (fm) in D;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\nA total of 22 subgoals...", "apply simp"], ["proof (prove)\ngoal (21 subgoals):\n 1. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 2. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T1;\n        P,E \\<turnstile>1 e2 :: T2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T2;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 9. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>E e1 U C F T fm D e2 T'.\n        \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n         P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Void\nA total of 21 subgoals...", "apply simp"], ["proof (prove)\ngoal (20 subgoals):\n 1. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T1;\n        P,E \\<turnstile>1 e2 :: T2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T2;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 8. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 10. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n        \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n         P,E \\<turnstile>1 e2 :: T';\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n         P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n         P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Boolean\nA total of 20 subgoals...", "apply (simp add:typeof_lit_is_type)"], ["proof (prove)\ngoal (19 subgoals):\n 1. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T1;\n        P,E \\<turnstile>1 e2 :: T2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T2;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 7. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 10. \\<And>E e U C M Ts T m D es Ts'.\n        \\<lbrakk>P,E \\<turnstile>1 e :: U;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n         class_type_of' U = \\<lfloor>C\\<rfloor>;\n         P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n         P,E \\<turnstile>1 es [::] Ts';\n         set E \\<subseteq> types P \\<Longrightarrow>\n         set Ts' \\<subseteq> types P;\n         P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\nA total of 19 subgoals...", "apply (fastforce intro:nth_mem)"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T1;\n        P,E \\<turnstile>1 e2 :: T2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T2;\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 6. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 9. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>T E e T' vo V.\n        \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n         set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n         case vo of None \\<Rightarrow> True\n         | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n             \\<exists>T'.\n                typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n                P \\<turnstile> T' \\<le> T;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T'\nA total of 18 subgoals...", "apply(simp add: WT_binop_is_type)"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 5. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 8. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 10. \\<And>E o' T e T' V.\n        \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n         T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n         set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n         is_type P T';\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T'\nA total of 17 subgoals...", "apply(simp)"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 4. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 7. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 9. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 10. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n         P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\\<^sub>2\nA total of 16 subgoals...", "apply(simp del: is_type_array add: is_type_ArrayD)"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>E a T i e T'.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        P,E \\<turnstile>1 i :: Integer;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Integer;\n        P,E \\<turnstile>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 3. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 6. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 8. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 9. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 10. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n         P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n         P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n         P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\nA total of 15 subgoals...", "apply(simp)"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>E a T.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        is_type P (T\\<lfloor>\\<rceil>);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Integer\n 2. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 5. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 7. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 8. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 9. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>E e c T.\n        \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n         P,E \\<turnstile>1 c :: T;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Void\nA total of 14 subgoals...", "apply(simp)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e U C F T fm D.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 4. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 6. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 7. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 8. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 10. \\<And>E e C.\n        \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n         P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Void\nA total of 13 subgoals...", "apply (simp add:sees_field_is_type[OF _ wf])"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>E e1 U C F T fm D e2 T'.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 3. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 5. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 6. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 7. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 10. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n        \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n         P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n         set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n         is_type P T;\n         is_class P C; set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\nA total of 12 subgoals...", "apply simp"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>E e1 U C F T fm D e2 T' e3 T''.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees F:T (fm) in D; volatile fm;\n        P,E \\<turnstile>1 e2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; P,E \\<turnstile>1 e3 :: T'';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T'';\n        P \\<turnstile> T'' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Boolean\n 2. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 4. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 6. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>E.\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set [] \\<subseteq> types P\nA total of 11 subgoals...", "apply simp"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E e U C M Ts T m D es Ts'.\n       \\<lbrakk>P,E \\<turnstile>1 e :: U;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P U;\n        class_type_of' U = \\<lfloor>C\\<rfloor>;\n        P \\<turnstile> C sees M: Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile>1 es [::] Ts';\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts' \\<subseteq> types P;\n        P \\<turnstile> Ts' [\\<le>] Ts; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 3. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 5. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 10. \\<And>E e T es Ts.\n        \\<lbrakk>P,E \\<turnstile>1 e :: T;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n         P,E \\<turnstile>1 es [::] Ts;\n         set E \\<subseteq> types P \\<Longrightarrow>\n         set Ts \\<subseteq> types P;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply(fastforce dest!: sees_wf_mdecl[OF wf] simp:wf_mdecl_def)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>T E e T' vo V.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        case vo of None \\<Rightarrow> True\n        | \\<lfloor>v\\<rfloor> \\<Rightarrow>\n            \\<exists>T'.\n               typeof v = \\<lfloor>T'\\<rfloor> \\<and>\n               P \\<turnstile> T' \\<le> T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 2. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 4. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 9. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply(simp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>E o' T e T' V.\n       \\<lbrakk>P,E \\<turnstile>1 o' :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T; is_refT T;\n        T \\<noteq> NT; P,E @ [Class Object] \\<turnstile>1 e :: T';\n        set (E @ [Class Object]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 3. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 8. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply(simp add: is_class_Object[OF wf])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 2. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 7. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> lub(T\\<^sub>1, T\\<^sub>2) = T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 6. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply(blast dest: is_lub_is_type[OF wf])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 5. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C \\<preceq>\\<^sup>* Throwable;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 4. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>E e\\<^sub>1 T C e\\<^sub>2 V.\n       \\<lbrakk>P,E \\<turnstile>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 3. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>E.\n       set E \\<subseteq> types P \\<Longrightarrow>\n       set [] \\<subseteq> types P\n 2. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>1 es [::] Ts;\n        set E \\<subseteq> types P \\<Longrightarrow>\n        set Ts \\<subseteq> types P;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> set (T # Ts) \\<subseteq> types P", "apply(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma blocks1_WT:\n  \"\\<lbrakk> P,Env @ Ts \\<turnstile>1 body :: T; set Ts \\<subseteq> types P \\<rbrakk> \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) Ts body :: T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,Env @ Ts \\<turnstile>1 body :: T;\n     set Ts \\<subseteq> types P\\<rbrakk>\n    \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) Ts body :: T", "proof(induct n\\<equiv>\"length Env\" Ts body arbitrary: Env rule: blocks1.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e Env.\n       \\<lbrakk>P,Env @ [] \\<turnstile>1 e :: T;\n        set [] \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) [] e :: T\n 2. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "case 1"], ["proof (state)\nthis:\n  P,Env @ [] \\<turnstile>1 e_ :: T\n  set [] \\<subseteq> types P\n\ngoal (2 subgoals):\n 1. \\<And>e Env.\n       \\<lbrakk>P,Env @ [] \\<turnstile>1 e :: T;\n        set [] \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) [] e :: T\n 2. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "thus ?case"], ["proof (prove)\nusing this:\n  P,Env @ [] \\<turnstile>1 e_ :: T\n  set [] \\<subseteq> types P\n\ngoal (1 subgoal):\n 1. P,Env \\<turnstile>1 blocks1 (length Env) [] e_ :: T", "by simp"], ["proof (state)\nthis:\n  P,Env \\<turnstile>1 blocks1 (length Env) [] e_ :: T\n\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "case (2 T' Ts e)"], ["proof (state)\nthis:\n  \\<lbrakk>Suc (length Env) = length ?Env; P,?Env @ Ts \\<turnstile>1 e :: T;\n   set Ts \\<subseteq> types P\\<rbrakk>\n  \\<Longrightarrow> P,?Env \\<turnstile>1 blocks1 (length ?Env) Ts e :: T\n  P,Env @ T' # Ts \\<turnstile>1 e :: T\n  set (T' # Ts) \\<subseteq> types P\n\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "note IH = \\<open>\\<And>Env'. \\<lbrakk>Suc (length Env) = length Env'; P,Env' @ Ts \\<turnstile>1 e :: T; set Ts \\<subseteq> types P \\<rbrakk>\n              \\<Longrightarrow> P,Env' \\<turnstile>1 blocks1 (length Env') Ts e :: T\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>Suc (length Env) = length ?Env';\n   P,?Env' @ Ts \\<turnstile>1 e :: T; set Ts \\<subseteq> types P\\<rbrakk>\n  \\<Longrightarrow> P,?Env' \\<turnstile>1 blocks1 (length ?Env') Ts e :: T\n\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "from \\<open>set (T' # Ts) \\<subseteq> types P\\<close>"], ["proof (chain)\npicking this:\n  set (T' # Ts) \\<subseteq> types P", "have \"set Ts \\<subseteq> types P\" \"is_type P T'\""], ["proof (prove)\nusing this:\n  set (T' # Ts) \\<subseteq> types P\n\ngoal (1 subgoal):\n 1. set Ts \\<subseteq> types P &&& is_type P T'", "by(auto)"], ["proof (state)\nthis:\n  set Ts \\<subseteq> types P\n  is_type P T'\n\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "moreover"], ["proof (state)\nthis:\n  set Ts \\<subseteq> types P\n  is_type P T'\n\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "from \\<open>P,Env @ T' # Ts \\<turnstile>1 e :: T\\<close>"], ["proof (chain)\npicking this:\n  P,Env @ T' # Ts \\<turnstile>1 e :: T", "have \"P,(Env @ [T']) @ Ts \\<turnstile>1 e :: T\""], ["proof (prove)\nusing this:\n  P,Env @ T' # Ts \\<turnstile>1 e :: T\n\ngoal (1 subgoal):\n 1. P,(Env @ [T']) @ Ts \\<turnstile>1 e :: T", "by simp"], ["proof (state)\nthis:\n  P,(Env @ [T']) @ Ts \\<turnstile>1 e :: T\n\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "note IH[OF _ this]"], ["proof (state)\nthis:\n  \\<lbrakk>Suc (length Env) = length (Env @ [T']);\n   set Ts \\<subseteq> types P\\<rbrakk>\n  \\<Longrightarrow> P,Env @\n                      [T'] \\<turnstile>1 blocks1 (length (Env @ [T'])) Ts\n    e :: T\n\ngoal (1 subgoal):\n 1. \\<And>Ta Ts e Env.\n       \\<lbrakk>\\<And>Enva.\n                   \\<lbrakk>Suc (length Env) = length Enva;\n                    P,Enva @ Ts \\<turnstile>1 e :: T;\n                    set Ts \\<subseteq> types P\\<rbrakk>\n                   \\<Longrightarrow> P,Enva \\<turnstile>1 blocks1\n                     (length Enva) Ts e :: T;\n        P,Env @ Ta # Ts \\<turnstile>1 e :: T;\n        set (Ta # Ts) \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> P,Env \\<turnstile>1 blocks1 (length Env) (Ta # Ts)\n        e :: T", "ultimately"], ["proof (chain)\npicking this:\n  set Ts \\<subseteq> types P\n  is_type P T'\n  \\<lbrakk>Suc (length Env) = length (Env @ [T']);\n   set Ts \\<subseteq> types P\\<rbrakk>\n  \\<Longrightarrow> P,Env @\n                      [T'] \\<turnstile>1 blocks1 (length (Env @ [T'])) Ts\n    e :: T", "show ?case"], ["proof (prove)\nusing this:\n  set Ts \\<subseteq> types P\n  is_type P T'\n  \\<lbrakk>Suc (length Env) = length (Env @ [T']);\n   set Ts \\<subseteq> types P\\<rbrakk>\n  \\<Longrightarrow> P,Env @\n                      [T'] \\<turnstile>1 blocks1 (length (Env @ [T'])) Ts\n    e :: T\n\ngoal (1 subgoal):\n 1. P,Env \\<turnstile>1 blocks1 (length Env) (T' # Ts) e :: T", "by auto"], ["proof (state)\nthis:\n  P,Env \\<turnstile>1 blocks1 (length Env) (T' # Ts) e :: T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WT1_fv: \"\\<lbrakk> P,E \\<turnstile>1 e :: T; \\<B> e (length E); syncvars e \\<rbrakk> \\<Longrightarrow> fv e \\<subseteq> {0..<length E}\"\n  and WTs1_fvs: \"\\<lbrakk> P,E \\<turnstile>1 es [::] Ts; \\<B>s es (length E); syncvarss es \\<rbrakk> \\<Longrightarrow> fvs es \\<subseteq> {0..<length E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P,E \\<turnstile>1 e :: T; \\<B> e (length E);\n      syncvars e\\<rbrakk>\n     \\<Longrightarrow> fv e \\<subseteq> {0..<length E}) &&&\n    (\\<lbrakk>P,E \\<turnstile>1 es [::] Ts; \\<B>s es (length E);\n      syncvarss es\\<rbrakk>\n     \\<Longrightarrow> fvs es \\<subseteq> {0..<length E})", "proof(induct rule: WT1_WTs1.inducts)"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 24 subgoals...", "case (WT1Synchronized E e1 T e2 T' V)"], ["proof (state)\nthis:\n  P,E \\<turnstile>1 e1 :: T\n  \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n  \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E}\n  is_refT T\n  T \\<noteq> NT\n  P,E @ [Class Object] \\<turnstile>1 e2 :: T'\n  \\<lbrakk>\\<B> e2 (length (E @ [Class Object])); syncvars e2\\<rbrakk>\n  \\<Longrightarrow> fv e2 \\<subseteq> {0..<length (E @ [Class Object])}\n  \\<B> (sync\\<^bsub>V\\<^esub> (e1) e2) (length E)\n  syncvars (sync\\<^bsub>V\\<^esub> (e1) e2)\n\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 24 subgoals...", "note IH1 = \\<open>\\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk> \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E}\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n  \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E}\n\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 24 subgoals...", "note IH2 = \\<open>\\<lbrakk>\\<B> e2 (length (E @ [Class Object])); syncvars e2\\<rbrakk> \\<Longrightarrow> fv e2 \\<subseteq> {0..<length (E @ [Class Object])}\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>\\<B> e2 (length (E @ [Class Object])); syncvars e2\\<rbrakk>\n  \\<Longrightarrow> fv e2 \\<subseteq> {0..<length (E @ [Class Object])}\n\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 24 subgoals...", "from \\<open>\\<B> (sync\\<^bsub>V\\<^esub> (e1) e2) (length E)\\<close>"], ["proof (chain)\npicking this:\n  \\<B> (sync\\<^bsub>V\\<^esub> (e1) e2) (length E)", "have [simp]: \"V = length E\"\n    and B1: \"\\<B> e1 (length E)\" and B2: \"\\<B> e2 (Suc (length E))\""], ["proof (prove)\nusing this:\n  \\<B> (sync\\<^bsub>V\\<^esub> (e1) e2) (length E)\n\ngoal (1 subgoal):\n 1. V = length E &&& \\<B> e1 (length E) &&& \\<B> e2 (Suc (length E))", "by auto"], ["proof (state)\nthis:\n  V = length E\n  \\<B> e1 (length E)\n  \\<B> e2 (Suc (length E))\n\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 24 subgoals...", "from \\<open>syncvars (sync\\<^bsub>V\\<^esub> (e1) e2)\\<close>"], ["proof (chain)\npicking this:\n  syncvars (sync\\<^bsub>V\\<^esub> (e1) e2)", "have sync1: \"syncvars e1\" and sync2: \"syncvars e2\" and V: \"V \\<notin> fv e2\""], ["proof (prove)\nusing this:\n  syncvars (sync\\<^bsub>V\\<^esub> (e1) e2)\n\ngoal (1 subgoal):\n 1. syncvars e1 &&& syncvars e2 &&& V \\<notin> fv e2", "by auto"], ["proof (state)\nthis:\n  syncvars e1\n  syncvars e2\n  V \\<notin> fv e2\n\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 24 subgoals...", "have \"fv e2 \\<subseteq> {0..<length E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv e2 \\<subseteq> {0..<length E}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fv e2 \\<Longrightarrow> x \\<in> {0..<length E}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fv e2 \\<Longrightarrow> x \\<in> {0..<length E}", "assume x: \"x \\<in> fv e2\""], ["proof (state)\nthis:\n  x \\<in> fv e2\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fv e2 \\<Longrightarrow> x \\<in> {0..<length E}", "with V"], ["proof (chain)\npicking this:\n  V \\<notin> fv e2\n  x \\<in> fv e2", "have \"x \\<noteq> length E\""], ["proof (prove)\nusing this:\n  V \\<notin> fv e2\n  x \\<in> fv e2\n\ngoal (1 subgoal):\n 1. x \\<noteq> length E", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> length E\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fv e2 \\<Longrightarrow> x \\<in> {0..<length E}", "moreover"], ["proof (state)\nthis:\n  x \\<noteq> length E\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fv e2 \\<Longrightarrow> x \\<in> {0..<length E}", "from IH2 B2 sync2"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<B> e2 (length (E @ [Class Object])); syncvars e2\\<rbrakk>\n  \\<Longrightarrow> fv e2 \\<subseteq> {0..<length (E @ [Class Object])}\n  \\<B> e2 (Suc (length E))\n  syncvars e2", "have \"fv e2 \\<subseteq> {0..<Suc (length E)}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<B> e2 (length (E @ [Class Object])); syncvars e2\\<rbrakk>\n  \\<Longrightarrow> fv e2 \\<subseteq> {0..<length (E @ [Class Object])}\n  \\<B> e2 (Suc (length E))\n  syncvars e2\n\ngoal (1 subgoal):\n 1. fv e2 \\<subseteq> {0..<Suc (length E)}", "by auto"], ["proof (state)\nthis:\n  fv e2 \\<subseteq> {0..<Suc (length E)}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fv e2 \\<Longrightarrow> x \\<in> {0..<length E}", "with x"], ["proof (chain)\npicking this:\n  x \\<in> fv e2\n  fv e2 \\<subseteq> {0..<Suc (length E)}", "have \"x < Suc (length E)\""], ["proof (prove)\nusing this:\n  x \\<in> fv e2\n  fv e2 \\<subseteq> {0..<Suc (length E)}\n\ngoal (1 subgoal):\n 1. x < Suc (length E)", "by auto"], ["proof (state)\nthis:\n  x < Suc (length E)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fv e2 \\<Longrightarrow> x \\<in> {0..<length E}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<noteq> length E\n  x < Suc (length E)", "show \"x \\<in> {0..<length E}\""], ["proof (prove)\nusing this:\n  x \\<noteq> length E\n  x < Suc (length E)\n\ngoal (1 subgoal):\n 1. x \\<in> {0..<length E}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {0..<length E}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fv e2 \\<subseteq> {0..<length E}\n\ngoal (24 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 24 subgoals...", "with IH1[OF B1 sync1]"], ["proof (chain)\npicking this:\n  fv e1 \\<subseteq> {0..<length E}\n  fv e2 \\<subseteq> {0..<length E}", "show ?case"], ["proof (prove)\nusing this:\n  fv e1 \\<subseteq> {0..<length E}\n  fv e2 \\<subseteq> {0..<length E}\n\ngoal (1 subgoal):\n 1. fv (sync\\<^bsub>V\\<^esub> (e1) e2) \\<subseteq> {0..<length E}", "by(auto)"], ["proof (state)\nthis:\n  fv (sync\\<^bsub>V\\<^esub> (e1) e2) \\<subseteq> {0..<length E}\n\ngoal (23 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 23 subgoals...", "next"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 23 subgoals...", "case (WT1Cond E e e1 T1 e2 T2 T)"], ["proof (state)\nthis:\n  P,E \\<turnstile>1 e :: Boolean\n  \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n  \\<Longrightarrow> fv e \\<subseteq> {0..<length E}\n  P,E \\<turnstile>1 e1 :: T1\n  \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n  \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E}\n  P,E \\<turnstile>1 e2 :: T2\n  \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n  \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E}\n  P \\<turnstile> lub(T1, T2) = T\n  \\<B> (if (e) e1 else e2) (length E)\n  syncvars (if (e) e1 else e2)\n\ngoal (23 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 23 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile>1 e :: Boolean\n  \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n  \\<Longrightarrow> fv e \\<subseteq> {0..<length E}\n  P,E \\<turnstile>1 e1 :: T1\n  \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n  \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E}\n  P,E \\<turnstile>1 e2 :: T2\n  \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n  \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E}\n  P \\<turnstile> lub(T1, T2) = T\n  \\<B> (if (e) e1 else e2) (length E)\n  syncvars (if (e) e1 else e2)\n\ngoal (1 subgoal):\n 1. fv (if (e) e1 else e2) \\<subseteq> {0..<length E}", "by(auto del: subsetI)"], ["proof (state)\nthis:\n  fv (if (e) e1 else e2) \\<subseteq> {0..<length E}\n\ngoal (22 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; \\<B> (new C) (length E);\n        syncvars (new C)\\<rbrakk>\n       \\<Longrightarrow> fv (new C) \\<subseteq> {0..<length E}\n 2. \\<And>E e T.\n       \\<lbrakk>P,E \\<turnstile>1 e :: Integer;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        is_type P (T\\<lfloor>\\<rceil>);\n        \\<B> (newA T\\<lfloor>e\\<rceil>) (length E);\n        syncvars (newA T\\<lfloor>e\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (newA T\\<lfloor>e\\<rceil>)\n                         \\<subseteq> {0..<length E}\n 3. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; \\<B> (Cast U e) (length E);\n        syncvars (Cast U e)\\<rbrakk>\n       \\<Longrightarrow> fv (Cast U e) \\<subseteq> {0..<length E}\n 4. \\<And>E e T U.\n       \\<lbrakk>P,E \\<turnstile>1 e :: T;\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> U \\<le> T \\<or> P \\<turnstile> T \\<le> U;\n        is_type P U; is_refT U; \\<B> (e instanceof U) (length E);\n        syncvars (e instanceof U)\\<rbrakk>\n       \\<Longrightarrow> fv (e instanceof U) \\<subseteq> {0..<length E}\n 5. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>; \\<B> (Val v) (length E);\n        syncvars (Val v)\\<rbrakk>\n       \\<Longrightarrow> fv (Val v) \\<subseteq> {0..<length E}\n 6. \\<And>E V T.\n       \\<lbrakk>E ! V = T; V < length E; \\<B> (Var V) (length E);\n        syncvars (Var V)\\<rbrakk>\n       \\<Longrightarrow> fv (Var V) \\<subseteq> {0..<length E}\n 7. \\<And>E e1 T1 e2 T2 bop T.\n       \\<lbrakk>P,E \\<turnstile>1 e1 :: T1;\n        \\<lbrakk>\\<B> e1 (length E); syncvars e1\\<rbrakk>\n        \\<Longrightarrow> fv e1 \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 e2 :: T2;\n        \\<lbrakk>\\<B> e2 (length E); syncvars e2\\<rbrakk>\n        \\<Longrightarrow> fv e2 \\<subseteq> {0..<length E};\n        P \\<turnstile> T1\\<guillemotleft>bop\\<guillemotright>T2 :: T;\n        \\<B> (e1 \\<guillemotleft>bop\\<guillemotright> e2) (length E);\n        syncvars (e1 \\<guillemotleft>bop\\<guillemotright> e2)\\<rbrakk>\n       \\<Longrightarrow> fv (e1 \\<guillemotleft>bop\\<guillemotright> e2)\n                         \\<subseteq> {0..<length E}\n 8. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>1 e :: T';\n        \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n        \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n        P \\<turnstile> T' \\<le> T; \\<B> (i:=e) (length E);\n        syncvars (i:=e)\\<rbrakk>\n       \\<Longrightarrow> fv (i:=e) \\<subseteq> {0..<length E}\n 9. \\<And>E a T i.\n       \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n        \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n        \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n        P,E \\<turnstile>1 i :: Integer;\n        \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n        \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n        \\<B> (a\\<lfloor>i\\<rceil>) (length E);\n        syncvars (a\\<lfloor>i\\<rceil>)\\<rbrakk>\n       \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil>) \\<subseteq> {0..<length E}\n 10. \\<And>E a T i e T'.\n        \\<lbrakk>P,E \\<turnstile>1 a :: T\\<lfloor>\\<rceil>;\n         \\<lbrakk>\\<B> a (length E); syncvars a\\<rbrakk>\n         \\<Longrightarrow> fv a \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 i :: Integer;\n         \\<lbrakk>\\<B> i (length E); syncvars i\\<rbrakk>\n         \\<Longrightarrow> fv i \\<subseteq> {0..<length E};\n         P,E \\<turnstile>1 e :: T';\n         \\<lbrakk>\\<B> e (length E); syncvars e\\<rbrakk>\n         \\<Longrightarrow> fv e \\<subseteq> {0..<length E};\n         P \\<turnstile> T' \\<le> T;\n         \\<B> (a\\<lfloor>i\\<rceil> := e) (length E);\n         syncvars (a\\<lfloor>i\\<rceil> := e)\\<rbrakk>\n        \\<Longrightarrow> fv (a\\<lfloor>i\\<rceil> := e)\n                          \\<subseteq> {0..<length E}\nA total of 22 subgoals...", "qed fastforce+"], ["", "end"]]}