{"file_name": "/home/qj213/afp-2021-10-22/thys/Stable_Matching/COP.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stable_Matching", "problem_names": ["lemma bilateral_substitutes_on_def2:\n  \"bilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. Xd a \\<notin> Xd ` B \\<and> Xd b \\<notin> Xd ` B \\<and> b \\<notin> f (B \\<union> {b}) \\<longrightarrow> b \\<notin> f (B \\<union> {a, b}))\"\n(*<*)\n(is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemmas bilateral_substitutes_onI = iffD2[OF bilateral_substitutes_on_def2, rule_format]", "lemmas bilateral_substitutes_onD = iffD1[OF bilateral_substitutes_on_def2, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemmas bilateral_substitutes_def = bilateral_substitutes_on_def2[where A=UNIV, simplified]", "lemmas bilateral_substitutesI = iffD2[OF bilateral_substitutes_def, rule_format]", "lemmas bilateral_substitutesD = iffD1[OF bilateral_substitutes_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemma substitutes_on_bilateral_substitutes_on:\n  assumes \"substitutes_on A f\"\n  shows \"bilateral_substitutes_on A f\"", "lemma bilateral_substitutes_on_def3:\n  \"bilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. b \\<notin> f (B \\<union> {b}) \\<and> b \\<in> f (B \\<union> {a, b}) \\<longrightarrow> Xd a \\<in> Xd ` B \\<or> Xd b \\<in> Xd ` B)\"", "lemma bilateral_substitutes_lemma:\n  assumes \"Xd x \\<notin> Xd ` Ch h X\"\n  assumes \"d \\<notin> Xd ` Ch h X\"\n  assumes \"d \\<noteq> Xd x\"\n  shows \"d \\<notin> Xd ` Ch h (insert x X)\"", "lemma bilateral_substitutes_lemma_union:\n  assumes \"Xd ` Ch h X \\<inter> Xd ` Y = {}\"\n  assumes \"d \\<notin> Xd ` Ch h X\"\n  assumes \"d \\<notin> Xd ` Y\"\n  assumes \"allocation Y\"\n  shows \"d \\<notin> Xd ` Ch h (X \\<union> Y)\"", "lemma cop_F_CH_CD_on_disjoint:\n  assumes \"cop_F_closed_inv ds fp\"\n  assumes \"cop_F_range_inv ds fp\"\n  shows \"Xd ` CH fp \\<inter> Xd ` (CD_on ds (- RH fp) - fp) = {}\"", "lemma cop_F_RH_mono:\n  assumes \"cop_F_closed_inv ds fp\"\n  assumes \"cop_F_range_inv ds fp\"\n  assumes \"Xd x \\<notin> Xd ` Ch (Xh x) fp\"\n  assumes \"x \\<in> RH fp\"\n  shows \"x \\<in> RH (cop_F ds fp)\"", "lemma cop_F_allocation_inv:\n  \"valid ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp) (\\<lambda>ds fp. allocation (CH fp))\"", "lemma fp_cop_F_allocation:\n  shows \"allocation (cop ds)\"", "theorem Theorem_1:\n  shows \"stable_on ds (cop ds)\"", "lemma X5_UNIV:\n  shows \"UNIV = set [Xd1, Xd1', Xd2, Xd2', Xd2'']\"", "lemmas X5_pow = subset_subseqs[OF subset_trans[OF subset_UNIV Set.equalityD1[OF X5_UNIV]]]", "lemma X5_ALL:\n  shows \"(\\<forall>X''. P X'') \\<longleftrightarrow> (\\<forall>X''\\<in>set ` set (subseqs [Xd1, Xd1', Xd2, Xd2', Xd2'']). P X'')\"", "lemma PX5d_linear:\n  shows \"Linear_order (PX5d d)\"", "lemma PX5d_range:\n  shows \"Field (PX5d d) \\<subseteq> {x. X5d x = d}\"", "lemma CX5h_range:\n  shows \"CX5h h X \\<subseteq> {x \\<in> X. X5h x = h}\"", "lemma CX5h_singular:\n  shows \"inj_on X5d (CX5h h X)\"", "lemma CX5h_bilateral_substitutes:\n  shows \"BSI.bilateral_substitutes (CX5h h)\"", "lemma CX5h_irc:\n  shows \"irc (CX5h h)\"", "lemma Xd1_Xd2'_stable:\n  shows \"BSI.stable {Xd1, Xd2'}\"", "lemma Xd1'_Xd2_stable:\n  shows \"BSI.stable {Xd1', Xd2}\"", "lemma BSI_stable:\n  shows \"BSI.stable X \\<longleftrightarrow> X = {Xd1, Xd2'} \\<or> X = {Xd1', Xd2}\"\n(*<*)\n(is \"?lhs = ?rhs\")", "lemma\n  \"\\<not>(\\<exists> (Y::X5 set). BSI.doctor_optimal_match UNIV Y)\"", "lemma unilateral_substitutes_on_def2:\n  \"unilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. Xd b \\<notin> Xd ` B \\<and> b \\<notin> f (B \\<union> {b}) \\<longrightarrow> b \\<notin> f (B \\<union> {a, b}))\"\n(*<*)\n(is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemmas %invisible unilateral_substitutes_onI = iffD2[OF unilateral_substitutes_on_def2, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemmas %invisible unilateral_substitutes_onD = iffD1[OF unilateral_substitutes_on_def2, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemmas %invisible unilateral_substitutes_def = unilateral_substitutes_on_def2[where A=UNIV, simplified]", "lemmas %invisible unilateral_substitutesI = iffD2[OF unilateral_substitutes_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemmas %invisible unilateral_substitutesD = iffD1[OF unilateral_substitutes_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemma unilateral_substitutes_on_def3:\n  \"unilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. b \\<notin> f (B \\<union> {b}) \\<and> b \\<in> f (B \\<union> {a, b}) \\<longrightarrow> Xd b \\<in> Xd ` B)\"", "lemmas %invisible unilateral_substitutes_def3 = unilateral_substitutes_on_def3[where A=UNIV, simplified]", "lemmas %invisible unilateral_substitutesD3 = iffD1[OF unilateral_substitutes_def3, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemma substitutes_on_unilateral_substitutes_on:\n  assumes \"substitutes_on A f\"\n  shows \"unilateral_substitutes_on A f\"", "lemma unilateral_substitutes_on_bilateral_substitutes_on:\n  assumes \"unilateral_substitutes_on A f\"\n  shows \"bilateral_substitutes_on A f\"", "lemmas %invisible pareto_separable_def = pareto_separable_on_def[where A=UNIV, simplified]", "lemmas %invisible pareto_separable_onI = iffD2[OF pareto_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemmas %invisible pareto_separable_onD = iffD1[OF pareto_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemma substitutes_on_pareto_separable_on:\n  assumes \"\\<forall>h. substitutes_on A (Ch h)\"\n  shows \"pareto_separable_on A\"", "lemma unilateral_substitutes_on_pareto_separable_on_substitutes_on:\n  assumes \"\\<forall>h. unilateral_substitutes_on A (Ch h)\"\n  assumes \"\\<forall>h. irc_on A (Ch h)\"\n  assumes \"pareto_separable_on A\"\n  shows \"substitutes_on A (Ch h)\"", "theorem Theorem_3:\n  assumes \"\\<forall>h. irc_on A (Ch h)\"\n  shows \"(\\<forall>h. substitutes_on A (Ch h)) \\<longleftrightarrow> (\\<forall>h. unilateral_substitutes_on A (Ch h) \\<and> pareto_separable_on A)\"", "lemmas doctor_separable_def = doctor_separable_on_def[where A=UNIV, simplified]", "lemmas doctor_separable_onI = iffD2[OF doctor_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemmas doctor_separable_onD = iffD1[OF doctor_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp, rotated -1]", "lemma unilateral_substitutes_on_doctor_separable_on:\n  assumes \"unilateral_substitutes_on A f\"\n  assumes \"irc_on A f\"\n  assumes \"\\<forall>B\\<subseteq>A. allocation (f B)\"\n  assumes \"f_range_on A f\"\n  shows \"doctor_separable_on A f\"", "lemma bilateral_substitutes_on_doctor_separable_on_unilateral_substitutes_on:\n  assumes \"bilateral_substitutes_on A f\"\n  assumes \"doctor_separable_on A f\"\n  assumes \"f_range_on A f\"\n  shows \"unilateral_substitutes_on A f\"", "theorem unilateral_substitutes_on_doctor_separable_on_bilateral_substitutes_on:\n  assumes \"irc_on A f\"\n  assumes \"\\<forall>B\\<subseteq>A. allocation (f B)\" \\<comment> \\<open>A rephrasing of @{thm [source] \"Ch_singular\"}.\\<close>\n  assumes \"f_range_on A f\"\n  shows \"unilateral_substitutes_on A f \\<longleftrightarrow> bilateral_substitutes_on A f \\<and> doctor_separable_on A f\"", "lemma\n  assumes \"Xd x \\<notin> Xd ` Ch h X\"\n  assumes \"x \\<in> X\"\n  shows no_renegotiation_union: \"x \\<notin> Ch h (X \\<union> Y)\"\n    and \"x \\<notin> Ch h (insert x ((X \\<union> Y) - {z. Xd z = Xd x}))\"", "lemmas cop_F_rejected_invI = iffD2[OF cop_F_rejected_inv_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]", "lemma cop_F_rejected_inv:\n  shows \"valid ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp \\<and> allocation (CH fp)) cop_F_rejected_inv\"", "lemma fp_cop_F_rejected_inv:\n  shows \"cop_F_rejected_inv ds (fp_cop_F ds)\"", "theorem Theorem_4:\n  assumes \"cop_F_rejected_inv ds fp\"\n  assumes \"x \\<in> RH fp\"\n  shows \"x \\<in> RH (cop_F ds fp)\"", "lemma theorem_5_invI:\n  assumes \"\\<And>z X. \\<lbrakk>z \\<in> RH fp; z \\<in> X; stable_on ds X\\<rbrakk> \\<Longrightarrow> False\"\n  shows \"theorem_5_inv ds fp\"", "lemma theorem_5_inv:\n  shows \"valid ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp\n                     \\<and> allocation (CH fp) \\<and> cop_F_rejected_inv ds fp) theorem_5_inv\"", "lemma fp_cop_F_theorem_5_inv:\n  shows \"theorem_5_inv ds (fp_cop_F ds)\"", "theorem Theorem_5:\n  assumes \"stable_on ds X\"\n  assumes \"x \\<in> X\"\n  shows \"\\<exists>y \\<in> cop ds. (x, y) \\<in> Pd (Xd x)\"", "theorem fp_cop_F_doctor_optimal_match:\n  shows \"doctor_optimal_match ds (cop ds)\"", "lemmas %invisible dprefI = iffD2[OF dpref_def, rule_format]", "theorem Lemma_1:\n  assumes \"stable_on ds Y\"\n  assumes \"stable_on ds Z\"\n  assumes \"dpref Z Y\"\n  assumes \"x \\<in> Ch h Z\"\n  shows \"x \\<in> Ch h (Y \\<union> Z)\"", "theorem Corollary_1:\n  assumes \"stable_on ds Z\"\n  shows \"dpref Z (cop ds)\"\n    and \"x \\<in> Z \\<Longrightarrow> x \\<in> Ch (Xh x) (cop ds \\<union> Z)\"", "lemma RHT_Cd_card:\n  assumes \"d \\<in> ds\"\n  shows \"card (Cd d X) \\<le> card (Cd d (cop ds))\"", "lemma RHT_Ch_card:\n  shows \"card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)\"", "lemma Theorem_6_fp_cop_F:\n  shows \"d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\"\n    and \"card (Ch h X) = card (Ch h (fp_cop_F ds))\"", "theorem Theorem_6:\n  assumes \"stable_on ds X\"\n  assumes \"stable_on ds Y\"\n  shows \"d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d Y)\"\n    and \"card (Ch h X) = card (Ch h Y)\""], "translations": [["", "lemma bilateral_substitutes_on_def2:\n  \"bilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. Xd a \\<notin> Xd ` B \\<and> Xd b \\<notin> Xd ` B \\<and> b \\<notin> f (B \\<union> {b}) \\<longrightarrow> b \\<notin> f (B \\<union> {a, b}))\"\n(*<*)\n(is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bilateral_substitutes_on A f =\n    (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              Xd a \\<notin> Xd ` B \\<and>\n              Xd b \\<notin> Xd ` B \\<and>\n              b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n              b \\<notin> f (B \\<union> {a, b}))", "proof %invisible (rule iffI, clarsimp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>B a b.\n       \\<lbrakk>bilateral_substitutes_on A f; B \\<subseteq> A; a \\<in> A;\n        b \\<in> A; Xd a \\<notin> Xd ` B; Xd b \\<notin> Xd ` B;\n        b \\<notin> f (insert b B);\n        b \\<in> f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd a \\<notin> Xd ` B \\<and>\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    bilateral_substitutes_on A f", "fix B a b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>B a b.\n       \\<lbrakk>bilateral_substitutes_on A f; B \\<subseteq> A; a \\<in> A;\n        b \\<in> A; Xd a \\<notin> Xd ` B; Xd b \\<notin> Xd ` B;\n        b \\<notin> f (insert b B);\n        b \\<in> f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd a \\<notin> Xd ` B \\<and>\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    bilateral_substitutes_on A f", "assume lhs: ?lhs and XXX: \"B \\<subseteq> A\" \"a \\<in> A\" \"b \\<in> A\" \"Xd a \\<notin> Xd ` B\" \"Xd b \\<notin> Xd ` B\" \"b \\<notin> f (insert b B)\" \"b \\<in> f (insert a (insert b B))\""], ["proof (state)\nthis:\n  bilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` B\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n\ngoal (2 subgoals):\n 1. \\<And>B a b.\n       \\<lbrakk>bilateral_substitutes_on A f; B \\<subseteq> A; a \\<in> A;\n        b \\<in> A; Xd a \\<notin> Xd ` B; Xd b \\<notin> Xd ` B;\n        b \\<notin> f (insert b B);\n        b \\<in> f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd a \\<notin> Xd ` B \\<and>\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    bilateral_substitutes_on A f", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof(cases \"a \\<in> B\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> B \\<Longrightarrow> False\n 2. a \\<notin> B \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  a \\<in> B\n\ngoal (2 subgoals):\n 1. a \\<in> B \\<Longrightarrow> False\n 2. a \\<notin> B \\<Longrightarrow> False", "with XXX"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` B\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<in> B", "show ?thesis"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` B\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<in> B\n\ngoal (1 subgoal):\n 1. False", "by (simp add: insert_absorb)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. a \\<notin> B \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> B \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  a \\<notin> B\n\ngoal (1 subgoal):\n 1. a \\<notin> B \\<Longrightarrow> False", "with lhs XXX"], ["proof (chain)\npicking this:\n  bilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` B\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<notin> B", "show ?thesis"], ["proof (prove)\nusing this:\n  bilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` B\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<notin> B\n\ngoal (1 subgoal):\n 1. False", "unfolding bilateral_substitutes_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>B\\<subseteq>A.\n             \\<exists>a b.\n                {a, b} \\<subseteq> A \\<and>\n                Xd a \\<notin> Xd ` B \\<and>\n                Xd b \\<notin> Xd ` B \\<and>\n                b \\<notin> f (B \\<union> {b}) \\<and>\n                b \\<in> f (B \\<union> {a, b}))\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` B\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<notin> B\n\ngoal (1 subgoal):\n 1. False", "by (cases \"b \\<in> B\") (auto simp: insert_commute insert_absorb)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd a \\<notin> Xd ` B \\<and>\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    bilateral_substitutes_on A f", "qed (fastforce simp: bilateral_substitutes_on_def)"], ["", "lemmas bilateral_substitutes_onI = iffD2[OF bilateral_substitutes_on_def2, rule_format]"], ["", "lemmas bilateral_substitutes_onD = iffD1[OF bilateral_substitutes_on_def2, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "lemmas bilateral_substitutes_def = bilateral_substitutes_on_def2[where A=UNIV, simplified]"], ["", "lemmas bilateral_substitutesI = iffD2[OF bilateral_substitutes_def, rule_format]"], ["", "lemmas bilateral_substitutesD = iffD1[OF bilateral_substitutes_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "(*>*)"], ["", "text\\<open>\\<close>"], ["", "lemma substitutes_on_bilateral_substitutes_on:\n  assumes \"substitutes_on A f\"\n  shows \"bilateral_substitutes_on A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bilateral_substitutes_on A f", "using %invisible assms"], ["proof (prove)\nusing this:\n  substitutes_on A f\n\ngoal (1 subgoal):\n 1. bilateral_substitutes_on A f", "by (auto intro!: bilateral_substitutes_onI dest: substitutes_onD[rotated -1])"], ["", "text\\<open>\n\n\\citet[\\S4, Definition~5]{AygunSonmez:2012-WP} give the following\nequivalent definition:\n\n\\<close>"], ["", "lemma bilateral_substitutes_on_def3:\n  \"bilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. b \\<notin> f (B \\<union> {b}) \\<and> b \\<in> f (B \\<union> {a, b}) \\<longrightarrow> Xd a \\<in> Xd ` B \\<or> Xd b \\<in> Xd ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bilateral_substitutes_on A f =\n    (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              b \\<notin> f (B \\<union> {b}) \\<and>\n              b \\<in> f (B \\<union> {a, b}) \\<longrightarrow>\n              Xd a \\<in> Xd ` B \\<or> Xd b \\<in> Xd ` B)", "unfolding %invisible bilateral_substitutes_on_def2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              Xd a \\<notin> Xd ` B \\<and>\n              Xd b \\<notin> Xd ` B \\<and>\n              b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n              b \\<notin> f (B \\<union> {a, b})) =\n    (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              b \\<notin> f (B \\<union> {b}) \\<and>\n              b \\<in> f (B \\<union> {a, b}) \\<longrightarrow>\n              Xd a \\<in> Xd ` B \\<or> Xd b \\<in> Xd ` B)", "by blast"], ["", "end"], ["", "text\\<open>\n\nAs before, we define a series of locales that capture the relevant\nhypotheses about hospital choice functions.\n\n\\<close>"], ["", "locale ContractsWithBilateralSubstitutes = Contracts +\n  assumes Ch_bilateral_substitutes: \"\\<forall>h. bilateral_substitutes (Ch h)\""], ["", "sublocale ContractsWithSubstitutes < ContractsWithBilateralSubstitutes"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutes Xd Xh Pd Ch", "using %invisible Ch_substitutes"], ["proof (prove)\nusing this:\n  \\<forall>h. substitutes (Ch h)\n\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutes Xd Xh Pd Ch", "by unfold_locales (blast intro: substitutes_on_bilateral_substitutes_on)"], ["", "locale ContractsWithBilateralSubstitutesAndIRC =\n  ContractsWithBilateralSubstitutes + ContractsWithIRC"], ["", "sublocale ContractsWithSubstitutesAndIRC < ContractsWithBilateralSubstitutesAndIRC"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutesAndIRC Xd Xh Pd Ch", "by %invisible unfold_locales"], ["", "context ContractsWithBilateralSubstitutesAndIRC\nbegin"], ["", "text\\<open>\n\nThe key difficulty in showing the stability of the result of the COP\nunder this condition \\citep[Theorem~1]{HatfieldKojima:2010} is in\nproving that it ensures we get an @{const \"allocation\"}; the remainder\nof the proof of \\S\\ref{sec:contracts-cop} (for a single hospital,\nwhere this property is trivial) goes through unchanged. We avail\nourselves of \\citet[Lemma]{HirataKasuya:2014}, which they say is a\nrestatement of the proof of\n\\citet[Theorem~1]{HatfieldKojima:2010}. See also\n\\citet[Appendix~A]{AygunSonmez:2012-WP}.\n\n\\<close>"], ["", "lemma bilateral_substitutes_lemma:\n  assumes \"Xd x \\<notin> Xd ` Ch h X\"\n  assumes \"d \\<notin> Xd ` Ch h X\"\n  assumes \"d \\<noteq> Xd x\"\n  shows \"d \\<notin> Xd ` Ch h (insert x X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<notin> Xd ` Ch h (insert x X)", "proof(rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "assume \"d \\<in> Xd ` Ch h (insert x X)\""], ["proof (state)\nthis:\n  d \\<in> Xd ` Ch h (insert x X)\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  d \\<in> Xd ` Ch h (insert x X)", "obtain x' where x': \"x' \\<in> Ch h (insert x X)\" \"Xd x' = d\""], ["proof (prove)\nusing this:\n  d \\<in> Xd ` Ch h (insert x X)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> Ch h (insert x X); Xd x' = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "with Ch_irc \\<open>d \\<notin> Xd ` Ch h X\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>h. irc (Ch h)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d", "have \"x \\<in> Ch h (insert x X)\""], ["proof (prove)\nusing this:\n  \\<forall>h. irc (Ch h)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n\ngoal (1 subgoal):\n 1. x \\<in> Ch h (insert x X)", "unfolding irc_def"], ["proof (prove)\nusing this:\n  \\<forall>h B a.\n     a \\<notin> Ch h (insert a B) \\<longrightarrow>\n     Ch h (insert a B) = Ch h B\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n\ngoal (1 subgoal):\n 1. x \\<in> Ch h (insert x X)", "by blast"], ["proof (state)\nthis:\n  x \\<in> Ch h (insert x X)\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "let ?X' = \"{y \\<in> X. Xd y \\<notin> {Xd x, d}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "from Ch_range \\<open>Xd x \\<notin> Xd ` Ch h X\\<close> \\<open>d \\<notin> Xd ` Ch h X\\<close> \\<open>d \\<noteq> Xd x\\<close> x'"], ["proof (chain)\npicking this:\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n  Xd x \\<notin> Xd ` Ch h X\n  d \\<notin> Xd ` Ch h X\n  d \\<noteq> Xd x\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d", "have \"Ch h (insert x' ?X') = Ch h X\""], ["proof (prove)\nusing this:\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n  Xd x \\<notin> Xd ` Ch h X\n  d \\<notin> Xd ` Ch h X\n  d \\<noteq> Xd x\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n\ngoal (1 subgoal):\n 1. Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X", "using consistencyD[OF Ch_consistency[where h=h], where B=\"X\" and C=\"insert x' ?X'\"]"], ["proof (prove)\nusing this:\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n  Xd x \\<notin> Xd ` Ch h X\n  d \\<notin> Xd ` Ch h X\n  d \\<noteq> Xd x\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n  \\<lbrakk>insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}} \\<subseteq> X;\n   Ch h X\n   \\<subseteq> insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}\\<rbrakk>\n  \\<Longrightarrow> Ch h X =\n                    Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})\n\ngoal (1 subgoal):\n 1. Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X", "by (fastforce iff: image_iff)"], ["proof (state)\nthis:\n  Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "(* slow *)"], ["proof (state)\nthis:\n  Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "from Ch_range Ch_singular \\<open>d \\<notin> Xd ` Ch h X\\<close> x' \\<open>x \\<in> Ch h (insert x X)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n  \\<forall>h X. inj_on Xd (Ch h X)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n  x \\<in> Ch h (insert x X)", "have \"Ch h (insert x (insert x' ?X')) = Ch h (insert x X)\""], ["proof (prove)\nusing this:\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n  \\<forall>h X. inj_on Xd (Ch h X)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n  x \\<in> Ch h (insert x X)\n\ngoal (1 subgoal):\n 1. Ch h (insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})) =\n    Ch h (insert x X)", "using consistencyD[OF Ch_consistency[where h=h], where B=\"insert x X\" and C=\"insert x (insert x' ?X')\"]"], ["proof (prove)\nusing this:\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n  \\<forall>h X. inj_on Xd (Ch h X)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n  x \\<in> Ch h (insert x X)\n  \\<lbrakk>insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})\n           \\<subseteq> insert x X;\n   Ch h (insert x X)\n   \\<subseteq> insert x\n                (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})\\<rbrakk>\n  \\<Longrightarrow> Ch h (insert x X) =\n                    Ch h\n                     (insert x\n                       (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}))\n\ngoal (1 subgoal):\n 1. Ch h (insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})) =\n    Ch h (insert x X)", "by (clarsimp simp: insert_commute) (blast dest: inj_onD)"], ["proof (state)\nthis:\n  Ch h (insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})) =\n  Ch h (insert x X)\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Ch h (insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})) =\n  Ch h (insert x X)\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "note \\<open>d \\<notin> Xd ` Ch h X\\<close> x'"], ["proof (state)\nthis:\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n\ngoal (1 subgoal):\n 1. d \\<in> Xd ` Ch h (insert x X) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X\n  Ch h (insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})) =\n  Ch h (insert x X)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d", "show False"], ["proof (prove)\nusing this:\n  Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X\n  Ch h (insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})) =\n  Ch h (insert x X)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n\ngoal (1 subgoal):\n 1. False", "using bilateral_substitutesD[OF spec[OF Ch_bilateral_substitutes, of h], where a=x and b=x' and B=\"?X'\"]"], ["proof (prove)\nusing this:\n  Ch h (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}}) = Ch h X\n  Ch h (insert x (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})) =\n  Ch h (insert x X)\n  d \\<notin> Xd ` Ch h X\n  x' \\<in> Ch h (insert x X)\n  Xd x' = d\n  \\<lbrakk>Xd x \\<notin> Xd ` {y \\<in> X. Xd y \\<notin> {Xd x, d}};\n   Xd x' \\<notin> Xd ` {y \\<in> X. Xd y \\<notin> {Xd x, d}};\n   x' \\<notin> Ch h\n                (insert x' {y \\<in> X. Xd y \\<notin> {Xd x, d}})\\<rbrakk>\n  \\<Longrightarrow> x' \\<notin> Ch h\n                                 (insert x\n                                   (insert x'\n                                     {y \\<in> X. Xd y \\<notin> {Xd x, d}}))\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n\nOur proof essentially adds the inductive details these earlier efforts\nskipped over. It is somewhat complicated by our use of the\nsimultaneous-offer COP.\n\n\\<close>"], ["", "lemma bilateral_substitutes_lemma_union:\n  assumes \"Xd ` Ch h X \\<inter> Xd ` Y = {}\"\n  assumes \"d \\<notin> Xd ` Ch h X\"\n  assumes \"d \\<notin> Xd ` Y\"\n  assumes \"allocation Y\"\n  shows \"d \\<notin> Xd ` Ch h (X \\<union> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<notin> Xd ` Ch h (X \\<union> Y)", "using %invisible finite[of Y] assms"], ["proof (prove)\nusing this:\n  finite Y\n  Xd ` Ch h X \\<inter> Xd ` Y = {}\n  d \\<notin> Xd ` Ch h X\n  d \\<notin> Xd ` Y\n  inj_on Xd Y\n\ngoal (1 subgoal):\n 1. d \\<notin> Xd ` Ch h (X \\<union> Y)", "by (induct arbitrary: d) (simp_all add: bilateral_substitutes_lemma)"], ["", "lemma cop_F_CH_CD_on_disjoint:\n  assumes \"cop_F_closed_inv ds fp\"\n  assumes \"cop_F_range_inv ds fp\"\n  shows \"Xd ` CH fp \\<inter> Xd ` (CD_on ds (- RH fp) - fp) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}", "using %invisible assms CH_range"], ["proof (prove)\nusing this:\n  cop_F_closed_inv ds fp\n  cop_F_range_inv ds fp\n  CH ?A \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}", "unfolding cop_F_range_inv_def cop_F_closed_inv_def above_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>fp. {b. (x, b) \\<in> Pd (Xd x)} \\<subseteq> fp\n  \\<forall>x\\<in>fp. x \\<in> Field (Pd (Xd x)) \\<and> Xd x \\<in> ds\n  CH ?A \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}", "by (fastforce simp: set_eq_iff mem_CD_on_Cd Cd_greatest greatest_def)"], ["", "text\\<open>\n\nOur key lemma shows that we effectively have @{const \"substitutes\"}\nfor rejected contracts, provided the relevant doctor does not have a\ncontract held with the relevant hospital. Note the similarity to\nTheorem~4 (\\S\\ref{sec:cop-theorem-4}).\n\n\\<close>"], ["", "lemma cop_F_RH_mono:\n  assumes \"cop_F_closed_inv ds fp\"\n  assumes \"cop_F_range_inv ds fp\"\n  assumes \"Xd x \\<notin> Xd ` Ch (Xh x) fp\"\n  assumes \"x \\<in> RH fp\"\n  shows \"x \\<in> RH (cop_F ds fp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> Rf CH (cop_F ds fp)", "proof(safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> cop_F ds fp\n 2. x \\<in> CH (cop_F ds fp) \\<Longrightarrow> False", "from \\<open>x \\<in> RH fp\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> Rf CH fp", "show \"x \\<in> cop_F ds fp\""], ["proof (prove)\nusing this:\n  x \\<in> Rf CH fp\n\ngoal (1 subgoal):\n 1. x \\<in> cop_F ds fp", "using cop_F_increasing"], ["proof (prove)\nusing this:\n  x \\<in> Rf CH fp\n  ?x \\<subseteq> cop_F ?ds ?x\n\ngoal (1 subgoal):\n 1. x \\<in> cop_F ds fp", "by blast"], ["proof (state)\nthis:\n  x \\<in> cop_F ds fp\n\ngoal (1 subgoal):\n 1. x \\<in> CH (cop_F ds fp) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> CH (cop_F ds fp) \\<Longrightarrow> False", "assume \"x \\<in> CH (cop_F ds fp)\""], ["proof (state)\nthis:\n  x \\<in> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. x \\<in> CH (cop_F ds fp) \\<Longrightarrow> False", "from Ch_singular \\<open>x \\<in> CH (cop_F ds fp)\\<close> \\<open>x \\<in> RH fp\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp", "have \"Ch (Xh x) (cop_F ds fp) = Ch (Xh x) (fp \\<union> (CD_on ds (-RH fp) - fp - {z. Xd z = Xd x}))\""], ["proof (prove)\nusing this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp\n\ngoal (1 subgoal):\n 1. Ch (Xh x) (cop_F ds fp) =\n    Ch (Xh x) (fp \\<union> (CD_on ds (- Rf CH fp) - fp - {z. Xd z = Xd x}))", "unfolding cop_F_def"], ["proof (prove)\nusing this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  x \\<in> CH (fp \\<union> CD_on ds (- Rf CH fp))\n  x \\<in> Rf CH fp\n\ngoal (1 subgoal):\n 1. Ch (Xh x) (fp \\<union> CD_on ds (- Rf CH fp)) =\n    Ch (Xh x) (fp \\<union> (CD_on ds (- Rf CH fp) - fp - {z. Xd z = Xd x}))", "by - (rule consistencyD[OF Ch_consistency], auto simp: mem_CH_Ch dest: Ch_range' inj_onD)"], ["proof (state)\nthis:\n  Ch (Xh x) (cop_F ds fp) =\n  Ch (Xh x) (fp \\<union> (CD_on ds (- Rf CH fp) - fp - {z. Xd z = Xd x}))\n\ngoal (1 subgoal):\n 1. x \\<in> CH (cop_F ds fp) \\<Longrightarrow> False", "with cop_F_CH_CD_on_disjoint[OF \\<open>cop_F_closed_inv ds fp\\<close> \\<open>cop_F_range_inv ds fp\\<close>]"], ["proof (chain)\npicking this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Ch (Xh x) (cop_F ds fp) =\n  Ch (Xh x) (fp \\<union> (CD_on ds (- Rf CH fp) - fp - {z. Xd z = Xd x}))", "have \"Xd x \\<notin> Xd ` Ch (Xh x) (cop_F ds fp)\""], ["proof (prove)\nusing this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Ch (Xh x) (cop_F ds fp) =\n  Ch (Xh x) (fp \\<union> (CD_on ds (- Rf CH fp) - fp - {z. Xd z = Xd x}))\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` Ch (Xh x) (cop_F ds fp)", "by simp (rule bilateral_substitutes_lemma_union[OF _ \\<open>Xd x \\<notin> Xd ` Ch (Xh x) fp\\<close>],\n             auto simp: CH_def CD_on_inj_on_Xd inj_on_diff)"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` Ch (Xh x) (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. x \\<in> CH (cop_F ds fp) \\<Longrightarrow> False", "with \\<open>x \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) (cop_F ds fp)", "show False"], ["proof (prove)\nusing this:\n  x \\<in> CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: mem_CH_Ch)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cop_F_allocation_inv:\n  \"valid ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp) (\\<lambda>ds fp. allocation (CH fp))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ds\n     (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp)\n     (\\<lambda>ds fp. inj_on Xd (CH fp))", "proof(induct rule: validI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on Xd (CH {})\n 2. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. inj_on Xd (CH {})\n 2. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on Xd (CH {})", "by (simp add: CH_simps)"], ["proof (state)\nthis:\n  inj_on Xd (CH {})\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "case (step fp)"], ["proof (state)\nthis:\n  cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp\n  inj_on Xd (CH fp)\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "then"], ["proof (chain)\npicking this:\n  cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp\n  inj_on Xd (CH fp)", "have \"allocation (CH fp)\"\n        and \"cop_F_closed_inv ds fp\"\n        and \"cop_F_range_inv ds fp\""], ["proof (prove)\nusing this:\n  cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp\n  inj_on Xd (CH fp)\n\ngoal (1 subgoal):\n 1. inj_on Xd (CH fp) &&& cop_F_closed_inv ds fp &&& cop_F_range_inv ds fp", "by blast+"], ["proof (state)\nthis:\n  inj_on Xd (CH fp)\n  cop_F_closed_inv ds fp\n  cop_F_range_inv ds fp\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "note cop_F_CH_CD_on_disjoint = cop_F_CH_CD_on_disjoint[OF \\<open>cop_F_closed_inv ds fp\\<close> \\<open>cop_F_range_inv ds fp\\<close>]"], ["proof (state)\nthis:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "note cop_F_RH_mono = cop_F_RH_mono[OF \\<open>cop_F_closed_inv ds fp\\<close> \\<open>cop_F_range_inv ds fp\\<close>]"], ["proof (state)\nthis:\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp;\n        inj_on Xd (CH fp)\\<rbrakk>\n       \\<Longrightarrow> inj_on Xd (CH (cop_F ds fp))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on Xd (CH (cop_F ds fp))", "proof(rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> CH (cop_F ds fp); y \\<in> CH (cop_F ds fp);\n        Xd x = Xd y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> CH (cop_F ds fp); y \\<in> CH (cop_F ds fp);\n        Xd x = Xd y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"x \\<in> CH (cop_F ds fp)\" and \"y \\<in> CH (cop_F ds fp)\" and \"Xd x = Xd y\""], ["proof (state)\nthis:\n  x \\<in> CH (cop_F ds fp)\n  y \\<in> CH (cop_F ds fp)\n  Xd x = Xd y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> CH (cop_F ds fp); y \\<in> CH (cop_F ds fp);\n        Xd x = Xd y\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof(cases \"Xh y = Xh x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xh y = Xh x \\<Longrightarrow> x = y\n 2. Xh y \\<noteq> Xh x \\<Longrightarrow> x = y", "case True"], ["proof (state)\nthis:\n  Xh y = Xh x\n\ngoal (2 subgoals):\n 1. Xh y = Xh x \\<Longrightarrow> x = y\n 2. Xh y \\<noteq> Xh x \\<Longrightarrow> x = y", "with Ch_singular \\<open>x \\<in> CH (cop_F ds fp)\\<close> \\<open>y \\<in> CH (cop_F ds fp)\\<close> \\<open>Xd x = Xd y\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  x \\<in> CH (cop_F ds fp)\n  y \\<in> CH (cop_F ds fp)\n  Xd x = Xd y\n  Xh y = Xh x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  x \\<in> CH (cop_F ds fp)\n  y \\<in> CH (cop_F ds fp)\n  Xd x = Xd y\n  Xh y = Xh x\n\ngoal (1 subgoal):\n 1. x = y", "by (fastforce simp: mem_CH_Ch dest: inj_onD)"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. Xh y \\<noteq> Xh x \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xh y \\<noteq> Xh x \\<Longrightarrow> x = y", "case False"], ["proof (state)\nthis:\n  Xh y \\<noteq> Xh x\n\ngoal (1 subgoal):\n 1. Xh y \\<noteq> Xh x \\<Longrightarrow> x = y", "note \\<open>Xh y \\<noteq> Xh x\\<close>"], ["proof (state)\nthis:\n  Xh y \\<noteq> Xh x\n\ngoal (1 subgoal):\n 1. Xh y \\<noteq> Xh x \\<Longrightarrow> x = y", "from \\<open>x \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> CH (cop_F ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. x = y", "proof(cases x rule: CH_cop_F_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x \\<in> CH fp \\<Longrightarrow> x = y\n 2. x \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CH"], ["proof (state)\nthis:\n  x \\<in> CH fp\n\ngoal (3 subgoals):\n 1. x \\<in> CH fp \\<Longrightarrow> x = y\n 2. x \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>x \\<in> CH fp\\<close>"], ["proof (state)\nthis:\n  x \\<in> CH fp\n\ngoal (3 subgoals):\n 1. x \\<in> CH fp \\<Longrightarrow> x = y\n 2. x \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "from \\<open>y \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. x = y", "proof(cases y rule: CH_cop_F_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CH"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> CH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with \\<open>allocation (CH fp)\\<close> \\<open>Xd x = Xd y\\<close> \\<open>x \\<in> CH fp\\<close>"], ["proof (chain)\npicking this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  x \\<in> CH fp\n  y \\<in> CH fp", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  x \\<in> CH fp\n  y \\<in> CH fp\n\ngoal (1 subgoal):\n 1. x = y", "by (blast dest: inj_onD)"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case RH_fp"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> RH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "from \\<open>allocation (CH fp)\\<close> \\<open>Xd x = Xd y\\<close> \\<open>Xh y \\<noteq> Xh x\\<close> \\<open>x \\<in> CH fp\\<close>"], ["proof (chain)\npicking this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  Xh y \\<noteq> Xh x\n  x \\<in> CH fp", "have \"Xd y \\<notin> Xd ` Ch (Xh y) fp\""], ["proof (prove)\nusing this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  Xh y \\<noteq> Xh x\n  x \\<in> CH fp\n\ngoal (1 subgoal):\n 1. Xd y \\<notin> Xd ` Ch (Xh y) fp", "by clarsimp (metis Ch_CH_irc_idem Ch_range' inj_on_contraD)"], ["proof (state)\nthis:\n  Xd y \\<notin> Xd ` Ch (Xh y) fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with \\<open>y \\<in> CH (cop_F ds fp)\\<close> \\<open>y \\<in> RH fp\\<close> cop_F_RH_mono"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)\n  y \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd y \\<notin> Xd ` Ch (Xh y) fp", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n  y \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd y \\<notin> Xd ` Ch (Xh y) fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CD_on"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note y' = \\<open>y \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with cop_F_CH_CD_on_disjoint \\<open>Xd x = Xd y\\<close> \\<open>x \\<in> CH fp\\<close>"], ["proof (chain)\npicking this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  x \\<in> CH fp\n  y \\<in> CD_on ds (- Rf CH fp) - fp", "show ?thesis"], ["proof (prove)\nusing this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  x \\<in> CH fp\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case RH_fp"], ["proof (state)\nthis:\n  x \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. x \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>x \\<in> RH fp\\<close>"], ["proof (state)\nthis:\n  x \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. x \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "from \\<open>y \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. x = y", "proof(cases y rule: CH_cop_F_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CH"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> CH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "from \\<open>allocation (CH fp)\\<close> \\<open>Xd x = Xd y\\<close> \\<open>Xh y \\<noteq> Xh x\\<close> \\<open>y \\<in> CH fp\\<close>"], ["proof (chain)\npicking this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  Xh y \\<noteq> Xh x\n  y \\<in> CH fp", "have \"Xd x \\<notin> Xd ` Ch (Xh x) fp\""], ["proof (prove)\nusing this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  Xh y \\<noteq> Xh x\n  y \\<in> CH fp\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` Ch (Xh x) fp", "by clarsimp (metis Ch_CH_irc_idem Ch_range' inj_on_contraD)"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` Ch (Xh x) fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with \\<open>x \\<in> CH (cop_F ds fp)\\<close> \\<open>x \\<in> RH fp\\<close> cop_F_RH_mono"], ["proof (chain)\npicking this:\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) fp", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case RH_fp"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> RH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof(cases \"Xd x \\<in> Xd ` Ch (Xh x) fp\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y\n 2. Xd x \\<notin> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y", "case True"], ["proof (state)\nthis:\n  Xd x \\<in> Xd ` Ch (Xh x) fp\n\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y\n 2. Xd x \\<notin> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y", "with \\<open>allocation (CH fp)\\<close> \\<open>Xd x = Xd y\\<close> \\<open>Xh y \\<noteq> Xh x\\<close>"], ["proof (chain)\npicking this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  Xh y \\<noteq> Xh x\n  Xd x \\<in> Xd ` Ch (Xh x) fp", "have \"Xd y \\<notin> Xd ` Ch (Xh y) fp\""], ["proof (prove)\nusing this:\n  inj_on Xd (CH fp)\n  Xd x = Xd y\n  Xh y \\<noteq> Xh x\n  Xd x \\<in> Xd ` Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. Xd y \\<notin> Xd ` Ch (Xh y) fp", "by clarsimp (metis Ch_range' inj_onD mem_CH_Ch)"], ["proof (state)\nthis:\n  Xd y \\<notin> Xd ` Ch (Xh y) fp\n\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y\n 2. Xd x \\<notin> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y", "with \\<open>y \\<in> CH (cop_F ds fp)\\<close> \\<open>y \\<in> RH fp\\<close> cop_F_RH_mono"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)\n  y \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd y \\<notin> Xd ` Ch (Xh y) fp", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n  y \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd y \\<notin> Xd ` Ch (Xh y) fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y", "case False"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y", "note \\<open>Xd x \\<notin> Xd ` Ch (Xh x) fp\\<close>"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` Ch (Xh x) fp \\<Longrightarrow> x = y", "with \\<open>x \\<in> CH (cop_F ds fp)\\<close> \\<open>x \\<in> RH fp\\<close> cop_F_RH_mono"], ["proof (chain)\npicking this:\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) fp", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CD_on"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "from cop_F_CH_CD_on_disjoint \\<open>Xd x = Xd y\\<close> \\<open>y \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (chain)\npicking this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  y \\<in> CD_on ds (- Rf CH fp) - fp", "have \"Xd x \\<notin> Xd ` Ch (Xh x) fp\""], ["proof (prove)\nusing this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` Ch (Xh x) fp", "by (auto simp: CH_def dest: Ch_range')"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with \\<open>x \\<in> CH (cop_F ds fp)\\<close> \\<open>x \\<in> RH fp\\<close> cop_F_RH_mono"], ["proof (chain)\npicking this:\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) fp", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> CH (cop_F ds fp)\n  x \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd x \\<notin> Xd ` Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CD_on"], ["proof (state)\nthis:\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>x \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (state)\nthis:\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "from \\<open>y \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. x = y", "proof(cases y rule: CH_cop_F_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CH"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> CH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow> x = y\n 2. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with cop_F_CH_CD_on_disjoint \\<open>Xd x = Xd y\\<close> \\<open>x \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (chain)\npicking this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  y \\<in> CH fp", "show ?thesis"], ["proof (prove)\nusing this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  y \\<in> CH fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case RH_fp"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> RH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "from cop_F_CH_CD_on_disjoint \\<open>Xd x = Xd y\\<close> \\<open>x \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (chain)\npicking this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  x \\<in> CD_on ds (- Rf CH fp) - fp", "have \"Xd y \\<notin> Xd ` Ch (Xh y) fp\""], ["proof (prove)\nusing this:\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  Xd x = Xd y\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. Xd y \\<notin> Xd ` Ch (Xh y) fp", "unfolding CH_def"], ["proof (prove)\nusing this:\n  Xd ` (\\<Union>h. Ch h fp) \\<inter>\n  Xd ` (CD_on ds (- (fp - (\\<Union>h. Ch h fp))) - fp) =\n  {}\n  Xd x = Xd y\n  x \\<in> CD_on ds (- (fp - (\\<Union>h. Ch h fp))) - fp\n\ngoal (1 subgoal):\n 1. Xd y \\<notin> Xd ` Ch (Xh y) fp", "by clarsimp (blast dest: Ch_range')"], ["proof (state)\nthis:\n  Xd y \\<notin> Xd ` Ch (Xh y) fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow> x = y\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with \\<open>y \\<in> CH (cop_F ds fp)\\<close> \\<open>y \\<in> RH fp\\<close> cop_F_RH_mono"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)\n  y \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd y \\<notin> Xd ` Ch (Xh y) fp", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n  y \\<in> Rf CH fp\n  \\<lbrakk>Xd ?x \\<notin> Xd ` Ch (Xh ?x) fp; ?x \\<in> Rf CH fp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Rf CH (cop_F ds fp)\n  Xd y \\<notin> Xd ` Ch (Xh y) fp\n\ngoal (1 subgoal):\n 1. x = y", "by blast"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "case CD_on"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "note \\<open>y \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> x = y", "with \\<open>Xd x = Xd y\\<close> \\<open>x \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (chain)\npicking this:\n  Xd x = Xd y\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  y \\<in> CD_on ds (- Rf CH fp) - fp", "show ?thesis"], ["proof (prove)\nusing this:\n  Xd x = Xd y\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. x = y", "by (meson CD_on_inj_on_Xd DiffD1 inj_on_eq_iff)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on Xd (CH (cop_F ds fp))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fp_cop_F_allocation:\n  shows \"allocation (cop ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on Xd (cop ds)", "proof %invisible -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on Xd (cop ds)", "have \"invariant ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp \\<and> allocation (CH fp))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))", "using cop_F_range_inv cop_F_closed_inv cop_F_allocation_inv"], ["proof (prove)\nusing this:\n  invariant ?ds cop_F_range_inv\n  invariant ?ds cop_F_closed_inv\n  valid ?ds\n   (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp)\n   (\\<lambda>ds fp. inj_on Xd (CH fp))\n\ngoal (1 subgoal):\n 1. invariant ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))", "by - (rule valid_conj | blast | rule valid_pre)+"], ["proof (state)\nthis:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))\n\ngoal (1 subgoal):\n 1. inj_on Xd (cop ds)", "then"], ["proof (chain)\npicking this:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))", "show ?thesis"], ["proof (prove)\nusing this:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))\n\ngoal (1 subgoal):\n 1. inj_on Xd (cop ds)", "by (blast dest: invariantD)"], ["proof (state)\nthis:\n  inj_on Xd (cop ds)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Theorem_1:\n  shows \"stable_on ds (cop ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_on ds (cop ds)", "proof %invisible (rule stable_onI)"], ["proof (state)\ngoal (2 subgoals):\n 1. individually_rational_on ds (cop ds)\n 2. stable_no_blocking_on ds (cop ds)", "show \"individually_rational_on ds (cop ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. individually_rational_on ds (cop ds)", "proof(rule individually_rational_onI)"], ["proof (state)\ngoal (2 subgoals):\n 1. CD_on ds (cop ds) = cop ds\n 2. CH (cop ds) = cop ds", "from fp_cop_F_allocation"], ["proof (chain)\npicking this:\n  inj_on Xd (cop ?ds)", "show \"CD_on ds (cop ds) = cop ds\""], ["proof (prove)\nusing this:\n  inj_on Xd (cop ?ds)\n\ngoal (1 subgoal):\n 1. CD_on ds (cop ds) = cop ds", "by (rule CD_on_closed) (blast dest: fp_cop_F_range_inv' CH_range')"], ["proof (state)\nthis:\n  CD_on ds (cop ds) = cop ds\n\ngoal (1 subgoal):\n 1. CH (cop ds) = cop ds", "show \"CH (cop ds) = cop ds\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CH (cop ds) = cop ds", "by (simp add: CH_irc_idem)"], ["proof (state)\nthis:\n  CH (cop ds) = cop ds\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  individually_rational_on ds (cop ds)\n\ngoal (1 subgoal):\n 1. stable_no_blocking_on ds (cop ds)", "show \"stable_no_blocking_on ds (cop ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_no_blocking_on ds (cop ds)", "by (rule cop_stable_no_blocking_on)"], ["proof (state)\nthis:\n  stable_no_blocking_on ds (cop ds)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text (in ContractsWithBilateralSubstitutesAndIRC) \\<open>\n\n\\citet[\\S3.1]{HatfieldKojima:2010} provide an example that shows that\nthe traditional optimality and strategic results do not hold under\n@{const \"bilateral_substitutes\"}, which motivates looking for a\nstronger condition that remains weaker than @{const \"substitutes\"}.\n\nTheir example involves two doctors, two hospitals, and five contracts.\n\n\\<close>"], ["", "datatype X5 = Xd1 | Xd1' | Xd2 | Xd2' | Xd2''"], ["", "primrec X5d :: \"X5 \\<Rightarrow> D2\" where\n  \"X5d Xd1 = D1\"\n| \"X5d Xd1' = D1\"\n| \"X5d Xd2 = D2\"\n| \"X5d Xd2' = D2\"\n| \"X5d Xd2'' = D2\""], ["", "primrec X5h :: \"X5 \\<Rightarrow> H2\" where\n  \"X5h Xd1 = H1\"\n| \"X5h Xd1' = H1\"\n| \"X5h Xd2 = H1\"\n| \"X5h Xd2' = H2\"\n| \"X5h Xd2'' = H1\""], ["", "primrec PX5d :: \"D2 \\<Rightarrow> X5 rel\" where\n  \"PX5d D1 = linord_of_list [Xd1, Xd1']\"\n| \"PX5d D2 = linord_of_list [Xd2, Xd2', Xd2'']\""], ["", "primrec CX5h :: \"H2 \\<Rightarrow> X5 cfun\" where\n  \"CX5h H1 A =\n     (if {Xd1', Xd2} \\<subseteq> A then {Xd1', Xd2} else\n      if {Xd2''} \\<subseteq> A then {Xd2''} else\n      if {Xd1} \\<subseteq> A then {Xd1} else\n      if {Xd1'} \\<subseteq> A then {Xd1'} else\n      if {Xd2} \\<subseteq> A then {Xd2} else {})\"\n| \"CX5h H2 A = { x . x \\<in> A \\<and> x = Xd2' }\""], ["", "(*<*)"], ["", "lemma X5_UNIV:\n  shows \"UNIV = set [Xd1, Xd1', Xd2, Xd2', Xd2'']\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = set [X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2'']", "using X5.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = X5.Xd1 \\<Longrightarrow> ?P;\n   ?y = X5.Xd1' \\<Longrightarrow> ?P; ?y = X5.Xd2 \\<Longrightarrow> ?P;\n   ?y = X5.Xd2' \\<Longrightarrow> ?P;\n   ?y = Xd2'' \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. UNIV = set [X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2'']", "by auto"], ["", "lemmas X5_pow = subset_subseqs[OF subset_trans[OF subset_UNIV Set.equalityD1[OF X5_UNIV]]]"], ["", "instance X5 :: finite"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(X5, finite_class)", "by standard (simp add: X5_UNIV)"], ["", "lemma X5_ALL:\n  shows \"(\\<forall>X''. P X'') \\<longleftrightarrow> (\\<forall>X''\\<in>set ` set (subseqs [Xd1, Xd1', Xd2, Xd2', Xd2'']). P X'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>X''. P X'') =\n    (\\<forall>X''\\<in>set `\n                      set (subseqs\n                            [X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2'']).\n        P X'')", "using X5_pow"], ["proof (prove)\nusing this:\n  ?X \\<in> set ` set (subseqs [X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2''])\n\ngoal (1 subgoal):\n 1. (\\<forall>X''. P X'') =\n    (\\<forall>X''\\<in>set `\n                      set (subseqs\n                            [X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2'']).\n        P X'')", "by blast"], ["", "lemma PX5d_linear:\n  shows \"Linear_order (PX5d d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Linear_order (PX5d d)", "by (cases d) (simp_all add: linord_of_list_Linear_order)"], ["", "lemma PX5d_range:\n  shows \"Field (PX5d d) \\<subseteq> {x. X5d x = d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Field (PX5d d) \\<subseteq> {x. X5d x = d}", "by (cases d) simp_all"], ["", "lemma CX5h_range:\n  shows \"CX5h h X \\<subseteq> {x \\<in> X. X5h x = h}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CX5h h X \\<subseteq> {x \\<in> X. X5h x = h}", "by (cases h) auto"], ["", "lemma CX5h_singular:\n  shows \"inj_on X5d (CX5h h X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on X5d (CX5h h X)", "by (cases h) (auto intro: inj_onI)"], ["", "(*>*)"], ["", "text\\<open>\\<close>"], ["", "interpretation BSI: Contracts X5d X5h PX5d CX5h"], ["proof (prove)\ngoal (1 subgoal):\n 1. Contracts X5d X5h PX5d CX5h", "using %invisible PX5d_linear PX5d_range CX5h_range CX5h_singular"], ["proof (prove)\nusing this:\n  Linear_order (PX5d ?d)\n  Field (PX5d ?d) \\<subseteq> {x. X5d x = ?d}\n  CX5h ?h ?X \\<subseteq> {x \\<in> ?X. X5h x = ?h}\n  inj_on X5d (CX5h ?h ?X)\n\ngoal (1 subgoal):\n 1. Contracts X5d X5h PX5d CX5h", "by unfold_locales blast+"], ["", "lemma CX5h_bilateral_substitutes:\n  shows \"BSI.bilateral_substitutes (CX5h h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.bilateral_substitutes_on UNIV (CX5h h)", "unfolding BSI.bilateral_substitutes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B a b.\n       X5d a \\<notin> X5d ` B \\<and>\n       X5d b \\<notin> X5d ` B \\<and>\n       b \\<notin> CX5h h (insert b B) \\<longrightarrow>\n       b \\<notin> CX5h h (insert a (insert b B))", "by (cases h) (auto simp: X5_ALL)"], ["", "lemma CX5h_irc:\n  shows \"irc (CX5h h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irc (CX5h h)", "unfolding irc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B a.\n       a \\<notin> CX5h h (insert a B) \\<longrightarrow>\n       CX5h h (insert a B) = CX5h h B", "by (cases h) (auto simp: X5_ALL)"], ["", "interpretation BSI: ContractsWithBilateralSubstitutesAndIRC X5d X5h PX5d CX5h"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutesAndIRC X5d X5h PX5d CX5h", "using %invisible CX5h_bilateral_substitutes CX5h_irc"], ["proof (prove)\nusing this:\n  BSI.bilateral_substitutes_on UNIV (CX5h ?h)\n  irc (CX5h ?h)\n\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutesAndIRC X5d X5h PX5d CX5h", "by unfold_locales blast+"], ["", "text\\<open>\n\nThere are two stable matches in this model.\n\n\\<close>"], ["", "(*<*)"], ["", "lemma Xd1_Xd2'_stable:\n  shows \"BSI.stable {Xd1, Xd2'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.stable_on UNIV {X5.Xd1, X5.Xd2'}", "proof(rule BSI.stable_onI)"], ["proof (state)\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1, X5.Xd2'}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1, X5.Xd2'}", "note image_cong_simp [cong del]"], ["proof (state)\nthis:\n  \\<lbrakk>?M = ?N; \\<And>x. x \\<in> ?N =simp=> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1, X5.Xd2'}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1, X5.Xd2'}", "note INF_cong_simp [cong]"], ["proof (state)\nthis:\n  \\<lbrakk>?A = ?B; \\<And>x. x \\<in> ?B =simp=> ?C x = ?D x\\<rbrakk>\n  \\<Longrightarrow> Inf (?C ` ?A) = Inf (?D ` ?B)\n\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1, X5.Xd2'}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1, X5.Xd2'}", "note SUP_cong_simp [cong]"], ["proof (state)\nthis:\n  \\<lbrakk>?A = ?B; \\<And>x. x \\<in> ?B =simp=> ?C x = ?D x\\<rbrakk>\n  \\<Longrightarrow> Sup (?C ` ?A) = Sup (?D ` ?B)\n\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1, X5.Xd2'}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1, X5.Xd2'}", "show \"BSI.individually_rational {Xd1, Xd2'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.individually_rational_on UNIV {X5.Xd1, X5.Xd2'}", "unfolding BSI.individually_rational_on_def BSI.CD_on_def BSI.CH_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>d. BSI.Cd d {X5.Xd1, X5.Xd2'}) = {X5.Xd1, X5.Xd2'} \\<and>\n    (\\<Union>h. CX5h h {X5.Xd1, X5.Xd2'}) = {X5.Xd1, X5.Xd2'}", "by (auto simp: insert_commute D2_UNION H2_UNION)"], ["proof (state)\nthis:\n  BSI.individually_rational_on UNIV {X5.Xd1, X5.Xd2'}\n\ngoal (1 subgoal):\n 1. BSI.stable_no_blocking_on UNIV {X5.Xd1, X5.Xd2'}", "show \"BSI.stable_no_blocking {Xd1, Xd2'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.stable_no_blocking_on UNIV {X5.Xd1, X5.Xd2'}", "unfolding BSI.stable_no_blocking_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>h X'. \\<not> BSI.blocking_on UNIV {X5.Xd1, X5.Xd2'} h X'", "by (auto simp: X5_ALL BSI.blocking_on_def BSI.mem_CD_on_Cd BSI.maxR_def linord_of_list_linord_of_listP)"], ["proof (state)\nthis:\n  BSI.stable_no_blocking_on UNIV {X5.Xd1, X5.Xd2'}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Xd1'_Xd2_stable:\n  shows \"BSI.stable {Xd1', Xd2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.stable_on UNIV {X5.Xd1', X5.Xd2}", "proof(rule BSI.stable_onI)"], ["proof (state)\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1', X5.Xd2}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1', X5.Xd2}", "note image_cong_simp [cong del]"], ["proof (state)\nthis:\n  \\<lbrakk>?M = ?N; \\<And>x. x \\<in> ?N =simp=> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1', X5.Xd2}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1', X5.Xd2}", "note INF_cong_simp [cong]"], ["proof (state)\nthis:\n  \\<lbrakk>?A = ?B; \\<And>x. x \\<in> ?B =simp=> ?C x = ?D x\\<rbrakk>\n  \\<Longrightarrow> Inf (?C ` ?A) = Inf (?D ` ?B)\n\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1', X5.Xd2}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1', X5.Xd2}", "note SUP_cong_simp [cong]"], ["proof (state)\nthis:\n  \\<lbrakk>?A = ?B; \\<And>x. x \\<in> ?B =simp=> ?C x = ?D x\\<rbrakk>\n  \\<Longrightarrow> Sup (?C ` ?A) = Sup (?D ` ?B)\n\ngoal (2 subgoals):\n 1. BSI.individually_rational_on UNIV {X5.Xd1', X5.Xd2}\n 2. BSI.stable_no_blocking_on UNIV {X5.Xd1', X5.Xd2}", "show \"BSI.individually_rational {Xd1', Xd2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.individually_rational_on UNIV {X5.Xd1', X5.Xd2}", "unfolding BSI.individually_rational_on_def BSI.CD_on_def BSI.CH_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>d. BSI.Cd d {X5.Xd1', X5.Xd2}) = {X5.Xd1', X5.Xd2} \\<and>\n    (\\<Union>h. CX5h h {X5.Xd1', X5.Xd2}) = {X5.Xd1', X5.Xd2}", "by (auto simp: insert_commute D2_UNION H2_UNION)"], ["proof (state)\nthis:\n  BSI.individually_rational_on UNIV {X5.Xd1', X5.Xd2}\n\ngoal (1 subgoal):\n 1. BSI.stable_no_blocking_on UNIV {X5.Xd1', X5.Xd2}", "show \"BSI.stable_no_blocking {Xd1', Xd2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.stable_no_blocking_on UNIV {X5.Xd1', X5.Xd2}", "unfolding BSI.stable_no_blocking_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>h X'. \\<not> BSI.blocking_on UNIV {X5.Xd1', X5.Xd2} h X'", "by (auto simp: X5_ALL BSI.blocking_on_def BSI.mem_CD_on_Cd BSI.maxR_def linord_of_list_linord_of_listP)"], ["proof (state)\nthis:\n  BSI.stable_no_blocking_on UNIV {X5.Xd1', X5.Xd2}\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text\\<open>\\<close>"], ["", "lemma BSI_stable:\n  shows \"BSI.stable X \\<longleftrightarrow> X = {Xd1, Xd2'} \\<or> X = {Xd1', Xd2}\"\n(*<*)\n(is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. BSI.stable_on UNIV X =\n    (X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2})", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. BSI.stable_on UNIV X \\<Longrightarrow>\n    X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}\n 2. X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2} \\<Longrightarrow>\n    BSI.stable_on UNIV X", "assume ?lhs"], ["proof (state)\nthis:\n  BSI.stable_on UNIV X\n\ngoal (2 subgoals):\n 1. BSI.stable_on UNIV X \\<Longrightarrow>\n    X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}\n 2. X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2} \\<Longrightarrow>\n    BSI.stable_on UNIV X", "then"], ["proof (chain)\npicking this:\n  BSI.stable_on UNIV X", "show ?rhs"], ["proof (prove)\nusing this:\n  BSI.stable_on UNIV X\n\ngoal (1 subgoal):\n 1. X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}", "using X5_pow[where X=X] BSI.stable_on_allocation[OF \\<open>?lhs\\<close>]"], ["proof (prove)\nusing this:\n  BSI.stable_on UNIV X\n  X \\<in> set ` set (subseqs [X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2''])\n  inj_on X5d X\n\ngoal (1 subgoal):\n 1. X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>BSI.stable_on UNIV X;\n     X = {X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2'} \\<or>\n     X = {X5.Xd1, X5.Xd1', X5.Xd2, Xd2''} \\<or>\n     X = {X5.Xd1, X5.Xd1', X5.Xd2} \\<or>\n     X = {X5.Xd1, X5.Xd1', X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd1, X5.Xd1', X5.Xd2'} \\<or>\n     X = {X5.Xd1, X5.Xd1', Xd2''} \\<or>\n     X = {X5.Xd1, X5.Xd1'} \\<or>\n     X = {X5.Xd1, X5.Xd2, X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd1, X5.Xd2, X5.Xd2'} \\<or>\n     X = {X5.Xd1, X5.Xd2, Xd2''} \\<or>\n     X = {X5.Xd1, X5.Xd2} \\<or>\n     X = {X5.Xd1, X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd1, X5.Xd2'} \\<or>\n     X = {X5.Xd1, Xd2''} \\<or>\n     X = {X5.Xd1} \\<or>\n     X = {X5.Xd1', X5.Xd2, X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd1', X5.Xd2, X5.Xd2'} \\<or>\n     X = {X5.Xd1', X5.Xd2, Xd2''} \\<or>\n     X = {X5.Xd1', X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd1', X5.Xd2'} \\<or>\n     X = {X5.Xd1', Xd2''} \\<or>\n     X = {X5.Xd1'} \\<or>\n     X = {X5.Xd2, X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd2, X5.Xd2'} \\<or>\n     X = {X5.Xd2, Xd2''} \\<or>\n     X = {X5.Xd2} \\<or>\n     X = {X5.Xd2', Xd2''} \\<or>\n     X = {X5.Xd2'} \\<or> X = {Xd2''} \\<or> X = {};\n     inj_on X5d X; X \\<noteq> {X5.Xd1', X5.Xd2}\\<rbrakk>\n    \\<Longrightarrow> X = {X5.Xd1, X5.Xd2'}", "apply (elim disjE; simp add: insert_eq_iff)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<lbrakk>BSI.stable_on UNIV {X5.Xd1, X5.Xd2};\n     X = {X5.Xd1, X5.Xd2}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>BSI.stable_on UNIV {X5.Xd1, Xd2''};\n     X = {X5.Xd1, Xd2''}\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>BSI.stable_on UNIV {X5.Xd1}; X = {X5.Xd1}\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<lbrakk>BSI.stable_on UNIV {X5.Xd1', X5.Xd2'};\n     X = {X5.Xd1', X5.Xd2'}\\<rbrakk>\n    \\<Longrightarrow> False\n 5. \\<lbrakk>BSI.stable_on UNIV {X5.Xd1', Xd2''};\n     X = {X5.Xd1', Xd2''}\\<rbrakk>\n    \\<Longrightarrow> False\n 6. \\<lbrakk>BSI.stable_on UNIV {X5.Xd1'}; X = {X5.Xd1'}\\<rbrakk>\n    \\<Longrightarrow> False\n 7. \\<lbrakk>BSI.stable_on UNIV {X5.Xd2}; X = {X5.Xd2}\\<rbrakk>\n    \\<Longrightarrow> False\n 8. \\<lbrakk>BSI.stable_on UNIV {X5.Xd2'}; X = {X5.Xd2'}\\<rbrakk>\n    \\<Longrightarrow> False\n 9. \\<lbrakk>BSI.stable_on UNIV {Xd2''}; X = {Xd2''}\\<rbrakk>\n    \\<Longrightarrow> False\n 10. \\<lbrakk>BSI.stable_on UNIV {}; X = {}\\<rbrakk> \\<Longrightarrow> False", "apply (simp_all only: BSI.stable_on_def BSI.individually_rational_on_def BSI.stable_no_blocking_on_def BSI.blocking_on_def BSI.CH_def)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd1, X5.Xd2} = {X5.Xd1, X5.Xd2} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd1, X5.Xd2}) =\n              {X5.Xd1, X5.Xd2}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd1, X5.Xd2} \\<and>\n                         X' = CX5h h ({X5.Xd1, X5.Xd2} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd1, X5.Xd2} \\<union> X')));\n     X = {X5.Xd1, X5.Xd2}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd1, Xd2''} = {X5.Xd1, Xd2''} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd1, Xd2''}) = {X5.Xd1, Xd2''}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd1, Xd2''} \\<and>\n                         X' = CX5h h ({X5.Xd1, Xd2''} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd1, Xd2''} \\<union> X')));\n     X = {X5.Xd1, Xd2''}\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd1} = {X5.Xd1} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd1}) = {X5.Xd1}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd1} \\<and>\n                         X' = CX5h h ({X5.Xd1} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd1} \\<union> X')));\n     X = {X5.Xd1}\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd1', X5.Xd2'} = {X5.Xd1', X5.Xd2'} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd1', X5.Xd2'}) =\n              {X5.Xd1', X5.Xd2'}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd1', X5.Xd2'} \\<and>\n                         X' = CX5h h ({X5.Xd1', X5.Xd2'} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd1', X5.Xd2'} \\<union> X')));\n     X = {X5.Xd1', X5.Xd2'}\\<rbrakk>\n    \\<Longrightarrow> False\n 5. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd1', Xd2''} = {X5.Xd1', Xd2''} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd1', Xd2''}) =\n              {X5.Xd1', Xd2''}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd1', Xd2''} \\<and>\n                         X' = CX5h h ({X5.Xd1', Xd2''} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd1', Xd2''} \\<union> X')));\n     X = {X5.Xd1', Xd2''}\\<rbrakk>\n    \\<Longrightarrow> False\n 6. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd1'} = {X5.Xd1'} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd1'}) = {X5.Xd1'}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd1'} \\<and>\n                         X' = CX5h h ({X5.Xd1'} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd1'} \\<union> X')));\n     X = {X5.Xd1'}\\<rbrakk>\n    \\<Longrightarrow> False\n 7. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd2} = {X5.Xd2} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd2}) = {X5.Xd2}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd2} \\<and>\n                         X' = CX5h h ({X5.Xd2} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd2} \\<union> X')));\n     X = {X5.Xd2}\\<rbrakk>\n    \\<Longrightarrow> False\n 8. \\<lbrakk>(BSI.CD_on UNIV {X5.Xd2'} = {X5.Xd2'} \\<and>\n              (\\<Union>h. CX5h h {X5.Xd2'}) = {X5.Xd2'}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {X5.Xd2'} \\<and>\n                         X' = CX5h h ({X5.Xd2'} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({X5.Xd2'} \\<union> X')));\n     X = {X5.Xd2'}\\<rbrakk>\n    \\<Longrightarrow> False\n 9. \\<lbrakk>(BSI.CD_on UNIV {Xd2''} = {Xd2''} \\<and>\n              (\\<Union>h. CX5h h {Xd2''}) = {Xd2''}) \\<and>\n             (\\<forall>h X'.\n                 \\<not> (X' \\<noteq> CX5h h {Xd2''} \\<and>\n                         X' = CX5h h ({Xd2''} \\<union> X') \\<and>\n                         X' \\<subseteq> BSI.CD_on UNIV\n   ({Xd2''} \\<union> X')));\n     X = {Xd2''}\\<rbrakk>\n    \\<Longrightarrow> False\n 10. \\<lbrakk>(BSI.CD_on UNIV {} = {} \\<and>\n               (\\<Union>h. CX5h h {}) = {}) \\<and>\n              (\\<forall>h X'.\n                  \\<not> (X' \\<noteq> CX5h h {} \\<and>\n                          X' = CX5h h ({} \\<union> X') \\<and>\n                          X' \\<subseteq> BSI.CD_on UNIV ({} \\<union> X')));\n      X = {}\\<rbrakk>\n     \\<Longrightarrow> False", "apply (auto 0 1 simp: D2_UNION H2_UNION X5_ALL BSI.mem_CD_on_Cd BSI.maxR_def linord_of_list_linord_of_listP)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}\n\ngoal (1 subgoal):\n 1. X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2} \\<Longrightarrow>\n    BSI.stable_on UNIV X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2} \\<Longrightarrow>\n    BSI.stable_on UNIV X", "assume ?rhs"], ["proof (state)\nthis:\n  X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}\n\ngoal (1 subgoal):\n 1. X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2} \\<Longrightarrow>\n    BSI.stable_on UNIV X", "then"], ["proof (chain)\npicking this:\n  X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}", "show ?lhs"], ["proof (prove)\nusing this:\n  X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}\n\ngoal (1 subgoal):\n 1. BSI.stable_on UNIV X", "using Xd1'_Xd2_stable Xd1_Xd2'_stable"], ["proof (prove)\nusing this:\n  X = {X5.Xd1, X5.Xd2'} \\<or> X = {X5.Xd1', X5.Xd2}\n  BSI.stable_on UNIV {X5.Xd1', X5.Xd2}\n  BSI.stable_on UNIV {X5.Xd1, X5.Xd2'}\n\ngoal (1 subgoal):\n 1. BSI.stable_on UNIV X", "by blast"], ["proof (state)\nthis:\n  BSI.stable_on UNIV X\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "text (in Contracts) \\<open>\n\nTherefore there is no doctor-optimal match under these preferences:\n\n\\<close>"], ["", "lemma\n  \"\\<not>(\\<exists> (Y::X5 set). BSI.doctor_optimal_match UNIV Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>Y. BSI.doctor_optimal_match UNIV Y", "unfolding BSI.doctor_optimal_match_def BSI_stable"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>Y.\n       (Y = {X5.Xd1, X5.Xd2'} \\<or> Y = {X5.Xd1', X5.Xd2}) \\<and>\n       (\\<forall>X.\n           \\<forall>x\\<in>X.\n              X = {X5.Xd1, X5.Xd2'} \\<or>\n              X = {X5.Xd1', X5.Xd2} \\<longrightarrow>\n              (\\<exists>y\\<in>Y. (x, y) \\<in> PX5d (X5d x)))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Y.\n       \\<forall>X.\n          \\<forall>x\\<in>X.\n             (X = {X5.Xd1, X5.Xd2'} \\<longrightarrow>\n              (\\<exists>y\\<in>Y. (x, y) \\<in> PX5d (X5d x))) \\<and>\n             (X = {X5.Xd1', X5.Xd2} \\<longrightarrow>\n              (\\<exists>y\\<in>Y.\n                  (x, y) \\<in> PX5d (X5d x))) \\<Longrightarrow>\n       Y \\<noteq> {X5.Xd1, X5.Xd2'} \\<and> Y \\<noteq> {X5.Xd1', X5.Xd2}", "apply (cut_tac X=Y in X5_pow)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Y.\n       \\<lbrakk>\\<forall>X.\n                   \\<forall>x\\<in>X.\n                      (X = {X5.Xd1, X5.Xd2'} \\<longrightarrow>\n                       (\\<exists>y\\<in>Y. (x, y) \\<in> PX5d (X5d x))) \\<and>\n                      (X = {X5.Xd1', X5.Xd2} \\<longrightarrow>\n                       (\\<exists>y\\<in>Y. (x, y) \\<in> PX5d (X5d x)));\n        Y \\<in> set `\n                set (subseqs\n                      [X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2''])\\<rbrakk>\n       \\<Longrightarrow> Y \\<noteq> {X5.Xd1, X5.Xd2'} \\<and>\n                         Y \\<noteq> {X5.Xd1', X5.Xd2}", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Y.\n       \\<lbrakk>\\<forall>X.\n                   \\<forall>x\\<in>X.\n                      (X = {X5.Xd1, X5.Xd2'} \\<longrightarrow>\n                       (\\<exists>y\\<in>Y. (x, y) \\<in> PX5d (X5d x))) \\<and>\n                      (X = {X5.Xd1', X5.Xd2} \\<longrightarrow>\n                       (\\<exists>y\\<in>Y. (x, y) \\<in> PX5d (X5d x)));\n        Y = {X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd1, X5.Xd1', X5.Xd2, X5.Xd2'} \\<or>\n        Y = {X5.Xd1, X5.Xd1', X5.Xd2, Xd2''} \\<or>\n        Y = {X5.Xd1, X5.Xd1', X5.Xd2} \\<or>\n        Y = {X5.Xd1, X5.Xd1', X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd1, X5.Xd1', X5.Xd2'} \\<or>\n        Y = {X5.Xd1, X5.Xd1', Xd2''} \\<or>\n        Y = {X5.Xd1, X5.Xd1'} \\<or>\n        Y = {X5.Xd1, X5.Xd2, X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd1, X5.Xd2, X5.Xd2'} \\<or>\n        Y = {X5.Xd1, X5.Xd2, Xd2''} \\<or>\n        Y = {X5.Xd1, X5.Xd2} \\<or>\n        Y = {X5.Xd1, X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd1, X5.Xd2'} \\<or>\n        Y = {X5.Xd1, Xd2''} \\<or>\n        Y = {X5.Xd1} \\<or>\n        Y = {X5.Xd1', X5.Xd2, X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd1', X5.Xd2, X5.Xd2'} \\<or>\n        Y = {X5.Xd1', X5.Xd2, Xd2''} \\<or>\n        Y = {X5.Xd1', X5.Xd2} \\<or>\n        Y = {X5.Xd1', X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd1', X5.Xd2'} \\<or>\n        Y = {X5.Xd1', Xd2''} \\<or>\n        Y = {X5.Xd1'} \\<or>\n        Y = {X5.Xd2, X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd2, X5.Xd2'} \\<or>\n        Y = {X5.Xd2, Xd2''} \\<or>\n        Y = {X5.Xd2} \\<or>\n        Y = {X5.Xd2', Xd2''} \\<or>\n        Y = {X5.Xd2'} \\<or> Y = {Xd2''} \\<or> Y = {}\\<rbrakk>\n       \\<Longrightarrow> Y \\<noteq> {X5.Xd1, X5.Xd2'} \\<and>\n                         Y \\<noteq> {X5.Xd1', X5.Xd2}", "apply (elim disjE; simp add: insert_eq_iff; simp add: X5_ALL linord_of_list_linord_of_listP)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection\\<open> Theorem~3: @{emph \\<open>pareto separability\\<close>} relates @{emph \\<open>unilateral substitutes\\<close>} and @{emph \\<open>substitutes\\<close>} \\<close>"], ["", "text\\<open>\n\n\\citet[\\S4]{HatfieldKojima:2010} proceed to define @{emph \\<open>unilateral\nsubstitutes\\<close>}:\n\\begin{quote}\n\n[P]references satisfy @{emph \\<open>unilateral substitutes\\<close>} if whenever a\nhospital rejects the contract @{term \"z\"} when that is the only\ncontract with @{term \"Xd z\"} available, it still rejects the contract\n@{term \"z\"} when the choice set expands.\n\n\\end{quote}\n\n\\<close>"], ["", "context Contracts\nbegin"], ["", "definition unilateral_substitutes_on :: \"'x set \\<Rightarrow> 'x cfun \\<Rightarrow> bool\" where\n  \"unilateral_substitutes_on A f\n     \\<longleftrightarrow> \\<not>(\\<exists>B\\<subseteq>A. \\<exists>a b. {a, b} \\<subseteq> A \\<and> Xd b \\<notin> Xd ` B \\<and> b \\<notin> f (B \\<union> {b}) \\<and> b \\<in> f (B \\<union> {a, b}))\""], ["", "abbreviation unilateral_substitutes :: \"'x cfun \\<Rightarrow> bool\" where\n  \"unilateral_substitutes \\<equiv> unilateral_substitutes_on UNIV\""], ["", "lemma unilateral_substitutes_on_def2:\n  \"unilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. Xd b \\<notin> Xd ` B \\<and> b \\<notin> f (B \\<union> {b}) \\<longrightarrow> b \\<notin> f (B \\<union> {a, b}))\"\n(*<*)\n(is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f =\n    (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              Xd b \\<notin> Xd ` B \\<and>\n              b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n              b \\<notin> f (B \\<union> {a, b}))", "proof %invisible (rule iffI, clarsimp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>B a b.\n       \\<lbrakk>unilateral_substitutes_on A f; B \\<subseteq> A; a \\<in> A;\n        b \\<in> A; Xd b \\<notin> Xd ` B; b \\<notin> f (insert b B);\n        b \\<in> f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    unilateral_substitutes_on A f", "fix B a b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>B a b.\n       \\<lbrakk>unilateral_substitutes_on A f; B \\<subseteq> A; a \\<in> A;\n        b \\<in> A; Xd b \\<notin> Xd ` B; b \\<notin> f (insert b B);\n        b \\<in> f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    unilateral_substitutes_on A f", "assume lhs: ?lhs and XXX: \"B \\<subseteq> A\" \"a \\<in> A\" \"b \\<in> A\" \"Xd b \\<notin> Xd ` B\" \"b \\<notin> f (insert b B)\" \"b \\<in> f (insert a (insert b B))\""], ["proof (state)\nthis:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n\ngoal (2 subgoals):\n 1. \\<And>B a b.\n       \\<lbrakk>unilateral_substitutes_on A f; B \\<subseteq> A; a \\<in> A;\n        b \\<in> A; Xd b \\<notin> Xd ` B; b \\<notin> f (insert b B);\n        b \\<in> f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    unilateral_substitutes_on A f", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof(cases \"a \\<in> B\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> B \\<Longrightarrow> False\n 2. a \\<notin> B \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  a \\<in> B\n\ngoal (2 subgoals):\n 1. a \\<in> B \\<Longrightarrow> False\n 2. a \\<notin> B \\<Longrightarrow> False", "with XXX"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<in> B", "show ?thesis"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<in> B\n\ngoal (1 subgoal):\n 1. False", "by (simp add: insert_absorb)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. a \\<notin> B \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> B \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  a \\<notin> B\n\ngoal (1 subgoal):\n 1. a \\<notin> B \\<Longrightarrow> False", "with lhs XXX"], ["proof (chain)\npicking this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<notin> B", "show ?thesis"], ["proof (prove)\nusing this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<notin> B\n\ngoal (1 subgoal):\n 1. False", "unfolding unilateral_substitutes_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>B\\<subseteq>A.\n             \\<exists>a b.\n                {a, b} \\<subseteq> A \\<and>\n                Xd b \\<notin> Xd ` B \\<and>\n                b \\<notin> f (B \\<union> {b}) \\<and>\n                b \\<in> f (B \\<union> {a, b}))\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  b \\<in> f (insert a (insert b B))\n  a \\<notin> B\n\ngoal (1 subgoal):\n 1. False", "by (cases \"b \\<in> B\") (auto simp: insert_commute insert_absorb)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<forall>B\\<subseteq>A.\n       \\<forall>a\\<in>A.\n          \\<forall>b\\<in>A.\n             Xd b \\<notin> Xd ` B \\<and>\n             b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n             b \\<notin> f (B \\<union> {a, b}) \\<Longrightarrow>\n    unilateral_substitutes_on A f", "qed (fastforce simp: unilateral_substitutes_on_def)"], ["", "lemmas %invisible unilateral_substitutes_onI = iffD2[OF unilateral_substitutes_on_def2, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "lemmas %invisible unilateral_substitutes_onD = iffD1[OF unilateral_substitutes_on_def2, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "lemmas %invisible unilateral_substitutes_def = unilateral_substitutes_on_def2[where A=UNIV, simplified]"], ["", "lemmas %invisible unilateral_substitutesI = iffD2[OF unilateral_substitutes_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "lemmas %invisible unilateral_substitutesD = iffD1[OF unilateral_substitutes_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "(*>*)"], ["", "text\\<open>\n\n\\citet[\\S4, Definition~6]{AygunSonmez:2012-WP} give the following equivalent definition:\n\n\\<close>"], ["", "lemma unilateral_substitutes_on_def3:\n  \"unilateral_substitutes_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a\\<in>A. \\<forall>b\\<in>A. b \\<notin> f (B \\<union> {b}) \\<and> b \\<in> f (B \\<union> {a, b}) \\<longrightarrow> Xd b \\<in> Xd ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f =\n    (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              b \\<notin> f (B \\<union> {b}) \\<and>\n              b \\<in> f (B \\<union> {a, b}) \\<longrightarrow>\n              Xd b \\<in> Xd ` B)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f =\n    (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              b \\<notin> f (B \\<union> {b}) \\<and>\n              b \\<in> f (B \\<union> {a, b}) \\<longrightarrow>\n              Xd b \\<in> Xd ` B)", "unfolding %invisible unilateral_substitutes_on_def2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              Xd b \\<notin> Xd ` B \\<and>\n              b \\<notin> f (B \\<union> {b}) \\<longrightarrow>\n              b \\<notin> f (B \\<union> {a, b})) =\n    (\\<forall>B\\<subseteq>A.\n        \\<forall>a\\<in>A.\n           \\<forall>b\\<in>A.\n              b \\<notin> f (B \\<union> {b}) \\<and>\n              b \\<in> f (B \\<union> {a, b}) \\<longrightarrow>\n              Xd b \\<in> Xd ` B)", "by blast"], ["", "lemmas %invisible unilateral_substitutes_def3 = unilateral_substitutes_on_def3[where A=UNIV, simplified]"], ["", "lemmas %invisible unilateral_substitutesD3 = iffD1[OF unilateral_substitutes_def3, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "(*>*)"], ["", "text\\<open>\\<close>"], ["", "lemma substitutes_on_unilateral_substitutes_on:\n  assumes \"substitutes_on A f\"\n  shows \"unilateral_substitutes_on A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f", "using %invisible assms"], ["proof (prove)\nusing this:\n  substitutes_on A f\n\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f", "by (auto intro!: unilateral_substitutes_onI dest: substitutes_onD)"], ["", "lemma unilateral_substitutes_on_bilateral_substitutes_on:\n  assumes \"unilateral_substitutes_on A f\"\n  shows \"bilateral_substitutes_on A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bilateral_substitutes_on A f", "using %invisible assms"], ["proof (prove)\nusing this:\n  unilateral_substitutes_on A f\n\ngoal (1 subgoal):\n 1. bilateral_substitutes_on A f", "by (auto intro!: bilateral_substitutes_onI dest: unilateral_substitutes_onD[rotated -1])"], ["", "text\\<open>\n\nThe following defines locales for the @{const\n\"unilateral_substitutes\"} hypothesis, and inserts these between those\nfor @{const \"substitutes\"} and @{const \"bilateral_substitutes\"}.\n\n\\<close>"], ["", "end"], ["", "locale ContractsWithUnilateralSubstitutes = Contracts +\n  assumes Ch_unilateral_substitutes: \"\\<forall>h. unilateral_substitutes (Ch h)\""], ["", "sublocale ContractsWithUnilateralSubstitutes < ContractsWithBilateralSubstitutes"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutes Xd Xh Pd Ch", "using %invisible Ch_unilateral_substitutes"], ["proof (prove)\nusing this:\n  \\<forall>h. unilateral_substitutes_on UNIV (Ch h)\n\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutes Xd Xh Pd Ch", "by unfold_locales (blast intro: unilateral_substitutes_on_bilateral_substitutes_on)"], ["", "sublocale ContractsWithSubstitutes < ContractsWithUnilateralSubstitutes"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithUnilateralSubstitutes Xd Xh Pd Ch", "using %invisible Ch_substitutes"], ["proof (prove)\nusing this:\n  \\<forall>h. substitutes (Ch h)\n\ngoal (1 subgoal):\n 1. ContractsWithUnilateralSubstitutes Xd Xh Pd Ch", "by unfold_locales (blast intro: substitutes_on_unilateral_substitutes_on)"], ["", "locale ContractsWithUnilateralSubstitutesAndIRC =\n  ContractsWithUnilateralSubstitutes + ContractsWithIRC"], ["", "sublocale ContractsWithUnilateralSubstitutesAndIRC < ContractsWithBilateralSubstitutesAndIRC"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithBilateralSubstitutesAndIRC Xd Xh Pd Ch", "by %invisible unfold_locales"], ["", "sublocale ContractsWithSubstitutesAndIRC < ContractsWithUnilateralSubstitutesAndIRC"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithUnilateralSubstitutesAndIRC Xd Xh Pd Ch", "by %invisible unfold_locales"], ["", "text (in Contracts) \\<open>\n\n\\citet[Theorem~3]{HatfieldKojima:2010} relate @{const\n\"unilateral_substitutes\"} to @{const \"substitutes\"} using @{emph\n\\<open>Pareto separability\\<close>}:\n\\begin{quote}\n\nPreferences are @{emph \\<open>Pareto separable\\<close>} for a hospital if the\nhospital's choice between \\<open>x\\<close> and \\<open>x'\\<close>, two\n[distinct] contracts with the same doctor, does not depend on what\nother contracts the hospital has access to.\n\n\\end{quote}\nThis result also depends on @{const \"irc\"}.\n\n\\<close>"], ["", "context Contracts\nbegin"], ["", "definition pareto_separable_on :: \"'x set \\<Rightarrow> bool\" where\n  \"pareto_separable_on A\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>C\\<subseteq>A. \\<forall>a b. {a, b} \\<subseteq> A \\<and> a \\<noteq> b \\<and> Xd a = Xd b \\<and> Xh a = Xh b\n                     \\<and> a \\<in> Ch (Xh b) (B \\<union> {a, b}) \\<longrightarrow> b \\<notin> Ch (Xh b) (C \\<union> {a, b}))\""], ["", "abbreviation pareto_separable :: \"bool\" where\n  \"pareto_separable \\<equiv> pareto_separable_on UNIV\""], ["", "lemmas %invisible pareto_separable_def = pareto_separable_on_def[where A=UNIV, simplified]"], ["", "lemmas %invisible pareto_separable_onI = iffD2[OF pareto_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "lemmas %invisible pareto_separable_onD = iffD1[OF pareto_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "lemma substitutes_on_pareto_separable_on:\n  assumes \"\\<forall>h. substitutes_on A (Ch h)\"\n  shows \"pareto_separable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pareto_separable_on A", "proof(rule pareto_separable_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B C a b.\n       \\<lbrakk>B \\<subseteq> A; C \\<subseteq> A; a \\<in> A; b \\<in> A;\n        a \\<noteq> b; Xd a = Xd b; Xh a = Xh b;\n        a \\<in> Ch (Xh b) (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch (Xh b) (insert a (insert b C))", "fix B C a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B C a b.\n       \\<lbrakk>B \\<subseteq> A; C \\<subseteq> A; a \\<in> A; b \\<in> A;\n        a \\<noteq> b; Xd a = Xd b; Xh a = Xh b;\n        a \\<in> Ch (Xh b) (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch (Xh b) (insert a (insert b C))", "assume XXX: \"B \\<subseteq> A\" \"C \\<subseteq> A\" \"a \\<in> A\" \"b \\<in> A\" \"a \\<noteq> b\" \"Xd a = Xd b\" \"Xh a = Xh b\" \"a \\<in> Ch (Xh b) (insert a (insert b B))\""], ["proof (state)\nthis:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. \\<And>B C a b.\n       \\<lbrakk>B \\<subseteq> A; C \\<subseteq> A; a \\<in> A; b \\<in> A;\n        a \\<noteq> b; Xd a = Xd b; Xh a = Xh b;\n        a \\<in> Ch (Xh b) (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch (Xh b) (insert a (insert b C))", "note Ch_iiaD = iia_onD[OF iffD1[OF substitutes_iia spec[OF \\<open>\\<forall>h. substitutes_on A (Ch h)\\<close>]], rotated -1, simplified]"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> Ch ?x2 ?B; ?B \\<subseteq> A; ?C \\<subseteq> ?B;\n   ?a \\<in> ?C\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> Ch ?x2 ?C\n\ngoal (1 subgoal):\n 1. \\<And>B C a b.\n       \\<lbrakk>B \\<subseteq> A; C \\<subseteq> A; a \\<in> A; b \\<in> A;\n        a \\<noteq> b; Xd a = Xd b; Xh a = Xh b;\n        a \\<in> Ch (Xh b) (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch (Xh b) (insert a (insert b C))", "from XXX"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))", "have \"a \\<in> Ch (Xh b) {a, b}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. a \\<in> Ch (Xh b) {a, b}", "by (fast elim: Ch_iiaD)"], ["proof (state)\nthis:\n  a \\<in> Ch (Xh b) {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>B C a b.\n       \\<lbrakk>B \\<subseteq> A; C \\<subseteq> A; a \\<in> A; b \\<in> A;\n        a \\<noteq> b; Xd a = Xd b; Xh a = Xh b;\n        a \\<in> Ch (Xh b) (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch (Xh b) (insert a (insert b C))", "with XXX"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n  a \\<in> Ch (Xh b) {a, b}", "have \"b \\<notin> Ch (Xh b) {a, b}\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n  a \\<in> Ch (Xh b) {a, b}\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch (Xh b) {a, b}", "by (meson Ch_singular inj_on_eq_iff)"], ["proof (state)\nthis:\n  b \\<notin> Ch (Xh b) {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>B C a b.\n       \\<lbrakk>B \\<subseteq> A; C \\<subseteq> A; a \\<in> A; b \\<in> A;\n        a \\<noteq> b; Xd a = Xd b; Xh a = Xh b;\n        a \\<in> Ch (Xh b) (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch (Xh b) (insert a (insert b C))", "with XXX"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n  b \\<notin> Ch (Xh b) {a, b}", "have \"b \\<notin> Ch (Xh b) (C \\<union> {a, b})\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n  b \\<notin> Ch (Xh b) {a, b}\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch (Xh b) (C \\<union> {a, b})", "by (blast dest: Ch_iiaD)"], ["proof (state)\nthis:\n  b \\<notin> Ch (Xh b) (C \\<union> {a, b})\n\ngoal (1 subgoal):\n 1. \\<And>B C a b.\n       \\<lbrakk>B \\<subseteq> A; C \\<subseteq> A; a \\<in> A; b \\<in> A;\n        a \\<noteq> b; Xd a = Xd b; Xh a = Xh b;\n        a \\<in> Ch (Xh b) (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch (Xh b) (insert a (insert b C))", "with XXX"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n  b \\<notin> Ch (Xh b) (C \\<union> {a, b})", "show \"b \\<notin> Ch (Xh b) (insert a (insert b C))\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  C \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a \\<noteq> b\n  Xd a = Xd b\n  Xh a = Xh b\n  a \\<in> Ch (Xh b) (insert a (insert b B))\n  b \\<notin> Ch (Xh b) (C \\<union> {a, b})\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch (Xh b) (insert a (insert b C))", "by simp"], ["proof (state)\nthis:\n  b \\<notin> Ch (Xh b) (insert a (insert b C))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unilateral_substitutes_on_pareto_separable_on_substitutes_on:\n  assumes \"\\<forall>h. unilateral_substitutes_on A (Ch h)\"\n  assumes \"\\<forall>h. irc_on A (Ch h)\"\n  assumes \"pareto_separable_on A\"\n  shows \"substitutes_on A (Ch h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. substitutes_on A (Ch h)", "proof(rule substitutes_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B a b.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A;\n        b \\<notin> Ch h (insert b B)\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch h (insert a (insert b B))", "fix B a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B a b.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A;\n        b \\<notin> Ch h (insert b B)\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch h (insert a (insert b B))", "assume XXX: \"B \\<subseteq> A\" \"a \\<in> A\" \"b \\<in> A\" \"b \\<notin> Ch h (insert b B)\""], ["proof (state)\nthis:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n\ngoal (1 subgoal):\n 1. \\<And>B a b.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A;\n        b \\<notin> Ch h (insert b B)\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> Ch h (insert a (insert b B))", "show \"b \\<notin> Ch h (insert a (insert b B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b B))", "proof(cases \"Xd b \\<in> Xd ` B\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` B \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "case True"], ["proof (state)\nthis:\n  Xd b \\<in> Xd ` B\n\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` B \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b B))", "proof(cases \"Xd b \\<in> Xd ` Ch h (insert b B)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "case True"], ["proof (state)\nthis:\n  Xd b \\<in> Xd ` Ch h (insert b B)\n\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "then"], ["proof (chain)\npicking this:\n  Xd b \\<in> Xd ` Ch h (insert b B)", "obtain x where \"x \\<in> Ch h (insert b B)\" \"Xd x = Xd b\""], ["proof (prove)\nusing this:\n  Xd b \\<in> Xd ` Ch h (insert b B)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> Ch h (insert b B); Xd x = Xd b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b\n\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "moreover"], ["proof (state)\nthis:\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b\n\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "with XXX"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b", "have \"x \\<in> B\" \"x \\<noteq> b\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b\n\ngoal (1 subgoal):\n 1. x \\<in> B &&& x \\<noteq> b", "using Ch_range"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n\ngoal (1 subgoal):\n 1. x \\<in> B &&& x \\<noteq> b", "by blast+"], ["proof (state)\nthis:\n  x \\<in> B\n  x \\<noteq> b\n\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "moreover"], ["proof (state)\nthis:\n  x \\<in> B\n  x \\<noteq> b\n\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "note \\<open>pareto_separable_on A\\<close> XXX"], ["proof (state)\nthis:\n  pareto_separable_on A\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n\ngoal (2 subgoals):\n 1. Xd b \\<in> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))\n 2. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b\n  x \\<in> B\n  x \\<noteq> b\n  pareto_separable_on A\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b\n  x \\<in> B\n  x \\<noteq> b\n  pareto_separable_on A\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b B))", "using pareto_separable_onD[where A=A and B=\"B - {x}\" and a=x and b=b and C=\"insert a (B - {x})\"] Ch_range"], ["proof (prove)\nusing this:\n  x \\<in> Ch h (insert b B)\n  Xd x = Xd b\n  x \\<in> B\n  x \\<noteq> b\n  pareto_separable_on A\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  \\<lbrakk>pareto_separable_on A; B - {x} \\<subseteq> A;\n   insert a (B - {x}) \\<subseteq> A; x \\<in> A; b \\<in> A; x \\<noteq> b;\n   Xd x = Xd b; Xh x = Xh b;\n   x \\<in> Ch (Xh b) (insert x (insert b (B - {x})))\\<rbrakk>\n  \\<Longrightarrow> b \\<notin> Ch (Xh b)\n                                (insert x (insert b (insert a (B - {x}))))\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b B))", "by (cases \"Xh b = h\") (auto simp: insert_commute insert_absorb)"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "case False"], ["proof (state)\nthis:\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "let ?B' = \"{x \\<in> B . Xd x \\<noteq> Xd b}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "from False"], ["proof (chain)\npicking this:\n  Xd b \\<notin> Xd ` Ch h (insert b B)", "have \"b \\<notin> Ch h (insert b B)\""], ["proof (prove)\nusing this:\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert b B)", "by blast"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert b B)\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "with \\<open>\\<forall>h. irc_on A (Ch h)\\<close> XXX False"], ["proof (chain)\npicking this:\n  \\<forall>h. irc_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert b B)", "have \"b \\<notin> Ch h (insert b ?B')\""], ["proof (prove)\nusing this:\n  \\<forall>h. irc_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert b B)\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert b {x \\<in> B. Xd x \\<noteq> Xd b})", "using consistency_onD[OF irc_on_consistency_on[where f=\"Ch h\"], where B=\"insert b B\" and C=\"insert b ?B'\"] Ch_range"], ["proof (prove)\nusing this:\n  \\<forall>h. irc_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert b B)\n  \\<lbrakk>irc_on ?A (Ch h); finite ?A; insert b B \\<subseteq> ?A;\n   insert b {x \\<in> B. Xd x \\<noteq> Xd b} \\<subseteq> insert b B;\n   Ch h (insert b B)\n   \\<subseteq> insert b {x \\<in> B. Xd x \\<noteq> Xd b}\\<rbrakk>\n  \\<Longrightarrow> Ch h (insert b B) =\n                    Ch h (insert b {x \\<in> B. Xd x \\<noteq> Xd b})\n  \\<forall>h X. Ch h X \\<subseteq> {x \\<in> X. Xh x = h}\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert b {x \\<in> B. Xd x \\<noteq> Xd b})", "by (fastforce iff: image_iff)"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert b {x \\<in> B. Xd x \\<noteq> Xd b})\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "with \\<open>\\<forall>h. unilateral_substitutes_on A (Ch h)\\<close> XXX False"], ["proof (chain)\npicking this:\n  \\<forall>h. unilateral_substitutes_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert b {x \\<in> B. Xd x \\<noteq> Xd b})", "have \"b \\<notin> Ch h (insert a (insert b ?B'))\""], ["proof (prove)\nusing this:\n  \\<forall>h. unilateral_substitutes_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert b {x \\<in> B. Xd x \\<noteq> Xd b})\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b}))", "using unilateral_substitutes_onD[where f=\"Ch h\" and B=\"?B'\"]"], ["proof (prove)\nusing this:\n  \\<forall>h. unilateral_substitutes_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert b {x \\<in> B. Xd x \\<noteq> Xd b})\n  \\<lbrakk>unilateral_substitutes_on ?A (Ch h);\n   {x \\<in> B. Xd x \\<noteq> Xd b} \\<subseteq> ?A; ?a \\<in> ?A; ?b \\<in> ?A;\n   Xd ?b \\<notin> Xd ` {x \\<in> B. Xd x \\<noteq> Xd b};\n   ?b \\<notin> Ch h (insert ?b {x \\<in> B. Xd x \\<noteq> Xd b})\\<rbrakk>\n  \\<Longrightarrow> ?b \\<notin> Ch h\n                                 (insert ?a\n                                   (insert ?b\n                                     {x \\<in> B. Xd x \\<noteq> Xd b}))\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b}))", "by (fastforce iff: image_iff)"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b}))\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` Ch h (insert b B) \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "with \\<open>\\<forall>h. irc_on A (Ch h)\\<close> XXX False"], ["proof (chain)\npicking this:\n  \\<forall>h. irc_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b}))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>h. irc_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b}))\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b B))", "using consistency_onD[OF irc_on_consistency_on[where f=\"Ch h\"],\n                              where A=A and B=\"insert a (insert b B)\" and C=\"insert a (insert b ?B')\"]\n              Ch_range'[of _ h \"insert a (insert b B)\"] Ch_singular"], ["proof (prove)\nusing this:\n  \\<forall>h. irc_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` Ch h (insert b B)\n  b \\<notin> Ch h (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b}))\n  \\<lbrakk>irc_on A (Ch h); finite A; insert a (insert b B) \\<subseteq> A;\n   insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b})\n   \\<subseteq> insert a (insert b B);\n   Ch h (insert a (insert b B))\n   \\<subseteq> insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b})\\<rbrakk>\n  \\<Longrightarrow> Ch h (insert a (insert b B)) =\n                    Ch h\n                     (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd b}))\n  ?x \\<in> Ch h (insert a (insert b B)) \\<Longrightarrow>\n  ?x \\<in> insert a (insert b B) \\<and> Xh ?x = h\n  \\<forall>h X. inj_on Xd (Ch h X)\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b B))", "by simp (blast dest: inj_on_contraD)"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert a (insert b B))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "case False"], ["proof (state)\nthis:\n  Xd b \\<notin> Xd ` B\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> Ch h (insert a (insert b B))", "with \\<open>\\<forall>h. unilateral_substitutes_on A (Ch h)\\<close> XXX"], ["proof (chain)\npicking this:\n  \\<forall>h. unilateral_substitutes_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` B", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>h. unilateral_substitutes_on A (Ch h)\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  b \\<notin> Ch h (insert b B)\n  Xd b \\<notin> Xd ` B\n\ngoal (1 subgoal):\n 1. b \\<notin> Ch h (insert a (insert b B))", "by (blast dest: unilateral_substitutes_onD)"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert a (insert b B))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<notin> Ch h (insert a (insert b B))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Theorem_3:\n  assumes \"\\<forall>h. irc_on A (Ch h)\"\n  shows \"(\\<forall>h. substitutes_on A (Ch h)) \\<longleftrightarrow> (\\<forall>h. unilateral_substitutes_on A (Ch h) \\<and> pareto_separable_on A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>h. substitutes_on A (Ch h)) =\n    (\\<forall>h.\n        unilateral_substitutes_on A (Ch h) \\<and> pareto_separable_on A)", "using %invisible assms\n      unilateral_substitutes_on_pareto_separable_on_substitutes_on substitutes_on_pareto_separable_on\n      substitutes_on_unilateral_substitutes_on"], ["proof (prove)\nusing this:\n  \\<forall>h. irc_on A (Ch h)\n  \\<lbrakk>\\<forall>h. unilateral_substitutes_on ?A (Ch h);\n   \\<forall>h. irc_on ?A (Ch h); pareto_separable_on ?A\\<rbrakk>\n  \\<Longrightarrow> substitutes_on ?A (Ch ?h)\n  \\<forall>h. substitutes_on ?A (Ch h) \\<Longrightarrow>\n  pareto_separable_on ?A\n  substitutes_on ?A ?f \\<Longrightarrow> unilateral_substitutes_on ?A ?f\n\ngoal (1 subgoal):\n 1. (\\<forall>h. substitutes_on A (Ch h)) =\n    (\\<forall>h.\n        unilateral_substitutes_on A (Ch h) \\<and> pareto_separable_on A)", "by blast"], ["", "end"], ["", "subsubsection\\<open> \\citet{AfacanTurhan:2015}: @{emph \\<open>doctor separability\\<close>} relates bi- and unilateral substitutes \\<close>"], ["", "context Contracts\nbegin"], ["", "text \\<open>\n\n\\citet[Theorem~1]{AfacanTurhan:2015} relate @{const\n\"bilateral_substitutes\"} and @{const \"unilateral_substitutes\"} using\n@{emph \\<open>doctor separability\\<close>}:\n\\begin{quote}\n\n@{emph \\<open>[Doctor separability (DS)]\\<close>} says that if a doctor is not chosen\nfrom a set of contracts in the sense that no contract of him is\nselected, then that doctor should still not be chosen unless a\ncontract of a new doctor (that is, doctor having no contract in the\ngiven set of contracts) becomes available. For practical purposes, we\ncan consider DS as capturing contracts where certain groups of doctors\nare substitutes. [footnote: If \\<open>Xd x \\<notin> Xd ` Ch h (Y\n\\<union> {x, z})\\<close>, then doctor \\<open>Xd x\\<close> is not\nchosen. And under DS, he continues not to be chosen unless a new\ndoctor comes. Hence, we can interpret it as the doctors in the given\nset of contracts are substitutes.]\n\n\\end{quote}\n\n\\<close>"], ["", "definition doctor_separable_on :: \"'x set \\<Rightarrow> 'x cfun \\<Rightarrow> bool\" where\n  \"doctor_separable_on A f\n     \\<longleftrightarrow> (\\<forall>B\\<subseteq>A. \\<forall>a b c. {a, b, c} \\<subseteq> A \\<and> Xd a \\<noteq> Xd b \\<and> Xd b = Xd c \\<and> Xd a \\<notin> Xd ` f (B \\<union> {a, b})\n         \\<longrightarrow> Xd a \\<notin> Xd ` f (B \\<union> {a, b, c}))\""], ["", "abbreviation doctor_separable :: \"'x cfun \\<Rightarrow> bool\" where\n  \"doctor_separable \\<equiv> doctor_separable_on UNIV\""], ["", "(*<*)"], ["", "lemmas doctor_separable_def = doctor_separable_on_def[where A=UNIV, simplified]"], ["", "lemmas doctor_separable_onI = iffD2[OF doctor_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "lemmas doctor_separable_onD = iffD1[OF doctor_separable_on_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp, rotated -1]"], ["", "(*>*)"], ["", "lemma unilateral_substitutes_on_doctor_separable_on:\n  assumes \"unilateral_substitutes_on A f\"\n  assumes \"irc_on A f\"\n  assumes \"\\<forall>B\\<subseteq>A. allocation (f B)\"\n  assumes \"f_range_on A f\"\n  shows \"doctor_separable_on A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. doctor_separable_on A f", "proof(rule doctor_separable_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "fix B a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "assume XXX: \"B \\<subseteq> A\" \"a \\<in> A\" \"b \\<in> A\" \"c \\<in> A\" \"Xd a \\<noteq> Xd b\" \"Xd b = Xd c\" \"Xd a \\<notin> Xd ` f (insert a (insert b B))\""], ["proof (state)\nthis:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "have \"a \\<notin> f (insert a (insert b (insert c B)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> f (insert a (insert b (insert c B)))", "proof(rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "assume a: \"a \\<in> f (insert a (insert b (insert c B)))\""], ["proof (state)\nthis:\n  a \\<in> f (insert a (insert b (insert c B)))\n\ngoal (1 subgoal):\n 1. a \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "let ?C = \"{x \\<in> B . Xd x \\<noteq> Xd a \\<or> x = a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "from \\<open>irc_on A f\\<close> \\<open>f_range_on A f\\<close> XXX(1-3,7)"], ["proof (chain)\npicking this:\n  irc_on A f\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` f (insert a (insert b B))", "have \"f (insert a (insert b B)) = f (insert a (insert b ?C))\""], ["proof (prove)\nusing this:\n  irc_on A f\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. f (insert a (insert b B)) =\n    f (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a}))", "by - (rule consistency_onD[OF irc_on_consistency_on[where A=A and f=f]];\n            fastforce dest: f_range_onD[where A=A and f=f and B=\"insert a (insert b B)\"] simp: rev_image_eqI)"], ["proof (state)\nthis:\n  f (insert a (insert b B)) =\n  f (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a}))\n\ngoal (1 subgoal):\n 1. a \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "with \\<open>unilateral_substitutes_on A f\\<close> XXX"], ["proof (chain)\npicking this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n  f (insert a (insert b B)) =\n  f (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a}))", "have abcC: \"a \\<notin> f (insert a (insert b (insert c ?C)))\""], ["proof (prove)\nusing this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n  f (insert a (insert b B)) =\n  f (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a}))\n\ngoal (1 subgoal):\n 1. a \\<notin> f (insert a\n                   (insert b\n                     (insert c\n                       {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))", "using unilateral_substitutes_onD[where A=A and f=f and a=c and b=a and B=\"insert b ?C - {a}\"]"], ["proof (prove)\nusing this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n  f (insert a (insert b B)) =\n  f (insert a (insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a}))\n  \\<lbrakk>unilateral_substitutes_on A f;\n   insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a} - {a} \\<subseteq> A;\n   c \\<in> A; a \\<in> A;\n   Xd a\n   \\<notin> Xd `\n            (insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a} - {a});\n   a \\<notin> f (insert a\n                  (insert b {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a} -\n                   {a}))\\<rbrakk>\n  \\<Longrightarrow> a \\<notin> f (insert c\n                                   (insert a\n                                     (insert b\n {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a} -\n{a})))\n\ngoal (1 subgoal):\n 1. a \\<notin> f (insert a\n                   (insert b\n                     (insert c\n                       {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))", "by (force simp: insert_commute)"], ["proof (state)\nthis:\n  a \\<notin> f (insert a\n                 (insert b\n                   (insert c {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))\n\ngoal (1 subgoal):\n 1. a \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "from \\<open>irc_on A f\\<close> \\<open>\\<forall>B\\<subseteq>A. allocation (f B)\\<close> \\<open>f_range_on A f\\<close> XXX(1-4) a"], ["proof (chain)\npicking this:\n  irc_on A f\n  \\<forall>B\\<subseteq>A. inj_on Xd (f B)\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  a \\<in> f (insert a (insert b (insert c B)))", "have \"f (insert a (insert b (insert c B))) = f (insert a (insert b (insert c ?C)))\""], ["proof (prove)\nusing this:\n  irc_on A f\n  \\<forall>B\\<subseteq>A. inj_on Xd (f B)\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  a \\<in> f (insert a (insert b (insert c B)))\n\ngoal (1 subgoal):\n 1. f (insert a (insert b (insert c B))) =\n    f (insert a\n        (insert b (insert c {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))", "by - (rule consistency_onD[OF irc_on_consistency_on[where A=A and f=f]], (auto)[4],\n            clarsimp, rule conjI, blast dest!: f_range_onD'[where A=A], metis inj_on_contraD insert_subset)"], ["proof (state)\nthis:\n  f (insert a (insert b (insert c B))) =\n  f (insert a\n      (insert b (insert c {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))\n\ngoal (1 subgoal):\n 1. a \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "with a abcC"], ["proof (chain)\npicking this:\n  a \\<in> f (insert a (insert b (insert c B)))\n  a \\<notin> f (insert a\n                 (insert b\n                   (insert c {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))\n  f (insert a (insert b (insert c B))) =\n  f (insert a\n      (insert b (insert c {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))", "show False"], ["proof (prove)\nusing this:\n  a \\<in> f (insert a (insert b (insert c B)))\n  a \\<notin> f (insert a\n                 (insert b\n                   (insert c {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))\n  f (insert a (insert b (insert c B))) =\n  f (insert a\n      (insert b (insert c {x \\<in> B. Xd x \\<noteq> Xd a \\<or> x = a})))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<notin> f (insert a (insert b (insert c B)))\n\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "moreover"], ["proof (state)\nthis:\n  a \\<notin> f (insert a (insert b (insert c B)))\n\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "have \"a' \\<notin> f (insert a (insert b (insert c B)))\" if a': \"a' \\<in> B\" \"Xd a' = Xd a\" for a'"], ["proof (prove)\ngoal (1 subgoal):\n 1. a' \\<notin> f (insert a (insert b (insert c B)))", "proof(rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "assume a'X: \"a' \\<in> f (insert a (insert b (insert c B)))\""], ["proof (state)\nthis:\n  a' \\<in> f (insert a (insert b (insert c B)))\n\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "let ?B = \"insert a B - {a'}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "from XXX a'"], ["proof (chain)\npicking this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n  a' \\<in> B\n  Xd a' = Xd a", "have XXX_7': \"Xd a \\<notin> Xd ` f (insert a' (insert b ?B))\""], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n  a' \\<in> B\n  Xd a' = Xd a\n\ngoal (1 subgoal):\n 1. Xd a \\<notin> Xd ` f (insert a' (insert b (insert a B - {a'})))", "by clarsimp (metis imageI insert_Diff_single insert_absorb insert_commute)"], ["proof (state)\nthis:\n  Xd a \\<notin> Xd ` f (insert a' (insert b (insert a B - {a'})))\n\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "let ?C = \"{x \\<in> ?B . Xd x \\<noteq> Xd a \\<or> x = a'}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "from \\<open>irc_on A f\\<close> \\<open>f_range_on A f\\<close> XXX(1-3) a' XXX_7'"], ["proof (chain)\npicking this:\n  irc_on A f\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a' \\<in> B\n  Xd a' = Xd a\n  Xd a \\<notin> Xd ` f (insert a' (insert b (insert a B - {a'})))", "have \"f (insert a' (insert b ?B)) = f (insert a' (insert b ?C))\""], ["proof (prove)\nusing this:\n  irc_on A f\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  a' \\<in> B\n  Xd a' = Xd a\n  Xd a \\<notin> Xd ` f (insert a' (insert b (insert a B - {a'})))\n\ngoal (1 subgoal):\n 1. f (insert a' (insert b (insert a B - {a'}))) =\n    f (insert a'\n        (insert b\n          {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))", "by - (rule consistency_onD[OF irc_on_consistency_on[where A=A and f=f]];\n            fastforce dest: f_range_onD[where A=A and f=f and B=\"insert a' (insert b ?B)\"] simp: rev_image_eqI)"], ["proof (state)\nthis:\n  f (insert a' (insert b (insert a B - {a'}))) =\n  f (insert a'\n      (insert b\n        {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))\n\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "with \\<open>unilateral_substitutes_on A f\\<close> XXX(1-6) XXX_7' a'"], ["proof (chain)\npicking this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a' (insert b (insert a B - {a'})))\n  a' \\<in> B\n  Xd a' = Xd a\n  f (insert a' (insert b (insert a B - {a'}))) =\n  f (insert a'\n      (insert b\n        {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))", "have abcC: \"a' \\<notin> f (insert a' (insert b (insert c ?C)))\""], ["proof (prove)\nusing this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a' (insert b (insert a B - {a'})))\n  a' \\<in> B\n  Xd a' = Xd a\n  f (insert a' (insert b (insert a B - {a'}))) =\n  f (insert a'\n      (insert b\n        {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))\n\ngoal (1 subgoal):\n 1. a' \\<notin> f (insert a'\n                    (insert b\n                      (insert c\n                        {x \\<in> insert a B - {a'}.\n                         Xd x \\<noteq> Xd a \\<or> x = a'})))", "using unilateral_substitutes_onD[where A=A and f=f and a=c and b=a' and B=\"insert b ?C - {a'}\"]"], ["proof (prove)\nusing this:\n  unilateral_substitutes_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a' (insert b (insert a B - {a'})))\n  a' \\<in> B\n  Xd a' = Xd a\n  f (insert a' (insert b (insert a B - {a'}))) =\n  f (insert a'\n      (insert b\n        {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))\n  \\<lbrakk>unilateral_substitutes_on A f;\n   insert b {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'} -\n   {a'}\n   \\<subseteq> A;\n   c \\<in> A; a' \\<in> A;\n   Xd a'\n   \\<notin> Xd `\n            (insert b\n              {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'} -\n             {a'});\n   a' \\<notin> f (insert a'\n                   (insert b\n                     {x \\<in> insert a B - {a'}.\n                      Xd x \\<noteq> Xd a \\<or> x = a'} -\n                    {a'}))\\<rbrakk>\n  \\<Longrightarrow> a' \\<notin> f (insert c\n                                    (insert a'\n(insert b {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'} -\n {a'})))\n\ngoal (1 subgoal):\n 1. a' \\<notin> f (insert a'\n                    (insert b\n                      (insert c\n                        {x \\<in> insert a B - {a'}.\n                         Xd x \\<noteq> Xd a \\<or> x = a'})))", "by (force simp: insert_commute rev_image_eqI)"], ["proof (state)\nthis:\n  a' \\<notin> f (insert a'\n                  (insert b\n                    (insert c\n                      {x \\<in> insert a B - {a'}.\n                       Xd x \\<noteq> Xd a \\<or> x = a'})))\n\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "have \"f (insert a' (insert b (insert c ?B))) = f (insert a' (insert b (insert c ?C)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (insert a' (insert b (insert c (insert a B - {a'})))) =\n    f (insert a'\n        (insert b\n          (insert c\n            {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'})))", "proof(rule consistency_onD[OF irc_on_consistency_on[where A=A and f=f]])"], ["proof (state)\ngoal (5 subgoals):\n 1. irc_on A f\n 2. finite A\n 3. insert a' (insert b (insert c (insert a B - {a'}))) \\<subseteq> A\n 4. insert a'\n     (insert b\n       (insert c\n         {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))\n    \\<subseteq> insert a' (insert b (insert c (insert a B - {a'})))\n 5. f (insert a' (insert b (insert c (insert a B - {a'}))))\n    \\<subseteq> insert a'\n                 (insert b\n                   (insert c\n                     {x \\<in> insert a B - {a'}.\n                      Xd x \\<noteq> Xd a \\<or> x = a'}))", "from a'"], ["proof (chain)\npicking this:\n  a' \\<in> B\n  Xd a' = Xd a", "have \"insert a' (insert b (insert c ?B)) = insert a (insert b (insert c B))\""], ["proof (prove)\nusing this:\n  a' \\<in> B\n  Xd a' = Xd a\n\ngoal (1 subgoal):\n 1. insert a' (insert b (insert c (insert a B - {a'}))) =\n    insert a (insert b (insert c B))", "by blast"], ["proof (state)\nthis:\n  insert a' (insert b (insert c (insert a B - {a'}))) =\n  insert a (insert b (insert c B))\n\ngoal (5 subgoals):\n 1. irc_on A f\n 2. finite A\n 3. insert a' (insert b (insert c (insert a B - {a'}))) \\<subseteq> A\n 4. insert a'\n     (insert b\n       (insert c\n         {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))\n    \\<subseteq> insert a' (insert b (insert c (insert a B - {a'})))\n 5. f (insert a' (insert b (insert c (insert a B - {a'}))))\n    \\<subseteq> insert a'\n                 (insert b\n                   (insert c\n                     {x \\<in> insert a B - {a'}.\n                      Xd x \\<noteq> Xd a \\<or> x = a'}))", "with \\<open>\\<forall>B\\<subseteq>A. allocation (f B)\\<close> \\<open>f_range_on A f\\<close> XXX(1-4) a' a'X"], ["proof (chain)\npicking this:\n  \\<forall>B\\<subseteq>A. inj_on Xd (f B)\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  a' \\<in> B\n  Xd a' = Xd a\n  a' \\<in> f (insert a (insert b (insert c B)))\n  insert a' (insert b (insert c (insert a B - {a'}))) =\n  insert a (insert b (insert c B))", "show \"f (insert a' (insert b (insert c ?B))) \\<subseteq> insert a' (insert b (insert c {x \\<in> ?B. Xd x \\<noteq> Xd a \\<or> x = a'}))\""], ["proof (prove)\nusing this:\n  \\<forall>B\\<subseteq>A. inj_on Xd (f B)\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  a' \\<in> B\n  Xd a' = Xd a\n  a' \\<in> f (insert a (insert b (insert c B)))\n  insert a' (insert b (insert c (insert a B - {a'}))) =\n  insert a (insert b (insert c B))\n\ngoal (1 subgoal):\n 1. f (insert a' (insert b (insert c (insert a B - {a'}))))\n    \\<subseteq> insert a'\n                 (insert b\n                   (insert c\n                     {x \\<in> insert a B - {a'}.\n                      Xd x \\<noteq> Xd a \\<or> x = a'}))", "by clarsimp (rule conjI, blast dest!: f_range_onD'[where A=A], metis inj_on_contraD insert_subset)"], ["proof (state)\nthis:\n  f (insert a' (insert b (insert c (insert a B - {a'}))))\n  \\<subseteq> insert a'\n               (insert b\n                 (insert c\n                   {x \\<in> insert a B - {a'}.\n                    Xd x \\<noteq> Xd a \\<or> x = a'}))\n\ngoal (4 subgoals):\n 1. irc_on A f\n 2. finite A\n 3. insert a' (insert b (insert c (insert a B - {a'}))) \\<subseteq> A\n 4. insert a'\n     (insert b\n       (insert c\n         {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'}))\n    \\<subseteq> insert a' (insert b (insert c (insert a B - {a'})))", "qed (use \\<open>irc_on A f\\<close> XXX(1-4) a' in auto)"], ["proof (state)\nthis:\n  f (insert a' (insert b (insert c (insert a B - {a'})))) =\n  f (insert a'\n      (insert b\n        (insert c\n          {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'})))\n\ngoal (1 subgoal):\n 1. a' \\<in> f (insert a (insert b (insert c B))) \\<Longrightarrow> False", "with a' a'X abcC"], ["proof (chain)\npicking this:\n  a' \\<in> B\n  Xd a' = Xd a\n  a' \\<in> f (insert a (insert b (insert c B)))\n  a' \\<notin> f (insert a'\n                  (insert b\n                    (insert c\n                      {x \\<in> insert a B - {a'}.\n                       Xd x \\<noteq> Xd a \\<or> x = a'})))\n  f (insert a' (insert b (insert c (insert a B - {a'})))) =\n  f (insert a'\n      (insert b\n        (insert c\n          {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'})))", "show False"], ["proof (prove)\nusing this:\n  a' \\<in> B\n  Xd a' = Xd a\n  a' \\<in> f (insert a (insert b (insert c B)))\n  a' \\<notin> f (insert a'\n                  (insert b\n                    (insert c\n                      {x \\<in> insert a B - {a'}.\n                       Xd x \\<noteq> Xd a \\<or> x = a'})))\n  f (insert a' (insert b (insert c (insert a B - {a'})))) =\n  f (insert a'\n      (insert b\n        (insert c\n          {x \\<in> insert a B - {a'}. Xd x \\<noteq> Xd a \\<or> x = a'})))\n\ngoal (1 subgoal):\n 1. False", "by simp (metis insert_Diff insert_Diff_single insert_commute)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?a' \\<in> B; Xd ?a' = Xd a\\<rbrakk>\n  \\<Longrightarrow> ?a' \\<notin> f (insert a (insert b (insert c B)))\n\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?a' \\<in> B; Xd ?a' = Xd a\\<rbrakk>\n  \\<Longrightarrow> ?a' \\<notin> f (insert a (insert b (insert c B)))\n\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "note \\<open>f_range_on A f\\<close> XXX"], ["proof (state)\nthis:\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. \\<And>B a b c.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; c \\<in> A;\n        Xd a \\<noteq> Xd b; Xd b = Xd c;\n        Xd a \\<notin> Xd ` f (insert a (insert b B))\\<rbrakk>\n       \\<Longrightarrow> Xd a\n                         \\<notin> Xd ` f (insert a (insert b (insert c B)))", "ultimately"], ["proof (chain)\npicking this:\n  a \\<notin> f (insert a (insert b (insert c B)))\n  \\<lbrakk>?a' \\<in> B; Xd ?a' = Xd a\\<rbrakk>\n  \\<Longrightarrow> ?a' \\<notin> f (insert a (insert b (insert c B)))\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))", "show \"Xd a \\<notin> Xd ` f (insert a (insert b (insert c B)))\""], ["proof (prove)\nusing this:\n  a \\<notin> f (insert a (insert b (insert c B)))\n  \\<lbrakk>?a' \\<in> B; Xd ?a' = Xd a\\<rbrakk>\n  \\<Longrightarrow> ?a' \\<notin> f (insert a (insert b (insert c B)))\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  c \\<in> A\n  Xd a \\<noteq> Xd b\n  Xd b = Xd c\n  Xd a \\<notin> Xd ` f (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. Xd a \\<notin> Xd ` f (insert a (insert b (insert c B)))", "by (fastforce dest: f_range_onD[where B=\"insert a (insert b (insert c B))\"])"], ["proof (state)\nthis:\n  Xd a \\<notin> Xd ` f (insert a (insert b (insert c B)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bilateral_substitutes_on_doctor_separable_on_unilateral_substitutes_on:\n  assumes \"bilateral_substitutes_on A f\"\n  assumes \"doctor_separable_on A f\"\n  assumes \"f_range_on A f\"\n  shows \"unilateral_substitutes_on A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f", "proof(rule unilateral_substitutes_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B a b.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; Xd b \\<notin> Xd ` B;\n        b \\<notin> f (insert b B)\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> f (insert a (insert b B))", "fix B a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B a b.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; Xd b \\<notin> Xd ` B;\n        b \\<notin> f (insert b B)\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> f (insert a (insert b B))", "assume XXX: \"B \\<subseteq> A\" \"a \\<in> A\" \"b \\<in> A\" \"Xd b \\<notin> Xd ` B\" \"b \\<notin> f (insert b B)\""], ["proof (state)\nthis:\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n\ngoal (1 subgoal):\n 1. \\<And>B a b.\n       \\<lbrakk>B \\<subseteq> A; a \\<in> A; b \\<in> A; Xd b \\<notin> Xd ` B;\n        b \\<notin> f (insert b B)\\<rbrakk>\n       \\<Longrightarrow> b \\<notin> f (insert a (insert b B))", "show \"b \\<notin> f (insert a (insert b B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<notin> f (insert a (insert b B))", "proof(cases \"Xd a \\<in> Xd ` B\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd a \\<in> Xd ` B \\<Longrightarrow> b \\<notin> f (insert a (insert b B))\n 2. Xd a \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> f (insert a (insert b B))", "case True"], ["proof (state)\nthis:\n  Xd a \\<in> Xd ` B\n\ngoal (2 subgoals):\n 1. Xd a \\<in> Xd ` B \\<Longrightarrow> b \\<notin> f (insert a (insert b B))\n 2. Xd a \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> f (insert a (insert b B))", "then"], ["proof (chain)\npicking this:\n  Xd a \\<in> Xd ` B", "obtain C c where Cc: \"B = insert c C\" \"c \\<notin> C\" \"Xd c = Xd a\""], ["proof (prove)\nusing this:\n  Xd a \\<in> Xd ` B\n\ngoal (1 subgoal):\n 1. (\\<And>c C.\n        \\<lbrakk>B = insert c C; c \\<notin> C; Xd c = Xd a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Set.set_insert image_iff)"], ["proof (state)\nthis:\n  B = insert c C\n  c \\<notin> C\n  Xd c = Xd a\n\ngoal (2 subgoals):\n 1. Xd a \\<in> Xd ` B \\<Longrightarrow> b \\<notin> f (insert a (insert b B))\n 2. Xd a \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> f (insert a (insert b B))", "from \\<open>b \\<notin> f (insert b B)\\<close> Cc"], ["proof (chain)\npicking this:\n  b \\<notin> f (insert b B)\n  B = insert c C\n  c \\<notin> C\n  Xd c = Xd a", "have \"b \\<notin> f (insert b (insert c C))\""], ["proof (prove)\nusing this:\n  b \\<notin> f (insert b B)\n  B = insert c C\n  c \\<notin> C\n  Xd c = Xd a\n\ngoal (1 subgoal):\n 1. b \\<notin> f (insert b (insert c C))", "by simp"], ["proof (state)\nthis:\n  b \\<notin> f (insert b (insert c C))\n\ngoal (2 subgoals):\n 1. Xd a \\<in> Xd ` B \\<Longrightarrow> b \\<notin> f (insert a (insert b B))\n 2. Xd a \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> f (insert a (insert b B))", "with \\<open>f_range_on A f\\<close> XXX Cc"], ["proof (chain)\npicking this:\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  B = insert c C\n  c \\<notin> C\n  Xd c = Xd a\n  b \\<notin> f (insert b (insert c C))", "have \"Xd b \\<notin> Xd ` f (insert b (insert c C))\""], ["proof (prove)\nusing this:\n  f_range_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  B = insert c C\n  c \\<notin> C\n  Xd c = Xd a\n  b \\<notin> f (insert b (insert c C))\n\ngoal (1 subgoal):\n 1. Xd b \\<notin> Xd ` f (insert b (insert c C))", "by clarsimp (metis f_range_onD' image_eqI insertE insert_subset)"], ["proof (state)\nthis:\n  Xd b \\<notin> Xd ` f (insert b (insert c C))\n\ngoal (2 subgoals):\n 1. Xd a \\<in> Xd ` B \\<Longrightarrow> b \\<notin> f (insert a (insert b B))\n 2. Xd a \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> f (insert a (insert b B))", "with \\<open>doctor_separable_on A f\\<close> XXX Cc"], ["proof (chain)\npicking this:\n  doctor_separable_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  B = insert c C\n  c \\<notin> C\n  Xd c = Xd a\n  Xd b \\<notin> Xd ` f (insert b (insert c C))", "show ?thesis"], ["proof (prove)\nusing this:\n  doctor_separable_on A f\n  B \\<subseteq> A\n  a \\<in> A\n  b \\<in> A\n  Xd b \\<notin> Xd ` B\n  b \\<notin> f (insert b B)\n  B = insert c C\n  c \\<notin> C\n  Xd c = Xd a\n  Xd b \\<notin> Xd ` f (insert b (insert c C))\n\ngoal (1 subgoal):\n 1. b \\<notin> f (insert a (insert b B))", "by (auto simp: insert_commute dest: doctor_separable_onD)"], ["proof (state)\nthis:\n  b \\<notin> f (insert a (insert b B))\n\ngoal (1 subgoal):\n 1. Xd a \\<notin> Xd ` B \\<Longrightarrow>\n    b \\<notin> f (insert a (insert b B))", "qed (use \\<open>bilateral_substitutes_on A f\\<close> XXX in \\<open>simp add: bilateral_substitutes_onD\\<close>)"], ["proof (state)\nthis:\n  b \\<notin> f (insert a (insert b B))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unilateral_substitutes_on_doctor_separable_on_bilateral_substitutes_on:\n  assumes \"irc_on A f\"\n  assumes \"\\<forall>B\\<subseteq>A. allocation (f B)\" \\<comment> \\<open>A rephrasing of @{thm [source] \"Ch_singular\"}.\\<close>\n  assumes \"f_range_on A f\"\n  shows \"unilateral_substitutes_on A f \\<longleftrightarrow> bilateral_substitutes_on A f \\<and> doctor_separable_on A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f =\n    (bilateral_substitutes_on A f \\<and> doctor_separable_on A f)", "using %invisible assms\n      unilateral_substitutes_on_bilateral_substitutes_on\n      unilateral_substitutes_on_doctor_separable_on\n      bilateral_substitutes_on_doctor_separable_on_unilateral_substitutes_on"], ["proof (prove)\nusing this:\n  irc_on A f\n  \\<forall>B\\<subseteq>A. inj_on Xd (f B)\n  f_range_on A f\n  unilateral_substitutes_on ?A ?f \\<Longrightarrow>\n  bilateral_substitutes_on ?A ?f\n  \\<lbrakk>unilateral_substitutes_on ?A ?f; irc_on ?A ?f;\n   \\<forall>B\\<subseteq>?A. inj_on Xd (?f B); f_range_on ?A ?f\\<rbrakk>\n  \\<Longrightarrow> doctor_separable_on ?A ?f\n  \\<lbrakk>bilateral_substitutes_on ?A ?f; doctor_separable_on ?A ?f;\n   f_range_on ?A ?f\\<rbrakk>\n  \\<Longrightarrow> unilateral_substitutes_on ?A ?f\n\ngoal (1 subgoal):\n 1. unilateral_substitutes_on A f =\n    (bilateral_substitutes_on A f \\<and> doctor_separable_on A f)", "by metis"], ["", "text\\<open>\n\n\\citet[Remark~2]{AfacanTurhan:2015} observe the independence of the\n@{const \"doctor_separable\"}, @{const \"pareto_separable\"} and @{const\n\"bilateral_substitutes\"} conditions.\n\n\\<close>"], ["", "end"], ["", "subsection\\<open> Theorems~4 and 5: Doctor optimality \\<close>"], ["", "context ContractsWithUnilateralSubstitutesAndIRC\nbegin"], ["", "text \\<open>\n\nWe return to analyzing the COP following\n\\citet{HatfieldKojima:2010}. The next goal is to establish a\ndoctor-optimality result for it in the spirit of\n\\S\\ref{sec:contracts-optimality}.\n\nWe first show that, with hospital choice functions satisfying @{const\n\"unilateral_substitutes\"}, we effectively have the @{const\n\"substitutes\"} condition for all contracts that have been rejected. In\nother words, hospitals never renegotiate with doctors.\n\nThe proof is by induction over the finite set @{term \"Y\"}.\n\n\\<close>"], ["", "lemma\n  assumes \"Xd x \\<notin> Xd ` Ch h X\"\n  assumes \"x \\<in> X\"\n  shows no_renegotiation_union: \"x \\<notin> Ch h (X \\<union> Y)\"\n    and \"x \\<notin> Ch h (insert x ((X \\<union> Y) - {z. Xd z = Xd x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> Y) &&&\n    x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))", "using %invisible finite[of Y]"], ["proof (prove)\nusing this:\n  finite Y\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> Y) &&&\n    x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))", "proof induct"], ["proof (state)\ngoal (4 subgoals):\n 1. x \\<notin> Ch h (X \\<union> {})\n 2. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 4. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. x \\<notin> Ch h (X \\<union> {})\n 2. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 4. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "{"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. x \\<notin> Ch h (X \\<union> {})\n 2. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 4. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. x \\<notin> Ch h (X \\<union> {})\n 2. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 4. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "from \\<open>Xd x \\<notin> Xd ` Ch h X\\<close>"], ["proof (chain)\npicking this:\n  Xd x \\<notin> Xd ` Ch h X", "show ?case"], ["proof (prove)\nusing this:\n  Xd x \\<notin> Xd ` Ch h X\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> {})", "by clarsimp"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> {})\n\ngoal (3 subgoals):\n 1. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "}"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> {})\n\ngoal (3 subgoals):\n 1. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "{"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> {})\n\ngoal (3 subgoals):\n 1. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 3. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "from assms"], ["proof (chain)\npicking this:\n  Xd x \\<notin> Xd ` Ch h X\n  x \\<in> X", "show ?case"], ["proof (prove)\nusing this:\n  Xd x \\<notin> Xd ` Ch h X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))", "by - (clarsimp, drule subsetD[OF equalityD2[OF consistencyD[OF Ch_consistency[of h], where B=X]], rotated -1], auto simp: image_iff dest: Ch_range')"], ["proof (state)\nthis:\n  x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n\ngoal (2 subgoals):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "}"], ["proof (state)\nthis:\n  x \\<notin> Ch h (insert x (X \\<union> {} - {z. Xd z = Xd x}))\n\ngoal (2 subgoals):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "case (insert y Y)"], ["proof (state)\nthis:\n  finite Y\n  y \\<notin> Y\n  x \\<notin> Ch h (X \\<union> Y)\n  x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))\n\ngoal (2 subgoals):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "{"], ["proof (state)\nthis:\n  finite Y\n  y \\<notin> Y\n  x \\<notin> Ch h (X \\<union> Y)\n  x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))\n\ngoal (2 subgoals):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert xa F)\n 2. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> insert y Y)", "proof(cases \"y \\<in> Ch h (insert y (X \\<union> Y))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)\n 2. y \\<notin> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "case True"], ["proof (state)\nthis:\n  y \\<in> Ch h (insert y (X \\<union> Y))\n\ngoal (2 subgoals):\n 1. y \\<in> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)\n 2. y \\<notin> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "note \\<open>y \\<in> Ch h (insert y (X \\<union> Y))\\<close>"], ["proof (state)\nthis:\n  y \\<in> Ch h (insert y (X \\<union> Y))\n\ngoal (2 subgoals):\n 1. y \\<in> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)\n 2. y \\<notin> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> insert y Y)", "proof(cases \"Xd y = Xd x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd y = Xd x \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert y Y)\n 2. Xd y \\<noteq> Xd x \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "case True"], ["proof (state)\nthis:\n  Xd y = Xd x\n\ngoal (2 subgoals):\n 1. Xd y = Xd x \\<Longrightarrow> x \\<notin> Ch h (X \\<union> insert y Y)\n 2. Xd y \\<noteq> Xd x \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "with \\<open>x \\<in> X\\<close> \\<open>x \\<notin> Ch h (X \\<union> Y)\\<close> \\<open>y \\<in> Ch h (insert y (X \\<union> Y))\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X\n  x \\<notin> Ch h (X \\<union> Y)\n  y \\<in> Ch h (insert y (X \\<union> Y))\n  Xd y = Xd x", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> X\n  x \\<notin> Ch h (X \\<union> Y)\n  y \\<in> Ch h (insert y (X \\<union> Y))\n  Xd y = Xd x\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> insert y Y)", "by clarsimp (metis Ch_singular Un_iff inj_onD insert_absorb)"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> insert y Y)\n\ngoal (1 subgoal):\n 1. Xd y \\<noteq> Xd x \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xd y \\<noteq> Xd x \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "case False"], ["proof (state)\nthis:\n  Xd y \\<noteq> Xd x\n\ngoal (1 subgoal):\n 1. Xd y \\<noteq> Xd x \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "note xy = \\<open>Xd y \\<noteq> Xd x\\<close>"], ["proof (state)\nthis:\n  Xd y \\<noteq> Xd x\n\ngoal (1 subgoal):\n 1. Xd y \\<noteq> Xd x \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> insert y Y)", "proof(rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> Ch h (X \\<union> insert y Y) \\<Longrightarrow> False", "assume \"x \\<in> Ch h (X \\<union> insert y Y)\""], ["proof (state)\nthis:\n  x \\<in> Ch h (X \\<union> insert y Y)\n\ngoal (1 subgoal):\n 1. x \\<in> Ch h (X \\<union> insert y Y) \\<Longrightarrow> False", "with \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X\n  x \\<in> Ch h (X \\<union> insert y Y)", "have \"x \\<in> Ch h (insert y (insert x ((X \\<union> Y) - {z. Xd z = Xd x})))\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  x \\<in> Ch h (X \\<union> insert y Y)\n\ngoal (1 subgoal):\n 1. x \\<in> Ch h (insert y (insert x (X \\<union> Y - {z. Xd z = Xd x})))", "by - (rule subsetD[OF equalityD1[OF consistencyD[OF Ch_consistency[of h]]], rotated -1],\n                  assumption, clarsimp+, metis Ch_range' Ch_singular Un_iff inj_onD insertE)"], ["proof (state)\nthis:\n  x \\<in> Ch h (insert y (insert x (X \\<union> Y - {z. Xd z = Xd x})))\n\ngoal (1 subgoal):\n 1. x \\<in> Ch h (X \\<union> insert y Y) \\<Longrightarrow> False", "with \\<open>x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))\n  x \\<in> Ch h (insert y (insert x (X \\<union> Y - {z. Xd z = Xd x})))", "show False"], ["proof (prove)\nusing this:\n  x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))\n  x \\<in> Ch h (insert y (insert x (X \\<union> Y - {z. Xd z = Xd x})))\n\ngoal (1 subgoal):\n 1. False", "by (force dest: unilateral_substitutesD3[OF spec[OF Ch_unilateral_substitutes, of h], rotated])"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> insert y Y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> insert y Y)\n\ngoal (1 subgoal):\n 1. y \\<notin> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "case False"], ["proof (state)\nthis:\n  y \\<notin> Ch h (insert y (X \\<union> Y))\n\ngoal (1 subgoal):\n 1. y \\<notin> Ch h (insert y (X \\<union> Y)) \\<Longrightarrow>\n    x \\<notin> Ch h (X \\<union> insert y Y)", "with \\<open>x \\<notin> Ch h (X \\<union> Y)\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> Ch h (X \\<union> Y)\n  y \\<notin> Ch h (insert y (X \\<union> Y))", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> Ch h (X \\<union> Y)\n  y \\<notin> Ch h (insert y (X \\<union> Y))\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> insert y Y)", "using Ch_irc"], ["proof (prove)\nusing this:\n  x \\<notin> Ch h (X \\<union> Y)\n  y \\<notin> Ch h (insert y (X \\<union> Y))\n  \\<forall>h. irc (Ch h)\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> insert y Y)", "unfolding irc_def"], ["proof (prove)\nusing this:\n  x \\<notin> Ch h (X \\<union> Y)\n  y \\<notin> Ch h (insert y (X \\<union> Y))\n  \\<forall>h B a.\n     a \\<notin> Ch h (insert a B) \\<longrightarrow>\n     Ch h (insert a B) = Ch h B\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (X \\<union> insert y Y)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> insert y Y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> insert y Y)\n\ngoal (1 subgoal):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "}"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> insert y Y)\n\ngoal (1 subgoal):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "{"], ["proof (state)\nthis:\n  x \\<notin> Ch h (X \\<union> insert y Y)\n\ngoal (1 subgoal):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>xa F.\n       \\<lbrakk>finite F; xa \\<notin> F; x \\<notin> Ch h (X \\<union> F);\n        x \\<notin> Ch h\n                    (insert x (X \\<union> F - {z. Xd z = Xd x}))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> Ch h\n                                     (insert x\n (X \\<union> insert xa F - {z. Xd z = Xd x}))", "from insert(4)"], ["proof (chain)\npicking this:\n  x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))", "show ?case"], ["proof (prove)\nusing this:\n  x \\<notin> Ch h (insert x (X \\<union> Y - {z. Xd z = Xd x}))\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (insert x (X \\<union> insert y Y - {z. Xd z = Xd x}))", "by (auto simp: insert_commute insert_Diff_if split: if_splits\n               dest: unilateral_substitutesD3[OF spec[OF Ch_unilateral_substitutes, of h], where a=y])"], ["proof (state)\nthis:\n  x \\<notin> Ch h (insert x (X \\<union> insert y Y - {z. Xd z = Xd x}))\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  x \\<notin> Ch h (insert x (X \\<union> insert y Y - {z. Xd z = Xd x}))\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n\nTo discharge the first antecedent of this lemma, we need an invariant\nfor the COP that asserts that, for each doctor @{term \"d\"}, there is a\nsubset of the contracts currently offered by @{term \"d\"} that was\npreviously uniformly rejected by the COP, for each contract that is\nrejected at the current step. To support a later theorem (see\n\\S\\ref{sec:cop-worst}) we require these subsets to be upwards-closed\nwith respect to the doctor's preferences.\n\n\\<close>"], ["", "definition\n  cop_F_rejected_inv :: \"'b set \\<Rightarrow> 'a set \\<Rightarrow> bool\"\nwhere\n  \"cop_F_rejected_inv ds fp \\<longleftrightarrow> (\\<forall>x\\<in>RH fp. \\<exists>fp'\\<subseteq>fp. x \\<in> fp' \\<and> above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp')\""], ["", "(*<*)"], ["", "lemmas cop_F_rejected_invI = iffD2[OF cop_F_rejected_inv_def, rule_format, simplified, unfolded conj_imp_eq_imp_imp]"], ["", "(*>*)"], ["", "lemma cop_F_rejected_inv:\n  shows \"valid ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp \\<and> allocation (CH fp)) cop_F_rejected_inv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))\n     cop_F_rejected_inv", "proof %invisible (induct rule: validI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cop_F_rejected_inv ds {}\n 2. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp);\n        cop_F_rejected_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> cop_F_rejected_inv ds (cop_F ds fp)", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. cop_F_rejected_inv ds {}\n 2. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp);\n        cop_F_rejected_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> cop_F_rejected_inv ds (cop_F ds fp)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cop_F_rejected_inv ds {}", "unfolding cop_F_rejected_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Rf CH {}.\n       \\<exists>fp'\\<subseteq>{}.\n          x \\<in> fp' \\<and>\n          above (Pd (Xd x)) x \\<subseteq> fp' \\<and>\n          Xd x \\<notin> Xd ` CH fp'", "by simp"], ["proof (state)\nthis:\n  cop_F_rejected_inv ds {}\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp);\n        cop_F_rejected_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> cop_F_rejected_inv ds (cop_F ds fp)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp);\n        cop_F_rejected_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> cop_F_rejected_inv ds (cop_F ds fp)", "case (step fp)"], ["proof (state)\nthis:\n  cop_F_range_inv ds fp \\<and>\n  cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp)\n  cop_F_rejected_inv ds fp\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp);\n        cop_F_rejected_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> cop_F_rejected_inv ds (cop_F ds fp)", "then"], ["proof (chain)\npicking this:\n  cop_F_range_inv ds fp \\<and>\n  cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp)\n  cop_F_rejected_inv ds fp", "have \"cop_F_closed_inv ds fp\"\n        and \"cop_F_range_inv ds fp\"\n        and \"allocation (CH fp)\"\n        and \"cop_F_rejected_inv ds fp\""], ["proof (prove)\nusing this:\n  cop_F_range_inv ds fp \\<and>\n  cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp)\n  cop_F_rejected_inv ds fp\n\ngoal (1 subgoal):\n 1. (cop_F_closed_inv ds fp &&& cop_F_range_inv ds fp) &&&\n    inj_on Xd (CH fp) &&& cop_F_rejected_inv ds fp", "by blast+"], ["proof (state)\nthis:\n  cop_F_closed_inv ds fp\n  cop_F_range_inv ds fp\n  inj_on Xd (CH fp)\n  cop_F_rejected_inv ds fp\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp);\n        cop_F_rejected_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> cop_F_rejected_inv ds (cop_F ds fp)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cop_F_rejected_inv ds (cop_F ds fp)", "proof(rule cop_F_rejected_invI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> cop_F ds fp; x \\<notin> CH (cop_F ds fp)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fp'\\<subseteq>cop_F ds fp.\n                            x \\<in> fp' \\<and>\n                            above (Pd (Xd x)) x \\<subseteq> fp' \\<and>\n                            Xd x \\<notin> Xd ` CH fp'", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> cop_F ds fp; x \\<notin> CH (cop_F ds fp)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fp'\\<subseteq>cop_F ds fp.\n                            x \\<in> fp' \\<and>\n                            above (Pd (Xd x)) x \\<subseteq> fp' \\<and>\n                            Xd x \\<notin> Xd ` CH fp'", "assume x: \"x \\<in> cop_F ds fp\" \"x \\<notin> CH (cop_F ds fp)\""], ["proof (state)\nthis:\n  x \\<in> cop_F ds fp\n  x \\<notin> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> cop_F ds fp; x \\<notin> CH (cop_F ds fp)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fp'\\<subseteq>cop_F ds fp.\n                            x \\<in> fp' \\<and>\n                            above (Pd (Xd x)) x \\<subseteq> fp' \\<and>\n                            Xd x \\<notin> Xd ` CH fp'", "show \"\\<exists>fp'\\<subseteq>cop_F ds fp. x \\<in> fp' \\<and> above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "proof(cases \"Xd x \\<in> Xd ` CH (cop_F ds fp)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. Xd x \\<notin> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "case True"], ["proof (state)\nthis:\n  Xd x \\<in> Xd ` CH (cop_F ds fp)\n\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. Xd x \\<notin> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with \\<open>x \\<notin> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> CH (cop_F ds fp)\n  Xd x \\<in> Xd ` CH (cop_F ds fp)", "obtain y\n        where y: \"Xd y = Xd x\" \"y \\<in> CH (cop_F ds fp)\" \"x \\<noteq> y\""], ["proof (prove)\nusing this:\n  x \\<notin> CH (cop_F ds fp)\n  Xd x \\<in> Xd ` CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>Xd y = Xd x; y \\<in> CH (cop_F ds fp);\n         x \\<noteq> y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis imageE)"], ["proof (state)\nthis:\n  Xd y = Xd x\n  y \\<in> CH (cop_F ds fp)\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. Xd x \\<notin> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "from \\<open>x \\<in> cop_F ds fp\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> cop_F ds fp", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> cop_F ds fp\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "proof(cases x rule: cop_F_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "case fp"], ["proof (state)\nthis:\n  x \\<in> fp\n\ngoal (2 subgoals):\n 1. x \\<in> fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "note \\<open>x \\<in> fp\\<close>"], ["proof (state)\nthis:\n  x \\<in> fp\n\ngoal (2 subgoals):\n 1. x \\<in> fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "from \\<open>y \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "proof(cases y rule: CH_cop_F_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "case CH"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "note \\<open>y \\<in> CH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with \\<open>allocation (CH fp)\\<close> y(1,3)"], ["proof (chain)\npicking this:\n  inj_on Xd (CH fp)\n  Xd y = Xd x\n  x \\<noteq> y\n  y \\<in> CH fp", "have \"x \\<notin> CH fp\""], ["proof (prove)\nusing this:\n  inj_on Xd (CH fp)\n  Xd y = Xd x\n  x \\<noteq> y\n  y \\<in> CH fp\n\ngoal (1 subgoal):\n 1. x \\<notin> CH fp", "by (metis inj_on_eq_iff)"], ["proof (state)\nthis:\n  x \\<notin> CH fp\n\ngoal (3 subgoals):\n 1. y \\<in> CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 3. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with \\<open>cop_F_rejected_inv ds fp\\<close> \\<open>x \\<in> fp\\<close>"], ["proof (chain)\npicking this:\n  cop_F_rejected_inv ds fp\n  x \\<in> fp\n  x \\<notin> CH fp", "show ?thesis"], ["proof (prove)\nusing this:\n  cop_F_rejected_inv ds fp\n  x \\<in> fp\n  x \\<notin> CH fp\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "unfolding cop_F_rejected_inv_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>Rf CH fp.\n     \\<exists>fp'\\<subseteq>fp.\n        x \\<in> fp' \\<and>\n        above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n  x \\<in> fp\n  x \\<notin> CH fp\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "by (metis Diff_iff Un_upper1 cop_F_def subset_refl subset_trans)"], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "case RH_fp"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "note \\<open>y \\<in> RH fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with \\<open>cop_F_rejected_inv ds fp\\<close>"], ["proof (chain)\npicking this:\n  cop_F_rejected_inv ds fp\n  y \\<in> Rf CH fp", "obtain fp' where \"fp' \\<subseteq> fp \\<and> y \\<in> fp' \\<and> above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\""], ["proof (prove)\nusing this:\n  cop_F_rejected_inv ds fp\n  y \\<in> Rf CH fp\n\ngoal (1 subgoal):\n 1. (\\<And>fp'.\n        fp' \\<subseteq> fp \\<and>\n        y \\<in> fp' \\<and>\n        above (Pd (Xd y)) y \\<subseteq> fp' \\<and>\n        Xd y \\<notin> Xd ` CH fp' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding cop_F_rejected_inv_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>Rf CH fp.\n     \\<exists>fp'\\<subseteq>fp.\n        x \\<in> fp' \\<and>\n        above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n  y \\<in> Rf CH fp\n\ngoal (1 subgoal):\n 1. (\\<And>fp'.\n        fp' \\<subseteq> fp \\<and>\n        y \\<in> fp' \\<and>\n        above (Pd (Xd y)) y \\<subseteq> fp' \\<and>\n        Xd y \\<notin> Xd ` CH fp' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: mem_CH_Ch)"], ["proof (state)\nthis:\n  fp' \\<subseteq> fp \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\n\ngoal (2 subgoals):\n 1. y \\<in> Rf CH fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n 2. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with \\<open>y \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> CH (cop_F ds fp)\n  fp' \\<subseteq> fp \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n  fp' \\<subseteq> fp \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "using no_renegotiation_union[where x=y and X=\"fp'\" and Y=\"cop_F ds fp\"] cop_F_increasing"], ["proof (prove)\nusing this:\n  y \\<in> CH (cop_F ds fp)\n  fp' \\<subseteq> fp \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\n  \\<lbrakk>Xd y \\<notin> Xd ` Ch ?h fp'; y \\<in> fp'\\<rbrakk>\n  \\<Longrightarrow> y \\<notin> Ch ?h (fp' \\<union> cop_F ds fp)\n  ?x \\<subseteq> cop_F ?ds ?x\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "by (clarsimp simp: mem_Ch_CH image_iff) (metis Un_absorb1 mem_CH_Ch subset_trans)"], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "case CD_on"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "note \\<open>y \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with cop_F_increasing \\<open>cop_F_closed_inv ds fp\\<close> cop_F_CH_CD_on_disjoint[OF \\<open>cop_F_closed_inv ds fp\\<close> \\<open>cop_F_range_inv ds fp\\<close>] \\<open>x \\<in> fp\\<close> y(1)"], ["proof (chain)\npicking this:\n  ?x \\<subseteq> cop_F ?ds ?x\n  cop_F_closed_inv ds fp\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  x \\<in> fp\n  Xd y = Xd x\n  y \\<in> CD_on ds (- Rf CH fp) - fp", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<subseteq> cop_F ?ds ?x\n  cop_F_closed_inv ds fp\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  x \\<in> fp\n  Xd y = Xd x\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "unfolding cop_F_closed_inv_def"], ["proof (prove)\nusing this:\n  ?x \\<subseteq> cop_F ?ds ?x\n  \\<forall>x\\<in>fp. above (Pd (Xd x)) x \\<subseteq> fp\n  Xd ` CH fp \\<inter> Xd ` (CD_on ds (- Rf CH fp) - fp) = {}\n  x \\<in> fp\n  Xd y = Xd x\n  y \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "by - (rule exI[where x=fp]; clarsimp; blast)"], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "case CD_on"], ["proof (state)\nthis:\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "{"], ["proof (state)\nthis:\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "assume z: \"z \\<in> CH (cop_F ds fp)\" \"Xd z = Xd x\""], ["proof (state)\nthis:\n  z \\<in> CH (cop_F ds fp)\n  Xd z = Xd x\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "from \\<open>allocation (CH fp)\\<close> x(2) z"], ["proof (chain)\npicking this:\n  inj_on Xd (CH fp)\n  x \\<notin> CH (cop_F ds fp)\n  z \\<in> CH (cop_F ds fp)\n  Xd z = Xd x", "have \"z \\<noteq> x\""], ["proof (prove)\nusing this:\n  inj_on Xd (CH fp)\n  x \\<notin> CH (cop_F ds fp)\n  z \\<in> CH (cop_F ds fp)\n  Xd z = Xd x\n\ngoal (1 subgoal):\n 1. z \\<noteq> x", "by blast"], ["proof (state)\nthis:\n  z \\<noteq> x\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "from z(1)"], ["proof (chain)\npicking this:\n  z \\<in> CH (cop_F ds fp)", "have False"], ["proof (prove)\nusing this:\n  z \\<in> CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. False", "proof(cases z rule: CH_cop_F_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. z \\<in> CH fp \\<Longrightarrow> False\n 2. z \\<in> Rf CH fp \\<Longrightarrow> False\n 3. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "case CH"], ["proof (state)\nthis:\n  z \\<in> CH fp\n\ngoal (3 subgoals):\n 1. z \\<in> CH fp \\<Longrightarrow> False\n 2. z \\<in> Rf CH fp \\<Longrightarrow> False\n 3. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "with \\<open>cop_F_range_inv ds fp\\<close> \\<open>cop_F_closed_inv ds fp\\<close> \\<open>x \\<in> CD_on ds (- RH fp) - fp\\<close> z(2) \\<open>z \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  cop_F_range_inv ds fp\n  cop_F_closed_inv ds fp\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  Xd z = Xd x\n  z \\<noteq> x\n  z \\<in> CH fp", "show False"], ["proof (prove)\nusing this:\n  cop_F_range_inv ds fp\n  cop_F_closed_inv ds fp\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  Xd z = Xd x\n  z \\<noteq> x\n  z \\<in> CH fp\n\ngoal (1 subgoal):\n 1. False", "using cop_F_CH_CD_on_disjoint"], ["proof (prove)\nusing this:\n  cop_F_range_inv ds fp\n  cop_F_closed_inv ds fp\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  Xd z = Xd x\n  z \\<noteq> x\n  z \\<in> CH fp\n  \\<lbrakk>cop_F_closed_inv ?ds ?fp; cop_F_range_inv ?ds ?fp\\<rbrakk>\n  \\<Longrightarrow> Xd ` CH ?fp \\<inter>\n                    Xd ` (CD_on ?ds (- Rf CH ?fp) - ?fp) =\n                    {}\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. z \\<in> Rf CH fp \\<Longrightarrow> False\n 2. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<in> Rf CH fp \\<Longrightarrow> False\n 2. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "case RH_fp"], ["proof (state)\nthis:\n  z \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. z \\<in> Rf CH fp \\<Longrightarrow> False\n 2. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "note \\<open>z \\<in> RH fp\\<close>"], ["proof (state)\nthis:\n  z \\<in> Rf CH fp\n\ngoal (2 subgoals):\n 1. z \\<in> Rf CH fp \\<Longrightarrow> False\n 2. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "with \\<open>cop_F_rejected_inv ds fp\\<close>"], ["proof (chain)\npicking this:\n  cop_F_rejected_inv ds fp\n  z \\<in> Rf CH fp", "obtain fp' where \"fp' \\<subseteq> fp \\<and> z \\<in> fp' \\<and> above (Pd (Xd z)) z \\<subseteq> fp' \\<and> Xd z \\<notin> Xd ` CH fp'\""], ["proof (prove)\nusing this:\n  cop_F_rejected_inv ds fp\n  z \\<in> Rf CH fp\n\ngoal (1 subgoal):\n 1. (\\<And>fp'.\n        fp' \\<subseteq> fp \\<and>\n        z \\<in> fp' \\<and>\n        above (Pd (Xd z)) z \\<subseteq> fp' \\<and>\n        Xd z \\<notin> Xd ` CH fp' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding cop_F_rejected_inv_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>Rf CH fp.\n     \\<exists>fp'\\<subseteq>fp.\n        x \\<in> fp' \\<and>\n        above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n  z \\<in> Rf CH fp\n\ngoal (1 subgoal):\n 1. (\\<And>fp'.\n        fp' \\<subseteq> fp \\<and>\n        z \\<in> fp' \\<and>\n        above (Pd (Xd z)) z \\<subseteq> fp' \\<and>\n        Xd z \\<notin> Xd ` CH fp' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: mem_CH_Ch)"], ["proof (state)\nthis:\n  fp' \\<subseteq> fp \\<and>\n  z \\<in> fp' \\<and>\n  above (Pd (Xd z)) z \\<subseteq> fp' \\<and> Xd z \\<notin> Xd ` CH fp'\n\ngoal (2 subgoals):\n 1. z \\<in> Rf CH fp \\<Longrightarrow> False\n 2. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "with \\<open>z \\<in> CH (cop_F ds fp)\\<close>"], ["proof (chain)\npicking this:\n  z \\<in> CH (cop_F ds fp)\n  fp' \\<subseteq> fp \\<and>\n  z \\<in> fp' \\<and>\n  above (Pd (Xd z)) z \\<subseteq> fp' \\<and> Xd z \\<notin> Xd ` CH fp'", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> CH (cop_F ds fp)\n  fp' \\<subseteq> fp \\<and>\n  z \\<in> fp' \\<and>\n  above (Pd (Xd z)) z \\<subseteq> fp' \\<and> Xd z \\<notin> Xd ` CH fp'\n\ngoal (1 subgoal):\n 1. False", "using no_renegotiation_union[where x=z and X=\"fp'\" and Y=\"cop_F ds fp\"] cop_F_increasing"], ["proof (prove)\nusing this:\n  z \\<in> CH (cop_F ds fp)\n  fp' \\<subseteq> fp \\<and>\n  z \\<in> fp' \\<and>\n  above (Pd (Xd z)) z \\<subseteq> fp' \\<and> Xd z \\<notin> Xd ` CH fp'\n  \\<lbrakk>Xd z \\<notin> Xd ` Ch ?h fp'; z \\<in> fp'\\<rbrakk>\n  \\<Longrightarrow> z \\<notin> Ch ?h (fp' \\<union> cop_F ds fp)\n  ?x \\<subseteq> cop_F ?ds ?x\n\ngoal (1 subgoal):\n 1. False", "by (clarsimp simp: mem_Ch_CH image_iff) (metis Un_absorb1 mem_CH_Ch subset_trans)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "case CD_on"], ["proof (state)\nthis:\n  z \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "note \\<open>z \\<in> CD_on ds (- RH fp) - fp\\<close>"], ["proof (state)\nthis:\n  z \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. z \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow> False", "with z(2) \\<open>x \\<in> CD_on ds (- RH fp) - fp\\<close> \\<open>z \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  Xd z = Xd x\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  z \\<noteq> x\n  z \\<in> CD_on ds (- Rf CH fp) - fp", "show False"], ["proof (prove)\nusing this:\n  Xd z = Xd x\n  x \\<in> CD_on ds (- Rf CH fp) - fp\n  z \\<noteq> x\n  z \\<in> CD_on ds (- Rf CH fp) - fp\n\ngoal (1 subgoal):\n 1. False", "by (meson CD_on_inj_on_Xd DiffD1 inj_onD)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?z2 \\<in> CH (cop_F ds fp); Xd ?z2 = Xd x\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with True"], ["proof (chain)\npicking this:\n  Xd x \\<in> Xd ` CH (cop_F ds fp)\n  \\<lbrakk>?z2 \\<in> CH (cop_F ds fp); Xd ?z2 = Xd x\\<rbrakk>\n  \\<Longrightarrow> False", "have False"], ["proof (prove)\nusing this:\n  Xd x \\<in> Xd ` CH (cop_F ds fp)\n  \\<lbrakk>?z2 \\<in> CH (cop_F ds fp); Xd ?z2 = Xd x\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "by clarsimp blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (- Rf CH fp) - fp \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "then"], ["proof (chain)\npicking this:\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", ".."], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "case False"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "note \\<open>Xd x \\<notin> Xd ` CH (cop_F ds fp)\\<close>"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` CH (cop_F ds fp) \\<Longrightarrow>\n    \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "with cop_F_closed_inv \\<open>cop_F_closed_inv ds fp\\<close> \\<open>x \\<in> cop_F ds fp\\<close>"], ["proof (chain)\npicking this:\n  invariant ?ds cop_F_closed_inv\n  cop_F_closed_inv ds fp\n  x \\<in> cop_F ds fp\n  Xd x \\<notin> Xd ` CH (cop_F ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  invariant ?ds cop_F_closed_inv\n  cop_F_closed_inv ds fp\n  x \\<in> cop_F ds fp\n  Xd x \\<notin> Xd ` CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. \\<exists>fp'\\<subseteq>cop_F ds fp.\n       x \\<in> fp' \\<and>\n       above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'", "by (metis cop_F_closed_inv_def subsetI valid_def)"], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>fp'\\<subseteq>cop_F ds fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cop_F_rejected_inv ds (cop_F ds fp)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fp_cop_F_rejected_inv:\n  shows \"cop_F_rejected_inv ds (fp_cop_F ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cop_F_rejected_inv ds (fp_cop_F ds)", "proof %invisible -"], ["proof (state)\ngoal (1 subgoal):\n 1. cop_F_rejected_inv ds (fp_cop_F ds)", "have \"invariant ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp \\<and> allocation (CH fp) \\<and> cop_F_rejected_inv ds fp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and>\n         inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp)", "using cop_F_range_inv cop_F_closed_inv cop_F_allocation_inv cop_F_rejected_inv"], ["proof (prove)\nusing this:\n  invariant ?ds cop_F_range_inv\n  invariant ?ds cop_F_closed_inv\n  valid ?ds\n   (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp)\n   (\\<lambda>ds fp. inj_on Xd (CH fp))\n  valid ?ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))\n   cop_F_rejected_inv\n\ngoal (1 subgoal):\n 1. invariant ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and>\n         inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp)", "by - (rule valid_conj | blast | rule valid_pre)+"], ["proof (state)\nthis:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and>\n       inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp)\n\ngoal (1 subgoal):\n 1. cop_F_rejected_inv ds (fp_cop_F ds)", "then"], ["proof (chain)\npicking this:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and>\n       inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and>\n       inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp)\n\ngoal (1 subgoal):\n 1. cop_F_rejected_inv ds (fp_cop_F ds)", "by (blast dest: invariantD)"], ["proof (state)\nthis:\n  cop_F_rejected_inv ds (fp_cop_F ds)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n\n\\label{sec:cop-theorem-4}\n\n\\citet[Theorem~4]{HatfieldKojima:2010} assert that we effectively\nrecover @{const \"substitutes\"} for the contracts relevant to the\nCOP. We cannot adopt their phrasing as it talks about the execution\ntraces of the COP, and not just its final state. Instead we present\nthe result we use, which relates two consecutive states in an\nexecution trace of the COP:\n\n\\<close>"], ["", "theorem Theorem_4:\n  assumes \"cop_F_rejected_inv ds fp\"\n  assumes \"x \\<in> RH fp\"\n  shows \"x \\<in> RH (cop_F ds fp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> Rf CH (cop_F ds fp)", "using %invisible bspec[OF assms[unfolded cop_F_rejected_inv_def]] cop_F_increasing[of fp ds]\n      no_renegotiation_union[where x=x and h=\"Xh x\" and Y=\"cop_F ds fp\"]"], ["proof (prove)\nusing this:\n  \\<exists>fp'\\<subseteq>fp.\n     x \\<in> fp' \\<and>\n     above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n  fp \\<subseteq> cop_F ds fp\n  \\<lbrakk>Xd x \\<notin> Xd ` Ch (Xh x) ?X; x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> x \\<notin> Ch (Xh x) (?X \\<union> cop_F ds fp)\n\ngoal (1 subgoal):\n 1. x \\<in> Rf CH (cop_F ds fp)", "by (auto simp: mem_CH_Ch image_iff Ch_CH_irc_idem) (metis le_iff_sup mem_Ch_CH sup.coboundedI1)"], ["", "text\\<open>\n\n\\label{sec:cop-worst}\n\nAnother way to interpret @{const \"cop_F_rejected_inv\"} is to observe\nthat the doctor-optimal match contains the least preferred of the\ncontracts that the doctors have offered.\n\n\\<close>"], ["", "corollary fp_cop_F_worst:\n  assumes \"x \\<in> cop ds\"\n  assumes \"y \\<in> fp_cop_F ds\"\n  assumes \"Xd y = Xd x\"\n  shows \"(x, y) \\<in> Pd (Xd x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Pd (Xd x)", "proof %invisible (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd x) \\<Longrightarrow> False", "assume \"(x, y) \\<notin> Pd (Xd x)\""], ["proof (state)\nthis:\n  (x, y) \\<notin> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd x) \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  (x, y) \\<notin> Pd (Xd x)", "have \"(y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\""], ["proof (prove)\nusing this:\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  (x, y) \\<notin> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y", "by (metis CH_range' Pd_linear eq_iff fp_cop_F_range_inv' order_on_defs(3) total_on_def underS_incl_iff)"], ["proof (state)\nthis:\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd x) \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y", "have \"y \\<notin> (cop ds)\""], ["proof (prove)\nusing this:\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\n\ngoal (1 subgoal):\n 1. y \\<notin> cop ds", "using fp_cop_F_allocation"], ["proof (prove)\nusing this:\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\n  inj_on Xd (cop ?ds)\n\ngoal (1 subgoal):\n 1. y \\<notin> cop ds", "by (blast dest: inj_onD)"], ["proof (state)\nthis:\n  y \\<notin> cop ds\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd x) \\<Longrightarrow> False", "with fp_cop_F_rejected_inv[of ds] \\<open>y \\<in> fp_cop_F ds\\<close>"], ["proof (chain)\npicking this:\n  cop_F_rejected_inv ds (fp_cop_F ds)\n  y \\<in> fp_cop_F ds\n  y \\<notin> cop ds", "obtain fp' where \"fp' \\<subseteq> fp_cop_F ds \\<and> y \\<in> fp' \\<and> above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\""], ["proof (prove)\nusing this:\n  cop_F_rejected_inv ds (fp_cop_F ds)\n  y \\<in> fp_cop_F ds\n  y \\<notin> cop ds\n\ngoal (1 subgoal):\n 1. (\\<And>fp'.\n        fp' \\<subseteq> fp_cop_F ds \\<and>\n        y \\<in> fp' \\<and>\n        above (Pd (Xd y)) y \\<subseteq> fp' \\<and>\n        Xd y \\<notin> Xd ` CH fp' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding cop_F_rejected_inv_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>Rf CH (fp_cop_F ds).\n     \\<exists>fp'\\<subseteq>fp_cop_F ds.\n        x \\<in> fp' \\<and>\n        above (Pd (Xd x)) x \\<subseteq> fp' \\<and> Xd x \\<notin> Xd ` CH fp'\n  y \\<in> fp_cop_F ds\n  y \\<notin> cop ds\n\ngoal (1 subgoal):\n 1. (\\<And>fp'.\n        fp' \\<subseteq> fp_cop_F ds \\<and>\n        y \\<in> fp' \\<and>\n        above (Pd (Xd y)) y \\<subseteq> fp' \\<and>\n        Xd y \\<notin> Xd ` CH fp' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  fp' \\<subseteq> fp_cop_F ds \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd x) \\<Longrightarrow> False", "with \\<open>(y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\\<close> assms"], ["proof (chain)\npicking this:\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  fp' \\<subseteq> fp_cop_F ds \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'", "show False"], ["proof (prove)\nusing this:\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  fp' \\<subseteq> fp_cop_F ds \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\n\ngoal (1 subgoal):\n 1. False", "using no_renegotiation_union[where x=x and h=\"Xh x\" and X=fp' and Y=\"fp_cop_F ds\"]"], ["proof (prove)\nusing this:\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  fp' \\<subseteq> fp_cop_F ds \\<and>\n  y \\<in> fp' \\<and>\n  above (Pd (Xd y)) y \\<subseteq> fp' \\<and> Xd y \\<notin> Xd ` CH fp'\n  \\<lbrakk>Xd x \\<notin> Xd ` Ch (Xh x) fp'; x \\<in> fp'\\<rbrakk>\n  \\<Longrightarrow> x \\<notin> Ch (Xh x) (fp' \\<union> fp_cop_F ds)\n\ngoal (1 subgoal):\n 1. False", "unfolding above_def"], ["proof (prove)\nusing this:\n  (y, x) \\<in> Pd (Xd x) \\<and> x \\<noteq> y\n  x \\<in> cop ds\n  y \\<in> fp_cop_F ds\n  Xd y = Xd x\n  fp' \\<subseteq> fp_cop_F ds \\<and>\n  y \\<in> fp' \\<and>\n  {b. (y, b) \\<in> Pd (Xd y)} \\<subseteq> fp' \\<and>\n  Xd y \\<notin> Xd ` CH fp'\n  \\<lbrakk>Xd x \\<notin> Xd ` Ch (Xh x) fp'; x \\<in> fp'\\<rbrakk>\n  \\<Longrightarrow> x \\<notin> Ch (Xh x) (fp' \\<union> fp_cop_F ds)\n\ngoal (1 subgoal):\n 1. False", "by (clarsimp simp: mem_CH_Ch image_iff) (metis contra_subsetD le_iff_sup mem_Ch_CH mem_Collect_eq)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n\nThe doctor optimality result, Theorem~5, hinges on showing that no\ncontract in any stable match is ever rejected.\n\n\\<close>"], ["", "definition\n  theorem_5_inv :: \"'b set \\<Rightarrow> 'a set \\<Rightarrow> bool\"\nwhere\n  \"theorem_5_inv ds fp \\<longleftrightarrow> RH fp \\<inter> \\<Union>{X. stable_on ds X} = {}\""], ["", "(*<*)"], ["", "lemma theorem_5_invI:\n  assumes \"\\<And>z X. \\<lbrakk>z \\<in> RH fp; z \\<in> X; stable_on ds X\\<rbrakk> \\<Longrightarrow> False\"\n  shows \"theorem_5_inv ds fp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theorem_5_inv ds fp", "unfolding theorem_5_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rf CH fp \\<inter> \\<Union> (Collect (stable_on ds)) = {}", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?z \\<in> Rf CH fp; ?z \\<in> ?X; stable_on ds ?X\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. Rf CH fp \\<inter> \\<Union> (Collect (stable_on ds)) = {}", "by blast"], ["", "(*>*)"], ["", "lemma theorem_5_inv:\n  shows \"valid ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp\n                     \\<and> allocation (CH fp) \\<and> cop_F_rejected_inv ds fp) theorem_5_inv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and>\n         inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp)\n     theorem_5_inv", "proof(induct rule: validI)"], ["proof (state)\ngoal (2 subgoals):\n 1. theorem_5_inv ds {}\n 2. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and>\n                inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp;\n        theorem_5_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> theorem_5_inv ds (cop_F ds fp)", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. theorem_5_inv ds {}\n 2. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and>\n                inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp;\n        theorem_5_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> theorem_5_inv ds (cop_F ds fp)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. theorem_5_inv ds {}", "unfolding theorem_5_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rf CH {} \\<inter> \\<Union> (Collect (stable_on ds)) = {}", "by simp"], ["proof (state)\nthis:\n  theorem_5_inv ds {}\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and>\n                inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp;\n        theorem_5_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> theorem_5_inv ds (cop_F ds fp)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and>\n                inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp;\n        theorem_5_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> theorem_5_inv ds (cop_F ds fp)", "case (step fp)"], ["proof (state)\nthis:\n  cop_F_range_inv ds fp \\<and>\n  cop_F_closed_inv ds fp \\<and>\n  inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp\n  theorem_5_inv ds fp\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and>\n                inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp;\n        theorem_5_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> theorem_5_inv ds (cop_F ds fp)", "then"], ["proof (chain)\npicking this:\n  cop_F_range_inv ds fp \\<and>\n  cop_F_closed_inv ds fp \\<and>\n  inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp\n  theorem_5_inv ds fp", "have \"cop_F_range_inv ds fp\"\n        and \"cop_F_closed_inv ds fp\"\n        and \"allocation (CH fp)\"\n        and \"cop_F_rejected_inv ds fp\"\n        and \"theorem_5_inv ds fp\""], ["proof (prove)\nusing this:\n  cop_F_range_inv ds fp \\<and>\n  cop_F_closed_inv ds fp \\<and>\n  inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp\n  theorem_5_inv ds fp\n\ngoal (1 subgoal):\n 1. (cop_F_range_inv ds fp &&& cop_F_closed_inv ds fp) &&&\n    inj_on Xd (CH fp) &&& cop_F_rejected_inv ds fp &&& theorem_5_inv ds fp", "by blast+"], ["proof (state)\nthis:\n  cop_F_range_inv ds fp\n  cop_F_closed_inv ds fp\n  inj_on Xd (CH fp)\n  cop_F_rejected_inv ds fp\n  theorem_5_inv ds fp\n\ngoal (1 subgoal):\n 1. \\<And>fp.\n       \\<lbrakk>cop_F_range_inv ds fp \\<and>\n                cop_F_closed_inv ds fp \\<and>\n                inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp;\n        theorem_5_inv ds fp\\<rbrakk>\n       \\<Longrightarrow> theorem_5_inv ds (cop_F ds fp)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. theorem_5_inv ds (cop_F ds fp)", "proof(rule theorem_5_invI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "fix z X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "assume z: \"z \\<in> RH (cop_F ds fp)\" and \"z \\<in> X\" and \"stable_on ds X\""], ["proof (state)\nthis:\n  z \\<in> Rf CH (cop_F ds fp)\n  z \\<in> X\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>theorem_5_inv ds fp\\<close> \\<open>z \\<in> X\\<close> \\<open>stable_on ds X\\<close>"], ["proof (chain)\npicking this:\n  theorem_5_inv ds fp\n  z \\<in> X\n  stable_on ds X", "have z': \"z \\<notin> RH fp\""], ["proof (prove)\nusing this:\n  theorem_5_inv ds fp\n  z \\<in> X\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. z \\<notin> Rf CH fp", "unfolding theorem_5_inv_def"], ["proof (prove)\nusing this:\n  Rf CH fp \\<inter> \\<Union> (Collect (stable_on ds)) = {}\n  z \\<in> X\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. z \\<notin> Rf CH fp", "by blast"], ["proof (state)\nthis:\n  z \\<notin> Rf CH fp\n\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "define Y where \"Y \\<equiv> Ch (Xh z) (cop_F ds fp)\""], ["proof (state)\nthis:\n  Y \\<equiv> Ch (Xh z) (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "from z"], ["proof (chain)\npicking this:\n  z \\<in> Rf CH (cop_F ds fp)", "have YYY: \"z \\<notin> Ch (Xh z) (insert z Y)\""], ["proof (prove)\nusing this:\n  z \\<in> Rf CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. z \\<notin> Ch (Xh z) (insert z Y)", "using consistencyD[OF Ch_consistency]"], ["proof (prove)\nusing this:\n  z \\<in> Rf CH (cop_F ds fp)\n  \\<lbrakk>?C \\<subseteq> ?B; Ch ?h1 ?B \\<subseteq> ?C\\<rbrakk>\n  \\<Longrightarrow> Ch ?h1 ?B = Ch ?h1 ?C\n\ngoal (1 subgoal):\n 1. z \\<notin> Ch (Xh z) (insert z Y)", "by (simp add: mem_CH_Ch Y_def)\n         (metis Ch_f_range f_range_on_def insert_subset subset_insertI top_greatest)"], ["proof (state)\nthis:\n  z \\<notin> Ch (Xh z) (insert z Y)\n\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "have yRx: \"(x, y) \\<in> Pd (Xd y)\" if \"x \\<in> X\" and \"y \\<in> Y\" and \"Xd y = Xd x\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Pd (Xd y)", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd y) \\<Longrightarrow> False", "assume \"(x, y) \\<notin> Pd (Xd y)\""], ["proof (state)\nthis:\n  (x, y) \\<notin> Pd (Xd y)\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd y) \\<Longrightarrow> False", "with Pd_linear \\<open>cop_F_range_inv ds fp\\<close> \\<open>stable_on ds X\\<close> that"], ["proof (chain)\npicking this:\n  \\<forall>d. Linear_order (Pd d)\n  cop_F_range_inv ds fp\n  stable_on ds X\n  x \\<in> X\n  y \\<in> Y\n  Xd y = Xd x\n  (x, y) \\<notin> Pd (Xd y)", "have BBB: \"(y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y\""], ["proof (prove)\nusing this:\n  \\<forall>d. Linear_order (Pd d)\n  cop_F_range_inv ds fp\n  stable_on ds X\n  x \\<in> X\n  y \\<in> Y\n  Xd y = Xd x\n  (x, y) \\<notin> Pd (Xd y)\n\ngoal (1 subgoal):\n 1. (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y", "unfolding Y_def cop_F_def cop_F_range_inv_def order_on_defs total_on_def"], ["proof (prove)\nusing this:\n  \\<forall>d.\n     ((Refl (Pd d) \\<and> trans (Pd d)) \\<and> antisym (Pd d)) \\<and>\n     (\\<forall>x\\<in>Field (Pd d).\n         \\<forall>y\\<in>Field (Pd d).\n            x \\<noteq> y \\<longrightarrow>\n            (x, y) \\<in> Pd d \\<or> (y, x) \\<in> Pd d)\n  \\<forall>x\\<in>fp. x \\<in> Field (Pd (Xd x)) \\<and> Xd x \\<in> ds\n  stable_on ds X\n  x \\<in> X\n  y \\<in> Ch (Xh z) (fp \\<union> CD_on ds (- Rf CH fp))\n  Xd y = Xd x\n  (x, y) \\<notin> Pd (Xd y)\n\ngoal (1 subgoal):\n 1. (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y", "by (clarsimp simp: mem_CD_on_Cd dest!: Ch_range') (metis Cd_range' Int_iff refl_onD stable_on_range')"], ["proof (state)\nthis:\n  (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd y) \\<Longrightarrow> False", "from \\<open>stable_on ds X\\<close> \\<open>cop_F_closed_inv ds fp\\<close> \\<open>theorem_5_inv ds fp\\<close> BBB that"], ["proof (chain)\npicking this:\n  stable_on ds X\n  cop_F_closed_inv ds fp\n  theorem_5_inv ds fp\n  (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y\n  x \\<in> X\n  y \\<in> Y\n  Xd y = Xd x", "have \"x \\<in> fp \\<and> y \\<in> fp\""], ["proof (prove)\nusing this:\n  stable_on ds X\n  cop_F_closed_inv ds fp\n  theorem_5_inv ds fp\n  (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y\n  x \\<in> X\n  y \\<in> Y\n  Xd y = Xd x\n\ngoal (1 subgoal):\n 1. x \\<in> fp \\<and> y \\<in> fp", "unfolding cop_F_def cop_F_closed_inv_def theorem_5_inv_def above_def Y_def"], ["proof (prove)\nusing this:\n  stable_on ds X\n  \\<forall>x\\<in>fp. {b. (x, b) \\<in> Pd (Xd x)} \\<subseteq> fp\n  Rf CH fp \\<inter> \\<Union> (Collect (stable_on ds)) = {}\n  (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y\n  x \\<in> X\n  y \\<in> Ch (Xh z) (fp \\<union> CD_on ds (- Rf CH fp))\n  Xd y = Xd x\n\ngoal (1 subgoal):\n 1. x \\<in> fp \\<and> y \\<in> fp", "by (fastforce simp: mem_CD_on_Cd dest: Ch_range' Cd_preferred)"], ["proof (state)\nthis:\n  x \\<in> fp \\<and> y \\<in> fp\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd y) \\<Longrightarrow> False", "with \\<open>stable_on ds X\\<close> \\<open>theorem_5_inv ds fp\\<close> \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  stable_on ds X\n  theorem_5_inv ds fp\n  x \\<in> X\n  x \\<in> fp \\<and> y \\<in> fp", "have \"x \\<in> Ch (Xh x) fp\""], ["proof (prove)\nusing this:\n  stable_on ds X\n  theorem_5_inv ds fp\n  x \\<in> X\n  x \\<in> fp \\<and> y \\<in> fp\n\ngoal (1 subgoal):\n 1. x \\<in> Ch (Xh x) fp", "unfolding theorem_5_inv_def"], ["proof (prove)\nusing this:\n  stable_on ds X\n  Rf CH fp \\<inter> \\<Union> (Collect (stable_on ds)) = {}\n  x \\<in> X\n  x \\<in> fp \\<and> y \\<in> fp\n\ngoal (1 subgoal):\n 1. x \\<in> Ch (Xh x) fp", "by (force simp: mem_CH_Ch)"], ["proof (state)\nthis:\n  x \\<in> Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd y) \\<Longrightarrow> False", "with \\<open>allocation (CH fp)\\<close> \\<open>Xd y = Xd x\\<close> BBB"], ["proof (chain)\npicking this:\n  inj_on Xd (CH fp)\n  Xd y = Xd x\n  (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y\n  x \\<in> Ch (Xh x) fp", "have \"y \\<notin> Ch (Xh z) fp\""], ["proof (prove)\nusing this:\n  inj_on Xd (CH fp)\n  Xd y = Xd x\n  (y, x) \\<in> Pd (Xd y) \\<and> x \\<noteq> y\n  x \\<in> Ch (Xh x) fp\n\ngoal (1 subgoal):\n 1. y \\<notin> Ch (Xh z) fp", "by (metis Ch_range' inj_onD mem_CH_Ch)"], ["proof (state)\nthis:\n  y \\<notin> Ch (Xh z) fp\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> Pd (Xd y) \\<Longrightarrow> False", "with \\<open>y \\<in> Y\\<close> \\<open>x \\<in> fp \\<and> y \\<in> fp\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> Y\n  x \\<in> fp \\<and> y \\<in> fp\n  y \\<notin> Ch (Xh z) fp", "show False"], ["proof (prove)\nusing this:\n  y \\<in> Y\n  x \\<in> fp \\<and> y \\<in> fp\n  y \\<notin> Ch (Xh z) fp\n\ngoal (1 subgoal):\n 1. False", "unfolding Y_def"], ["proof (prove)\nusing this:\n  y \\<in> Ch (Xh z) (cop_F ds fp)\n  x \\<in> fp \\<and> y \\<in> fp\n  y \\<notin> Ch (Xh z) fp\n\ngoal (1 subgoal):\n 1. False", "using Theorem_4[OF \\<open>cop_F_rejected_inv ds fp\\<close>, where x=y]"], ["proof (prove)\nusing this:\n  y \\<in> Ch (Xh z) (cop_F ds fp)\n  x \\<in> fp \\<and> y \\<in> fp\n  y \\<notin> Ch (Xh z) fp\n  y \\<in> Rf CH fp \\<Longrightarrow> y \\<in> Rf CH (cop_F ds fp)\n\ngoal (1 subgoal):\n 1. False", "by (metis Ch_range' Diff_iff mem_CH_Ch)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> Y; Xd ?y = Xd ?x\\<rbrakk>\n  \\<Longrightarrow> (?x, ?y) \\<in> Pd (Xd ?y)\n\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "have \"Xd z \\<notin> Xd ` Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Xd z \\<notin> Xd ` Y", "proof(safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Xd z = Xd x; x \\<in> Y\\<rbrakk> \\<Longrightarrow> False", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Xd z = Xd x; x \\<in> Y\\<rbrakk> \\<Longrightarrow> False", "assume w: \"Xd z = Xd w\" \"w \\<in> Y\""], ["proof (state)\nthis:\n  Xd z = Xd w\n  w \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Xd z = Xd x; x \\<in> Y\\<rbrakk> \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof(cases \"z \\<in> fp\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<in> fp \\<Longrightarrow> False\n 2. z \\<notin> fp \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  z \\<in> fp\n\ngoal (2 subgoals):\n 1. z \\<in> fp \\<Longrightarrow> False\n 2. z \\<notin> fp \\<Longrightarrow> False", "note \\<open>z \\<in> fp\\<close>"], ["proof (state)\nthis:\n  z \\<in> fp\n\ngoal (2 subgoals):\n 1. z \\<in> fp \\<Longrightarrow> False\n 2. z \\<notin> fp \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof(cases \"w \\<in> fp\")"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<in> fp \\<Longrightarrow> False\n 2. w \\<notin> fp \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  w \\<in> fp\n\ngoal (2 subgoals):\n 1. w \\<in> fp \\<Longrightarrow> False\n 2. w \\<notin> fp \\<Longrightarrow> False", "note \\<open>w \\<in> fp\\<close>"], ["proof (state)\nthis:\n  w \\<in> fp\n\ngoal (2 subgoals):\n 1. w \\<in> fp \\<Longrightarrow> False\n 2. w \\<notin> fp \\<Longrightarrow> False", "from \\<open>Xd z = Xd w\\<close> \\<open>w \\<in> Y\\<close> z' \\<open>z \\<in> fp\\<close>"], ["proof (chain)\npicking this:\n  Xd z = Xd w\n  w \\<in> Y\n  z \\<notin> Rf CH fp\n  z \\<in> fp", "have \"w \\<notin> CH fp\""], ["proof (prove)\nusing this:\n  Xd z = Xd w\n  w \\<in> Y\n  z \\<notin> Rf CH fp\n  z \\<in> fp\n\ngoal (1 subgoal):\n 1. w \\<notin> CH fp", "by (metis Ch_irc_idem DiffI YYY Y_def \\<open>allocation (CH fp)\\<close> inj_on_eq_iff insert_absorb)"], ["proof (state)\nthis:\n  w \\<notin> CH fp\n\ngoal (2 subgoals):\n 1. w \\<in> fp \\<Longrightarrow> False\n 2. w \\<notin> fp \\<Longrightarrow> False", "with Theorem_4[OF \\<open>cop_F_rejected_inv ds fp\\<close>, where x=w] \\<open>w \\<in> Y\\<close> \\<open>w \\<in> fp\\<close>"], ["proof (chain)\npicking this:\n  w \\<in> Rf CH fp \\<Longrightarrow> w \\<in> Rf CH (cop_F ds fp)\n  w \\<in> Y\n  w \\<in> fp\n  w \\<notin> CH fp", "show False"], ["proof (prove)\nusing this:\n  w \\<in> Rf CH fp \\<Longrightarrow> w \\<in> Rf CH (cop_F ds fp)\n  w \\<in> Y\n  w \\<in> fp\n  w \\<notin> CH fp\n\ngoal (1 subgoal):\n 1. False", "unfolding Y_def CH_def"], ["proof (prove)\nusing this:\n  w \\<in> fp - (\\<Union>h. Ch h fp) \\<Longrightarrow>\n  w \\<in> cop_F ds fp - (\\<Union>h. Ch h (cop_F ds fp))\n  w \\<in> Ch (Xh z) (cop_F ds fp)\n  w \\<in> fp\n  w \\<notin> (\\<Union>h. Ch h fp)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. w \\<notin> fp \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<notin> fp \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  w \\<notin> fp\n\ngoal (1 subgoal):\n 1. w \\<notin> fp \\<Longrightarrow> False", "note \\<open>w \\<notin> fp\\<close>"], ["proof (state)\nthis:\n  w \\<notin> fp\n\ngoal (1 subgoal):\n 1. w \\<notin> fp \\<Longrightarrow> False", "with \\<open>w \\<in> Y\\<close>"], ["proof (chain)\npicking this:\n  w \\<in> Y\n  w \\<notin> fp", "have \"w \\<notin> Ch (Xh z) fp \\<and> w \\<in> cop_F ds fp \\<and> Xh w = Xh z\""], ["proof (prove)\nusing this:\n  w \\<in> Y\n  w \\<notin> fp\n\ngoal (1 subgoal):\n 1. w \\<notin> Ch (Xh z) fp \\<and> w \\<in> cop_F ds fp \\<and> Xh w = Xh z", "unfolding Y_def"], ["proof (prove)\nusing this:\n  w \\<in> Ch (Xh z) (cop_F ds fp)\n  w \\<notin> fp\n\ngoal (1 subgoal):\n 1. w \\<notin> Ch (Xh z) fp \\<and> w \\<in> cop_F ds fp \\<and> Xh w = Xh z", "by (blast dest: Ch_range')"], ["proof (state)\nthis:\n  w \\<notin> Ch (Xh z) fp \\<and> w \\<in> cop_F ds fp \\<and> Xh w = Xh z\n\ngoal (1 subgoal):\n 1. w \\<notin> fp \\<Longrightarrow> False", "with \\<open>cop_F_closed_inv ds fp\\<close> \\<open>cop_F_range_inv ds fp\\<close> \\<open>z \\<notin> RH fp\\<close> \\<open>w \\<notin> fp\\<close> \\<open>z \\<in> fp\\<close> \\<open>Xd z = Xd w\\<close>"], ["proof (chain)\npicking this:\n  cop_F_closed_inv ds fp\n  cop_F_range_inv ds fp\n  z \\<notin> Rf CH fp\n  w \\<notin> fp\n  z \\<in> fp\n  Xd z = Xd w\n  w \\<notin> Ch (Xh z) fp \\<and> w \\<in> cop_F ds fp \\<and> Xh w = Xh z", "show False"], ["proof (prove)\nusing this:\n  cop_F_closed_inv ds fp\n  cop_F_range_inv ds fp\n  z \\<notin> Rf CH fp\n  w \\<notin> fp\n  z \\<in> fp\n  Xd z = Xd w\n  w \\<notin> Ch (Xh z) fp \\<and> w \\<in> cop_F ds fp \\<and> Xh w = Xh z\n\ngoal (1 subgoal):\n 1. False", "unfolding cop_F_closed_inv_def cop_F_range_inv_def above_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>fp. {b. (x, b) \\<in> Pd (Xd x)} \\<subseteq> fp\n  \\<forall>x\\<in>fp. x \\<in> Field (Pd (Xd x)) \\<and> Xd x \\<in> ds\n  z \\<notin> Rf CH fp\n  w \\<notin> fp\n  z \\<in> fp\n  Xd z = Xd w\n  w \\<notin> Ch (Xh z) fp \\<and> w \\<in> cop_F ds fp \\<and> Xh w = Xh z\n\ngoal (1 subgoal):\n 1. False", "by (fastforce simp: cop_F_def mem_CD_on_Cd Cd_greatest greatest_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. z \\<notin> fp \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> fp \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  z \\<notin> fp\n\ngoal (1 subgoal):\n 1. z \\<notin> fp \\<Longrightarrow> False", "note \\<open>z \\<notin> fp\\<close>"], ["proof (state)\nthis:\n  z \\<notin> fp\n\ngoal (1 subgoal):\n 1. z \\<notin> fp \\<Longrightarrow> False", "from \\<open>cop_F_range_inv ds fp\\<close> \\<open>cop_F_closed_inv ds fp\\<close> z \\<open>z \\<notin> fp\\<close>"], ["proof (chain)\npicking this:\n  cop_F_range_inv ds fp\n  cop_F_closed_inv ds fp\n  z \\<in> Rf CH (cop_F ds fp)\n  z \\<notin> fp", "have \"Xd z \\<notin> Xd ` Ch (Xh z) fp\""], ["proof (prove)\nusing this:\n  cop_F_range_inv ds fp\n  cop_F_closed_inv ds fp\n  z \\<in> Rf CH (cop_F ds fp)\n  z \\<notin> fp\n\ngoal (1 subgoal):\n 1. Xd z \\<notin> Xd ` Ch (Xh z) fp", "unfolding cop_F_range_inv_def cop_F_closed_inv_def above_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>fp. x \\<in> Field (Pd (Xd x)) \\<and> Xd x \\<in> ds\n  \\<forall>x\\<in>fp. {b. (x, b) \\<in> Pd (Xd x)} \\<subseteq> fp\n  z \\<in> Rf CH (cop_F ds fp)\n  z \\<notin> fp\n\ngoal (1 subgoal):\n 1. Xd z \\<notin> Xd ` Ch (Xh z) fp", "by (clarsimp simp: mem_CD_on_Cd Cd_greatest greatest_def dest!: mem_Ch_CH elim!: cop_F_cases)\n             (blast dest: CH_range')"], ["proof (state)\nthis:\n  Xd z \\<notin> Xd ` Ch (Xh z) fp\n\ngoal (1 subgoal):\n 1. z \\<notin> fp \\<Longrightarrow> False", "with w \\<open>z \\<in> RH (cop_F ds fp)\\<close> \\<open>z \\<notin> fp\\<close>"], ["proof (chain)\npicking this:\n  Xd z = Xd w\n  w \\<in> Y\n  z \\<in> Rf CH (cop_F ds fp)\n  z \\<notin> fp\n  Xd z \\<notin> Xd ` Ch (Xh z) fp", "show False"], ["proof (prove)\nusing this:\n  Xd z = Xd w\n  w \\<in> Y\n  z \\<in> Rf CH (cop_F ds fp)\n  z \\<notin> fp\n  Xd z \\<notin> Xd ` Ch (Xh z) fp\n\ngoal (1 subgoal):\n 1. False", "by (clarsimp simp: Y_def cop_F_def mem_CH_Ch)\n             (metis CD_on_inj_on_Xd Ch_range' Un_iff inj_onD no_renegotiation_union)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Xd z \\<notin> Xd ` Y\n\ngoal (1 subgoal):\n 1. \\<And>z X.\n       \\<lbrakk>z \\<in> Rf CH (cop_F ds fp); z \\<in> X;\n        stable_on ds X\\<rbrakk>\n       \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof(cases \"z \\<in> Ch (Xh z) (X \\<union> Y)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False\n 2. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  z \\<in> Ch (Xh z) (X \\<union> Y)\n\ngoal (2 subgoals):\n 1. z \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False\n 2. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "note \\<open>z \\<in> Ch (Xh z) (X \\<union> Y)\\<close>"], ["proof (state)\nthis:\n  z \\<in> Ch (Xh z) (X \\<union> Y)\n\ngoal (2 subgoals):\n 1. z \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False\n 2. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "with \\<open>z \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  z \\<in> X\n  z \\<in> Ch (Xh z) (X \\<union> Y)", "have \"Xd z \\<in> Xd ` Ch (Xh z) (insert z Y)\""], ["proof (prove)\nusing this:\n  z \\<in> X\n  z \\<in> Ch (Xh z) (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. Xd z \\<in> Xd ` Ch (Xh z) (insert z Y)", "using no_renegotiation_union[where X=\"insert z Y\" and Y=\"X - {z}\" and x=z and h=\"Xh z\"]"], ["proof (prove)\nusing this:\n  z \\<in> X\n  z \\<in> Ch (Xh z) (X \\<union> Y)\n  \\<lbrakk>Xd z \\<notin> Xd ` Ch (Xh z) (insert z Y);\n   z \\<in> insert z Y\\<rbrakk>\n  \\<Longrightarrow> z \\<notin> Ch (Xh z) (insert z Y \\<union> (X - {z}))\n\ngoal (1 subgoal):\n 1. Xd z \\<in> Xd ` Ch (Xh z) (insert z Y)", "by clarsimp (metis Un_insert_right insert_Diff Un_commute)"], ["proof (state)\nthis:\n  Xd z \\<in> Xd ` Ch (Xh z) (insert z Y)\n\ngoal (2 subgoals):\n 1. z \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False\n 2. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "with \\<open>Xd z \\<notin> Xd ` Y\\<close> \\<open>z \\<notin> Ch (Xh z) (insert z Y)\\<close>"], ["proof (chain)\npicking this:\n  Xd z \\<notin> Xd ` Y\n  z \\<notin> Ch (Xh z) (insert z Y)\n  Xd z \\<in> Xd ` Ch (Xh z) (insert z Y)", "show False"], ["proof (prove)\nusing this:\n  Xd z \\<notin> Xd ` Y\n  z \\<notin> Ch (Xh z) (insert z Y)\n  Xd z \\<in> Xd ` Ch (Xh z) (insert z Y)\n\ngoal (1 subgoal):\n 1. False", "by (blast dest: Ch_range')"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  z \\<notin> Ch (Xh z) (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "note \\<open>z \\<notin> Ch (Xh z) (X \\<union> Y)\\<close>"], ["proof (state)\nthis:\n  z \\<notin> Ch (Xh z) (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "have \"\\<not>stable_on ds X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> stable_on ds X", "proof(rule blocking_on_imp_not_stable[OF blocking_onI])"], ["proof (state)\ngoal (3 subgoals):\n 1. ?X'' \\<noteq> Ch ?h X\n 2. ?X'' = Ch ?h (X \\<union> ?X'')\n 3. \\<And>x.\n       x \\<in> ?X'' \\<Longrightarrow> x \\<in> CD_on ds (X \\<union> ?X'')", "from False \\<open>z \\<in> X\\<close> \\<open>stable_on ds X\\<close>"], ["proof (chain)\npicking this:\n  z \\<notin> Ch (Xh z) (X \\<union> Y)\n  z \\<in> X\n  stable_on ds X", "show \"Ch (Xh z) (X \\<union> Y) \\<noteq> Ch (Xh z) X\""], ["proof (prove)\nusing this:\n  z \\<notin> Ch (Xh z) (X \\<union> Y)\n  z \\<in> X\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. Ch (Xh z) (X \\<union> Y) \\<noteq> Ch (Xh z) X", "using mem_CH_Ch stable_on_CH"], ["proof (prove)\nusing this:\n  z \\<notin> Ch (Xh z) (X \\<union> Y)\n  z \\<in> X\n  stable_on ds X\n  (?x \\<in> CH ?X) = (?x \\<in> Ch (Xh ?x) ?X)\n  stable_on ?ds ?X \\<Longrightarrow> CH ?X = ?X\n\ngoal (1 subgoal):\n 1. Ch (Xh z) (X \\<union> Y) \\<noteq> Ch (Xh z) X", "by blast"], ["proof (state)\nthis:\n  Ch (Xh z) (X \\<union> Y) \\<noteq> Ch (Xh z) X\n\ngoal (2 subgoals):\n 1. Ch (Xh z) (X \\<union> Y) =\n    Ch (Xh z) (X \\<union> Ch (Xh z) (X \\<union> Y))\n 2. \\<And>x.\n       x \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))", "show \"Ch (Xh z) (X \\<union> Y) = Ch (Xh z) (X \\<union> Ch (Xh z) (X \\<union> Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ch (Xh z) (X \\<union> Y) =\n    Ch (Xh z) (X \\<union> Ch (Xh z) (X \\<union> Y))", "using Ch_range'"], ["proof (prove)\nusing this:\n  ?x \\<in> Ch ?h ?X \\<Longrightarrow> ?x \\<in> ?X \\<and> Xh ?x = ?h\n\ngoal (1 subgoal):\n 1. Ch (Xh z) (X \\<union> Y) =\n    Ch (Xh z) (X \\<union> Ch (Xh z) (X \\<union> Y))", "by (blast intro!: consistencyD[OF Ch_consistency])"], ["proof (state)\nthis:\n  Ch (Xh z) (X \\<union> Y) = Ch (Xh z) (X \\<union> Ch (Xh z) (X \\<union> Y))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))", "assume \"x \\<in> Ch (Xh z) (X \\<union> Y)\""], ["proof (state)\nthis:\n  x \\<in> Ch (Xh z) (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))", "with Ch_singular'[of \"Xh z\" \"X \\<union> Ch (Xh z) (cop_F ds fp)\"]\n             invariant_cop_FD[OF cop_F_range_inv \\<open>cop_F_range_inv ds fp\\<close>]\n             stable_on_allocation[OF \\<open>stable_on ds X\\<close>] stable_on_Xd[OF \\<open>stable_on ds X\\<close>]\n             stable_on_range'[OF \\<open>stable_on ds X\\<close>]"], ["proof (chain)\npicking this:\n  inj_on Xd (Ch (Xh z) (X \\<union> Ch (Xh z) (cop_F ds fp)))\n  cop_F_range_inv ds (cop_F ds fp)\n  inj_on Xd X\n  ?x \\<in> X \\<Longrightarrow> Xd ?x \\<in> ds\n  ?x \\<in> X \\<Longrightarrow> ?x \\<in> Field (Pd (Xd ?x))\n  x \\<in> Ch (Xh z) (X \\<union> Y)", "show \"x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))\""], ["proof (prove)\nusing this:\n  inj_on Xd (Ch (Xh z) (X \\<union> Ch (Xh z) (cop_F ds fp)))\n  cop_F_range_inv ds (cop_F ds fp)\n  inj_on Xd X\n  ?x \\<in> X \\<Longrightarrow> Xd ?x \\<in> ds\n  ?x \\<in> X \\<Longrightarrow> ?x \\<in> Field (Pd (Xd ?x))\n  x \\<in> Ch (Xh z) (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))", "unfolding cop_F_range_inv_def"], ["proof (prove)\nusing this:\n  inj_on Xd (Ch (Xh z) (X \\<union> Ch (Xh z) (cop_F ds fp)))\n  \\<forall>x\\<in>cop_F ds fp. x \\<in> Field (Pd (Xd x)) \\<and> Xd x \\<in> ds\n  inj_on Xd X\n  ?x \\<in> X \\<Longrightarrow> Xd ?x \\<in> ds\n  ?x \\<in> X \\<Longrightarrow> ?x \\<in> Field (Pd (Xd ?x))\n  x \\<in> Ch (Xh z) (X \\<union> Y)\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))", "by (clarsimp simp: mem_CD_on_Cd Cd_greatest greatest_def)\n             (metis Ch_range' IntE Pd_range' Pd_refl Un_iff Y_def inj_onD yRx)"], ["proof (state)\nthis:\n  x \\<in> CD_on ds (X \\<union> Ch (Xh z) (X \\<union> Y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> stable_on ds X\n\ngoal (1 subgoal):\n 1. z \\<notin> Ch (Xh z) (X \\<union> Y) \\<Longrightarrow> False", "with \\<open>stable_on ds X\\<close>"], ["proof (chain)\npicking this:\n  stable_on ds X\n  \\<not> stable_on ds X", "show False"], ["proof (prove)\nusing this:\n  stable_on ds X\n  \\<not> stable_on ds X\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  theorem_5_inv ds (cop_F ds fp)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fp_cop_F_theorem_5_inv:\n  shows \"theorem_5_inv ds (fp_cop_F ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theorem_5_inv ds (fp_cop_F ds)", "proof %invisible -"], ["proof (state)\ngoal (1 subgoal):\n 1. theorem_5_inv ds (fp_cop_F ds)", "have \"invariant ds (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp \\<and> allocation (CH fp) \\<and> cop_F_rejected_inv ds fp \\<and> theorem_5_inv ds fp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invariant ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and>\n         inj_on Xd (CH fp) \\<and>\n         cop_F_rejected_inv ds fp \\<and> theorem_5_inv ds fp)", "using cop_F_range_inv cop_F_closed_inv cop_F_allocation_inv cop_F_rejected_inv theorem_5_inv"], ["proof (prove)\nusing this:\n  invariant ?ds cop_F_range_inv\n  invariant ?ds cop_F_closed_inv\n  valid ?ds\n   (\\<lambda>ds fp. cop_F_range_inv ds fp \\<and> cop_F_closed_inv ds fp)\n   (\\<lambda>ds fp. inj_on Xd (CH fp))\n  valid ?ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and> inj_on Xd (CH fp))\n   cop_F_rejected_inv\n  valid ?ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and>\n       inj_on Xd (CH fp) \\<and> cop_F_rejected_inv ds fp)\n   theorem_5_inv\n\ngoal (1 subgoal):\n 1. invariant ds\n     (\\<lambda>ds fp.\n         cop_F_range_inv ds fp \\<and>\n         cop_F_closed_inv ds fp \\<and>\n         inj_on Xd (CH fp) \\<and>\n         cop_F_rejected_inv ds fp \\<and> theorem_5_inv ds fp)", "by - (rule valid_conj | blast | rule valid_pre)+"], ["proof (state)\nthis:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and>\n       inj_on Xd (CH fp) \\<and>\n       cop_F_rejected_inv ds fp \\<and> theorem_5_inv ds fp)\n\ngoal (1 subgoal):\n 1. theorem_5_inv ds (fp_cop_F ds)", "then"], ["proof (chain)\npicking this:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and>\n       inj_on Xd (CH fp) \\<and>\n       cop_F_rejected_inv ds fp \\<and> theorem_5_inv ds fp)", "show ?thesis"], ["proof (prove)\nusing this:\n  invariant ds\n   (\\<lambda>ds fp.\n       cop_F_range_inv ds fp \\<and>\n       cop_F_closed_inv ds fp \\<and>\n       inj_on Xd (CH fp) \\<and>\n       cop_F_rejected_inv ds fp \\<and> theorem_5_inv ds fp)\n\ngoal (1 subgoal):\n 1. theorem_5_inv ds (fp_cop_F ds)", "by (blast dest: invariantD)"], ["proof (state)\nthis:\n  theorem_5_inv ds (fp_cop_F ds)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Theorem_5:\n  assumes \"stable_on ds X\"\n  assumes \"x \\<in> X\"\n  shows \"\\<exists>y \\<in> cop ds. (x, y) \\<in> Pd (Xd x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "from fp_cop_F_theorem_5_inv assms"], ["proof (chain)\npicking this:\n  theorem_5_inv ?ds (fp_cop_F ?ds)\n  stable_on ds X\n  x \\<in> X", "have x: \"x \\<notin> RH (fp_cop_F ds)\""], ["proof (prove)\nusing this:\n  theorem_5_inv ?ds (fp_cop_F ?ds)\n  stable_on ds X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<notin> Rf CH (fp_cop_F ds)", "unfolding theorem_5_inv_def"], ["proof (prove)\nusing this:\n  Rf CH (fp_cop_F ?ds) \\<inter> \\<Union> (Collect (stable_on ?ds)) = {}\n  stable_on ds X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<notin> Rf CH (fp_cop_F ds)", "by blast"], ["proof (state)\nthis:\n  x \\<notin> Rf CH (fp_cop_F ds)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "proof(cases \"Xd x \\<in> Xd ` cop ds\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n 2. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "case True"], ["proof (state)\nthis:\n  Xd x \\<in> Xd ` cop ds\n\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n 2. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "then"], ["proof (chain)\npicking this:\n  Xd x \\<in> Xd ` cop ds", "obtain z where z: \"z \\<in> cop ds\" \"Xd z = Xd x\""], ["proof (prove)\nusing this:\n  Xd x \\<in> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> cop ds; Xd z = Xd x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<in> cop ds\n  Xd z = Xd x\n\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n 2. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "proof(cases \"(x, z) \\<in> Pd (Xd x)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, z) \\<in> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n 2. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "case True"], ["proof (state)\nthis:\n  (x, z) \\<in> Pd (Xd x)\n\ngoal (2 subgoals):\n 1. (x, z) \\<in> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n 2. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "with z"], ["proof (chain)\npicking this:\n  z \\<in> cop ds\n  Xd z = Xd x\n  (x, z) \\<in> Pd (Xd x)", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> cop ds\n  Xd z = Xd x\n  (x, z) \\<in> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "by blast"], ["proof (state)\nthis:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "case False"], ["proof (state)\nthis:\n  (x, z) \\<notin> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "with Pd_linear'[where d=\"Xd x\"] fp_cop_F_range_inv'[of z ds] assms z"], ["proof (chain)\npicking this:\n  Linear_order (Pd (Xd x))\n  z \\<in> fp_cop_F ds \\<Longrightarrow>\n  z \\<in> Field (Pd (Xd z)) \\<and> Xd z \\<in> ds\n  stable_on ds X\n  x \\<in> X\n  z \\<in> cop ds\n  Xd z = Xd x\n  (x, z) \\<notin> Pd (Xd x)", "have \"(z, x) \\<in> Pd (Xd x)\""], ["proof (prove)\nusing this:\n  Linear_order (Pd (Xd x))\n  z \\<in> fp_cop_F ds \\<Longrightarrow>\n  z \\<in> Field (Pd (Xd z)) \\<and> Xd z \\<in> ds\n  stable_on ds X\n  x \\<in> X\n  z \\<in> cop ds\n  Xd z = Xd x\n  (x, z) \\<notin> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (z, x) \\<in> Pd (Xd x)", "unfolding order_on_defs total_on_def"], ["proof (prove)\nusing this:\n  ((Refl (Pd (Xd x)) \\<and> trans (Pd (Xd x))) \\<and>\n   antisym (Pd (Xd x))) \\<and>\n  (\\<forall>xa\\<in>Field (Pd (Xd x)).\n      \\<forall>y\\<in>Field (Pd (Xd x)).\n         xa \\<noteq> y \\<longrightarrow>\n         (xa, y) \\<in> Pd (Xd x) \\<or> (y, xa) \\<in> Pd (Xd x))\n  z \\<in> fp_cop_F ds \\<Longrightarrow>\n  z \\<in> Field (Pd (Xd z)) \\<and> Xd z \\<in> ds\n  stable_on ds X\n  x \\<in> X\n  z \\<in> cop ds\n  Xd z = Xd x\n  (x, z) \\<notin> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (z, x) \\<in> Pd (Xd x)", "by (metis CH_range' refl_onD stable_on_range')"], ["proof (state)\nthis:\n  (z, x) \\<in> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "with fp_cop_F_closed_inv'[of z ds x] x z"], ["proof (chain)\npicking this:\n  \\<lbrakk>z \\<in> fp_cop_F ds; x \\<in> above (Pd (Xd z)) z\\<rbrakk>\n  \\<Longrightarrow> x \\<in> fp_cop_F ds\n  x \\<notin> Rf CH (fp_cop_F ds)\n  z \\<in> cop ds\n  Xd z = Xd x\n  (z, x) \\<in> Pd (Xd x)", "have \"x \\<in> fp_cop_F ds\""], ["proof (prove)\nusing this:\n  \\<lbrakk>z \\<in> fp_cop_F ds; x \\<in> above (Pd (Xd z)) z\\<rbrakk>\n  \\<Longrightarrow> x \\<in> fp_cop_F ds\n  x \\<notin> Rf CH (fp_cop_F ds)\n  z \\<in> cop ds\n  Xd z = Xd x\n  (z, x) \\<in> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. x \\<in> fp_cop_F ds", "unfolding above_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>z \\<in> fp_cop_F ds; x \\<in> {b. (z, b) \\<in> Pd (Xd z)}\\<rbrakk>\n  \\<Longrightarrow> x \\<in> fp_cop_F ds\n  x \\<notin> Rf CH (fp_cop_F ds)\n  z \\<in> cop ds\n  Xd z = Xd x\n  (z, x) \\<in> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. x \\<in> fp_cop_F ds", "by (force simp: mem_CH_Ch dest: Ch_range')"], ["proof (state)\nthis:\n  x \\<in> fp_cop_F ds\n\ngoal (1 subgoal):\n 1. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "with fp_cop_F_allocation x z"], ["proof (chain)\npicking this:\n  inj_on Xd (cop ?ds)\n  x \\<notin> Rf CH (fp_cop_F ds)\n  z \\<in> cop ds\n  Xd z = Xd x\n  x \\<in> fp_cop_F ds", "have \"z = x\""], ["proof (prove)\nusing this:\n  inj_on Xd (cop ?ds)\n  x \\<notin> Rf CH (fp_cop_F ds)\n  z \\<in> cop ds\n  Xd z = Xd x\n  x \\<in> fp_cop_F ds\n\ngoal (1 subgoal):\n 1. z = x", "by (fastforce dest: inj_onD)"], ["proof (state)\nthis:\n  z = x\n\ngoal (1 subgoal):\n 1. (x, z) \\<notin> Pd (Xd x) \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "with Pd_linear assms z"], ["proof (chain)\npicking this:\n  \\<forall>d. Linear_order (Pd d)\n  stable_on ds X\n  x \\<in> X\n  z \\<in> cop ds\n  Xd z = Xd x\n  z = x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d. Linear_order (Pd d)\n  stable_on ds X\n  x \\<in> X\n  z \\<in> cop ds\n  Xd z = Xd x\n  z = x\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "by (meson equalityD2 stable_on_range' underS_incl_iff)"], ["proof (state)\nthis:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "case False"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "note \\<open>Xd x \\<notin> Xd ` cop ds\\<close>"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow>\n    \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "with assms x"], ["proof (chain)\npicking this:\n  stable_on ds X\n  x \\<in> X\n  x \\<notin> Rf CH (fp_cop_F ds)\n  Xd x \\<notin> Xd ` cop ds", "show ?thesis"], ["proof (prove)\nusing this:\n  stable_on ds X\n  x \\<in> X\n  x \\<notin> Rf CH (fp_cop_F ds)\n  Xd x \\<notin> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "by (metis DiffI Diff_eq_empty_iff fp_cop_F_all emptyE imageI stable_on_Xd stable_on_range')"], ["proof (state)\nthis:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem fp_cop_F_doctor_optimal_match:\n  shows \"doctor_optimal_match ds (cop ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. doctor_optimal_match ds (cop ds)", "by %invisible (rule doctor_optimal_matchI[OF Theorem_1 Theorem_5]) auto"], ["", "end"], ["", "text\\<open>\n\n\\label{sec:cop-opposition-of-interests}\n\nThe next lemma demonstrates the @{emph \\<open>opposition of interests\\<close>} of\ndoctors and hospitals: if all doctors weakly prefer one stable match\nto another, then the hospitals weakly prefer the converse.\n\nAs we do not have linear preferences for hospitals, we use revealed\npreference and hence assume @{const \"irc\"} holds of hospital choice\nfunctions. Our definition of the doctor-preferred ordering @{term\n\"dpref\"} follows the Isabelle/HOL convention of putting the larger\n(more preferred) element on the right, and takes care with\nunemployment.\n\n\\<close>"], ["", "context Contracts\nbegin"], ["", "definition dpref :: \"'x set \\<Rightarrow> 'x set \\<Rightarrow> bool\" where\n  \"dpref X Y = (\\<forall>x\\<in>X. \\<exists>y\\<in>Y. (x, y) \\<in> Pd (Xd x))\""], ["", "lemmas %invisible dprefI = iffD2[OF dpref_def, rule_format]"], ["", "end"], ["", "context ContractsWithIRC\nbegin"], ["", "theorem Lemma_1:\n  assumes \"stable_on ds Y\"\n  assumes \"stable_on ds Z\"\n  assumes \"dpref Z Y\"\n  assumes \"x \\<in> Ch h Z\"\n  shows \"x \\<in> Ch h (Y \\<union> Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> Ch h (Y \\<union> Z)", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (Y \\<union> Z) \\<Longrightarrow> False", "assume \"x \\<notin> Ch h (Y \\<union> Z)\""], ["proof (state)\nthis:\n  x \\<notin> Ch h (Y \\<union> Z)\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (Y \\<union> Z) \\<Longrightarrow> False", "from \\<open>x \\<in> Ch h Z\\<close> \\<open>x \\<notin> Ch h (Y \\<union> Z)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> Ch h Z\n  x \\<notin> Ch h (Y \\<union> Z)", "have \"Ch h (Y \\<union> Z) \\<noteq> Ch h Z\""], ["proof (prove)\nusing this:\n  x \\<in> Ch h Z\n  x \\<notin> Ch h (Y \\<union> Z)\n\ngoal (1 subgoal):\n 1. Ch h (Y \\<union> Z) \\<noteq> Ch h Z", "by blast"], ["proof (state)\nthis:\n  Ch h (Y \\<union> Z) \\<noteq> Ch h Z\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (Y \\<union> Z) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Ch h (Y \\<union> Z) \\<noteq> Ch h Z\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (Y \\<union> Z) \\<Longrightarrow> False", "have \"Ch h (Y \\<union> Z) = Ch h (Z \\<union> Ch h (Y \\<union> Z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ch h (Y \\<union> Z) = Ch h (Z \\<union> Ch h (Y \\<union> Z))", "by (rule consistency_onD[OF Ch_consistency]; auto dest: Ch_range')"], ["proof (state)\nthis:\n  Ch h (Y \\<union> Z) = Ch h (Z \\<union> Ch h (Y \\<union> Z))\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (Y \\<union> Z) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Ch h (Y \\<union> Z) = Ch h (Z \\<union> Ch h (Y \\<union> Z))\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (Y \\<union> Z) \\<Longrightarrow> False", "have \"y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))\" if \"y \\<in> Ch h (Y \\<union> Z)\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))", "from \\<open>stable_on ds Y\\<close> \\<open>stable_on ds Z\\<close> that"], ["proof (chain)\npicking this:\n  stable_on ds Y\n  stable_on ds Z\n  y \\<in> Ch h (Y \\<union> Z)", "have \"Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y))\""], ["proof (prove)\nusing this:\n  stable_on ds Y\n  stable_on ds Z\n  y \\<in> Ch h (Y \\<union> Z)\n\ngoal (1 subgoal):\n 1. Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y))", "using stable_on_Xd stable_on_range' Ch_range'"], ["proof (prove)\nusing this:\n  stable_on ds Y\n  stable_on ds Z\n  y \\<in> Ch h (Y \\<union> Z)\n  \\<lbrakk>stable_on ?ds ?X; ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> Xd ?x \\<in> ?ds\n  \\<lbrakk>stable_on ?ds ?X; ?x \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Field (Pd (Xd ?x))\n  ?x \\<in> Ch ?h ?X \\<Longrightarrow> ?x \\<in> ?X \\<and> Xh ?x = ?h\n\ngoal (1 subgoal):\n 1. Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y))", "by (meson Un_iff)"], ["proof (state)\nthis:\n  Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y))\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))", "with Pd_linear'[of \"Xd y\"] Ch_singular \\<open>stable_on ds Y\\<close> \\<open>stable_on ds Z\\<close> \\<open>dpref Z Y\\<close> that"], ["proof (chain)\npicking this:\n  Linear_order (Pd (Xd y))\n  \\<forall>h X. inj_on Xd (Ch h X)\n  stable_on ds Y\n  stable_on ds Z\n  dpref Z Y\n  y \\<in> Ch h (Y \\<union> Z)\n  Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y))", "show ?thesis"], ["proof (prove)\nusing this:\n  Linear_order (Pd (Xd y))\n  \\<forall>h X. inj_on Xd (Ch h X)\n  stable_on ds Y\n  stable_on ds Z\n  dpref Z Y\n  y \\<in> Ch h (Y \\<union> Z)\n  Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y))\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))", "unfolding dpref_def"], ["proof (prove)\nusing this:\n  Linear_order (Pd (Xd y))\n  \\<forall>h X. inj_on Xd (Ch h X)\n  stable_on ds Y\n  stable_on ds Z\n  \\<forall>x\\<in>Z. \\<exists>y\\<in>Y. (x, y) \\<in> Pd (Xd x)\n  y \\<in> Ch h (Y \\<union> Z)\n  Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y))\n\ngoal (1 subgoal):\n 1. y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))", "by (clarsimp simp: mem_CD_on_Cd Cd_greatest greatest_def)\n         (metis Ch_range' Pd_Xd Un_iff eq_iff inj_on_contraD stable_on_allocation underS_incl_iff)"], ["proof (state)\nthis:\n  y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<in> Ch h (Y \\<union> Z) \\<Longrightarrow>\n  ?y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))\n\ngoal (1 subgoal):\n 1. x \\<notin> Ch h (Y \\<union> Z) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  Ch h (Y \\<union> Z) \\<noteq> Ch h Z\n  Ch h (Y \\<union> Z) = Ch h (Z \\<union> Ch h (Y \\<union> Z))\n  ?y \\<in> Ch h (Y \\<union> Z) \\<Longrightarrow>\n  ?y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))", "show False"], ["proof (prove)\nusing this:\n  Ch h (Y \\<union> Z) \\<noteq> Ch h Z\n  Ch h (Y \\<union> Z) = Ch h (Z \\<union> Ch h (Y \\<union> Z))\n  ?y \\<in> Ch h (Y \\<union> Z) \\<Longrightarrow>\n  ?y \\<in> CD_on ds (Z \\<union> Ch h (Y \\<union> Z))\n\ngoal (1 subgoal):\n 1. False", "by (blast dest: stable_on_blocking_onD[OF \\<open>stable_on ds Z\\<close>])"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text (in Contracts) \\<open>\n\n\\citet[Corollary~1 (of Theorem~5 and Lemma~1)]{HatfieldKojima:2010}:\n@{const \"unilateral_substitutes\"} implies there is a hospital-pessimal\nmatch, which is indeed the doctor-optimal one.\n\n\\<close>"], ["", "context ContractsWithUnilateralSubstitutesAndIRC\nbegin"], ["", "theorem Corollary_1:\n  assumes \"stable_on ds Z\"\n  shows \"dpref Z (cop ds)\"\n    and \"x \\<in> Z \\<Longrightarrow> x \\<in> Ch (Xh x) (cop ds \\<union> Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dpref Z (cop ds) &&&\n    (x \\<in> Z \\<Longrightarrow> x \\<in> Ch (Xh x) (cop ds \\<union> Z))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. dpref Z (cop ds)\n 2. x \\<in> Z \\<Longrightarrow> x \\<in> Ch (Xh x) (cop ds \\<union> Z)", "show \"dpref Z (cop ds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dpref Z (cop ds)", "by (rule dprefI[OF Theorem_5[OF \\<open>stable_on ds Z\\<close>]])"], ["proof (state)\nthis:\n  dpref Z (cop ds)\n\ngoal (1 subgoal):\n 1. x \\<in> Z \\<Longrightarrow> x \\<in> Ch (Xh x) (cop ds \\<union> Z)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> Z \\<Longrightarrow> x \\<in> Ch (Xh x) (cop ds \\<union> Z)", "assume \"x \\<in> Z\""], ["proof (state)\nthis:\n  x \\<in> Z\n\ngoal (1 subgoal):\n 1. x \\<in> Z \\<Longrightarrow> x \\<in> Ch (Xh x) (cop ds \\<union> Z)", "with assms"], ["proof (chain)\npicking this:\n  stable_on ds Z\n  x \\<in> Z", "show \"x \\<in> Ch (Xh x) (cop ds \\<union> Z)\""], ["proof (prove)\nusing this:\n  stable_on ds Z\n  x \\<in> Z\n\ngoal (1 subgoal):\n 1. x \\<in> Ch (Xh x) (cop ds \\<union> Z)", "using Lemma_1[OF Theorem_1 assms \\<open>dpref Z (cop ds)\\<close>] stable_on_CH"], ["proof (prove)\nusing this:\n  stable_on ds Z\n  x \\<in> Z\n  ?x \\<in> Ch ?h Z \\<Longrightarrow> ?x \\<in> Ch ?h (cop ds \\<union> Z)\n  stable_on ?ds ?X \\<Longrightarrow> CH ?X = ?X\n\ngoal (1 subgoal):\n 1. x \\<in> Ch (Xh x) (cop ds \\<union> Z)", "by (fastforce simp: mem_CH_Ch)"], ["proof (state)\nthis:\n  x \\<in> Ch (Xh x) (cop ds \\<union> Z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n\n\\citet[p1717]{HatfieldKojima:2010} show that there is not always a\nhospital-optimal/doctor-pessimal match when hospital preferences\nsatisfy @{const \"unilateral_substitutes\"}, in contrast to the\nsituation under @{const \"substitutes\"} (see\n\\S\\ref{sec:contracts-optimality}). This reflects the loss of the\nlattice structure.\n\n\\<close>"], ["", "end"], ["", "subsection\\<open> Theorem~6: A ``rural hospitals'' theorem \\label{sec:cop-rh} \\<close>"], ["", "text (in Contracts) \\<open>\n\n\\citet[Theorem~6]{HatfieldKojima:2010} demonstrates a ``rural\nhospitals'' theorem for the COP assuming hospital choice functions\nsatisfy @{const \"unilateral_substitutes\"} and @{const \"lad\"}, as for\n\\S\\ref{sec:contracts-rh}. However \\citet[\\S4,\nExample~1]{AygunSonmez:2012-WP} observe that @{thm [source]\n\"lad_on_substitutes_on_irc_on\"} does not hold with @{const\n\"bilateral_substitutes\"} instead of @{const \"substitutes\"}, and their\nExample~3 similarly for @{const \"unilateral_substitutes\"}. Moreover\n@{const \"fp_cop_F\"} can yield an unstable allocation with just these\ntwo hypotheses. Ergo we need to assume @{const \"irc\"} even when we\nhave @{const \"lad\"}, unlike before (see \\S\\ref{sec:contracts-rh}).\n\nThis theorem is the foundation for all later strategic results.\n\n\\<close>"], ["", "locale ContractsWithUnilateralSubstitutesAndIRCAndLAD = ContractsWithUnilateralSubstitutesAndIRC + ContractsWithLAD"], ["", "sublocale ContractsWithSubstitutesAndLAD < ContractsWithUnilateralSubstitutesAndIRCAndLAD"], ["proof (prove)\ngoal (1 subgoal):\n 1. ContractsWithUnilateralSubstitutesAndIRCAndLAD Xd Xh Pd Ch", "using %invisible Ch_lad"], ["proof (prove)\nusing this:\n  \\<forall>h. lad (Ch h)\n\ngoal (1 subgoal):\n 1. ContractsWithUnilateralSubstitutesAndIRCAndLAD Xd Xh Pd Ch", "by unfold_locales"], ["", "context ContractsWithUnilateralSubstitutesAndIRCAndLAD\nbegin"], ["", "context\n  fixes ds :: \"'b set\"\n  fixes X :: \"'a set\"\n  assumes \"stable_on ds X\"\nbegin"], ["", "text\\<open>\n\nThe proofs of these first two lemmas are provided by\n\\citet[Theorem~6]{HatfieldKojima:2010}. We treat unemployment in the\ndefinition of the function @{term \"A\"} as we did in\n\\S\\ref{sec:contracts-t1-converse}.\n\n\\<close>"], ["", "lemma RHT_Cd_card:\n  assumes \"d \\<in> ds\"\n  shows \"card (Cd d X) \\<le> card (Cd d (cop ds))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Cd d X) \\<le> card (Cd d (cop ds))", "proof %invisible (cases \"d \\<in> Xd ` X\")"], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<in> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))\n 2. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "case True"], ["proof (state)\nthis:\n  d \\<in> Xd ` X\n\ngoal (2 subgoals):\n 1. d \\<in> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))\n 2. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "then"], ["proof (chain)\npicking this:\n  d \\<in> Xd ` X", "obtain x where \"x \\<in> X\" \"Xd x = d\""], ["proof (prove)\nusing this:\n  d \\<in> Xd ` X\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X; Xd x = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> X\n  Xd x = d\n\ngoal (2 subgoals):\n 1. d \\<in> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))\n 2. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "with \\<open>stable_on ds X\\<close>"], ["proof (chain)\npicking this:\n  stable_on ds X\n  x \\<in> X\n  Xd x = d", "have \"Cd d X = {x}\""], ["proof (prove)\nusing this:\n  stable_on ds X\n  x \\<in> X\n  Xd x = d\n\ngoal (1 subgoal):\n 1. Cd d X = {x}", "using Cd_singleton mem_CD_on_Cd stable_on_CD_on"], ["proof (prove)\nusing this:\n  stable_on ds X\n  x \\<in> X\n  Xd x = d\n  (?x \\<in> Cd ?d ?X) = (Cd ?d ?X = {?x})\n  (?x \\<in> CD_on ?ds ?X) = (?x \\<in> Cd (Xd ?x) ?X \\<and> Xd ?x \\<in> ?ds)\n  stable_on ?ds ?X \\<Longrightarrow> CD_on ?ds ?X = ?X\n\ngoal (1 subgoal):\n 1. Cd d X = {x}", "by blast"], ["proof (state)\nthis:\n  Cd d X = {x}\n\ngoal (2 subgoals):\n 1. d \\<in> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))\n 2. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "moreover"], ["proof (state)\nthis:\n  Cd d X = {x}\n\ngoal (2 subgoals):\n 1. d \\<in> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))\n 2. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "from Theorem_5[OF \\<open>stable_on ds X\\<close> \\<open>x \\<in> X\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)", "obtain y where \"Cd d (cop ds) = {y}\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        Cd d (cop ds) = {y} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Cd_single Cd_singleton FieldI2 \\<open>Xd x = d\\<close> fp_cop_F_allocation"], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>cop ds. (x, y) \\<in> Pd (Xd x)\n  \\<lbrakk>?x \\<in> ?X; inj_on Xd ?X; ?x \\<in> Field (Pd ?d)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> Cd ?d ?X\n  (?x \\<in> Cd ?d ?X) = (Cd ?d ?X = {?x})\n  (?i, ?j) \\<in> ?R \\<Longrightarrow> ?j \\<in> Field ?R\n  Xd x = d\n  inj_on Xd (cop ?ds)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        Cd d (cop ds) = {y} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  Cd d (cop ds) = {y}\n\ngoal (2 subgoals):\n 1. d \\<in> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))\n 2. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "ultimately"], ["proof (chain)\npicking this:\n  Cd d X = {x}\n  Cd d (cop ds) = {y}", "show ?thesis"], ["proof (prove)\nusing this:\n  Cd d X = {x}\n  Cd d (cop ds) = {y}\n\ngoal (1 subgoal):\n 1. card (Cd d X) \\<le> card (Cd d (cop ds))", "by simp"], ["proof (state)\nthis:\n  card (Cd d X) \\<le> card (Cd d (cop ds))\n\ngoal (1 subgoal):\n 1. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "case False"], ["proof (state)\nthis:\n  d \\<notin> Xd ` X\n\ngoal (1 subgoal):\n 1. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "then"], ["proof (chain)\npicking this:\n  d \\<notin> Xd ` X", "have \"Cd d X = {}\""], ["proof (prove)\nusing this:\n  d \\<notin> Xd ` X\n\ngoal (1 subgoal):\n 1. Cd d X = {}", "using Cd_Xd Cd_range'"], ["proof (prove)\nusing this:\n  d \\<notin> Xd ` X\n  ?x \\<in> Cd ?d ?X \\<Longrightarrow> Xd ?x = ?d\n  ?x \\<in> Cd ?d ?X \\<Longrightarrow> ?x \\<in> ?X \\<inter> Field (Pd ?d)\n\ngoal (1 subgoal):\n 1. Cd d X = {}", "by blast"], ["proof (state)\nthis:\n  Cd d X = {}\n\ngoal (1 subgoal):\n 1. d \\<notin> Xd ` X \\<Longrightarrow>\n    card (Cd d X) \\<le> card (Cd d (cop ds))", "then"], ["proof (chain)\npicking this:\n  Cd d X = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  Cd d X = {}\n\ngoal (1 subgoal):\n 1. card (Cd d X) \\<le> card (Cd d (cop ds))", "by simp"], ["proof (state)\nthis:\n  card (Cd d X) \\<le> card (Cd d (cop ds))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma RHT_Ch_card:\n  shows \"card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "define A where \"A \\<equiv> \\<lambda>X. {y |y. Xd y \\<in> ds \\<and> y \\<in> Field (Pd (Xd y)) \\<and> (\\<forall>x \\<in> X. Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}\""], ["proof (state)\nthis:\n  A \\<equiv>\n  \\<lambda>X.\n     {y |y.\n      Xd y \\<in> ds \\<and>\n      y \\<in> Field (Pd (Xd y)) \\<and>\n      (\\<forall>x\\<in>X.\n          Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "have \"A (cop ds) = fp_cop_F ds\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. A (cop ds) = fp_cop_F ds", "proof(rule set_elem_equalityI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A (cop ds) \\<Longrightarrow> x \\<in> fp_cop_F ds\n 2. \\<And>x. x \\<in> fp_cop_F ds \\<Longrightarrow> x \\<in> A (cop ds)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A (cop ds) \\<Longrightarrow> x \\<in> fp_cop_F ds\n 2. \\<And>x. x \\<in> fp_cop_F ds \\<Longrightarrow> x \\<in> A (cop ds)", "assume \"x \\<in> ?lhs\""], ["proof (state)\nthis:\n  x \\<in> A (cop ds)\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A (cop ds) \\<Longrightarrow> x \\<in> fp_cop_F ds\n 2. \\<And>x. x \\<in> fp_cop_F ds \\<Longrightarrow> x \\<in> A (cop ds)", "show \"x \\<in> ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> fp_cop_F ds", "proof(cases \"Xd x \\<in> Xd ` cop ds\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` cop ds \\<Longrightarrow> x \\<in> fp_cop_F ds\n 2. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow> x \\<in> fp_cop_F ds", "case True"], ["proof (state)\nthis:\n  Xd x \\<in> Xd ` cop ds\n\ngoal (2 subgoals):\n 1. Xd x \\<in> Xd ` cop ds \\<Longrightarrow> x \\<in> fp_cop_F ds\n 2. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow> x \\<in> fp_cop_F ds", "with \\<open>x \\<in> ?lhs\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A (cop ds)\n  Xd x \\<in> Xd ` cop ds", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> A (cop ds)\n  Xd x \\<in> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. x \\<in> fp_cop_F ds", "unfolding A_def"], ["proof (prove)\nusing this:\n  x \\<in> {y |y.\n           Xd y \\<in> ds \\<and>\n           y \\<in> Field (Pd (Xd y)) \\<and>\n           (\\<forall>x\\<in>cop ds.\n               Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}\n  Xd x \\<in> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. x \\<in> fp_cop_F ds", "by clarsimp (metis CH_range' above_def fp_cop_F_closed_inv' mem_Collect_eq)"], ["proof (state)\nthis:\n  x \\<in> fp_cop_F ds\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow> x \\<in> fp_cop_F ds", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow> x \\<in> fp_cop_F ds", "case False"], ["proof (state)\nthis:\n  Xd x \\<notin> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. Xd x \\<notin> Xd ` cop ds \\<Longrightarrow> x \\<in> fp_cop_F ds", "with \\<open>x \\<in> ?lhs\\<close> fp_cop_F_all"], ["proof (chain)\npicking this:\n  x \\<in> A (cop ds)\n  \\<lbrakk>?d \\<in> ?ds; ?d \\<notin> Xd ` cop ?ds\\<rbrakk>\n  \\<Longrightarrow> Field (Pd ?d) \\<subseteq> fp_cop_F ?ds\n  Xd x \\<notin> Xd ` cop ds", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> A (cop ds)\n  \\<lbrakk>?d \\<in> ?ds; ?d \\<notin> Xd ` cop ?ds\\<rbrakk>\n  \\<Longrightarrow> Field (Pd ?d) \\<subseteq> fp_cop_F ?ds\n  Xd x \\<notin> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. x \\<in> fp_cop_F ds", "unfolding A_def"], ["proof (prove)\nusing this:\n  x \\<in> {y |y.\n           Xd y \\<in> ds \\<and>\n           y \\<in> Field (Pd (Xd y)) \\<and>\n           (\\<forall>x\\<in>cop ds.\n               Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}\n  \\<lbrakk>?d \\<in> ?ds; ?d \\<notin> Xd ` cop ?ds\\<rbrakk>\n  \\<Longrightarrow> Field (Pd ?d) \\<subseteq> fp_cop_F ?ds\n  Xd x \\<notin> Xd ` cop ds\n\ngoal (1 subgoal):\n 1. x \\<in> fp_cop_F ds", "by blast"], ["proof (state)\nthis:\n  x \\<in> fp_cop_F ds\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> fp_cop_F ds\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fp_cop_F ds \\<Longrightarrow> x \\<in> A (cop ds)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fp_cop_F ds \\<Longrightarrow> x \\<in> A (cop ds)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fp_cop_F ds \\<Longrightarrow> x \\<in> A (cop ds)", "assume \"x \\<in> ?rhs\""], ["proof (state)\nthis:\n  x \\<in> fp_cop_F ds\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> fp_cop_F ds \\<Longrightarrow> x \\<in> A (cop ds)", "with fp_cop_F_worst"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> cop ?ds; ?y \\<in> fp_cop_F ?ds; Xd ?y = Xd ?x\\<rbrakk>\n  \\<Longrightarrow> (?x, ?y) \\<in> Pd (Xd ?x)\n  x \\<in> fp_cop_F ds", "show \"x \\<in> ?lhs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> cop ?ds; ?y \\<in> fp_cop_F ?ds; Xd ?y = Xd ?x\\<rbrakk>\n  \\<Longrightarrow> (?x, ?y) \\<in> Pd (Xd ?x)\n  x \\<in> fp_cop_F ds\n\ngoal (1 subgoal):\n 1. x \\<in> A (cop ds)", "unfolding A_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> cop ?ds; ?y \\<in> fp_cop_F ?ds; Xd ?y = Xd ?x\\<rbrakk>\n  \\<Longrightarrow> (?x, ?y) \\<in> Pd (Xd ?x)\n  x \\<in> fp_cop_F ds\n\ngoal (1 subgoal):\n 1. x \\<in> {y |y.\n             Xd y \\<in> ds \\<and>\n             y \\<in> Field (Pd (Xd y)) \\<and>\n             (\\<forall>x\\<in>cop ds.\n                 Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}", "using fp_cop_F_range_inv'[OF \\<open>x \\<in> ?rhs\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> cop ?ds; ?y \\<in> fp_cop_F ?ds; Xd ?y = Xd ?x\\<rbrakk>\n  \\<Longrightarrow> (?x, ?y) \\<in> Pd (Xd ?x)\n  x \\<in> fp_cop_F ds\n  x \\<in> Field (Pd (Xd x)) \\<and> Xd x \\<in> ds\n\ngoal (1 subgoal):\n 1. x \\<in> {y |y.\n             Xd y \\<in> ds \\<and>\n             y \\<in> Field (Pd (Xd y)) \\<and>\n             (\\<forall>x\\<in>cop ds.\n                 Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> A (cop ds)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A (cop ds) = fp_cop_F ds\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "moreover"], ["proof (state)\nthis:\n  A (cop ds) = fp_cop_F ds\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "have \"CH (A X) = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CH (A X) = X", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. CH (A X) \\<noteq> X \\<Longrightarrow> False", "assume \"CH (A X) \\<noteq> X\""], ["proof (state)\nthis:\n  CH (A X) \\<noteq> X\n\ngoal (1 subgoal):\n 1. CH (A X) \\<noteq> X \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  CH (A X) \\<noteq> X", "have \"CH (A X) \\<noteq> CH X\""], ["proof (prove)\nusing this:\n  CH (A X) \\<noteq> X\n\ngoal (1 subgoal):\n 1. CH (A X) \\<noteq> CH X", "using \\<open>stable_on ds X\\<close> stable_on_CH"], ["proof (prove)\nusing this:\n  CH (A X) \\<noteq> X\n  stable_on ds X\n  stable_on ?ds ?X \\<Longrightarrow> CH ?X = ?X\n\ngoal (1 subgoal):\n 1. CH (A X) \\<noteq> CH X", "by blast"], ["proof (state)\nthis:\n  CH (A X) \\<noteq> CH X\n\ngoal (1 subgoal):\n 1. CH (A X) \\<noteq> X \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  CH (A X) \\<noteq> CH X", "obtain h where XXX: \"Ch h (A X) \\<noteq> Ch h X\""], ["proof (prove)\nusing this:\n  CH (A X) \\<noteq> CH X\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        Ch h (A X) \\<noteq> Ch h X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using mem_CH_Ch"], ["proof (prove)\nusing this:\n  CH (A X) \\<noteq> CH X\n  (?x \\<in> CH ?X) = (?x \\<in> Ch (Xh ?x) ?X)\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        Ch h (A X) \\<noteq> Ch h X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Ch h (A X) \\<noteq> Ch h X\n\ngoal (1 subgoal):\n 1. CH (A X) \\<noteq> X \\<Longrightarrow> False", "have \"\\<not>stable_on ds X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> stable_on ds X", "proof(rule blocking_on_imp_not_stable[OF blocking_onI])"], ["proof (state)\ngoal (3 subgoals):\n 1. ?X'' \\<noteq> Ch ?h X\n 2. ?X'' = Ch ?h (X \\<union> ?X'')\n 3. \\<And>x.\n       x \\<in> ?X'' \\<Longrightarrow> x \\<in> CD_on ds (X \\<union> ?X'')", "show \"Ch h (A X) \\<noteq> Ch h X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ch h (A X) \\<noteq> Ch h X", "by fact"], ["proof (state)\nthis:\n  Ch h (A X) \\<noteq> Ch h X\n\ngoal (2 subgoals):\n 1. Ch h (A X) = Ch h (X \\<union> Ch h (A X))\n 2. \\<And>x.\n       x \\<in> Ch h (A X) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch h (A X))", "from Pd_linear \\<open>stable_on ds X\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>d. Linear_order (Pd d)\n  stable_on ds X", "show \"Ch h (A X) = Ch h (X \\<union> Ch h (A X))\""], ["proof (prove)\nusing this:\n  \\<forall>d. Linear_order (Pd d)\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. Ch h (A X) = Ch h (X \\<union> Ch h (A X))", "unfolding A_def"], ["proof (prove)\nusing this:\n  \\<forall>d. Linear_order (Pd d)\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. Ch h\n     {y |y.\n      Xd y \\<in> ds \\<and>\n      y \\<in> Field (Pd (Xd y)) \\<and>\n      (\\<forall>x\\<in>X.\n          Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))} =\n    Ch h\n     (X \\<union>\n      Ch h\n       {y |y.\n        Xd y \\<in> ds \\<and>\n        y \\<in> Field (Pd (Xd y)) \\<and>\n        (\\<forall>x\\<in>X.\n            Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))})", "by - (rule consistencyD[OF Ch_consistency],\n              auto 10 0 dest: Ch_range' stable_on_Xd stable_on_range' stable_on_allocation inj_onD underS_incl_iff)"], ["proof (state)\nthis:\n  Ch h (A X) = Ch h (X \\<union> Ch h (A X))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch h (A X) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch h (A X))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch h (A X) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch h (A X))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch h (A X) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch h (A X))", "assume \"x \\<in> Ch h (A X)\""], ["proof (state)\nthis:\n  x \\<in> Ch h (A X)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Ch h (A X) \\<Longrightarrow>\n       x \\<in> CD_on ds (X \\<union> Ch h (A X))", "with Ch_singular Pd_linear"], ["proof (chain)\npicking this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  \\<forall>d. Linear_order (Pd d)\n  x \\<in> Ch h (A X)", "show \"x \\<in> CD_on ds (X \\<union> Ch h (A X))\""], ["proof (prove)\nusing this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  \\<forall>d. Linear_order (Pd d)\n  x \\<in> Ch h (A X)\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds (X \\<union> Ch h (A X))", "unfolding A_def"], ["proof (prove)\nusing this:\n  \\<forall>h X. inj_on Xd (Ch h X)\n  \\<forall>d. Linear_order (Pd d)\n  x \\<in> Ch h\n           {y |y.\n            Xd y \\<in> ds \\<and>\n            y \\<in> Field (Pd (Xd y)) \\<and>\n            (\\<forall>x\\<in>X.\n                Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}\n\ngoal (1 subgoal):\n 1. x \\<in> CD_on ds\n             (X \\<union>\n              Ch h\n               {y |y.\n                Xd y \\<in> ds \\<and>\n                y \\<in> Field (Pd (Xd y)) \\<and>\n                (\\<forall>x\\<in>X.\n                    Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))})", "by (auto 9 3 simp: mem_CD_on_Cd Cd_greatest greatest_def\n                     dest: Ch_range' Pd_range' Cd_Xd Cd_single inj_onD underS_incl_iff\n                    intro: FieldI1)"], ["proof (state)\nthis:\n  x \\<in> CD_on ds (X \\<union> Ch h (A X))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> stable_on ds X\n\ngoal (1 subgoal):\n 1. CH (A X) \\<noteq> X \\<Longrightarrow> False", "with \\<open>stable_on ds X\\<close>"], ["proof (chain)\npicking this:\n  stable_on ds X\n  \\<not> stable_on ds X", "show False"], ["proof (prove)\nusing this:\n  stable_on ds X\n  \\<not> stable_on ds X\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  CH (A X) = X\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "moreover"], ["proof (state)\nthis:\n  CH (A X) = X\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "from Pd_linear Theorem_5[OF \\<open>stable_on ds X\\<close>] \\<open>stable_on ds X\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>d. Linear_order (Pd d)\n  ?x \\<in> X \\<Longrightarrow>\n  \\<exists>y\\<in>cop ds. (?x, y) \\<in> Pd (Xd ?x)\n  stable_on ds X", "have \"A (cop ds) \\<subseteq> A X\""], ["proof (prove)\nusing this:\n  \\<forall>d. Linear_order (Pd d)\n  ?x \\<in> X \\<Longrightarrow>\n  \\<exists>y\\<in>cop ds. (?x, y) \\<in> Pd (Xd ?x)\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. A (cop ds) \\<subseteq> A X", "unfolding A_def order_on_defs"], ["proof (prove)\nusing this:\n  \\<forall>d.\n     ((Refl (Pd d) \\<and> trans (Pd d)) \\<and> antisym (Pd d)) \\<and>\n     Total (Pd d)\n  ?x \\<in> X \\<Longrightarrow>\n  \\<exists>y\\<in>cop ds. (?x, y) \\<in> Pd (Xd ?x)\n  stable_on ds X\n\ngoal (1 subgoal):\n 1. {y |y.\n     Xd y \\<in> ds \\<and>\n     y \\<in> Field (Pd (Xd y)) \\<and>\n     (\\<forall>x\\<in>cop ds.\n         Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}\n    \\<subseteq> {y |y.\n                 Xd y \\<in> ds \\<and>\n                 y \\<in> Field (Pd (Xd y)) \\<and>\n                 (\\<forall>x\\<in>X.\n                     Xd x = Xd y \\<longrightarrow> (x, y) \\<in> Pd (Xd x))}", "by (fastforce dest: Pd_Xd elim: transE)"], ["proof (state)\nthis:\n  A (cop ds) \\<subseteq> A X\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "then"], ["proof (chain)\npicking this:\n  A (cop ds) \\<subseteq> A X", "have \"card (Ch h (A (cop ds))) \\<le> card (Ch h (A X))\""], ["proof (prove)\nusing this:\n  A (cop ds) \\<subseteq> A X\n\ngoal (1 subgoal):\n 1. card (Ch h (A (cop ds))) \\<le> card (Ch h (A X))", "by (fastforce intro: ladD[OF spec[OF Ch_lad]])"], ["proof (state)\nthis:\n  card (Ch h (A (cop ds))) \\<le> card (Ch h (A X))\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "ultimately"], ["proof (chain)\npicking this:\n  A (cop ds) = fp_cop_F ds\n  CH (A X) = X\n  card (Ch h (A (cop ds))) \\<le> card (Ch h (A X))", "show ?thesis"], ["proof (prove)\nusing this:\n  A (cop ds) = fp_cop_F ds\n  CH (A X) = X\n  card (Ch h (A (cop ds))) \\<le> card (Ch h (A X))\n\ngoal (1 subgoal):\n 1. card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)", "by (metis (no_types, lifting) Ch_CH_irc_idem)"], ["proof (state)\nthis:\n  card (Ch h (fp_cop_F ds)) \\<le> card (Ch h X)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n\nThe top-level proof is the same as in \\S\\ref{sec:contracts-rh}.\n\n\\<close>"], ["", "lemma Theorem_6_fp_cop_F:\n  shows \"d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\"\n    and \"card (Ch h X) = card (Ch h (fp_cop_F ds))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))) &&&\n    card (Ch h X) = card (Ch h (fp_cop_F ds))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "let ?Sum_Cd_COP = \"\\<Sum>d\\<in>ds. card (Cd d (cop ds))\""], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "let ?Sum_Ch_COP = \"\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds))\""], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "let ?Sum_Cd_X = \"\\<Sum>d\\<in>ds. card (Cd d X)\""], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "let ?Sum_Ch_X = \"\\<Sum>h\\<in>UNIV. card (Ch h X)\""], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "have \"?Sum_Cd_COP = ?Sum_Ch_COP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n    (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))", "using Theorem_1 stable_on_CD_on CD_on_card[symmetric] CH_card[symmetric]"], ["proof (prove)\nusing this:\n  stable_on ?ds (cop ?ds)\n  stable_on ?ds ?X \\<Longrightarrow> CD_on ?ds ?X = ?X\n  (\\<Sum>d\\<in>?ds. card (Cd d ?X)) = card (CD_on ?ds ?X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h ?X)) = card (CH ?X)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n    (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "have \"\\<dots> \\<le> ?Sum_Ch_X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n    \\<le> (\\<Sum>h\\<in>UNIV. card (Ch h X))", "using RHT_Ch_card"], ["proof (prove)\nusing this:\n  card (Ch ?h (fp_cop_F ds)) \\<le> card (Ch ?h X)\n\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n    \\<le> (\\<Sum>h\\<in>UNIV. card (Ch h X))", "by (simp add: sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n  \\<le> (\\<Sum>h\\<in>UNIV. card (Ch h X))\n\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "also"], ["proof (state)\nthis:\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n  \\<le> (\\<Sum>h\\<in>UNIV. card (Ch h X))\n\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "have \"\\<dots> = ?Sum_Cd_X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))", "using CD_on_card[symmetric] CH_card[symmetric]"], ["proof (prove)\nusing this:\n  (\\<Sum>d\\<in>?ds. card (Cd d ?X)) = card (CD_on ?ds ?X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h ?X)) = card (CH ?X)\n\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))", "using \\<open>stable_on ds X\\<close> stable_on_CD_on stable_on_CH"], ["proof (prove)\nusing this:\n  (\\<Sum>d\\<in>?ds. card (Cd d ?X)) = card (CD_on ?ds ?X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h ?X)) = card (CH ?X)\n  stable_on ds X\n  stable_on ?ds ?X \\<Longrightarrow> CD_on ?ds ?X = ?X\n  stable_on ?ds ?X \\<Longrightarrow> CH ?X = ?X\n\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))\n\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))\n  \\<le> (\\<Sum>d\\<in>ds. card (Cd d X))", "have \"?Sum_Cd_X = ?Sum_Cd_COP\""], ["proof (prove)\nusing this:\n  (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))\n  \\<le> (\\<Sum>d\\<in>ds. card (Cd d X))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d X)) = (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))", "using RHT_Cd_card"], ["proof (prove)\nusing this:\n  (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))\n  \\<le> (\\<Sum>d\\<in>ds. card (Cd d X))\n  ?d \\<in> ds \\<Longrightarrow> card (Cd ?d X) \\<le> card (Cd ?d (cop ds))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d X)) = (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))", "by (simp add: eq_iff sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>d\\<in>ds. card (Cd d X)) = (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))\n\ngoal (2 subgoals):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n 2. card (Ch h X) = card (Ch h (fp_cop_F ds))", "with RHT_Cd_card"], ["proof (chain)\npicking this:\n  ?d \\<in> ds \\<Longrightarrow> card (Cd ?d X) \\<le> card (Cd ?d (cop ds))\n  (\\<Sum>d\\<in>ds. card (Cd d X)) = (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))", "show \"d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\""], ["proof (prove)\nusing this:\n  ?d \\<in> ds \\<Longrightarrow> card (Cd ?d X) \\<le> card (Cd ?d (cop ds))\n  (\\<Sum>d\\<in>ds. card (Cd d X)) = (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))\n\ngoal (1 subgoal):\n 1. d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))", "by (fastforce elim: sum_mono_inv)"], ["proof (state)\nthis:\n  d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d (cop ds))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "have \"?Sum_Ch_X = ?Sum_Cd_X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))", "using \\<open>stable_on ds X\\<close> stable_on_CD_on stable_on_CH CD_on_card[symmetric] CH_card[symmetric]"], ["proof (prove)\nusing this:\n  stable_on ds X\n  stable_on ?ds ?X \\<Longrightarrow> CD_on ?ds ?X = ?X\n  stable_on ?ds ?X \\<Longrightarrow> CH ?X = ?X\n  (\\<Sum>d\\<in>?ds. card (Cd d ?X)) = card (CD_on ?ds ?X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h ?X)) = card (CH ?X)\n\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "also"], ["proof (state)\nthis:\n  (\\<Sum>h\\<in>UNIV. card (Ch h X)) = (\\<Sum>d\\<in>ds. card (Cd d X))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "have \"\\<dots> \\<le> ?Sum_Cd_COP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d X))\n    \\<le> (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))", "using RHT_Cd_card"], ["proof (prove)\nusing this:\n  ?d \\<in> ds \\<Longrightarrow> card (Cd ?d X) \\<le> card (Cd ?d (cop ds))\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d X))\n    \\<le> (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))", "by (simp add: sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>d\\<in>ds. card (Cd d X))\n  \\<le> (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "also"], ["proof (state)\nthis:\n  (\\<Sum>d\\<in>ds. card (Cd d X))\n  \\<le> (\\<Sum>d\\<in>ds. card (Cd d (cop ds)))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "have \"\\<dots> = ?Sum_Ch_COP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n    (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))", "using CD_on_card[symmetric] CH_card[symmetric]"], ["proof (prove)\nusing this:\n  (\\<Sum>d\\<in>?ds. card (Cd d ?X)) = card (CD_on ?ds ?X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h ?X)) = card (CH ?X)\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n    (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))", "using Theorem_1 stable_on_CD_on stable_on_CH"], ["proof (prove)\nusing this:\n  (\\<Sum>d\\<in>?ds. card (Cd d ?X)) = card (CD_on ?ds ?X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h ?X)) = card (CH ?X)\n  stable_on ?ds (cop ?ds)\n  stable_on ?ds ?X \\<Longrightarrow> CD_on ?ds ?X = ?X\n  stable_on ?ds ?X \\<Longrightarrow> CH ?X = ?X\n\ngoal (1 subgoal):\n 1. (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n    (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>d\\<in>ds. card (Cd d (cop ds))) =\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>h\\<in>UNIV. card (Ch h X))\n  \\<le> (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))", "have \"?Sum_Ch_COP = ?Sum_Ch_X\""], ["proof (prove)\nusing this:\n  (\\<Sum>h\\<in>UNIV. card (Ch h X))\n  \\<le> (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds))) =\n    (\\<Sum>h\\<in>UNIV. card (Ch h X))", "using RHT_Ch_card"], ["proof (prove)\nusing this:\n  (\\<Sum>h\\<in>UNIV. card (Ch h X))\n  \\<le> (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds)))\n  card (Ch ?h (fp_cop_F ds)) \\<le> card (Ch ?h X)\n\ngoal (1 subgoal):\n 1. (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds))) =\n    (\\<Sum>h\\<in>UNIV. card (Ch h X))", "by (simp add: eq_iff sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds))) =\n  (\\<Sum>h\\<in>UNIV. card (Ch h X))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "with RHT_Ch_card"], ["proof (chain)\npicking this:\n  card (Ch ?h (fp_cop_F ds)) \\<le> card (Ch ?h X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds))) =\n  (\\<Sum>h\\<in>UNIV. card (Ch h X))", "show \"card (Ch h X) = card (Ch h (fp_cop_F ds))\""], ["proof (prove)\nusing this:\n  card (Ch ?h (fp_cop_F ds)) \\<le> card (Ch ?h X)\n  (\\<Sum>h\\<in>UNIV. card (Ch h (fp_cop_F ds))) =\n  (\\<Sum>h\\<in>UNIV. card (Ch h X))\n\ngoal (1 subgoal):\n 1. card (Ch h X) = card (Ch h (fp_cop_F ds))", "by (fastforce elim: sym[OF sum_mono_inv])"], ["proof (state)\nthis:\n  card (Ch h X) = card (Ch h (fp_cop_F ds))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "theorem Theorem_6:\n  assumes \"stable_on ds X\"\n  assumes \"stable_on ds Y\"\n  shows \"d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d Y)\"\n    and \"card (Ch h X) = card (Ch h Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d Y)) &&&\n    card (Ch h X) = card (Ch h Y)", "using %invisible Theorem_6_fp_cop_F assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>stable_on ?ds ?X; ?d \\<in> ?ds\\<rbrakk>\n  \\<Longrightarrow> card (Cd ?d ?X) = card (Cd ?d (cop ?ds))\n  stable_on ?ds ?X \\<Longrightarrow>\n  card (Ch ?h ?X) = card (Ch ?h (fp_cop_F ?ds))\n  stable_on ds X\n  stable_on ds Y\n\ngoal (1 subgoal):\n 1. (d \\<in> ds \\<Longrightarrow> card (Cd d X) = card (Cd d Y)) &&&\n    card (Ch h X) = card (Ch h Y)", "by simp_all"], ["", "end"], ["", "subsection\\<open> Concluding remarks \\<close>"], ["", "text\\<open>\n\nWe next discuss a kind of interference between doctors termed\n@{emph \\<open>bossiness\\<close>} in \\S\\ref{sec:bossiness}. This has some implications\nfor the strategic issues we discuss in \\S\\ref{sec:strategic}.\n\n\\<close>"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}