{"file_name": "/home/qj213/afp-2021-10-22/thys/Extended_Finite_State_Machines/GExp_Lexorder.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Extended_Finite_State_Machines", "problem_names": ["lemma less_gexp_aux_antisym: \"less_gexp_aux x y = (\\<not>(less_gexp_aux y x) \\<and> (x \\<noteq> y))\"", "lemma less_gexp_antisym: \"(x::'a gexp) < y = (\\<not>(y < x) \\<and> (x \\<noteq> y))\"", "lemma less_gexp_aux_trans: \"less_gexp_aux x y \\<Longrightarrow> less_gexp_aux y z \\<Longrightarrow> less_gexp_aux x z\"", "lemma less_gexp_trans: \"(x::'a gexp) < y \\<Longrightarrow> y < z \\<Longrightarrow> x < z\""], "translations": [["", "lemma less_gexp_aux_antisym: \"less_gexp_aux x y = (\\<not>(less_gexp_aux y x) \\<and> (x \\<noteq> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux x y =\n    (\\<not> local.less_gexp_aux y x \\<and> x \\<noteq> y)", "proof (induct x y rule: less_gexp_aux.induct)"], ["proof (state)\ngoal (25 subgoals):\n 1. \\<And>b1 b2.\n       local.less_gexp_aux (Bc b1) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Bc b2)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Eq v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 4. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 5. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 6. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n         Eq e1 e2 \\<noteq> Nor v va)\nA total of 25 subgoals...", "case (1 b1 b2)"], ["proof (state)\nthis:\n  \n\ngoal (25 subgoals):\n 1. \\<And>b1 b2.\n       local.less_gexp_aux (Bc b1) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Bc b2)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Eq v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 4. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 5. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 6. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n         Eq e1 e2 \\<noteq> Nor v va)\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) (Bc b2) =\n    (\\<not> local.less_gexp_aux (Bc b2) (Bc b1) \\<and> Bc b1 \\<noteq> Bc b2)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Bc b2) =\n  (\\<not> local.less_gexp_aux (Bc b2) (Bc b1) \\<and> Bc b1 \\<noteq> Bc b2)\n\ngoal (24 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Eq v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 4. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 5. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 10. \\<And>e1 e2 b2.\n        local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n        (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Bc b2)\nA total of 24 subgoals...", "next"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Eq v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 4. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 5. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 10. \\<And>e1 e2 b2.\n        local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n        (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Bc b2)\nA total of 24 subgoals...", "case (\"2_1\" b1 v va)"], ["proof (state)\nthis:\n  \n\ngoal (24 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Eq v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 4. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 5. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 10. \\<And>e1 e2 b2.\n        local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n        (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Bc b2)\nA total of 24 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) (Eq v va) =\n    (\\<not> local.less_gexp_aux (Eq v va) (Bc b1) \\<and>\n     Bc b1 \\<noteq> Eq v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Eq v va) =\n  (\\<not> local.less_gexp_aux (Eq v va) (Bc b1) \\<and>\n   Bc b1 \\<noteq> Eq v va)\n\ngoal (23 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 4. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 9. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 10. \\<And>e1 e2 e1' e2'.\n        local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n        (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Eq e1' e2')\nA total of 23 subgoals...", "next"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 4. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 9. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 10. \\<And>e1 e2 e1' e2'.\n        local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n        (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Eq e1' e2')\nA total of 23 subgoals...", "case (\"2_2\" b1 v va)"], ["proof (state)\nthis:\n  \n\ngoal (23 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Gt v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 3. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 4. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 9. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 10. \\<And>e1 e2 e1' e2'.\n        local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n        (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Eq e1' e2')\nA total of 23 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) (Gt v va) =\n    (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n     Bc b1 \\<noteq> Gt v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Gt v va) =\n  (\\<not> local.less_gexp_aux (Gt v va) (Bc b1) \\<and>\n   Bc b1 \\<noteq> Gt v va)\n\ngoal (22 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 3. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 8. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 9. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 10. \\<And>e1 e2 e1' e2'.\n        local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n        (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Gt e1' e2')\nA total of 22 subgoals...", "next"], ["proof (state)\ngoal (22 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 3. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 8. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 9. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 10. \\<And>e1 e2 e1' e2'.\n        local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n        (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Gt e1' e2')\nA total of 22 subgoals...", "case (\"2_3\" b1 v va)"], ["proof (state)\nthis:\n  \n\ngoal (22 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> In v va)\n 2. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 3. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 8. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 9. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 10. \\<And>e1 e2 e1' e2'.\n        local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n        (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Gt e1' e2')\nA total of 22 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) (In v va) =\n    (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n     Bc b1 \\<noteq> In v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (In v va) =\n  (\\<not> local.less_gexp_aux (In v va) (Bc b1) \\<and>\n   Bc b1 \\<noteq> In v va)\n\ngoal (21 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 2. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 7. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 8. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 9. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Gt e1 e2) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> In v va)\nA total of 21 subgoals...", "next"], ["proof (state)\ngoal (21 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 2. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 7. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 8. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 9. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Gt e1 e2) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> In v va)\nA total of 21 subgoals...", "case (\"2_4\" b1 v va)"], ["proof (state)\nthis:\n  \n\ngoal (21 subgoals):\n 1. \\<And>b1 v va.\n       local.less_gexp_aux (Bc b1) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n        Bc b1 \\<noteq> Nor v va)\n 2. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 7. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 8. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 9. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Gt e1 e2) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> In v va)\nA total of 21 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) (Nor v va) =\n    (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n     Bc b1 \\<noteq> Nor v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Nor v va) =\n  (\\<not> local.less_gexp_aux (Nor v va) (Bc b1) \\<and>\n   Bc b1 \\<noteq> Nor v va)\n\ngoal (20 subgoals):\n 1. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 6. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 8. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Nor v va)\nA total of 20 subgoals...", "next"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 6. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 8. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Nor v va)\nA total of 20 subgoals...", "case (3 e1 e2 b2)"], ["proof (state)\nthis:\n  \n\ngoal (20 subgoals):\n 1. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Bc b2)\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 6. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 8. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 10. \\<And>e1 e2 v va.\n        local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n         Gt e1 e2 \\<noteq> Nor v va)\nA total of 20 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n    (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n     Eq e1 e2 \\<noteq> Bc b2)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Bc b2) =\n  (\\<not> local.less_gexp_aux (Bc b2) (Eq e1 e2) \\<and>\n   Eq e1 e2 \\<noteq> Bc b2)\n\ngoal (19 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 5. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Nor v va)\nA total of 19 subgoals...", "next"], ["proof (state)\ngoal (19 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 5. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Nor v va)\nA total of 19 subgoals...", "case (4 e1 e2 e1' e2')"], ["proof (state)\nthis:\n  \n\ngoal (19 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Eq e1' e2')\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 5. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 7. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 9. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Nor v va) =\n        (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Nor v va)\nA total of 19 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n    (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n     Eq e1 e2 \\<noteq> Eq e1' e2')", "by (metis less_gexp_aux.simps(7) less_imp_not_less less_linear)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Eq e1' e2') =\n  (\\<not> local.less_gexp_aux (Eq e1' e2') (Eq e1 e2) \\<and>\n   Eq e1 e2 \\<noteq> Eq e1' e2')\n\ngoal (18 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 4. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> In v va)\nA total of 18 subgoals...", "next"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 4. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> In v va)\nA total of 18 subgoals...", "case (\"5_1\" e1 e2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (18 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Gt v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 4. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 6. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 8. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> In v va)\nA total of 18 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n    (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n     Eq e1 e2 \\<noteq> Gt v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Gt v va) =\n  (\\<not> local.less_gexp_aux (Gt v va) (Eq e1 e2) \\<and>\n   Eq e1 e2 \\<noteq> Gt v va)\n\ngoal (17 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 3. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 10. \\<And>vb vc v.\n        local.less_gexp_aux (In vb vc) (Bc v) =\n        (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n         In vb vc \\<noteq> Bc v)\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 3. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 10. \\<And>vb vc v.\n        local.less_gexp_aux (In vb vc) (Bc v) =\n        (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n         In vb vc \\<noteq> Bc v)\nA total of 17 subgoals...", "case (\"5_2\" e1 e2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (17 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> In v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 3. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 5. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 7. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 10. \\<And>vb vc v.\n        local.less_gexp_aux (In vb vc) (Bc v) =\n        (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n         In vb vc \\<noteq> Bc v)\nA total of 17 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) (In v va) =\n    (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n     Eq e1 e2 \\<noteq> In v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (In v va) =\n  (\\<not> local.less_gexp_aux (In v va) (Eq e1 e2) \\<and>\n   Eq e1 e2 \\<noteq> In v va)\n\ngoal (16 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 2. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 9. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Eq v va) =\n        (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Eq v va)\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 2. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 9. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Eq v va) =\n        (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Eq v va)\nA total of 16 subgoals...", "case (\"5_3\" e1 e2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (16 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n        Eq e1 e2 \\<noteq> Nor v va)\n 2. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 4. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 6. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 9. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Eq v va) =\n        (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Eq v va)\nA total of 16 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n    (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n     Eq e1 e2 \\<noteq> Nor v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Nor v va) =\n  (\\<not> local.less_gexp_aux (Nor v va) (Eq e1 e2) \\<and>\n   Eq e1 e2 \\<noteq> Nor v va)\n\ngoal (15 subgoals):\n 1. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 8. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Gt v va) =\n        (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Gt v va)\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 8. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Gt v va) =\n        (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Gt v va)\nA total of 15 subgoals...", "case (6 e1 e2 b2)"], ["proof (state)\nthis:\n  \n\ngoal (15 subgoals):\n 1. \\<And>e1 e2 b2.\n       local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n       (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Bc b2)\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 3. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 5. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 8. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 10. \\<And>vb vc v va.\n        local.less_gexp_aux (In vb vc) (Gt v va) =\n        (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n         In vb vc \\<noteq> Gt v va)\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n    (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n     Gt e1 e2 \\<noteq> Bc b2)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Bc b2) =\n  (\\<not> local.less_gexp_aux (Bc b2) (Gt e1 e2) \\<and>\n   Gt e1 e2 \\<noteq> Bc b2)\n\ngoal (14 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 7. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 10. \\<And>g1 g2 g1' g2'.\n        \\<lbrakk>local.less_gexp_aux g1 g1' =\n                 (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n         local.less_gexp_aux g2 g2' =\n         (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                          (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                   (Nor g1 g2) \\<and>\n                           Nor g1 g2 \\<noteq> Nor g1' g2')\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 7. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 10. \\<And>g1 g2 g1' g2'.\n        \\<lbrakk>local.less_gexp_aux g1 g1' =\n                 (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n         local.less_gexp_aux g2 g2' =\n         (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                          (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                   (Nor g1 g2) \\<and>\n                           Nor g1 g2 \\<noteq> Nor g1' g2')\nA total of 14 subgoals...", "case (7 e1 e2 e1' e2')"], ["proof (state)\nthis:\n  \n\ngoal (14 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n       (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Eq e1' e2')\n 2. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 4. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 7. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 9. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 10. \\<And>g1 g2 g1' g2'.\n        \\<lbrakk>local.less_gexp_aux g1 g1' =\n                 (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n         local.less_gexp_aux g2 g2' =\n         (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                          (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                   (Nor g1 g2) \\<and>\n                           Nor g1 g2 \\<noteq> Nor g1' g2')\nA total of 14 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n    (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n     Gt e1 e2 \\<noteq> Eq e1' e2')", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Eq e1' e2') =\n  (\\<not> local.less_gexp_aux (Eq e1' e2') (Gt e1 e2) \\<and>\n   Gt e1 e2 \\<noteq> Eq e1' e2')\n\ngoal (13 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 6. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 9. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 10. \\<And>g1 g2 v.\n        local.less_gexp_aux (Nor g1 g2) (Bc v) =\n        (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Bc v)\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 6. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 9. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 10. \\<And>g1 g2 v.\n        local.less_gexp_aux (Nor g1 g2) (Bc v) =\n        (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Bc v)\nA total of 13 subgoals...", "case (8 e1 e2 e1' e2')"], ["proof (state)\nthis:\n  \n\ngoal (13 subgoals):\n 1. \\<And>e1 e2 e1' e2'.\n       local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n       (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Gt e1' e2')\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 3. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 6. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 8. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 9. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 10. \\<And>g1 g2 v.\n        local.less_gexp_aux (Nor g1 g2) (Bc v) =\n        (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Bc v)\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n    (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n     Gt e1 e2 \\<noteq> Gt e1' e2')", "by (metis less_gexp_aux.simps(13) less_imp_not_less less_linear)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Gt e1' e2') =\n  (\\<not> local.less_gexp_aux (Gt e1' e2') (Gt e1 e2) \\<and>\n   Gt e1 e2 \\<noteq> Gt e1' e2')\n\ngoal (12 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 5. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 8. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 9. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n        (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Eq v va)\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 5. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 8. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 9. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n        (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Eq v va)\nA total of 12 subgoals...", "case (\"9_1\" e1 e2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (12 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> In v va)\n 2. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 5. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 7. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 8. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 9. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n        (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Eq v va)\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) (In v va) =\n    (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n     Gt e1 e2 \\<noteq> In v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (In v va) =\n  (\\<not> local.less_gexp_aux (In v va) (Gt e1 e2) \\<and>\n   Gt e1 e2 \\<noteq> In v va)\n\ngoal (11 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 4. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 7. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 8. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n        (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Gt v va)\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 4. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 7. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 8. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n        (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Gt v va)\nA total of 11 subgoals...", "case (\"9_2\" e1 e2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (11 subgoals):\n 1. \\<And>e1 e2 v va.\n       local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n        Gt e1 e2 \\<noteq> Nor v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 4. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 6. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 7. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 8. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n        (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> Gt v va)\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n    (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n     Gt e1 e2 \\<noteq> Nor v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Nor v va) =\n  (\\<not> local.less_gexp_aux (Nor v va) (Gt e1 e2) \\<and>\n   Gt e1 e2 \\<noteq> Nor v va)\n\ngoal (10 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 3. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 6. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 7. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 3. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 6. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 7. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> In v va)", "case (10 vb vc v va)"], ["proof (state)\nthis:\n  \n\ngoal (10 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Nor v va) =\n       (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Nor v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 3. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 5. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 6. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 7. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 10. \\<And>g1 g2 v va.\n        local.less_gexp_aux (Nor g1 g2) (In v va) =\n        (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n         Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) (Nor v va) =\n    (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n     In vb vc \\<noteq> Nor v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Nor v va) =\n  (\\<not> local.less_gexp_aux (Nor v va) (In vb vc) \\<and>\n   In vb vc \\<noteq> Nor v va)\n\ngoal (9 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 2. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 5. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 6. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 2. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 5. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 6. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (11 vb vc v va)"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> In v va)\n 2. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 4. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 5. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 6. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 9. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) (In v va) =\n    (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n     In vb vc \\<noteq> In v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (In v va) =\n  (\\<not> local.less_gexp_aux (In v va) (In vb vc) \\<and>\n   In vb vc \\<noteq> In v va)\n\ngoal (8 subgoals):\n 1. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 4. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 5. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 4. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 5. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (\"12_1\" vb vc v)"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. \\<And>vb vc v.\n       local.less_gexp_aux (In vb vc) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n        In vb vc \\<noteq> Bc v)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 3. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 4. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 5. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 8. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) (Bc v) =\n    (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n     In vb vc \\<noteq> Bc v)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Bc v) =\n  (\\<not> local.less_gexp_aux (Bc v) (In vb vc) \\<and>\n   In vb vc \\<noteq> Bc v)\n\ngoal (7 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 3. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 4. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 3. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 4. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (\"12_2\" vb vc v va)"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Eq v va)\n 2. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 3. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 4. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 7. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) (Eq v va) =\n    (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n     In vb vc \\<noteq> Eq v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Eq v va) =\n  (\\<not> local.less_gexp_aux (Eq v va) (In vb vc) \\<and>\n   In vb vc \\<noteq> Eq v va)\n\ngoal (6 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 2. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 3. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 2. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 3. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (\"12_3\" vb vc v va)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>vb vc v va.\n       local.less_gexp_aux (In vb vc) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n        In vb vc \\<noteq> Gt v va)\n 2. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 3. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 6. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) (Gt v va) =\n    (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n     In vb vc \\<noteq> Gt v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Gt v va) =\n  (\\<not> local.less_gexp_aux (Gt v va) (In vb vc) \\<and>\n   In vb vc \\<noteq> Gt v va)\n\ngoal (5 subgoals):\n 1. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 2. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 2. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (13 g1 g2 g1' g2')"], ["proof (state)\nthis:\n  local.less_gexp_aux g1 g1' =\n  (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1')\n  local.less_gexp_aux g2 g2' =\n  (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\n\ngoal (5 subgoals):\n 1. \\<And>g1 g2 g1' g2'.\n       \\<lbrakk>local.less_gexp_aux g1 g1' =\n                (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1');\n        local.less_gexp_aux g2 g2' =\n        (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n                         (\\<not> local.less_gexp_aux (Nor g1' g2')\n                                  (Nor g1 g2) \\<and>\n                          Nor g1 g2 \\<noteq> Nor g1' g2')\n 2. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 5. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux g1 g1' =\n  (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1')\n  local.less_gexp_aux g2 g2' =\n  (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux g1 g1' =\n  (\\<not> local.less_gexp_aux g1' g1 \\<and> g1 \\<noteq> g1')\n  local.less_gexp_aux g2 g2' =\n  (\\<not> local.less_gexp_aux g2' g2 \\<and> g2 \\<noteq> g2')\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n    (\\<not> local.less_gexp_aux (Nor g1' g2') (Nor g1 g2) \\<and>\n     Nor g1 g2 \\<noteq> Nor g1' g2')", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (Nor g1' g2') =\n  (\\<not> local.less_gexp_aux (Nor g1' g2') (Nor g1 g2) \\<and>\n   Nor g1 g2 \\<noteq> Nor g1' g2')\n\ngoal (4 subgoals):\n 1. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (\"14_1\" g1 g2 v)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>g1 g2 v.\n       local.less_gexp_aux (Nor g1 g2) (Bc v) =\n       (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Bc v)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 4. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) (Bc v) =\n    (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n     Nor g1 g2 \\<noteq> Bc v)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (Bc v) =\n  (\\<not> local.less_gexp_aux (Bc v) (Nor g1 g2) \\<and>\n   Nor g1 g2 \\<noteq> Bc v)\n\ngoal (3 subgoals):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (\"14_2\" g1 g2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n       (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Eq v va)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 3. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n    (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n     Nor g1 g2 \\<noteq> Eq v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (Eq v va) =\n  (\\<not> local.less_gexp_aux (Eq v va) (Nor g1 g2) \\<and>\n   Nor g1 g2 \\<noteq> Eq v va)\n\ngoal (2 subgoals):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (\"14_3\" g1 g2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n       (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> Gt v va)\n 2. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n    (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n     Nor g1 g2 \\<noteq> Gt v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (Gt v va) =\n  (\\<not> local.less_gexp_aux (Gt v va) (Nor g1 g2) \\<and>\n   Nor g1 g2 \\<noteq> Gt v va)\n\ngoal (1 subgoal):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "case (\"14_4\" g1 g2 v va)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>g1 g2 v va.\n       local.less_gexp_aux (Nor g1 g2) (In v va) =\n       (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n        Nor g1 g2 \\<noteq> In v va)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) (In v va) =\n    (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n     Nor g1 g2 \\<noteq> In v va)", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (In v va) =\n  (\\<not> local.less_gexp_aux (In v va) (Nor g1 g2) \\<and>\n   Nor g1 g2 \\<noteq> In v va)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_gexp_antisym: \"(x::'a gexp) < y = (\\<not>(y < x) \\<and> (x \\<noteq> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < y) = (\\<not> y < x \\<and> x \\<noteq> y)", "apply (simp add: Let_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (GExp_Lexorder.height x = GExp_Lexorder.height y \\<longrightarrow>\n     local.less_gexp_aux x y =\n     (\\<not> local.less_gexp_aux y x \\<and> x \\<noteq> y)) \\<and>\n    (GExp_Lexorder.height x \\<noteq>\n     GExp_Lexorder.height y \\<longrightarrow>\n     (GExp_Lexorder.height x < GExp_Lexorder.height y) =\n     (\\<not> GExp_Lexorder.height y < GExp_Lexorder.height x \\<and>\n      x \\<noteq> y))", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. GExp_Lexorder.height x = GExp_Lexorder.height y \\<longrightarrow>\n    local.less_gexp_aux x y =\n    (\\<not> local.less_gexp_aux y x \\<and> x \\<noteq> y)\n 2. GExp_Lexorder.height x \\<noteq> GExp_Lexorder.height y \\<longrightarrow>\n    (GExp_Lexorder.height x < GExp_Lexorder.height y) =\n    (\\<not> GExp_Lexorder.height y < GExp_Lexorder.height x \\<and>\n     x \\<noteq> y)", "using less_gexp_aux_antisym"], ["proof (prove)\nusing this:\n  local.less_gexp_aux ?x ?y =\n  (\\<not> local.less_gexp_aux ?y ?x \\<and> ?x \\<noteq> ?y)\n\ngoal (2 subgoals):\n 1. GExp_Lexorder.height x = GExp_Lexorder.height y \\<longrightarrow>\n    local.less_gexp_aux x y =\n    (\\<not> local.less_gexp_aux y x \\<and> x \\<noteq> y)\n 2. GExp_Lexorder.height x \\<noteq> GExp_Lexorder.height y \\<longrightarrow>\n    (GExp_Lexorder.height x < GExp_Lexorder.height y) =\n    (\\<not> GExp_Lexorder.height y < GExp_Lexorder.height x \\<and>\n     x \\<noteq> y)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. GExp_Lexorder.height x \\<noteq> GExp_Lexorder.height y \\<longrightarrow>\n    (GExp_Lexorder.height x < GExp_Lexorder.height y) =\n    (\\<not> GExp_Lexorder.height y < GExp_Lexorder.height x \\<and>\n     x \\<noteq> y)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. GExp_Lexorder.height x \\<noteq> GExp_Lexorder.height y \\<Longrightarrow>\n    (GExp_Lexorder.height x < GExp_Lexorder.height y) =\n    (\\<not> GExp_Lexorder.height y < GExp_Lexorder.height x \\<and>\n     x \\<noteq> y)", "by (induct x, auto)"], ["", "lemma less_gexp_aux_trans: \"less_gexp_aux x y \\<Longrightarrow> less_gexp_aux y z \\<Longrightarrow> less_gexp_aux x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>local.less_gexp_aux x y; local.less_gexp_aux y z\\<rbrakk>\n    \\<Longrightarrow> local.less_gexp_aux x z", "proof(induct x y arbitrary: z rule: less_gexp_aux.induct)"], ["proof (state)\ngoal (25 subgoals):\n 1. \\<And>b1 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 5. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 6. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\nA total of 25 subgoals...", "case (1 b1 b2)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Bc b2)\n  local.less_gexp_aux (Bc b2) z\n\ngoal (25 subgoals):\n 1. \\<And>b1 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 5. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 6. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Bc b1) (Bc b2)\n  local.less_gexp_aux (Bc b2) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Bc b1) (Bc b2)\n  local.less_gexp_aux (Bc b2) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) z\n\ngoal (24 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 5. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 10. \\<And>e1 e2 b2 z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n         local.less_gexp_aux (Bc b2) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 24 subgoals...", "next"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 5. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 10. \\<And>e1 e2 b2 z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n         local.less_gexp_aux (Bc b2) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 24 subgoals...", "case (\"2_1\" b1 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Eq v va)\n  local.less_gexp_aux (Eq v va) z\n\ngoal (24 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 5. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 10. \\<And>e1 e2 b2 z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n         local.less_gexp_aux (Bc b2) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 24 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Bc b1) (Eq v va)\n  local.less_gexp_aux (Eq v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Bc b1) (Eq v va)\n  local.less_gexp_aux (Eq v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) z\n\ngoal (23 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 e1' e2' z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n         local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 23 subgoals...", "next"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 e1' e2' z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n         local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 23 subgoals...", "case (\"2_2\" b1 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (23 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 4. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 9. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 e1' e2' z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n         local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 23 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Bc b1) (Gt v va)\n  local.less_gexp_aux (Gt v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Bc b1) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) z\n\ngoal (22 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 e1' e2' z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n         local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 22 subgoals...", "next"], ["proof (state)\ngoal (22 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 e1' e2' z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n         local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 22 subgoals...", "case (\"2_3\" b1 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (22 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 3. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 8. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 e1' e2' z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n         local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 22 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Bc b1) (In v va)\n  local.less_gexp_aux (In v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Bc b1) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) z\n\ngoal (21 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 21 subgoals...", "next"], ["proof (state)\ngoal (21 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 21 subgoals...", "case (\"2_4\" b1 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (21 subgoals):\n 1. \\<And>b1 v va z.\n       \\<lbrakk>local.less_gexp_aux (Bc b1) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Bc b1) z\n 2. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 7. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 21 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Bc b1) (Nor v va)\n  local.less_gexp_aux (Nor v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Bc b1) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Bc b1) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Bc b1) z\n\ngoal (20 subgoals):\n 1. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 20 subgoals...", "next"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 20 subgoals...", "case (3 e1 e2 b2)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Bc b2)\n  local.less_gexp_aux (Bc b2) z\n\ngoal (20 subgoals):\n 1. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 6. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>e1 e2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\nA total of 20 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Eq e1 e2) (Bc b2)\n  local.less_gexp_aux (Bc b2) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Eq e1 e2) (Bc b2)\n  local.less_gexp_aux (Bc b2) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) z\n\ngoal (19 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 19 subgoals...", "next"], ["proof (state)\ngoal (19 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 19 subgoals...", "case (4 e1 e2 e1' e2')"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Eq e1' e2')\n  local.less_gexp_aux (Eq e1' e2') z\n\ngoal (19 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n         local.less_gexp_aux (Nor v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 19 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Eq e1 e2) (Eq e1' e2')\n  local.less_gexp_aux (Eq e1' e2') z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Eq e1 e2) (Eq e1' e2')\n  local.less_gexp_aux (Eq e1' e2') z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) z", "apply (cases z)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Bc x1\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>x21 x22.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>x31 x32.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Gt x31 x32\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>x41 x42.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = In x41 x42\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 5. \\<And>x51 x52.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Nor x51 x52\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>x31 x32.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Gt x31 x32\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>x41 x42.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = In x41 x42\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>x51 x52.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Nor x51 x52\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z", "apply (metis dual_order.strict_trans less_gexp_aux.simps(7))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Gt x31 x32\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>x41 x42.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = In x41 x42\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>x51 x52.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z; z = Nor x51 x52\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) z\n\ngoal (18 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 18 subgoals...", "next"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 18 subgoals...", "case (\"5_1\" e1 e2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (18 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 4. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 18 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Eq e1 e2) (Gt v va)\n  local.less_gexp_aux (Gt v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Eq e1 e2) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) z\n\ngoal (17 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n         local.less_gexp_aux (Bc v) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n         local.less_gexp_aux (Bc v) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 17 subgoals...", "case (\"5_2\" e1 e2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (17 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 3. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n         local.less_gexp_aux (Bc v) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 17 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Eq e1 e2) (In v va)\n  local.less_gexp_aux (In v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Eq e1 e2) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) z\n\ngoal (16 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n         local.less_gexp_aux (Eq v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n         local.less_gexp_aux (Eq v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 16 subgoals...", "case (\"5_3\" e1 e2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (16 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Eq e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Eq e1 e2) z\n 2. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n         local.less_gexp_aux (Eq v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 16 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Eq e1 e2) (Nor v va)\n  local.less_gexp_aux (Nor v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Eq e1 e2) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Eq e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Eq e1 e2) z\n\ngoal (15 subgoals):\n 1. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n         local.less_gexp_aux (Gt v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n         local.less_gexp_aux (Gt v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 15 subgoals...", "case (6 e1 e2 b2)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Bc b2)\n  local.less_gexp_aux (Bc b2) z\n\ngoal (15 subgoals):\n 1. \\<And>e1 e2 b2 z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Bc b2);\n        local.less_gexp_aux (Bc b2) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>vb vc v va z.\n        \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n         local.less_gexp_aux (Gt v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Gt e1 e2) (Bc b2)\n  local.less_gexp_aux (Bc b2) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Gt e1 e2) (Bc b2)\n  local.less_gexp_aux (Bc b2) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) z\n\ngoal (14 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>g1 g2 g1' g2' z.\n        \\<lbrakk>\\<And>z.\n                    \\<lbrakk>local.less_gexp_aux g1 g1';\n                     local.less_gexp_aux g1' z\\<rbrakk>\n                    \\<Longrightarrow> local.less_gexp_aux g1 z;\n         \\<And>z.\n            \\<lbrakk>local.less_gexp_aux g2 g2';\n             local.less_gexp_aux g2' z\\<rbrakk>\n            \\<Longrightarrow> local.less_gexp_aux g2 z;\n         local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n         local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>g1 g2 g1' g2' z.\n        \\<lbrakk>\\<And>z.\n                    \\<lbrakk>local.less_gexp_aux g1 g1';\n                     local.less_gexp_aux g1' z\\<rbrakk>\n                    \\<Longrightarrow> local.less_gexp_aux g1 z;\n         \\<And>z.\n            \\<lbrakk>local.less_gexp_aux g2 g2';\n             local.less_gexp_aux g2' z\\<rbrakk>\n            \\<Longrightarrow> local.less_gexp_aux g2 z;\n         local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n         local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 14 subgoals...", "case (7 e1 e2 e1' e2')"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Eq e1' e2')\n  local.less_gexp_aux (Eq e1' e2') z\n\ngoal (14 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Eq e1' e2');\n        local.less_gexp_aux (Eq e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 10. \\<And>g1 g2 g1' g2' z.\n        \\<lbrakk>\\<And>z.\n                    \\<lbrakk>local.less_gexp_aux g1 g1';\n                     local.less_gexp_aux g1' z\\<rbrakk>\n                    \\<Longrightarrow> local.less_gexp_aux g1 z;\n         \\<And>z.\n            \\<lbrakk>local.less_gexp_aux g2 g2';\n             local.less_gexp_aux g2' z\\<rbrakk>\n            \\<Longrightarrow> local.less_gexp_aux g2 z;\n         local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n         local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 14 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Gt e1 e2) (Eq e1' e2')\n  local.less_gexp_aux (Eq e1' e2') z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Gt e1 e2) (Eq e1' e2')\n  local.less_gexp_aux (Eq e1' e2') z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) z\n\ngoal (13 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n         local.less_gexp_aux (Bc v) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n         local.less_gexp_aux (Bc v) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 13 subgoals...", "case (8 e1 e2 e1' e2')"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Gt e1' e2')\n  local.less_gexp_aux (Gt e1' e2') z\n\ngoal (13 subgoals):\n 1. \\<And>e1 e2 e1' e2' z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 9. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n         local.less_gexp_aux (Bc v) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Gt e1 e2) (Gt e1' e2')\n  local.less_gexp_aux (Gt e1' e2') z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Gt e1 e2) (Gt e1' e2')\n  local.less_gexp_aux (Gt e1' e2') z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) z", "apply (cases z)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Bc x1\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>x21 x22.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>x31 x32.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Gt x31 x32\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>x41 x42.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = In x41 x42\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 5. \\<And>x51 x52.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Nor x51 x52\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x21 x22.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>x31 x32.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Gt x31 x32\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>x41 x42.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = In x41 x42\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 4. \\<And>x51 x52.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Nor x51 x52\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Gt x31 x32\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>x41 x42.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = In x41 x42\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>x51 x52.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Nor x51 x52\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z", "apply (metis dual_order.strict_trans less_gexp_aux.simps(13))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x41 x42.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = In x41 x42\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>x51 x52.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Gt e1' e2');\n        local.less_gexp_aux (Gt e1' e2') z; z = Nor x51 x52\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z", "by auto"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) z\n\ngoal (12 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n         local.less_gexp_aux (Eq v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n         local.less_gexp_aux (Eq v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 12 subgoals...", "case (\"9_1\" e1 e2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (12 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 8. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n         local.less_gexp_aux (Eq v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Gt e1 e2) (In v va)\n  local.less_gexp_aux (In v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Gt e1 e2) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) z\n\ngoal (11 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n         local.less_gexp_aux (Gt v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n         local.less_gexp_aux (Gt v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 11 subgoals...", "case (\"9_2\" e1 e2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (11 subgoals):\n 1. \\<And>e1 e2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Gt e1 e2) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Gt e1 e2) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 7. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n         local.less_gexp_aux (Gt v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Gt e1 e2) (Nor v va)\n  local.less_gexp_aux (Nor v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Gt e1 e2) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Gt e1 e2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Gt e1 e2) z\n\ngoal (10 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (10 vb vc v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (10 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Nor v va);\n        local.less_gexp_aux (Nor v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 6. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 10. \\<And>g1 g2 v va z.\n        \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n         local.less_gexp_aux (In v va) z\\<rbrakk>\n        \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (In vb vc) (Nor v va)\n  local.less_gexp_aux (Nor v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (In vb vc) (Nor v va)\n  local.less_gexp_aux (Nor v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) z\n\ngoal (9 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (11 vb vc v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (9 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 5. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 9. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (In vb vc) (In v va)\n  local.less_gexp_aux (In v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (In vb vc) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) z\n\ngoal (8 subgoals):\n 1. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (\"12_1\" vb vc v)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Bc v)\n  local.less_gexp_aux (Bc v) z\n\ngoal (8 subgoals):\n 1. \\<And>vb vc v z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 4. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 8. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (In vb vc) (Bc v)\n  local.less_gexp_aux (Bc v) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (In vb vc) (Bc v)\n  local.less_gexp_aux (Bc v) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) z\n\ngoal (7 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (\"12_2\" vb vc v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Eq v va)\n  local.less_gexp_aux (Eq v va) z\n\ngoal (7 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 3. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 7. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (In vb vc) (Eq v va)\n  local.less_gexp_aux (Eq v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (In vb vc) (Eq v va)\n  local.less_gexp_aux (Eq v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) z\n\ngoal (6 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (\"12_3\" vb vc v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (6 subgoals):\n 1. \\<And>vb vc v va z.\n       \\<lbrakk>local.less_gexp_aux (In vb vc) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (In vb vc) z\n 2. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 6. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (In vb vc) (Gt v va)\n  local.less_gexp_aux (Gt v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (In vb vc) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (In vb vc) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (In vb vc) z\n\ngoal (5 subgoals):\n 1. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (13 g1 g2 g1' g2')"], ["proof (state)\nthis:\n  \\<lbrakk>local.less_gexp_aux g1 g1'; local.less_gexp_aux g1' ?z\\<rbrakk>\n  \\<Longrightarrow> local.less_gexp_aux g1 ?z\n  \\<lbrakk>local.less_gexp_aux g2 g2'; local.less_gexp_aux g2' ?z\\<rbrakk>\n  \\<Longrightarrow> local.less_gexp_aux g2 ?z\n  local.less_gexp_aux (Nor g1 g2) (Nor g1' g2')\n  local.less_gexp_aux (Nor g1' g2') z\n\ngoal (5 subgoals):\n 1. \\<And>g1 g2 g1' g2' z.\n       \\<lbrakk>\\<And>z.\n                   \\<lbrakk>local.less_gexp_aux g1 g1';\n                    local.less_gexp_aux g1' z\\<rbrakk>\n                   \\<Longrightarrow> local.less_gexp_aux g1 z;\n        \\<And>z.\n           \\<lbrakk>local.less_gexp_aux g2 g2';\n            local.less_gexp_aux g2' z\\<rbrakk>\n           \\<Longrightarrow> local.less_gexp_aux g2 z;\n        local.less_gexp_aux (Nor g1 g2) (Nor g1' g2');\n        local.less_gexp_aux (Nor g1' g2') z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 5. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>local.less_gexp_aux g1 g1'; local.less_gexp_aux g1' ?z\\<rbrakk>\n  \\<Longrightarrow> local.less_gexp_aux g1 ?z\n  \\<lbrakk>local.less_gexp_aux g2 g2'; local.less_gexp_aux g2' ?z\\<rbrakk>\n  \\<Longrightarrow> local.less_gexp_aux g2 ?z\n  local.less_gexp_aux (Nor g1 g2) (Nor g1' g2')\n  local.less_gexp_aux (Nor g1' g2') z", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>local.less_gexp_aux g1 g1'; local.less_gexp_aux g1' ?z\\<rbrakk>\n  \\<Longrightarrow> local.less_gexp_aux g1 ?z\n  \\<lbrakk>local.less_gexp_aux g2 g2'; local.less_gexp_aux g2' ?z\\<rbrakk>\n  \\<Longrightarrow> local.less_gexp_aux g2 ?z\n  local.less_gexp_aux (Nor g1 g2) (Nor g1' g2')\n  local.less_gexp_aux (Nor g1' g2') z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) z\n\ngoal (4 subgoals):\n 1. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (\"14_1\" g1 g2 v)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (Bc v)\n  local.less_gexp_aux (Bc v) z\n\ngoal (4 subgoals):\n 1. \\<And>g1 g2 v z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Bc v);\n        local.less_gexp_aux (Bc v) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 4. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Nor g1 g2) (Bc v)\n  local.less_gexp_aux (Bc v) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Nor g1 g2) (Bc v)\n  local.less_gexp_aux (Bc v) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) z\n\ngoal (3 subgoals):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (\"14_2\" g1 g2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (Eq v va)\n  local.less_gexp_aux (Eq v va) z\n\ngoal (3 subgoals):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Eq v va);\n        local.less_gexp_aux (Eq v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 3. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Nor g1 g2) (Eq v va)\n  local.less_gexp_aux (Eq v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Nor g1 g2) (Eq v va)\n  local.less_gexp_aux (Eq v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) z\n\ngoal (2 subgoals):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (\"14_3\" g1 g2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (2 subgoals):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (Gt v va);\n        local.less_gexp_aux (Gt v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z\n 2. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Nor g1 g2) (Gt v va)\n  local.less_gexp_aux (Gt v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Nor g1 g2) (Gt v va)\n  local.less_gexp_aux (Gt v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) z\n\ngoal (1 subgoal):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "case (\"14_4\" g1 g2 v va)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (1 subgoal):\n 1. \\<And>g1 g2 v va z.\n       \\<lbrakk>local.less_gexp_aux (Nor g1 g2) (In v va);\n        local.less_gexp_aux (In v va) z\\<rbrakk>\n       \\<Longrightarrow> local.less_gexp_aux (Nor g1 g2) z", "then"], ["proof (chain)\npicking this:\n  local.less_gexp_aux (Nor g1 g2) (In v va)\n  local.less_gexp_aux (In v va) z", "show ?case"], ["proof (prove)\nusing this:\n  local.less_gexp_aux (Nor g1 g2) (In v va)\n  local.less_gexp_aux (In v va) z\n\ngoal (1 subgoal):\n 1. local.less_gexp_aux (Nor g1 g2) z", "by (cases z, auto)"], ["proof (state)\nthis:\n  local.less_gexp_aux (Nor g1 g2) z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_gexp_trans: \"(x::'a gexp) < y \\<Longrightarrow> y < z \\<Longrightarrow> x < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; y < z\\<rbrakk> \\<Longrightarrow> x < z", "apply (simp add: Let_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>if GExp_Lexorder.height x = GExp_Lexorder.height y\n             then local.less_gexp_aux x y\n             else GExp_Lexorder.height x < GExp_Lexorder.height y;\n     if GExp_Lexorder.height y = GExp_Lexorder.height z\n     then local.less_gexp_aux y z\n     else GExp_Lexorder.height y < GExp_Lexorder.height z\\<rbrakk>\n    \\<Longrightarrow> (GExp_Lexorder.height x =\n                       GExp_Lexorder.height z \\<longrightarrow>\n                       local.less_gexp_aux x z) \\<and>\n                      (GExp_Lexorder.height x \\<noteq>\n                       GExp_Lexorder.height z \\<longrightarrow>\n                       GExp_Lexorder.height x < GExp_Lexorder.height z)", "by (metis (no_types, lifting) dual_order.strict_trans less_gexp_aux_trans less_imp_not_less)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a gexp, linorder_class)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "fix x y z :: \"'a gexp\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "show \"(x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)", "by (metis less_gexp_antisym less_eq_gexp_def)"], ["proof (state)\nthis:\n  (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n\ngoal (4 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "show \"(x \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x", "by (simp add: less_eq_gexp_def)"], ["proof (state)\nthis:\n  x \\<le> x\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "show \"x \\<le> y \\<Longrightarrow> y \\<le> z \\<Longrightarrow> x \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z", "by (metis less_eq_gexp_def less_gexp_trans)"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "show \"x \\<le> y \\<Longrightarrow> y \\<le> x \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y", "unfolding less_eq_gexp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<or> x = y; y < x \\<or> y = x\\<rbrakk>\n    \\<Longrightarrow> x = y", "using less_gexp_antisym"], ["proof (prove)\nusing this:\n  (?x < ?y) = (\\<not> ?y < ?x \\<and> ?x \\<noteq> ?y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<or> x = y; y < x \\<or> y = x\\<rbrakk>\n    \\<Longrightarrow> x = y", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "show \"x \\<le> y \\<or> y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<or> y \\<le> x", "unfolding less_eq_gexp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < y \\<or> x = y) \\<or> y < x \\<or> y = x", "using less_gexp_antisym"], ["proof (prove)\nusing this:\n  (?x < ?y) = (\\<not> ?y < ?x \\<and> ?x \\<noteq> ?y)\n\ngoal (1 subgoal):\n 1. (x < y \\<or> x = y) \\<or> y < x \\<or> y = x", "by blast"], ["proof (state)\nthis:\n  x \\<le> y \\<or> y \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}