{"file_name": "/home/qj213/afp-2021-10-22/thys/Latin_Square/Latin_Square.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Latin_Square", "problem_names": ["lemma all_types_next_eqiv:\"(\\<forall>t. P (next t)) \\<longleftrightarrow> (\\<forall>t. P t)\"", "lemma latin_rect_iff:\n\"m\\<le>n \\<and> partial_latin_square s n \\<and> card s = n*m \\<and> (\\<forall>e\\<in>s. e Row < m) \\<longleftrightarrow> latin_rect s m n\"", "lemma partial_latin_square_full:\n\"partial_latin_square s n \\<and> card s = n*n \\<longleftrightarrow> latin_square s n\"", "lemma bij_restrict:\nassumes \"bij_betw f A B\" \"\\<forall>a\\<in>A. P a \\<longleftrightarrow> Q (f a)\"\nshows \"bij_betw f {a\\<in>A. P a} {b\\<in>B. Q b}\"", "lemma cartesian_product_margin1:\nassumes \"a\\<in>A\"\nshows \"{p\\<in>A\\<times>B. fst p = a} = {a}\\<times>B\"", "lemma cartesian_product_margin2:\nassumes \"b\\<in>B\"\nshows \"{p\\<in>A\\<times>B. snd p = b} = A\\<times>{b}\"", "lemma limited_family_union: \"finite B \\<Longrightarrow> \\<forall>P\\<in>B. card P \\<le> k \\<Longrightarrow> card (\\<Union>B) \\<le> card B * k\"", "lemma limited_preimages:\nassumes \"\\<forall>x \\<in> f ` D. card ((f -` {x})\\<inter>D) \\<le> k\" \"finite D\"\nshows \"card D \\<le> card (f ` D) * k \"", "lemma union_limited_replicates:\nassumes \"finite I\" \"\\<forall>i\\<in>I. finite (A i)\" \"k>0\" \"\\<forall>i\\<in>I. card (A i) = k\" \"\\<forall>i\\<in>I. \\<forall>x\\<in>(A i). card {i\\<in>I. x\\<in>A i} \\<le> k\"\nshows \"card (\\<Union>i\\<in>I. (A i)) \\<ge> card I\"", "lemma latin_rect_card_col:\nassumes \"latin_rect s m n\" \"x<n\"\nshows \"card {e Col|e. e\\<in>s \\<and> e Num = x} = m\"", "lemma latin_rect_card_num:\nassumes \"latin_rect s m n\" \"x<n\"\nshows \"card {e Num|e. e\\<in>s \\<and> e Col = x} = m\"", "theorem\n  assumes \"latin_rect s (n-m) n\" \"m\\<le>n\"\n  shows \"\\<exists>s'. s\\<subseteq>s' \\<and> latin_square s' n\""], "translations": [["", "lemma all_types_next_eqiv:\"(\\<forall>t. P (next t)) \\<longleftrightarrow> (\\<forall>t. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t. P (next t)) = (\\<forall>t. P t)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>t. P (next t) \\<Longrightarrow> \\<forall>t. P t\n 2. \\<forall>t. P t \\<Longrightarrow> \\<forall>t. P (next t)", "using next_def latin_type.case latin_type.exhaust"], ["proof (prove)\nusing this:\n  next ?t \\<equiv>\n  case ?t of Row \\<Rightarrow> Col | Col \\<Rightarrow> Num\n  | Num \\<Rightarrow> Row\n  (case Row of Row \\<Rightarrow> ?f1.0 | Col \\<Rightarrow> ?f2.0\n   | Num \\<Rightarrow> ?f3.0) =\n  ?f1.0\n  (case Col of Row \\<Rightarrow> ?f1.0 | Col \\<Rightarrow> ?f2.0\n   | Num \\<Rightarrow> ?f3.0) =\n  ?f2.0\n  (case Num of Row \\<Rightarrow> ?f1.0 | Col \\<Rightarrow> ?f2.0\n   | Num \\<Rightarrow> ?f3.0) =\n  ?f3.0\n  \\<lbrakk>?y = Row \\<Longrightarrow> ?P; ?y = Col \\<Longrightarrow> ?P;\n   ?y = Num \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (2 subgoals):\n 1. \\<forall>t. P (next t) \\<Longrightarrow> \\<forall>t. P t\n 2. \\<forall>t. P t \\<Longrightarrow> \\<forall>t. P (next t)", "apply metis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. P t \\<Longrightarrow> \\<forall>t. P (next t)", "apply metis"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>We call a column of the orthogonal array a latin\\_entry:\\<close>"], ["", "type_synonym latin_entry = \"latin_type \\<Rightarrow> nat\""], ["", "text \\<open>This function removes one element of the 3-tupel and returns the other two as a pair:\\<close>"], ["", "definition without :: \"latin_type \\<Rightarrow> latin_entry \\<Rightarrow> nat \\<times> nat\" where\n[simp]:\"without t \\<equiv> \\<lambda>e. (e (next t), e (next (next t)))\""], ["", "value \"without Row (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 2)\" \\<comment> \\<open>returns (1,2)\\<close>"], ["", "abbreviation \"row_col \\<equiv> without Num\""], ["", "text \\<open>returns row and column of a latin\\_entry as a pair.\\<close>"], ["", "abbreviation \"col_num \\<equiv> without Row\""], ["", "text \\<open>returns column and number of a latin\\_entry as a pair.\\<close>"], ["", "abbreviation \"num_row \\<equiv> without Col\""], ["", "text \\<open>returns number and row of a latin\\_entry as a pair.\\<close>"], ["", "text\\<open>A partial latin square is a square that contains each number at most once in each row and each\n   column, but not all cells have to be filled. Equivalently we can say that any two rows of the\n   orthogonal array contain each pair of two numbers at most once. This can be expressed using the\n   inj\\_on predicate:\\<close>"], ["", "definition partial_latin_square :: \"latin_entry set \\<Rightarrow> nat \\<Rightarrow> bool\" where\n\"partial_latin_square s n \\<equiv>\n  (\\<forall>t. inj_on (without t) s) \\<and> \\<comment> \\<open>numbers are unique in each column (t=Row), numbers are unique in each row (t=Col), rows-column combinations are specified unambiguously (t=Num)\\<close>\n  (\\<forall>e\\<in>s. \\<forall>t. e t < n) \\<comment> \\<open>all numbers, column indices and row indices are <n\\<close>\""], ["", "value \"partial_latin_square {\n  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 0),\n  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 1)\n} 2\" \\<comment> \\<open>True\\<close>"], ["", "value \"partial_latin_square {\n  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 1),\n  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 1)\n} 2\" \\<comment> \\<open>False, because 1 appears twice in column 0\\<close>"], ["", "text \\<open>Looking at the orthogonal array a latin square is given iff any two rows of the\n   orthogonal array contain each pair of two numbers at exactly once:\\<close>"], ["", "definition latin_square :: \"latin_entry set \\<Rightarrow> nat \\<Rightarrow> bool\" where\n\"latin_square s n \\<equiv>\n  (\\<forall>t. bij_betw (without t) s ({0..<n}\\<times>{0..<n}))\""], ["", "(* numbers exactly once in each column (t=Row), numbers exactly once in each row (t=Col), rows-column combinations are specified exactly once (t=Num) *)"], ["", "value \"latin_square {\n  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 1),  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 0),\n  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 0),  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 1)\n} 2\" \\<comment> \\<open>True\\<close>"], ["", "value \"latin_square {\n  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 1),  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 0),\n  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 0),  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 0)\n} 2\" \\<comment> \\<open>False, because 0 appears twice in Col 1 and twice in Row 1\\<close>"], ["", "text \\<open>A latin rectangle is a partial latin square in which the first m rows are filled and the following\n   rows are empty:\\<close>"], ["", "definition latin_rect :: \"latin_entry set \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n\"latin_rect s m n \\<equiv>\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  bij_betw row_col s ({0..<m}\\<times>{0..<n}) \\<and>\n  bij_betw num_row s ({0..<n}\\<times>{0..<m})\""], ["", "value \"latin_rect {\n  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 1),  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 0)\n} 1 2\" \\<comment> \\<open>True\\<close>"], ["", "value \"latin_rect {\n  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 1),  (\\<lambda>t. case t of Row \\<Rightarrow> 0 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 0),\n  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 0 | Num \\<Rightarrow> 0),  (\\<lambda>t. case t of Row \\<Rightarrow> 1 | Col \\<Rightarrow> 1 | Num \\<Rightarrow> 1)\n} 1 2\" \\<comment> \\<open>False\\<close>"], ["", "text \\<open>There is another equivalent description of latin rectangles, which is easier to prove:\\<close>"], ["", "lemma latin_rect_iff:\n\"m\\<le>n \\<and> partial_latin_square s n \\<and> card s = n*m \\<and> (\\<forall>e\\<in>s. e Row < m) \\<longleftrightarrow> latin_rect s m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (m \\<le> n \\<and>\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)) =\n    latin_rect s m n", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m) \\<Longrightarrow>\n    latin_rect s m n\n 2. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "assume prems:\"m\\<le>n \\<and> partial_latin_square s n \\<and> card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\""], ["proof (state)\nthis:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m) \\<Longrightarrow>\n    latin_rect s m n\n 2. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "have bij1:\"bij_betw row_col s ({0..<m}\\<times>{0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<m} \\<times> {0..<n})", "using prems"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<m} \\<times> {0..<n})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw row_col s ({0..<m} \\<times> {0..<n})", "have \"inj_on row_col s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on row_col s", "using prems partial_latin_square_def"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. inj_on row_col s", "by blast"], ["proof (state)\nthis:\n  inj_on row_col s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw row_col s ({0..<m} \\<times> {0..<n})", "moreover"], ["proof (state)\nthis:\n  inj_on row_col s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw row_col s ({0..<m} \\<times> {0..<n})", "have \"{0..<m} \\<times> {0..<n} = row_col ` s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<m} \\<times> {0..<n} = row_col ` s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {0..<m} \\<times> {0..<n} = row_col ` s", "have \"row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}", "using prems partial_latin_square_def"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}", "by auto"], ["proof (state)\nthis:\n  row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}\n\ngoal (1 subgoal):\n 1. {0..<m} \\<times> {0..<n} = row_col ` s", "moreover"], ["proof (state)\nthis:\n  row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}\n\ngoal (1 subgoal):\n 1. {0..<m} \\<times> {0..<n} = row_col ` s", "have \"card (row_col ` s) = card ({0..<m} \\<times> {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (row_col ` s) = card ({0..<m} \\<times> {0..<n})", "using prems card_image[OF \\<open>inj_on row_col s\\<close>]"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  card (row_col ` s) = card s\n\ngoal (1 subgoal):\n 1. card (row_col ` s) = card ({0..<m} \\<times> {0..<n})", "by auto"], ["proof (state)\nthis:\n  card (row_col ` s) = card ({0..<m} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. {0..<m} \\<times> {0..<n} = row_col ` s", "ultimately"], ["proof (chain)\npicking this:\n  row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}\n  card (row_col ` s) = card ({0..<m} \\<times> {0..<n})", "show \"{0..<m} \\<times> {0..<n} = row_col ` s\""], ["proof (prove)\nusing this:\n  row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}\n  card (row_col ` s) = card ({0..<m} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. {0..<m} \\<times> {0..<n} = row_col ` s", "using card_subset_eq[of \"{0..<m} \\<times> {0..<n}\" \"row_col ` s\"]"], ["proof (prove)\nusing this:\n  row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n}\n  card (row_col ` s) = card ({0..<m} \\<times> {0..<n})\n  \\<lbrakk>finite ({0..<m} \\<times> {0..<n});\n   row_col ` s \\<subseteq> {0..<m} \\<times> {0..<n};\n   card (row_col ` s) = card ({0..<m} \\<times> {0..<n})\\<rbrakk>\n  \\<Longrightarrow> row_col ` s = {0..<m} \\<times> {0..<n}\n\ngoal (1 subgoal):\n 1. {0..<m} \\<times> {0..<n} = row_col ` s", "by auto"], ["proof (state)\nthis:\n  {0..<m} \\<times> {0..<n} = row_col ` s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {0..<m} \\<times> {0..<n} = row_col ` s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw row_col s ({0..<m} \\<times> {0..<n})", "ultimately"], ["proof (chain)\npicking this:\n  inj_on row_col s\n  {0..<m} \\<times> {0..<n} = row_col ` s", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on row_col s\n  {0..<m} \\<times> {0..<n} = row_col ` s\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<m} \\<times> {0..<n})", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on row_col s\n  {0..<m} \\<times> {0..<n} = row_col ` s\n\ngoal (1 subgoal):\n 1. inj_on row_col s \\<and> row_col ` s = {0..<m} \\<times> {0..<n}", "by auto"], ["proof (state)\nthis:\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m) \\<Longrightarrow>\n    latin_rect s m n\n 2. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "have bij2:\"bij_betw num_row s ({0..<n}\\<times>{0..<m})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw num_row s ({0..<n} \\<times> {0..<m})", "using prems"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n\ngoal (1 subgoal):\n 1. bij_betw num_row s ({0..<n} \\<times> {0..<m})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw num_row s ({0..<n} \\<times> {0..<m})", "have \"inj_on num_row s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on num_row s", "using prems partial_latin_square_def"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. inj_on num_row s", "by blast"], ["proof (state)\nthis:\n  inj_on num_row s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw num_row s ({0..<n} \\<times> {0..<m})", "moreover"], ["proof (state)\nthis:\n  inj_on num_row s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw num_row s ({0..<n} \\<times> {0..<m})", "have \"{0..<n} \\<times> {0..<m} = num_row ` s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<n} \\<times> {0..<m} = num_row ` s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {0..<n} \\<times> {0..<m} = num_row ` s", "have \"num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}", "using prems partial_latin_square_def"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}", "by auto"], ["proof (state)\nthis:\n  num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}\n\ngoal (1 subgoal):\n 1. {0..<n} \\<times> {0..<m} = num_row ` s", "moreover"], ["proof (state)\nthis:\n  num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}\n\ngoal (1 subgoal):\n 1. {0..<n} \\<times> {0..<m} = num_row ` s", "have \"card (num_row ` s) = card ({0..<n} \\<times> {0..<m})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (num_row ` s) = card ({0..<n} \\<times> {0..<m})", "using prems card_image[OF \\<open>inj_on num_row s\\<close>]"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  card (num_row ` s) = card s\n\ngoal (1 subgoal):\n 1. card (num_row ` s) = card ({0..<n} \\<times> {0..<m})", "by auto"], ["proof (state)\nthis:\n  card (num_row ` s) = card ({0..<n} \\<times> {0..<m})\n\ngoal (1 subgoal):\n 1. {0..<n} \\<times> {0..<m} = num_row ` s", "ultimately"], ["proof (chain)\npicking this:\n  num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}\n  card (num_row ` s) = card ({0..<n} \\<times> {0..<m})", "show \"{0..<n} \\<times> {0..<m} = num_row ` s\""], ["proof (prove)\nusing this:\n  num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}\n  card (num_row ` s) = card ({0..<n} \\<times> {0..<m})\n\ngoal (1 subgoal):\n 1. {0..<n} \\<times> {0..<m} = num_row ` s", "using card_subset_eq[of \"{0..<n} \\<times> {0..<m}\" \"num_row ` s\"]"], ["proof (prove)\nusing this:\n  num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m}\n  card (num_row ` s) = card ({0..<n} \\<times> {0..<m})\n  \\<lbrakk>finite ({0..<n} \\<times> {0..<m});\n   num_row ` s \\<subseteq> {0..<n} \\<times> {0..<m};\n   card (num_row ` s) = card ({0..<n} \\<times> {0..<m})\\<rbrakk>\n  \\<Longrightarrow> num_row ` s = {0..<n} \\<times> {0..<m}\n\ngoal (1 subgoal):\n 1. {0..<n} \\<times> {0..<m} = num_row ` s", "by auto"], ["proof (state)\nthis:\n  {0..<n} \\<times> {0..<m} = num_row ` s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {0..<n} \\<times> {0..<m} = num_row ` s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n;\n     partial_latin_square s n \\<and>\n     card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\\<rbrakk>\n    \\<Longrightarrow> bij_betw num_row s ({0..<n} \\<times> {0..<m})", "ultimately"], ["proof (chain)\npicking this:\n  inj_on num_row s\n  {0..<n} \\<times> {0..<m} = num_row ` s", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on num_row s\n  {0..<n} \\<times> {0..<m} = num_row ` s\n\ngoal (1 subgoal):\n 1. bij_betw num_row s ({0..<n} \\<times> {0..<m})", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on num_row s\n  {0..<n} \\<times> {0..<m} = num_row ` s\n\ngoal (1 subgoal):\n 1. inj_on num_row s \\<and> num_row ` s = {0..<n} \\<times> {0..<m}", "by auto"], ["proof (state)\nthis:\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})\n\ngoal (2 subgoals):\n 1. m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m) \\<Longrightarrow>\n    latin_rect s m n\n 2. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "from prems bij1 bij2"], ["proof (chain)\npicking this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})", "show \"latin_rect s m n\""], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})\n\ngoal (1 subgoal):\n 1. latin_rect s m n", "unfolding latin_rect_def"], ["proof (prove)\nusing this:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})\n\ngoal (1 subgoal):\n 1. m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    bij_betw row_col s ({0..<m} \\<times> {0..<n}) \\<and>\n    bij_betw num_row s ({0..<n} \\<times> {0..<m})", "by auto"], ["proof (state)\nthis:\n  latin_rect s m n\n\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "assume prems:\"latin_rect s m n\""], ["proof (state)\nthis:\n  latin_rect s m n\n\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "have \"m\\<le>n\" \"partial_latin_square s n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> n &&& partial_latin_square s n", "using latin_rect_def prems"], ["proof (prove)\nusing this:\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  latin_rect s m n\n\ngoal (1 subgoal):\n 1. m \\<le> n &&& partial_latin_square s n", "by auto"], ["proof (state)\nthis:\n  m \\<le> n\n  partial_latin_square s n\n\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "moreover"], ["proof (state)\nthis:\n  m \\<le> n\n  partial_latin_square s n\n\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "have \"card s = m * n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card s = m * n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card s = m * n", "have \"bij_betw row_col s ({0..<m} \\<times> {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<m} \\<times> {0..<n})", "using latin_rect_def prems"], ["proof (prove)\nusing this:\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  latin_rect s m n\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<m} \\<times> {0..<n})", "by auto"], ["proof (state)\nthis:\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. card s = m * n", "then"], ["proof (chain)\npicking this:\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. card s = m * n", "using bij_betw_same_card[of row_col s \"{0..<m} \\<times> {0..<n}\"]"], ["proof (prove)\nusing this:\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n  bij_betw row_col s ({0..<m} \\<times> {0..<n}) \\<Longrightarrow>\n  card s = card ({0..<m} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. card s = m * n", "by auto"], ["proof (state)\nthis:\n  card s = m * n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card s = m * n\n\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "moreover"], ["proof (state)\nthis:\n  card s = m * n\n\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "have \"\\<forall>e\\<in>s. e Row < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < m", "using latin_rect_def prems"], ["proof (prove)\nusing this:\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  latin_rect s m n\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < m", "using atLeast0LessThan bij_betwE"], ["proof (prove)\nusing this:\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  latin_rect s m n\n  {0..<?n} = {..<?n}\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < m", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. e Row < m\n\ngoal (1 subgoal):\n 1. latin_rect s m n \\<Longrightarrow>\n    m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "ultimately"], ["proof (chain)\npicking this:\n  m \\<le> n\n  partial_latin_square s n\n  card s = m * n\n  \\<forall>e\\<in>s. e Row < m", "show \"m\\<le>n \\<and> partial_latin_square s n \\<and> card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\""], ["proof (prove)\nusing this:\n  m \\<le> n\n  partial_latin_square s n\n  card s = m * n\n  \\<forall>e\\<in>s. e Row < m\n\ngoal (1 subgoal):\n 1. m \\<le> n \\<and>\n    partial_latin_square s n \\<and>\n    card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)", "by auto"], ["proof (state)\nthis:\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  card s = n * m \\<and> (\\<forall>e\\<in>s. e Row < m)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A square is a latin square iff it is a partial latin square with all $n^2$ cells filled:\\<close>"], ["", "lemma partial_latin_square_full:\n\"partial_latin_square s n \\<and> card s = n*n \\<longleftrightarrow> latin_square s n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (partial_latin_square s n \\<and> card s = n * n) = latin_square s n", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow>\n    latin_square s n\n 2. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "assume prem: \"partial_latin_square s n \\<and> card s = n * n\""], ["proof (state)\nthis:\n  partial_latin_square s n \\<and> card s = n * n\n\ngoal (2 subgoals):\n 1. partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow>\n    latin_square s n\n 2. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "have \"\\<forall>t. (without t) ` s \\<subseteq> {0..<n} \\<times> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}", "show \"(without t) ` s \\<subseteq> {0..<n} \\<times> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}", "using partial_latin_square_def next_def atLeast0LessThan prem"], ["proof (prove)\nusing this:\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n  next ?t \\<equiv>\n  case ?t of Row \\<Rightarrow> Col | Col \\<Rightarrow> Num\n  | Num \\<Rightarrow> Row\n  {0..<?n} = {..<?n}\n  partial_latin_square s n \\<and> card s = n * n\n\ngoal (1 subgoal):\n 1. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}", "by (cases t) auto"], ["proof (state)\nthis:\n  without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}\n\ngoal (2 subgoals):\n 1. partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow>\n    latin_square s n\n 2. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "then"], ["proof (chain)\npicking this:\n  \\<forall>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}", "show \"partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow> latin_square s n\""], ["proof (prove)\nusing this:\n  \\<forall>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}\n\ngoal (1 subgoal):\n 1. partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow>\n    latin_square s n", "unfolding latin_square_def"], ["proof (prove)\nusing this:\n  \\<forall>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}\n\ngoal (1 subgoal):\n 1. partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow>\n    \\<forall>t. bij_betw (without t) s ({0..<n} \\<times> {0..<n})", "using partial_latin_square_def"], ["proof (prove)\nusing this:\n  \\<forall>t. without t ` s \\<subseteq> {0..<n} \\<times> {0..<n}\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow>\n    \\<forall>t. bij_betw (without t) s ({0..<n} \\<times> {0..<n})", "by (metis bij_betw_def card_atLeastLessThan card_cartesian_product card_image card_subset_eq diff_zero finite_SigmaI finite_atLeastLessThan)"], ["proof (state)\nthis:\n  partial_latin_square s n \\<and> card s = n * n \\<Longrightarrow>\n  latin_square s n\n\ngoal (1 subgoal):\n 1. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "assume prem:\"latin_square s n\""], ["proof (state)\nthis:\n  latin_square s n\n\ngoal (1 subgoal):\n 1. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "then"], ["proof (chain)\npicking this:\n  latin_square s n", "have \"bij_betw row_col s ({0..<n} \\<times> {0..<n})\""], ["proof (prove)\nusing this:\n  latin_square s n\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<n} \\<times> {0..<n})", "using latin_square_def"], ["proof (prove)\nusing this:\n  latin_square s n\n  latin_square ?s ?n \\<equiv>\n  \\<forall>t. bij_betw (without t) ?s ({0..<?n} \\<times> {0..<?n})\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<n} \\<times> {0..<n})", "by blast"], ["proof (state)\nthis:\n  bij_betw row_col s ({0..<n} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "moreover"], ["proof (state)\nthis:\n  bij_betw row_col s ({0..<n} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "have \"partial_latin_square s n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partial_latin_square s n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. partial_latin_square s n", "have \"\\<forall>t. \\<forall>e\\<in>s. (without t) e \\<in> ({0..<n}\\<times>{0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. \\<forall>e\\<in>s. without t e \\<in> {0..<n} \\<times> {0..<n}", "using prem latin_square_def bij_betwE"], ["proof (prove)\nusing this:\n  latin_square s n\n  latin_square ?s ?n \\<equiv>\n  \\<forall>t. bij_betw (without t) ?s ({0..<?n} \\<times> {0..<?n})\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<forall>t. \\<forall>e\\<in>s. without t e \\<in> {0..<n} \\<times> {0..<n}", "by metis"], ["proof (state)\nthis:\n  \\<forall>t. \\<forall>e\\<in>s. without t e \\<in> {0..<n} \\<times> {0..<n}\n\ngoal (1 subgoal):\n 1. partial_latin_square s n", "then"], ["proof (chain)\npicking this:\n  \\<forall>t. \\<forall>e\\<in>s. without t e \\<in> {0..<n} \\<times> {0..<n}", "have 1:\"\\<forall>e\\<in>s.\\<forall>t. e t < n\""], ["proof (prove)\nusing this:\n  \\<forall>t. \\<forall>e\\<in>s. without t e \\<in> {0..<n} \\<times> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. \\<forall>t. e t < n", "using latin_square_def all_types_next_eqiv[of \"\\<lambda>t. \\<forall>e\\<in>s. e t < n\"] bij_betwE"], ["proof (prove)\nusing this:\n  \\<forall>t. \\<forall>e\\<in>s. without t e \\<in> {0..<n} \\<times> {0..<n}\n  latin_square ?s ?n \\<equiv>\n  \\<forall>t. bij_betw (without t) ?s ({0..<?n} \\<times> {0..<?n})\n  (\\<forall>t. \\<forall>e\\<in>s. e (next t) < n) =\n  (\\<forall>t. \\<forall>e\\<in>s. e t < n)\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. \\<forall>t. e t < n", "by auto"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. \\<forall>t. e t < n\n\ngoal (1 subgoal):\n 1. partial_latin_square s n", "have 2:\"(\\<forall>t. inj_on (without t) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. inj_on (without t) s", "using prem bij_betw_def latin_square_def"], ["proof (prove)\nusing this:\n  latin_square s n\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n  latin_square ?s ?n \\<equiv>\n  \\<forall>t. bij_betw (without t) ?s ({0..<?n} \\<times> {0..<?n})\n\ngoal (1 subgoal):\n 1. \\<forall>t. inj_on (without t) s", "by auto"], ["proof (state)\nthis:\n  \\<forall>t. inj_on (without t) s\n\ngoal (1 subgoal):\n 1. partial_latin_square s n", "from 1 2"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>s. \\<forall>t. e t < n\n  \\<forall>t. inj_on (without t) s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. \\<forall>t. e t < n\n  \\<forall>t. inj_on (without t) s\n\ngoal (1 subgoal):\n 1. partial_latin_square s n", "using partial_latin_square_def"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. \\<forall>t. e t < n\n  \\<forall>t. inj_on (without t) s\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. partial_latin_square s n", "by auto"], ["proof (state)\nthis:\n  partial_latin_square s n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  partial_latin_square s n\n\ngoal (1 subgoal):\n 1. latin_square s n \\<Longrightarrow>\n    partial_latin_square s n \\<and> card s = n * n", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw row_col s ({0..<n} \\<times> {0..<n})\n  partial_latin_square s n", "show \"partial_latin_square s n \\<and> card s = n*n\""], ["proof (prove)\nusing this:\n  bij_betw row_col s ({0..<n} \\<times> {0..<n})\n  partial_latin_square s n\n\ngoal (1 subgoal):\n 1. partial_latin_square s n \\<and> card s = n * n", "by (auto simp add:  bij_betw_same_card)"], ["proof (state)\nthis:\n  partial_latin_square s n \\<and> card s = n * n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now we prove Lemma 1 from chapter 27 in \"Das Buch der Beweise\". But first some lemmas, that prove\n   very intuitive facts:\\<close>"], ["", "lemma bij_restrict:\nassumes \"bij_betw f A B\" \"\\<forall>a\\<in>A. P a \\<longleftrightarrow> Q (f a)\"\nshows \"bij_betw f {a\\<in>A. P a} {b\\<in>B. Q b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}", "have inj: \"inj_on f {a\\<in>A. P a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f {a \\<in> A. P a}", "using assms bij_betw_def"], ["proof (prove)\nusing this:\n  bij_betw f A B\n  \\<forall>a\\<in>A. P a = Q (f a)\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n\ngoal (1 subgoal):\n 1. inj_on f {a \\<in> A. P a}", "by (metis (mono_tags, lifting) inj_onD inj_onI mem_Collect_eq)"], ["proof (state)\nthis:\n  inj_on f {a \\<in> A. P a}\n\ngoal (1 subgoal):\n 1. bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}", "have surj1: \"f ` {a\\<in>A. P a} \\<subseteq> {b\\<in>B. Q b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {a \\<in> A. P a} \\<subseteq> {b \\<in> B. Q b}", "using assms(1) assms(2) bij_betwE"], ["proof (prove)\nusing this:\n  bij_betw f A B\n  \\<forall>a\\<in>A. P a = Q (f a)\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n\ngoal (1 subgoal):\n 1. f ` {a \\<in> A. P a} \\<subseteq> {b \\<in> B. Q b}", "by blast"], ["proof (state)\nthis:\n  f ` {a \\<in> A. P a} \\<subseteq> {b \\<in> B. Q b}\n\ngoal (1 subgoal):\n 1. bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}", "have surj2: \"{b\\<in>B. Q b} \\<subseteq> f ` {a\\<in>A. P a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {b \\<in> B. Q b} \\<Longrightarrow>\n       x \\<in> f ` {a \\<in> A. P a}", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {b \\<in> B. Q b} \\<Longrightarrow>\n       x \\<in> f ` {a \\<in> A. P a}", "assume \"b \\<in> {b \\<in> B. Q b}\""], ["proof (state)\nthis:\n  b \\<in> {b \\<in> B. Q b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {b \\<in> B. Q b} \\<Longrightarrow>\n       x \\<in> f ` {a \\<in> A. P a}", "then"], ["proof (chain)\npicking this:\n  b \\<in> {b \\<in> B. Q b}", "obtain a where \"f a = b\" \"a\\<in>A\""], ["proof (prove)\nusing this:\n  b \\<in> {b \\<in> B. Q b}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>f a = b; a \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1) bij_betw_inv_into_right bij_betwE bij_betw_inv_into mem_Collect_eq"], ["proof (prove)\nusing this:\n  b \\<in> {b \\<in> B. Q b}\n  bij_betw f A B\n  \\<lbrakk>bij_betw ?f ?A ?A'; ?a' \\<in> ?A'\\<rbrakk>\n  \\<Longrightarrow> ?f (inv_into ?A ?f ?a') = ?a'\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  bij_betw ?f ?A ?B \\<Longrightarrow> bij_betw (inv_into ?A ?f) ?B ?A\n  (?a \\<in> Collect ?P) = ?P ?a\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>f a = b; a \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting))"], ["proof (state)\nthis:\n  f a = b\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {b \\<in> B. Q b} \\<Longrightarrow>\n       x \\<in> f ` {a \\<in> A. P a}", "then"], ["proof (chain)\npicking this:\n  f a = b\n  a \\<in> A", "show \"b \\<in> f ` {a\\<in>A. P a}\""], ["proof (prove)\nusing this:\n  f a = b\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. b \\<in> f ` {a \\<in> A. P a}", "using \\<open>b \\<in> {b \\<in> B. Q b}\\<close> assms(2)"], ["proof (prove)\nusing this:\n  f a = b\n  a \\<in> A\n  b \\<in> {b \\<in> B. Q b}\n  \\<forall>a\\<in>A. P a = Q (f a)\n\ngoal (1 subgoal):\n 1. b \\<in> f ` {a \\<in> A. P a}", "by blast"], ["proof (state)\nthis:\n  b \\<in> f ` {a \\<in> A. P a}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}\n\ngoal (1 subgoal):\n 1. bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}", "with inj surj1 surj2"], ["proof (chain)\npicking this:\n  inj_on f {a \\<in> A. P a}\n  f ` {a \\<in> A. P a} \\<subseteq> {b \\<in> B. Q b}\n  {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}\n  {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on f {a \\<in> A. P a}\n  f ` {a \\<in> A. P a} \\<subseteq> {b \\<in> B. Q b}\n  {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}\n  {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}\n\ngoal (1 subgoal):\n 1. bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}", "using bij_betw_imageI"], ["proof (prove)\nusing this:\n  inj_on f {a \\<in> A. P a}\n  f ` {a \\<in> A. P a} \\<subseteq> {b \\<in> B. Q b}\n  {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}\n  {b \\<in> B. Q b} \\<subseteq> f ` {a \\<in> A. P a}\n  \\<lbrakk>inj_on ?f ?A; ?f ` ?A = ?B\\<rbrakk>\n  \\<Longrightarrow> bij_betw ?f ?A ?B\n\ngoal (1 subgoal):\n 1. bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}", "by fastforce"], ["proof (state)\nthis:\n  bij_betw f {a \\<in> A. P a} {b \\<in> B. Q b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cartesian_product_margin1:\nassumes \"a\\<in>A\"\nshows \"{p\\<in>A\\<times>B. fst p = a} = {a}\\<times>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p \\<in> A \\<times> B. fst p = a} = {a} \\<times> B", "using SigmaI assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?A; ?b \\<in> ?B ?a\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<in> Sigma ?A ?B\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. {p \\<in> A \\<times> B. fst p = a} = {a} \\<times> B", "by auto"], ["", "lemma cartesian_product_margin2:\nassumes \"b\\<in>B\"\nshows \"{p\\<in>A\\<times>B. snd p = b} = A\\<times>{b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p \\<in> A \\<times> B. snd p = b} = A \\<times> {b}", "using SigmaI assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?A; ?b \\<in> ?B ?a\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<in> Sigma ?A ?B\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. {p \\<in> A \\<times> B. snd p = b} = A \\<times> {b}", "by auto"], ["", "text \\<open>The union of sets containing at most k elements each cannot contain more elements than\n   the number of sets times k:\\<close>"], ["", "lemma limited_family_union: \"finite B \\<Longrightarrow> \\<forall>P\\<in>B. card P \\<le> k \\<Longrightarrow> card (\\<Union>B) \\<le> card B * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; \\<forall>P\\<in>B. card P \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card (\\<Union> B) \\<le> card B * k", "proof (induction B rule:finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. card P \\<le> k \\<Longrightarrow>\n    card (\\<Union> {}) \\<le> card {} * k\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>P\\<in>F. card P \\<le> k \\<Longrightarrow>\n        card (\\<Union> F) \\<le> card F * k;\n        \\<forall>P\\<in>insert x F. card P \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card (\\<Union> (insert x F))\n                         \\<le> card (insert x F) * k", "case empty"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{}. card P \\<le> k\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. card P \\<le> k \\<Longrightarrow>\n    card (\\<Union> {}) \\<le> card {} * k\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>P\\<in>F. card P \\<le> k \\<Longrightarrow>\n        card (\\<Union> F) \\<le> card F * k;\n        \\<forall>P\\<in>insert x F. card P \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card (\\<Union> (insert x F))\n                         \\<le> card (insert x F) * k", "then"], ["proof (chain)\npicking this:\n  \\<forall>P\\<in>{}. card P \\<le> k", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>P\\<in>{}. card P \\<le> k\n\ngoal (1 subgoal):\n 1. card (\\<Union> {}) \\<le> card {} * k", "by auto"], ["proof (state)\nthis:\n  card (\\<Union> {}) \\<le> card {} * k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>P\\<in>F. card P \\<le> k \\<Longrightarrow>\n        card (\\<Union> F) \\<le> card F * k;\n        \\<forall>P\\<in>insert x F. card P \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card (\\<Union> (insert x F))\n                         \\<le> card (insert x F) * k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>P\\<in>F. card P \\<le> k \\<Longrightarrow>\n        card (\\<Union> F) \\<le> card F * k;\n        \\<forall>P\\<in>insert x F. card P \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card (\\<Union> (insert x F))\n                         \\<le> card (insert x F) * k", "case (insert P B)"], ["proof (state)\nthis:\n  finite B\n  P \\<notin> B\n  \\<forall>P\\<in>B. card P \\<le> k \\<Longrightarrow>\n  card (\\<Union> B) \\<le> card B * k\n  \\<forall>P\\<in>insert P B. card P \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>P\\<in>F. card P \\<le> k \\<Longrightarrow>\n        card (\\<Union> F) \\<le> card F * k;\n        \\<forall>P\\<in>insert x F. card P \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card (\\<Union> (insert x F))\n                         \\<le> card (insert x F) * k", "have \"card (\\<Union>(insert P B)) \\<le> card P + card (\\<Union>B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> (insert P B)) \\<le> card P + card (\\<Union> B)", "by (simp add: card_Un_le)"], ["proof (state)\nthis:\n  card (\\<Union> (insert P B)) \\<le> card P + card (\\<Union> B)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>P\\<in>F. card P \\<le> k \\<Longrightarrow>\n        card (\\<Union> F) \\<le> card F * k;\n        \\<forall>P\\<in>insert x F. card P \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card (\\<Union> (insert x F))\n                         \\<le> card (insert x F) * k", "then"], ["proof (chain)\npicking this:\n  card (\\<Union> (insert P B)) \\<le> card P + card (\\<Union> B)", "have \"card (\\<Union>(insert P B)) \\<le> card P + card B * k\""], ["proof (prove)\nusing this:\n  card (\\<Union> (insert P B)) \\<le> card P + card (\\<Union> B)\n\ngoal (1 subgoal):\n 1. card (\\<Union> (insert P B)) \\<le> card P + card B * k", "using insert"], ["proof (prove)\nusing this:\n  card (\\<Union> (insert P B)) \\<le> card P + card (\\<Union> B)\n  finite B\n  P \\<notin> B\n  \\<forall>P\\<in>B. card P \\<le> k \\<Longrightarrow>\n  card (\\<Union> B) \\<le> card B * k\n  \\<forall>P\\<in>insert P B. card P \\<le> k\n\ngoal (1 subgoal):\n 1. card (\\<Union> (insert P B)) \\<le> card P + card B * k", "by auto"], ["proof (state)\nthis:\n  card (\\<Union> (insert P B)) \\<le> card P + card B * k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<forall>P\\<in>F. card P \\<le> k \\<Longrightarrow>\n        card (\\<Union> F) \\<le> card F * k;\n        \\<forall>P\\<in>insert x F. card P \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card (\\<Union> (insert x F))\n                         \\<le> card (insert x F) * k", "then"], ["proof (chain)\npicking this:\n  card (\\<Union> (insert P B)) \\<le> card P + card B * k", "show ?case"], ["proof (prove)\nusing this:\n  card (\\<Union> (insert P B)) \\<le> card P + card B * k\n\ngoal (1 subgoal):\n 1. card (\\<Union> (insert P B)) \\<le> card (insert P B) * k", "using insert"], ["proof (prove)\nusing this:\n  card (\\<Union> (insert P B)) \\<le> card P + card B * k\n  finite B\n  P \\<notin> B\n  \\<forall>P\\<in>B. card P \\<le> k \\<Longrightarrow>\n  card (\\<Union> B) \\<le> card B * k\n  \\<forall>P\\<in>insert P B. card P \\<le> k\n\ngoal (1 subgoal):\n 1. card (\\<Union> (insert P B)) \\<le> card (insert P B) * k", "by simp"], ["proof (state)\nthis:\n  card (\\<Union> (insert P B)) \\<le> card (insert P B) * k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If f hits each element at most k times, the domain of f can only be k times bigger than the\n   image of f:\\<close>"], ["", "lemma limited_preimages:\nassumes \"\\<forall>x \\<in> f ` D. card ((f -` {x})\\<inter>D) \\<le> k\" \"finite D\"\nshows \"card D \\<le> card (f ` D) * k \""], ["proof (prove)\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "let ?preimages = \"(\\<lambda>x. (f -` {x})\\<inter>D) ` (f ` D)\""], ["proof (state)\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "have \"D = \\<Union>?preimages\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D = (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)", "by auto"], ["proof (state)\nthis:\n  D = (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "have \"card (\\<Union>?preimages) \\<le> card ?preimages * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n    \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k", "using limited_family_union[of \"?preimages\" k] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D);\n   \\<forall>P\\<in>(\\<lambda>x. f -` {x} \\<inter> D) ` f ` D.\n      card P \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n                    \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) *\n                          k\n  \\<forall>x\\<in>f ` D. card (f -` {x} \\<inter> D) \\<le> k\n  finite D\n\ngoal (1 subgoal):\n 1. card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n    \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k", "by auto"], ["proof (state)\nthis:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n  \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "moreover"], ["proof (state)\nthis:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n  \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "have \"card (?preimages) * k \\<le> card (f ` D) * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n    \\<le> card (f ` D) * k", "using card_image_le[of \"f ` D\" \"\\<lambda>x. (f -` {x})\\<inter>D\"] assms"], ["proof (prove)\nusing this:\n  finite (f ` D) \\<Longrightarrow>\n  card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) \\<le> card (f ` D)\n  \\<forall>x\\<in>f ` D. card (f -` {x} \\<inter> D) \\<le> k\n  finite D\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n    \\<le> card (f ` D) * k", "by auto"], ["proof (state)\nthis:\n  card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n  \\<le> card (f ` D) * k\n\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "ultimately"], ["proof (chain)\npicking this:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n  \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n  card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n  \\<le> card (f ` D) * k", "have \"card (\\<Union>?preimages) \\<le> card (f ` D) * k\""], ["proof (prove)\nusing this:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n  \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n  card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n  \\<le> card (f ` D) * k\n\ngoal (1 subgoal):\n 1. card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D) \\<le> card (f ` D) * k", "using le_trans"], ["proof (prove)\nusing this:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n  \\<le> card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n  card ((\\<lambda>x. f -` {x} \\<inter> D) ` f ` D) * k\n  \\<le> card (f ` D) * k\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n\ngoal (1 subgoal):\n 1. card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D) \\<le> card (f ` D) * k", "by blast"], ["proof (state)\nthis:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D) \\<le> card (f ` D) * k\n\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "then"], ["proof (chain)\npicking this:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D) \\<le> card (f ` D) * k", "show ?thesis"], ["proof (prove)\nusing this:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D) \\<le> card (f ` D) * k\n\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "using \\<open>D = \\<Union>?preimages\\<close>"], ["proof (prove)\nusing this:\n  card (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D) \\<le> card (f ` D) * k\n  D = (\\<Union>x\\<in>f ` D. f -` {x} \\<inter> D)\n\ngoal (1 subgoal):\n 1. card D \\<le> card (f ` D) * k", "by metis"], ["proof (state)\nthis:\n  card D \\<le> card (f ` D) * k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Let $A_1, \\dots, A_n$ be sets with $k>0$ elements each. Any element is only contained in at most $k$ of\n   these sets. Then there are more different elements in total than sets $A_i$:\\<close>"], ["", "lemma union_limited_replicates:\nassumes \"finite I\" \"\\<forall>i\\<in>I. finite (A i)\" \"k>0\" \"\\<forall>i\\<in>I. card (A i) = k\" \"\\<forall>i\\<in>I. \\<forall>x\\<in>(A i). card {i\\<in>I. x\\<in>A i} \\<le> k\"\nshows \"card (\\<Union>i\\<in>I. (A i)) \\<ge> card I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card I \\<le> card (\\<Union> (A ` I))", "using assms"], ["proof (prove)\nusing this:\n  finite I\n  \\<forall>i\\<in>I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>I. card (A i) = k\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card I \\<le> card (\\<Union> (A ` I))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "let ?pairs = \"{(i,x). i\\<in>I \\<and> x\\<in>A i}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "have card_pairs: \"card ?pairs = card I * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k", "using assms"], ["proof (prove)\nusing this:\n  finite I\n  \\<forall>i\\<in>I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>I. card (A i) = k\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k", "proof (induction I rule:finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i\\<in>{}. finite (A i); 0 < k;\n     \\<forall>i\\<in>{}. card (A i) = k;\n     \\<forall>i\\<in>{}.\n        \\<forall>x\\<in>A i. card {i \\<in> {}. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card {(i, x). i \\<in> {} \\<and> x \\<in> A i} =\n                      card {} * k\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "case empty"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{}. finite (A i)\n  0 < k\n  \\<forall>i\\<in>{}. card (A i) = k\n  \\<forall>i\\<in>{}.\n     \\<forall>x\\<in>A i. card {i \\<in> {}. x \\<in> A i} \\<le> k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i\\<in>{}. finite (A i); 0 < k;\n     \\<forall>i\\<in>{}. card (A i) = k;\n     \\<forall>i\\<in>{}.\n        \\<forall>x\\<in>A i. card {i \\<in> {}. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card {(i, x). i \\<in> {} \\<and> x \\<in> A i} =\n                      card {} * k\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>{}. finite (A i)\n  0 < k\n  \\<forall>i\\<in>{}. card (A i) = k\n  \\<forall>i\\<in>{}.\n     \\<forall>x\\<in>A i. card {i \\<in> {}. x \\<in> A i} \\<le> k", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{}. finite (A i)\n  0 < k\n  \\<forall>i\\<in>{}. card (A i) = k\n  \\<forall>i\\<in>{}.\n     \\<forall>x\\<in>A i. card {i \\<in> {}. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card {a. case a of (i, x) \\<Rightarrow> i \\<in> {} \\<and> x \\<in> A i} =\n    card {} * k", "using card_eq_0_iff"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{}. finite (A i)\n  0 < k\n  \\<forall>i\\<in>{}. card (A i) = k\n  \\<forall>i\\<in>{}.\n     \\<forall>x\\<in>A i. card {i \\<in> {}. x \\<in> A i} \\<le> k\n  (card ?A = 0) = (?A = {} \\<or> infinite ?A)\n\ngoal (1 subgoal):\n 1. card {a. case a of (i, x) \\<Rightarrow> i \\<in> {} \\<and> x \\<in> A i} =\n    card {} * k", "by auto"], ["proof (state)\nthis:\n  card {a. case a of (i, x) \\<Rightarrow> i \\<in> {} \\<and> x \\<in> A i} =\n  card {} * k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "case (insert i0 I)"], ["proof (state)\nthis:\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "have \"\\<forall>i\\<in>I. \\<forall>x\\<in>(A i). card {i\\<in>I. x\\<in>A i} \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I.\n       \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k", "proof (rule ballI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>i \\<in> I; x \\<in> A i\\<rbrakk>\n       \\<Longrightarrow> card {i \\<in> I. x \\<in> A i} \\<le> k", "fix i x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>i \\<in> I; x \\<in> A i\\<rbrakk>\n       \\<Longrightarrow> card {i \\<in> I. x \\<in> A i} \\<le> k", "assume \"i \\<in> I\" \"x\\<in>A i\""], ["proof (state)\nthis:\n  i \\<in> I\n  x \\<in> A i\n\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>i \\<in> I; x \\<in> A i\\<rbrakk>\n       \\<Longrightarrow> card {i \\<in> I. x \\<in> A i} \\<le> k", "then"], ["proof (chain)\npicking this:\n  i \\<in> I\n  x \\<in> A i", "have \"card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\""], ["proof (prove)\nusing this:\n  i \\<in> I\n  x \\<in> A i\n\ngoal (1 subgoal):\n 1. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k", "using insert"], ["proof (prove)\nusing this:\n  i \\<in> I\n  x \\<in> A i\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k", "by auto"], ["proof (state)\nthis:\n  card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>i \\<in> I; x \\<in> A i\\<rbrakk>\n       \\<Longrightarrow> card {i \\<in> I. x \\<in> A i} \\<le> k", "moreover"], ["proof (state)\nthis:\n  card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>i \\<in> I; x \\<in> A i\\<rbrakk>\n       \\<Longrightarrow> card {i \\<in> I. x \\<in> A i} \\<le> k", "have \"finite {i \\<in> insert i0 I. x \\<in> A i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i \\<in> insert i0 I. x \\<in> A i}", "using insert"], ["proof (prove)\nusing this:\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. finite {i \\<in> insert i0 I. x \\<in> A i}", "by auto"], ["proof (state)\nthis:\n  finite {i \\<in> insert i0 I. x \\<in> A i}\n\ngoal (1 subgoal):\n 1. \\<And>i x.\n       \\<lbrakk>i \\<in> I; x \\<in> A i\\<rbrakk>\n       \\<Longrightarrow> card {i \\<in> I. x \\<in> A i} \\<le> k", "ultimately"], ["proof (chain)\npicking this:\n  card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n  finite {i \\<in> insert i0 I. x \\<in> A i}", "show \"card  {i\\<in>I. x\\<in>A i} \\<le> k\""], ["proof (prove)\nusing this:\n  card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n  finite {i \\<in> insert i0 I. x \\<in> A i}\n\ngoal (1 subgoal):\n 1. card {i \\<in> I. x \\<in> A i} \\<le> k", "using card_mono[of \"{i \\<in> insert i0 I. x \\<in> A i}\" \"{i \\<in> I. x \\<in> A i}\"] le_trans"], ["proof (prove)\nusing this:\n  card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n  finite {i \\<in> insert i0 I. x \\<in> A i}\n  \\<lbrakk>finite {i \\<in> insert i0 I. x \\<in> A i};\n   {i \\<in> I. x \\<in> A i}\n   \\<subseteq> {i \\<in> insert i0 I. x \\<in> A i}\\<rbrakk>\n  \\<Longrightarrow> card {i \\<in> I. x \\<in> A i}\n                    \\<le> card {i \\<in> insert i0 I. x \\<in> A i}\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n\ngoal (1 subgoal):\n 1. card {i \\<in> I. x \\<in> A i} \\<le> k", "by blast"], ["proof (state)\nthis:\n  card {i \\<in> I. x \\<in> A i} \\<le> k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k", "have card_S: \"card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k", "using insert"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k", "by auto"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "have card_B: \"card {(i, x). i=i0 \\<and> x\\<in>A i0} = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {(i, x). i = i0 \\<and> x \\<in> A i0} = k", "using insert"], ["proof (prove)\nusing this:\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card {(i, x). i = i0 \\<and> x \\<in> A i0} = k", "by auto"], ["proof (state)\nthis:\n  card {(i, x). i = i0 \\<and> x \\<in> A i0} = k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "have \"{(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<union> {(i, x). i=i0 \\<and> x\\<in>A i0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n    {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<union>\n    {(i, x). i = i0 \\<and> x \\<in> A i0}", "by auto"], ["proof (state)\nthis:\n  {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<union>\n  {(i, x). i = i0 \\<and> x \\<in> A i0}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "moreover"], ["proof (state)\nthis:\n  {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<union>\n  {(i, x). i = i0 \\<and> x \\<in> A i0}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "have \"{(i, x). i \\<in> I \\<and> x \\<in> A i} \\<inter> {(i, x). i=i0 \\<and> x\\<in>A i0} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<inter>\n    {(i, x). i = i0 \\<and> x \\<in> A i0} =\n    {}", "using insert"], ["proof (prove)\nusing this:\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<inter>\n    {(i, x). i = i0 \\<and> x \\<in> A i0} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<inter>\n  {(i, x). i = i0 \\<and> x \\<in> A i0} =\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "moreover"], ["proof (state)\nthis:\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<inter>\n  {(i, x). i = i0 \\<and> x \\<in> A i0} =\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "have \"finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(i, x). i \\<in> I \\<and> x \\<in> A i}", "using insert rev_finite_subset[of \"I \\<times> \\<Union>(A ` I)\" \"{(i, x). i \\<in> I \\<and> x \\<in> A i}\"]"], ["proof (prove)\nusing this:\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n  \\<lbrakk>finite (I \\<times> \\<Union> (A ` I));\n   {(i, x). i \\<in> I \\<and> x \\<in> A i}\n   \\<subseteq> I \\<times> \\<Union> (A ` I)\\<rbrakk>\n  \\<Longrightarrow> finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n\ngoal (1 subgoal):\n 1. finite {(i, x). i \\<in> I \\<and> x \\<in> A i}", "by auto"], ["proof (state)\nthis:\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "moreover"], ["proof (state)\nthis:\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "have \"finite {(i, x). i=i0 \\<and> x\\<in>A i0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(i, x). i = i0 \\<and> x \\<in> A i0}", "using insert card_B card.infinite neq0_conv"], ["proof (prove)\nusing this:\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n  card {(i, x). i = i0 \\<and> x \\<in> A i0} = k\n  infinite ?A \\<Longrightarrow> card ?A = 0\n  (?n \\<noteq> 0) = (0 < ?n)\n\ngoal (1 subgoal):\n 1. finite {(i, x). i = i0 \\<and> x \\<in> A i0}", "by blast"], ["proof (state)\nthis:\n  finite {(i, x). i = i0 \\<and> x \\<in> A i0}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "ultimately"], ["proof (chain)\npicking this:\n  {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<union>\n  {(i, x). i = i0 \\<and> x \\<in> A i0}\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<inter>\n  {(i, x). i = i0 \\<and> x \\<in> A i0} =\n  {}\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  finite {(i, x). i = i0 \\<and> x \\<in> A i0}", "have \"card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = card {(i, x). i \\<in> I \\<and> x \\<in> A i} + card {(i, x). i=i0 \\<and> x\\<in>A i0}\""], ["proof (prove)\nusing this:\n  {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<union>\n  {(i, x). i = i0 \\<and> x \\<in> A i0}\n  {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<inter>\n  {(i, x). i = i0 \\<and> x \\<in> A i0} =\n  {}\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  finite {(i, x). i = i0 \\<and> x \\<in> A i0}\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n    card {(i, x). i \\<in> I \\<and> x \\<in> A i} +\n    card {(i, x). i = i0 \\<and> x \\<in> A i0}", "by (simp add: card_Un_disjoint)"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} +\n  card {(i, x). i = i0 \\<and> x \\<in> A i0}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "with card_S card_B"], ["proof (chain)\npicking this:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k\n  card {(i, x). i = i0 \\<and> x \\<in> A i0} = k\n  card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} +\n  card {(i, x). i = i0 \\<and> x \\<in> A i0}", "have \"card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = (card I + 1) * k\""], ["proof (prove)\nusing this:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k\n  card {(i, x). i = i0 \\<and> x \\<in> A i0} = k\n  card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} +\n  card {(i, x). i = i0 \\<and> x \\<in> A i0}\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = (card I + 1) * k", "by auto"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = (card I + 1) * k\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<forall>i\\<in>F. finite (A i); 0 < k;\n         \\<forall>i\\<in>F. card (A i) = k;\n         \\<forall>i\\<in>F.\n            \\<forall>x\\<in>A i.\n               card {i \\<in> F. x \\<in> A i} \\<le> k\\<rbrakk>\n        \\<Longrightarrow> card {(i, x). i \\<in> F \\<and> x \\<in> A i} =\n                          card F * k;\n        \\<forall>i\\<in>insert x F. finite (A i); 0 < k;\n        \\<forall>i\\<in>insert x F. card (A i) = k;\n        \\<forall>i\\<in>insert x F.\n           \\<forall>xa\\<in>A i.\n              card {i \\<in> insert x F. xa \\<in> A i} \\<le> k\\<rbrakk>\n       \\<Longrightarrow> card\n                          {(i, xa).\n                           i \\<in> insert x F \\<and> xa \\<in> A i} =\n                         card (insert x F) * k", "then"], ["proof (chain)\npicking this:\n  card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = (card I + 1) * k", "show ?case"], ["proof (prove)\nusing this:\n  card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = (card I + 1) * k\n\ngoal (1 subgoal):\n 1. card\n     {a. case a of\n         (i, x) \\<Rightarrow> i \\<in> insert i0 I \\<and> x \\<in> A i} =\n    card (insert i0 I) * k", "using insert"], ["proof (prove)\nusing this:\n  card {(i, x). i \\<in> insert i0 I \\<and> x \\<in> A i} = (card I + 1) * k\n  finite I\n  i0 \\<notin> I\n  \\<lbrakk>\\<forall>i\\<in>I. finite (A i); 0 < k;\n   \\<forall>i\\<in>I. card (A i) = k;\n   \\<forall>i\\<in>I.\n      \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n  \\<Longrightarrow> card\n                     {a. case a of\n                         (i, x) \\<Rightarrow>\n                           i \\<in> I \\<and> x \\<in> A i} =\n                    card I * k\n  \\<forall>i\\<in>insert i0 I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>insert i0 I. card (A i) = k\n  \\<forall>i\\<in>insert i0 I.\n     \\<forall>x\\<in>A i. card {i \\<in> insert i0 I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card\n     {a. case a of\n         (i, x) \\<Rightarrow> i \\<in> insert i0 I \\<and> x \\<in> A i} =\n    card (insert i0 I) * k", "by auto"], ["proof (state)\nthis:\n  card\n   {a. case a of\n       (i, x) \\<Rightarrow> i \\<in> insert i0 I \\<and> x \\<in> A i} =\n  card (insert i0 I) * k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "define f where \"f ix = (case ix of (i,x) \\<Rightarrow> x)\" for ix :: \"'a \\<times> 'b\""], ["proof (state)\nthis:\n  f ?ix = (case ?ix of (i, x) \\<Rightarrow> x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "have preimages_le_k: \"\\<forall>x \\<in> f ` ?pairs. card ((f -` {x}) \\<inter> ?pairs) \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}.\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "fix x0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "assume x0_def: \"x0 \\<in> f ` ?pairs\""], ["proof (state)\nthis:\n  x0 \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "have \"(f -` {x0}) \\<inter> ?pairs = {(i,x). i\\<in>I \\<and> x\\<in>A i \\<and> x=x0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i} =\n    {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}", "using f_def"], ["proof (prove)\nusing this:\n  f ?ix = (case ?ix of (i, x) \\<Rightarrow> x)\n\ngoal (1 subgoal):\n 1. f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i} =\n    {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}", "by auto"], ["proof (state)\nthis:\n  f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "moreover"], ["proof (state)\nthis:\n  f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "have \"card {(i,x). i\\<in>I \\<and> x\\<in>A i \\<and> x=x0} = card {i\\<in>I. x0\\<in>A i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "using \\<open>finite I\\<close>"], ["proof (prove)\nusing this:\n  finite I\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "have \"inj_on (\\<lambda>i. (i,x0)) {i\\<in>I. x0\\<in>A i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>i. (i, x0)) {i \\<in> I. x0 \\<in> A i}", "by (meson Pair_inject inj_onI)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. (i, x0)) {i \\<in> I. x0 \\<in> A i}\n\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "moreover"], ["proof (state)\nthis:\n  inj_on (\\<lambda>i. (i, x0)) {i \\<in> I. x0 \\<in> A i}\n\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "have \"(\\<lambda>i. (i,x0)) ` {i\\<in>I. x0\\<in>A i} = {(i,x). i\\<in>I \\<and> x\\<in>A i \\<and> x=x0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. (i, x0)) ` {i \\<in> I. x0 \\<in> A i} =\n    {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}", "by (rule subset_antisym) blast+"], ["proof (state)\nthis:\n  (\\<lambda>i. (i, x0)) ` {i \\<in> I. x0 \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}\n\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>i. (i, x0)) {i \\<in> I. x0 \\<in> A i}\n  (\\<lambda>i. (i, x0)) ` {i \\<in> I. x0 \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. (i, x0)) {i \\<in> I. x0 \\<in> A i}\n  (\\<lambda>i. (i, x0)) ` {i \\<in> I. x0 \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "using card_image"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>i. (i, x0)) {i \\<in> I. x0 \\<in> A i}\n  (\\<lambda>i. (i, x0)) ` {i \\<in> I. x0 \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n    card {i \\<in> I. x0 \\<in> A i}", "by fastforce"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n  card {i \\<in> I. x0 \\<in> A i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n  card {i \\<in> I. x0 \\<in> A i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "ultimately"], ["proof (chain)\npicking this:\n  f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n  card {i \\<in> I. x0 \\<in> A i}", "have 1:\"card ((f -` {x0}) \\<inter> ?pairs) = card  {i\\<in>I. x0\\<in>A i}\""], ["proof (prove)\nusing this:\n  f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i} =\n  {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0}\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i \\<and> x = x0} =\n  card {i \\<in> I. x0 \\<in> A i}\n\ngoal (1 subgoal):\n 1. card (f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i}) =\n    card {i \\<in> I. x0 \\<in> A i}", "by auto"], ["proof (state)\nthis:\n  card (f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i}) =\n  card {i \\<in> I. x0 \\<in> A i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "have\"\\<exists>i0. x0\\<in>A i0 \\<and> i0\\<in>I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i0. x0 \\<in> A i0 \\<and> i0 \\<in> I", "using x0_def f_def"], ["proof (prove)\nusing this:\n  x0 \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  f ?ix = (case ?ix of (i, x) \\<Rightarrow> x)\n\ngoal (1 subgoal):\n 1. \\<exists>i0. x0 \\<in> A i0 \\<and> i0 \\<in> I", "by auto"], ["proof (state)\nthis:\n  \\<exists>i0. x0 \\<in> A i0 \\<and> i0 \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "then"], ["proof (chain)\npicking this:\n  \\<exists>i0. x0 \\<in> A i0 \\<and> i0 \\<in> I", "have \"card {i\\<in>I. x0\\<in>A i} \\<le> k\""], ["proof (prove)\nusing this:\n  \\<exists>i0. x0 \\<in> A i0 \\<and> i0 \\<in> I\n\ngoal (1 subgoal):\n 1. card {i \\<in> I. x0 \\<in> A i} \\<le> k", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>i0. x0 \\<in> A i0 \\<and> i0 \\<in> I\n  finite I\n  \\<forall>i\\<in>I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>I. card (A i) = k\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card {i \\<in> I. x0 \\<in> A i} \\<le> k", "by auto"], ["proof (state)\nthis:\n  card {i \\<in> I. x0 \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n       card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i})\n       \\<le> k", "with 1"], ["proof (chain)\npicking this:\n  card (f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i}) =\n  card {i \\<in> I. x0 \\<in> A i}\n  card {i \\<in> I. x0 \\<in> A i} \\<le> k", "show \"card ((f -` {x0}) \\<inter> ?pairs) \\<le> k\""], ["proof (prove)\nusing this:\n  card (f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i}) =\n  card {i \\<in> I. x0 \\<in> A i}\n  card {i \\<in> I. x0 \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card (f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i}) \\<le> k", "by auto"], ["proof (state)\nthis:\n  card (f -` {x0} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i}) \\<le> k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}.\n     card (f -` {x} \\<inter> {(i, x). i \\<in> I \\<and> x \\<in> A i}) \\<le> k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "have \"card ?pairs \\<le> card (f ` ?pairs) * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n    \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n    \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k", "have \"finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(i, x). i \\<in> I \\<and> x \\<in> A i}", "using assms card_pairs not_finite_existsD"], ["proof (prove)\nusing this:\n  finite I\n  \\<forall>i\\<in>I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>I. card (A i) = k\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k\n  infinite {a. ?P a} \\<Longrightarrow> \\<exists>a. ?P a\n\ngoal (1 subgoal):\n 1. finite {(i, x). i \\<in> I \\<and> x \\<in> A i}", "by fastforce"], ["proof (state)\nthis:\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n    \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k", "then"], ["proof (chain)\npicking this:\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n    \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k", "using limited_preimages[of f ?pairs k, OF preimages_le_k]"], ["proof (prove)\nusing this:\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  finite {(i, x). i \\<in> I \\<and> x \\<in> A i} \\<Longrightarrow>\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k\n\ngoal (1 subgoal):\n 1. card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n    \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k", "by auto"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "then"], ["proof (chain)\npicking this:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k", "have \"card I  \\<le> card (f ` ?pairs) \""], ["proof (prove)\nusing this:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k\n\ngoal (1 subgoal):\n 1. card I \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i})", "using card_pairs assms"], ["proof (prove)\nusing this:\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i}\n  \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i}) * k\n  card {(i, x). i \\<in> I \\<and> x \\<in> A i} = card I * k\n  finite I\n  \\<forall>i\\<in>I. finite (A i)\n  0 < k\n  \\<forall>i\\<in>I. card (A i) = k\n  \\<forall>i\\<in>I.\n     \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\n\ngoal (1 subgoal):\n 1. card I \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i})", "by auto"], ["proof (state)\nthis:\n  card I \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "moreover"], ["proof (state)\nthis:\n  card I \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "have \"f ` ?pairs = (\\<Union>i\\<in>I. (A i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} = \\<Union> (A ` I)", "using f_def [abs_def]"], ["proof (prove)\nusing this:\n  f \\<equiv> \\<lambda>ix. case ix of (i, x) \\<Rightarrow> x\n\ngoal (1 subgoal):\n 1. f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} = \\<Union> (A ` I)", "by auto"], ["proof (state)\nthis:\n  f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} = \\<Union> (A ` I)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>i\\<in>I. finite (A i); 0 < k;\n     \\<forall>i\\<in>I. card (A i) = k;\n     \\<forall>i\\<in>I.\n        \\<forall>x\\<in>A i. card {i \\<in> I. x \\<in> A i} \\<le> k\\<rbrakk>\n    \\<Longrightarrow> card I \\<le> card (\\<Union> (A ` I))", "ultimately"], ["proof (chain)\npicking this:\n  card I \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i})\n  f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} = \\<Union> (A ` I)", "show ?thesis"], ["proof (prove)\nusing this:\n  card I \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i})\n  f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} = \\<Union> (A ` I)\n\ngoal (1 subgoal):\n 1. card I \\<le> card (\\<Union> (A ` I))", "using f_def"], ["proof (prove)\nusing this:\n  card I \\<le> card (f ` {(i, x). i \\<in> I \\<and> x \\<in> A i})\n  f ` {(i, x). i \\<in> I \\<and> x \\<in> A i} = \\<Union> (A ` I)\n  f ?ix = (case ?ix of (i, x) \\<Rightarrow> x)\n\ngoal (1 subgoal):\n 1. card I \\<le> card (\\<Union> (A ` I))", "by auto"], ["proof (state)\nthis:\n  card I \\<le> card (\\<Union> (A ` I))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In a $m \\times n$ latin rectangle each number appears in m columns:\\<close>"], ["", "lemma latin_rect_card_col:\nassumes \"latin_rect s m n\" \"x<n\"\nshows \"card {e Col|e. e\\<in>s \\<and> e Num = x} = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = m", "have \"card {e \\<in> s. e Num = x} = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} = m", "have 1:\"bij_betw num_row s ({0..<n}\\<times>{0..<m})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw num_row s ({0..<n} \\<times> {0..<m})", "using assms latin_rect_def"], ["proof (prove)\nusing this:\n  latin_rect s m n\n  x < n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n\ngoal (1 subgoal):\n 1. bij_betw num_row s ({0..<n} \\<times> {0..<m})", "by auto"], ["proof (state)\nthis:\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} = m", "have 2:\"\\<forall>e\\<in>s. e Num = x \\<longleftrightarrow> fst (num_row e) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. (e Num = x) = (fst (num_row e) = x)", "by simp"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. (e Num = x) = (fst (num_row e) = x)\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} = m", "have \"bij_betw num_row {e\\<in>s. e Num = x} ({x}\\<times>{0..<m})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw num_row {e \\<in> s. e Num = x} ({x} \\<times> {0..<m})", "using bij_restrict[OF 1 2] cartesian_product_margin1[of x \"{0..<n}\" \" {0..<m}\"] assms"], ["proof (prove)\nusing this:\n  bij_betw num_row {a \\<in> s. a Num = x}\n   {b \\<in> {0..<n} \\<times> {0..<m}. fst b = x}\n  x \\<in> {0..<n} \\<Longrightarrow>\n  {p \\<in> {0..<n} \\<times> {0..<m}. fst p = x} = {x} \\<times> {0..<m}\n  latin_rect s m n\n  x < n\n\ngoal (1 subgoal):\n 1. bij_betw num_row {e \\<in> s. e Num = x} ({x} \\<times> {0..<m})", "by auto"], ["proof (state)\nthis:\n  bij_betw num_row {e \\<in> s. e Num = x} ({x} \\<times> {0..<m})\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} = m", "then"], ["proof (chain)\npicking this:\n  bij_betw num_row {e \\<in> s. e Num = x} ({x} \\<times> {0..<m})", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw num_row {e \\<in> s. e Num = x} ({x} \\<times> {0..<m})\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} = m", "using card_cartesian_product"], ["proof (prove)\nusing this:\n  bij_betw num_row {e \\<in> s. e Num = x} ({x} \\<times> {0..<m})\n  card (?A \\<times> ?B) = card ?A * card ?B\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} = m", "by (simp add: bij_betw_same_card)"], ["proof (state)\nthis:\n  card {e \\<in> s. e Num = x} = m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {e \\<in> s. e Num = x} = m\n\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = m", "moreover"], ["proof (state)\nthis:\n  card {e \\<in> s. e Num = x} = m\n\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = m", "have \"card {e\\<in>s. e Num = x} = card {e Col |e. e \\<in> s \\<and> e Num = x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "have \"inj_on col_num s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on col_num s", "using assms latin_rect_def[of s m n] partial_latin_square_def[of s n]"], ["proof (prove)\nusing this:\n  latin_rect s m n\n  x < n\n  latin_rect s m n \\<equiv>\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  bij_betw row_col s ({0..<m} \\<times> {0..<n}) \\<and>\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})\n  partial_latin_square s n \\<equiv>\n  (\\<forall>t. inj_on (without t) s) \\<and>\n  (\\<forall>e\\<in>s. \\<forall>t. e t < n)\n\ngoal (1 subgoal):\n 1. inj_on col_num s", "by blast"], ["proof (state)\nthis:\n  inj_on col_num s\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "then"], ["proof (chain)\npicking this:\n  inj_on col_num s", "have \"inj_on col_num {e\\<in>s. e Num = x}\""], ["proof (prove)\nusing this:\n  inj_on col_num s\n\ngoal (1 subgoal):\n 1. inj_on col_num {e \\<in> s. e Num = x}", "by (metis (mono_tags, lifting) inj_onD inj_onI mem_Collect_eq)"], ["proof (state)\nthis:\n  inj_on col_num {e \\<in> s. e Num = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "then"], ["proof (chain)\npicking this:\n  inj_on col_num {e \\<in> s. e Num = x}", "have \"inj_on (\\<lambda>e. e Col) {e\\<in>s. e Num = x}\""], ["proof (prove)\nusing this:\n  inj_on col_num {e \\<in> s. e Num = x}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>e. e Col) {e \\<in> s. e Num = x}", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{e \\<in> s. e Num = x}.\n     \\<forall>y\\<in>{e \\<in> s. e Num = x}.\n        col_num xa = col_num y \\<longrightarrow> xa = y\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{e \\<in> s. e Num = x}.\n       \\<forall>y\\<in>{e \\<in> s. e Num = x}.\n          xa Col = y Col \\<longrightarrow> xa = y", "using without_def"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{e \\<in> s. e Num = x}.\n     \\<forall>y\\<in>{e \\<in> s. e Num = x}.\n        col_num xa = col_num y \\<longrightarrow> xa = y\n  without ?t \\<equiv> \\<lambda>e. (e (next ?t), e (next (next ?t)))\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{e \\<in> s. e Num = x}.\n       \\<forall>y\\<in>{e \\<in> s. e Num = x}.\n          xa Col = y Col \\<longrightarrow> xa = y", "by auto"], ["proof (state)\nthis:\n  inj_on (\\<lambda>e. e Col) {e \\<in> s. e Num = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "moreover"], ["proof (state)\nthis:\n  inj_on (\\<lambda>e. e Col) {e \\<in> s. e Num = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "have \"(\\<lambda>e. e Col) ` {e\\<in>s. e Num = x} = {e Col |e. e \\<in> s \\<and> e Num = x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>e. e Col) ` {e \\<in> s. e Num = x} =\n    {e Col |e. e \\<in> s \\<and> e Num = x}", "by (rule subset_antisym) blast+"], ["proof (state)\nthis:\n  (\\<lambda>e. e Col) ` {e \\<in> s. e Num = x} =\n  {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>e. e Col) {e \\<in> s. e Num = x}\n  (\\<lambda>e. e Col) ` {e \\<in> s. e Num = x} =\n  {e Col |e. e \\<in> s \\<and> e Num = x}", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>e. e Col) {e \\<in> s. e Num = x}\n  (\\<lambda>e. e Col) ` {e \\<in> s. e Num = x} =\n  {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "using card_image"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>e. e Col) {e \\<in> s. e Num = x}\n  (\\<lambda>e. e Col) ` {e \\<in> s. e Num = x} =\n  {e Col |e. e \\<in> s \\<and> e Num = x}\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Num = x} =\n    card {e Col |e. e \\<in> s \\<and> e Num = x}", "by fastforce"], ["proof (state)\nthis:\n  card {e \\<in> s. e Num = x} = card {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {e \\<in> s. e Num = x} = card {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = m", "ultimately"], ["proof (chain)\npicking this:\n  card {e \\<in> s. e Num = x} = m\n  card {e \\<in> s. e Num = x} = card {e Col |e. e \\<in> s \\<and> e Num = x}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {e \\<in> s. e Num = x} = m\n  card {e \\<in> s. e Num = x} = card {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = m", "by auto"], ["proof (state)\nthis:\n  card {e Col |e. e \\<in> s \\<and> e Num = x} = m\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In a $m \\times n$ latin rectangle each column contains m numbers:\\<close>"], ["", "lemma latin_rect_card_num:\nassumes \"latin_rect s m n\" \"x<n\"\nshows \"card {e Num|e. e\\<in>s \\<and> e Col = x} = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {e Num |e. e \\<in> s \\<and> e Col = x} = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {e Num |e. e \\<in> s \\<and> e Col = x} = m", "have \"card {e \\<in> s. e Col = x} = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} = m", "have 1:\"bij_betw row_col s ({0..<m}\\<times>{0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<m} \\<times> {0..<n})", "using assms latin_rect_def"], ["proof (prove)\nusing this:\n  latin_rect s m n\n  x < n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<m} \\<times> {0..<n})", "by auto"], ["proof (state)\nthis:\n  bij_betw row_col s ({0..<m} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} = m", "have 2:\"\\<forall>e\\<in>s. e Col = x \\<longleftrightarrow> snd (row_col e) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. (e Col = x) = (snd (row_col e) = x)", "by simp"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. (e Col = x) = (snd (row_col e) = x)\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} = m", "have \"bij_betw row_col {e\\<in>s. e Col = x} ({0..<m}\\<times>{x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw row_col {e \\<in> s. e Col = x} ({0..<m} \\<times> {x})", "using bij_restrict[OF 1 2] cartesian_product_margin2[of x \"{0..<n}\" \" {0..<m}\"] assms"], ["proof (prove)\nusing this:\n  bij_betw row_col {a \\<in> s. a Col = x}\n   {b \\<in> {0..<m} \\<times> {0..<n}. snd b = x}\n  x \\<in> {0..<n} \\<Longrightarrow>\n  {p \\<in> {0..<m} \\<times> {0..<n}. snd p = x} = {0..<m} \\<times> {x}\n  latin_rect s m n\n  x < n\n\ngoal (1 subgoal):\n 1. bij_betw row_col {e \\<in> s. e Col = x} ({0..<m} \\<times> {x})", "by auto"], ["proof (state)\nthis:\n  bij_betw row_col {e \\<in> s. e Col = x} ({0..<m} \\<times> {x})\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} = m", "then"], ["proof (chain)\npicking this:\n  bij_betw row_col {e \\<in> s. e Col = x} ({0..<m} \\<times> {x})", "show ?thesis"], ["proof (prove)\nusing this:\n  bij_betw row_col {e \\<in> s. e Col = x} ({0..<m} \\<times> {x})\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} = m", "using card_cartesian_product"], ["proof (prove)\nusing this:\n  bij_betw row_col {e \\<in> s. e Col = x} ({0..<m} \\<times> {x})\n  card (?A \\<times> ?B) = card ?A * card ?B\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} = m", "by (simp add: bij_betw_same_card)"], ["proof (state)\nthis:\n  card {e \\<in> s. e Col = x} = m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {e \\<in> s. e Col = x} = m\n\ngoal (1 subgoal):\n 1. card {e Num |e. e \\<in> s \\<and> e Col = x} = m", "moreover"], ["proof (state)\nthis:\n  card {e \\<in> s. e Col = x} = m\n\ngoal (1 subgoal):\n 1. card {e Num |e. e \\<in> s \\<and> e Col = x} = m", "have \"card {e\\<in>s. e Col = x} = card {e Num |e. e \\<in> s \\<and> e Col = x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "have \"inj_on col_num s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on col_num s", "using assms latin_rect_def[of s m n] partial_latin_square_def[of s n]"], ["proof (prove)\nusing this:\n  latin_rect s m n\n  x < n\n  latin_rect s m n \\<equiv>\n  m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  bij_betw row_col s ({0..<m} \\<times> {0..<n}) \\<and>\n  bij_betw num_row s ({0..<n} \\<times> {0..<m})\n  partial_latin_square s n \\<equiv>\n  (\\<forall>t. inj_on (without t) s) \\<and>\n  (\\<forall>e\\<in>s. \\<forall>t. e t < n)\n\ngoal (1 subgoal):\n 1. inj_on col_num s", "by blast"], ["proof (state)\nthis:\n  inj_on col_num s\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "then"], ["proof (chain)\npicking this:\n  inj_on col_num s", "have \"inj_on col_num {e\\<in>s. e Col = x}\""], ["proof (prove)\nusing this:\n  inj_on col_num s\n\ngoal (1 subgoal):\n 1. inj_on col_num {e \\<in> s. e Col = x}", "by (metis (mono_tags, lifting) inj_onD inj_onI mem_Collect_eq)"], ["proof (state)\nthis:\n  inj_on col_num {e \\<in> s. e Col = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "then"], ["proof (chain)\npicking this:\n  inj_on col_num {e \\<in> s. e Col = x}", "have \"inj_on (\\<lambda>e. e Num) {e\\<in>s. e Col = x}\""], ["proof (prove)\nusing this:\n  inj_on col_num {e \\<in> s. e Col = x}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>e. e Num) {e \\<in> s. e Col = x}", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{e \\<in> s. e Col = x}.\n     \\<forall>y\\<in>{e \\<in> s. e Col = x}.\n        col_num xa = col_num y \\<longrightarrow> xa = y\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{e \\<in> s. e Col = x}.\n       \\<forall>y\\<in>{e \\<in> s. e Col = x}.\n          xa Num = y Num \\<longrightarrow> xa = y", "using without_def"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{e \\<in> s. e Col = x}.\n     \\<forall>y\\<in>{e \\<in> s. e Col = x}.\n        col_num xa = col_num y \\<longrightarrow> xa = y\n  without ?t \\<equiv> \\<lambda>e. (e (next ?t), e (next (next ?t)))\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{e \\<in> s. e Col = x}.\n       \\<forall>y\\<in>{e \\<in> s. e Col = x}.\n          xa Num = y Num \\<longrightarrow> xa = y", "by auto"], ["proof (state)\nthis:\n  inj_on (\\<lambda>e. e Num) {e \\<in> s. e Col = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "moreover"], ["proof (state)\nthis:\n  inj_on (\\<lambda>e. e Num) {e \\<in> s. e Col = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "have \"(\\<lambda>e. e Num) ` {e\\<in>s. e Col = x} = {e Num |e. e \\<in> s \\<and> e Col = x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>e. e Num) ` {e \\<in> s. e Col = x} =\n    {e Num |e. e \\<in> s \\<and> e Col = x}", "by (rule subset_antisym) blast+"], ["proof (state)\nthis:\n  (\\<lambda>e. e Num) ` {e \\<in> s. e Col = x} =\n  {e Num |e. e \\<in> s \\<and> e Col = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>e. e Num) {e \\<in> s. e Col = x}\n  (\\<lambda>e. e Num) ` {e \\<in> s. e Col = x} =\n  {e Num |e. e \\<in> s \\<and> e Col = x}", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>e. e Num) {e \\<in> s. e Col = x}\n  (\\<lambda>e. e Num) ` {e \\<in> s. e Col = x} =\n  {e Num |e. e \\<in> s \\<and> e Col = x}\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "using card_image"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>e. e Num) {e \\<in> s. e Col = x}\n  (\\<lambda>e. e Num) ` {e \\<in> s. e Col = x} =\n  {e Num |e. e \\<in> s \\<and> e Col = x}\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card {e \\<in> s. e Col = x} =\n    card {e Num |e. e \\<in> s \\<and> e Col = x}", "by fastforce"], ["proof (state)\nthis:\n  card {e \\<in> s. e Col = x} = card {e Num |e. e \\<in> s \\<and> e Col = x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {e \\<in> s. e Col = x} = card {e Num |e. e \\<in> s \\<and> e Col = x}\n\ngoal (1 subgoal):\n 1. card {e Num |e. e \\<in> s \\<and> e Col = x} = m", "ultimately"], ["proof (chain)\npicking this:\n  card {e \\<in> s. e Col = x} = m\n  card {e \\<in> s. e Col = x} = card {e Num |e. e \\<in> s \\<and> e Col = x}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {e \\<in> s. e Col = x} = m\n  card {e \\<in> s. e Col = x} = card {e Num |e. e \\<in> s \\<and> e Col = x}\n\ngoal (1 subgoal):\n 1. card {e Num |e. e \\<in> s \\<and> e Col = x} = m", "by auto"], ["proof (state)\nthis:\n  card {e Num |e. e \\<in> s \\<and> e Col = x} = m\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finally we prove lemma 1 chapter 27 of \"Das Buch der Beweise\":\\<close>"], ["", "theorem\n  assumes \"latin_rect s (n-m) n\" \"m\\<le>n\"\n  shows \"\\<exists>s'. s\\<subseteq>s' \\<and> latin_square s' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n", "using assms"], ["proof (prove)\nusing this:\n  latin_rect s (n - m) n\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n", "proof (induction m arbitrary:s) \\<comment> \\<open>induction over the number of empty rows\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>latin_rect s (n - 0) n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n\n 2. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "case 0"], ["proof (state)\nthis:\n  latin_rect s (n - 0) n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>latin_rect s (n - 0) n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n\n 2. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "then"], ["proof (chain)\npicking this:\n  latin_rect s (n - 0) n\n  0 \\<le> n", "have \"bij_betw row_col s ({0..<n} \\<times> {0..<n})\""], ["proof (prove)\nusing this:\n  latin_rect s (n - 0) n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<n} \\<times> {0..<n})", "using latin_rect_def"], ["proof (prove)\nusing this:\n  latin_rect s (n - 0) n\n  0 \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n\ngoal (1 subgoal):\n 1. bij_betw row_col s ({0..<n} \\<times> {0..<n})", "by auto"], ["proof (state)\nthis:\n  bij_betw row_col s ({0..<n} \\<times> {0..<n})\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>latin_rect s (n - 0) n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n\n 2. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "then"], ["proof (chain)\npicking this:\n  bij_betw row_col s ({0..<n} \\<times> {0..<n})", "have \"card s = n*n\""], ["proof (prove)\nusing this:\n  bij_betw row_col s ({0..<n} \\<times> {0..<n})\n\ngoal (1 subgoal):\n 1. card s = n * n", "by (simp add:bij_betw_same_card)"], ["proof (state)\nthis:\n  card s = n * n\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>latin_rect s (n - 0) n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n\n 2. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "then"], ["proof (chain)\npicking this:\n  card s = n * n", "show ?case"], ["proof (prove)\nusing this:\n  card s = n * n\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n", "using partial_latin_square_full 0 latin_rect_def"], ["proof (prove)\nusing this:\n  card s = n * n\n  (partial_latin_square ?s ?n \\<and> card ?s = ?n * ?n) = latin_square ?s ?n\n  latin_rect s (n - 0) n\n  0 \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n", "by auto"], ["proof (state)\nthis:\n  \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "case (Suc m)\n\n  \\<comment> \\<open>We use the Hall theorem on the sets $A_j$ of numbers that do not occur in column $j$:\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "let ?not_in_column = \"\\<lambda>j. {0..<n} - {e Num |e. e\\<in>s \\<and> e Col = j}\"\n\n  \\<comment> \\<open>Proof of the hall condition:\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "have \"\\<forall>J\\<subseteq>{0..<n}. card J \\<le> card (\\<Union>j\\<in>J. ?not_in_column j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>J\\<subseteq>{0..<n}.\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "proof (rule allI; rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "fix J"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "assume J_def:\"J\\<subseteq>{0..<n}\""], ["proof (state)\nthis:\n  J \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "have \"\\<forall>j\\<in>J. card (?not_in_column j) = Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>J.\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> J \\<Longrightarrow>\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> J \\<Longrightarrow>\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "assume j_def:\"j\\<in>J\""], ["proof (state)\nthis:\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> J \\<Longrightarrow>\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "have \"{e Num |e. e\\<in>s \\<and> e Col = j} \\<subseteq> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}", "using atLeastLessThan_iff Suc latin_rect_def partial_latin_square_def"], ["proof (prove)\nusing this:\n  (?i \\<in> {?l..<?u}) = (?l \\<le> ?i \\<and> ?i < ?u)\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}", "by auto"], ["proof (state)\nthis:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> J \\<Longrightarrow>\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "moreover"], ["proof (state)\nthis:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> J \\<Longrightarrow>\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "then"], ["proof (chain)\npicking this:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}", "have \"finite {e Num |e. e\\<in>s \\<and> e Col = j}\""], ["proof (prove)\nusing this:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. finite {e Num |e. e \\<in> s \\<and> e Col = j}", "using finite_subset"], ["proof (prove)\nusing this:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite {e Num |e. e \\<in> s \\<and> e Col = j}", "by auto"], ["proof (state)\nthis:\n  finite {e Num |e. e \\<in> s \\<and> e Col = j}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> J \\<Longrightarrow>\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "ultimately"], ["proof (chain)\npicking this:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\n  finite {e Num |e. e \\<in> s \\<and> e Col = j}", "have \"card (?not_in_column j) = card {0..<n} - card {e Num |e. e \\<in> s \\<and> e Col = j}\""], ["proof (prove)\nusing this:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\n  finite {e Num |e. e \\<in> s \\<and> e Col = j}\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) =\n    card {0..<n} - card {e Num |e. e \\<in> s \\<and> e Col = j}", "using card_Diff_subset[of \"{e Num |e. e\\<in>s \\<and> e Col = j}\" \"{0..<n}\"]"], ["proof (prove)\nusing this:\n  {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\n  finite {e Num |e. e \\<in> s \\<and> e Col = j}\n  \\<lbrakk>finite {e Num |e. e \\<in> s \\<and> e Col = j};\n   {e Num |e. e \\<in> s \\<and> e Col = j} \\<subseteq> {0..<n}\\<rbrakk>\n  \\<Longrightarrow> card\n                     ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) =\n                    card {0..<n} -\n                    card {e Num |e. e \\<in> s \\<and> e Col = j}\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) =\n    card {0..<n} - card {e Num |e. e \\<in> s \\<and> e Col = j}", "by auto"], ["proof (state)\nthis:\n  card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) =\n  card {0..<n} - card {e Num |e. e \\<in> s \\<and> e Col = j}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> J \\<Longrightarrow>\n       card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "then"], ["proof (chain)\npicking this:\n  card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) =\n  card {0..<n} - card {e Num |e. e \\<in> s \\<and> e Col = j}", "show \"card(?not_in_column j) = Suc m\""], ["proof (prove)\nusing this:\n  card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) =\n  card {0..<n} - card {e Num |e. e \\<in> s \\<and> e Col = j}\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "using latin_rect_card_num J_def j_def Suc"], ["proof (prove)\nusing this:\n  card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) =\n  card {0..<n} - card {e Num |e. e \\<in> s \\<and> e Col = j}\n  \\<lbrakk>latin_rect ?s ?m ?n; ?x < ?n\\<rbrakk>\n  \\<Longrightarrow> card {e Num |e. e \\<in> ?s \\<and> e Col = ?x} = ?m\n  J \\<subseteq> {0..<n}\n  j \\<in> J\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m", "by auto"], ["proof (state)\nthis:\n  card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j\\<in>J.\n     card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "moreover"], ["proof (state)\nthis:\n  \\<forall>j\\<in>J.\n     card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "have \"\\<forall>j0\\<in>J. \\<forall>x\\<in>?not_in_column j0. card {j \\<in> J. x \\<in> ?not_in_column j} \\<le> Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j0\\<in>J.\n       \\<forall>x\\<in>{0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}.\n          card\n           {j \\<in> J.\n            x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n          \\<le> Suc m", "proof (rule ballI; rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j0 x.\n       \\<lbrakk>j0 \\<in> J;\n        x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {j \\<in> J.\n                           x \\<in> {0..<n} -\n                                   {e Num |e. e \\<in> s \\<and> e Col = j}}\n                         \\<le> Suc m", "fix j0 x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j0 x.\n       \\<lbrakk>j0 \\<in> J;\n        x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {j \\<in> J.\n                           x \\<in> {0..<n} -\n                                   {e Num |e. e \\<in> s \\<and> e Col = j}}\n                         \\<le> Suc m", "assume \"j0 \\<in> J\" \"x \\<in> ?not_in_column j0\""], ["proof (state)\nthis:\n  j0 \\<in> J\n  x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\n\ngoal (1 subgoal):\n 1. \\<And>j0 x.\n       \\<lbrakk>j0 \\<in> J;\n        x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {j \\<in> J.\n                           x \\<in> {0..<n} -\n                                   {e Num |e. e \\<in> s \\<and> e Col = j}}\n                         \\<le> Suc m", "then"], ["proof (chain)\npicking this:\n  j0 \\<in> J\n  x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}", "have \"card ({0..<n} - {e Col|e. e\\<in>s \\<and> e Num = x}) = Suc m\""], ["proof (prove)\nusing this:\n  j0 \\<in> J\n  x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>j0 \\<in> J;\n     x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n    \\<Longrightarrow> card\n                       ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                      Suc m", "have \"card {e Col|e. e\\<in>s \\<and> e Num = x} = n - Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m", "using latin_rect_card_col \\<open>x \\<in> ?not_in_column j0\\<close> Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>latin_rect ?s ?m ?n; ?x < ?n\\<rbrakk>\n  \\<Longrightarrow> card {e Col |e. e \\<in> ?s \\<and> e Num = ?x} = ?m\n  x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m", "by auto"], ["proof (state)\nthis:\n  card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j0 \\<in> J;\n     x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n    \\<Longrightarrow> card\n                       ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                      Suc m", "moreover"], ["proof (state)\nthis:\n  card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j0 \\<in> J;\n     x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n    \\<Longrightarrow> card\n                       ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                      Suc m", "have \"{e Col|e. e\\<in>s \\<and> e Num = x}\\<subseteq>{0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}", "using Suc latin_rect_def partial_latin_square_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n\ngoal (1 subgoal):\n 1. {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}", "by auto"], ["proof (state)\nthis:\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j0 \\<in> J;\n     x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n    \\<Longrightarrow> card\n                       ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                      Suc m", "moreover"], ["proof (state)\nthis:\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j0 \\<in> J;\n     x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n    \\<Longrightarrow> card\n                       ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                      Suc m", "then"], ["proof (chain)\npicking this:\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}", "have \"finite {e Col|e. e\\<in>s \\<and> e Num = x}\""], ["proof (prove)\nusing this:\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. finite {e Col |e. e \\<in> s \\<and> e Num = x}", "using finite_subset"], ["proof (prove)\nusing this:\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite {e Col |e. e \\<in> s \\<and> e Num = x}", "by auto"], ["proof (state)\nthis:\n  finite {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j0 \\<in> J;\n     x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n    \\<Longrightarrow> card\n                       ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                      Suc m", "ultimately"], ["proof (chain)\npicking this:\n  card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n  finite {e Col |e. e \\<in> s \\<and> e Num = x}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n  finite {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m", "using card_Diff_subset[of \"{e Col|e. e\\<in>s \\<and> e Num = x}\" \"{0..<n}\"]"], ["proof (prove)\nusing this:\n  card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n  finite {e Col |e. e \\<in> s \\<and> e Num = x}\n  \\<lbrakk>finite {e Col |e. e \\<in> s \\<and> e Num = x};\n   {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\\<rbrakk>\n  \\<Longrightarrow> card\n                     ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                    card {0..<n} -\n                    card {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m", "using Suc.prems"], ["proof (prove)\nusing this:\n  card {e Col |e. e \\<in> s \\<and> e Num = x} = n - Suc m\n  {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\n  finite {e Col |e. e \\<in> s \\<and> e Num = x}\n  \\<lbrakk>finite {e Col |e. e \\<in> s \\<and> e Num = x};\n   {e Col |e. e \\<in> s \\<and> e Num = x} \\<subseteq> {0..<n}\\<rbrakk>\n  \\<Longrightarrow> card\n                     ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) =\n                    card {0..<n} -\n                    card {e Col |e. e \\<in> s \\<and> e Num = x}\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m", "by auto"], ["proof (state)\nthis:\n  card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m\n\ngoal (1 subgoal):\n 1. \\<And>j0 x.\n       \\<lbrakk>j0 \\<in> J;\n        x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {j \\<in> J.\n                           x \\<in> {0..<n} -\n                                   {e Num |e. e \\<in> s \\<and> e Col = j}}\n                         \\<le> Suc m", "moreover"], ["proof (state)\nthis:\n  card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m\n\ngoal (1 subgoal):\n 1. \\<And>j0 x.\n       \\<lbrakk>j0 \\<in> J;\n        x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {j \\<in> J.\n                           x \\<in> {0..<n} -\n                                   {e Num |e. e \\<in> s \\<and> e Col = j}}\n                         \\<le> Suc m", "have \"{j \\<in> J. x \\<in> ?not_in_column j} \\<subseteq> {0..<n} - {e Col|e. e\\<in>s \\<and> e Num = x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n    \\<subseteq> {0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}", "using Diff_mono J_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?C; ?D \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?A - ?B \\<subseteq> ?C - ?D\n  J \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n    \\<subseteq> {0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}", "using \\<open>x \\<in> ?not_in_column j0\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?C; ?D \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?A - ?B \\<subseteq> ?C - ?D\n  J \\<subseteq> {0..<n}\n  x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\n\ngoal (1 subgoal):\n 1. {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n    \\<subseteq> {0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}", "by blast"], ["proof (state)\nthis:\n  {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n  \\<subseteq> {0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. \\<And>j0 x.\n       \\<lbrakk>j0 \\<in> J;\n        x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}\\<rbrakk>\n       \\<Longrightarrow> card\n                          {j \\<in> J.\n                           x \\<in> {0..<n} -\n                                   {e Num |e. e \\<in> s \\<and> e Col = j}}\n                         \\<le> Suc m", "ultimately"], ["proof (chain)\npicking this:\n  card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m\n  {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n  \\<subseteq> {0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}", "show \"card {j \\<in> J. x \\<in> ?not_in_column j} \\<le> Suc m\""], ["proof (prove)\nusing this:\n  card ({0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}) = Suc m\n  {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n  \\<subseteq> {0..<n} - {e Col |e. e \\<in> s \\<and> e Num = x}\n\ngoal (1 subgoal):\n 1. card\n     {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n    \\<le> Suc m", "by (metis (no_types, lifting) card_mono finite_Diff finite_atLeastLessThan)"], ["proof (state)\nthis:\n  card {j \\<in> J. x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n  \\<le> Suc m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>j0\\<in>J.\n     \\<forall>x\\<in>{0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}.\n        card\n         {j \\<in> J.\n          x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n        \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "moreover"], ["proof (state)\nthis:\n  \\<forall>j0\\<in>J.\n     \\<forall>x\\<in>{0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}.\n        card\n         {j \\<in> J.\n          x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n        \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "have \"finite J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite J", "using J_def finite_subset"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<n}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite J", "by auto"], ["proof (state)\nthis:\n  finite J\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       J \\<subseteq> {0..<n} \\<Longrightarrow>\n       card J\n       \\<le> card\n              (\\<Union>j\\<in>J.\n                  {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>j\\<in>J.\n     card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m\n  \\<forall>j0\\<in>J.\n     \\<forall>x\\<in>{0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}.\n        card\n         {j \\<in> J.\n          x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n        \\<le> Suc m\n  finite J", "show \"card J \\<le> card (\\<Union>j\\<in>J. ?not_in_column j)\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>J.\n     card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m\n  \\<forall>j0\\<in>J.\n     \\<forall>x\\<in>{0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}.\n        card\n         {j \\<in> J.\n          x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n        \\<le> Suc m\n  finite J\n\ngoal (1 subgoal):\n 1. card J\n    \\<le> card\n           (\\<Union>j\\<in>J.\n               {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "using union_limited_replicates[of J ?not_in_column \"Suc m\"]"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>J.\n     card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}) = Suc m\n  \\<forall>j0\\<in>J.\n     \\<forall>x\\<in>{0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j0}.\n        card\n         {j \\<in> J.\n          x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j}}\n        \\<le> Suc m\n  finite J\n  \\<lbrakk>finite J;\n   \\<forall>i\\<in>J.\n      finite ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = i});\n   0 < Suc m;\n   \\<forall>i\\<in>J.\n      card ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = i}) = Suc m;\n   \\<forall>i\\<in>J.\n      \\<forall>x\\<in>{0..<n} - {e Num |e. e \\<in> s \\<and> e Col = i}.\n         card\n          {i \\<in> J.\n           x \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = i}}\n         \\<le> Suc m\\<rbrakk>\n  \\<Longrightarrow> card J\n                    \\<le> card\n                           (\\<Union>i\\<in>J.\n                               {0..<n} -\n                               {e Num |e. e \\<in> s \\<and> e Col = i})\n\ngoal (1 subgoal):\n 1. card J\n    \\<le> card\n           (\\<Union>j\\<in>J.\n               {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "by auto"], ["proof (state)\nthis:\n  card J\n  \\<le> card\n         (\\<Union>j\\<in>J. {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment> \\<open>The Hall theorem gives us a system of distinct representatives, which we can use to fill the next row:\\<close>"], ["proof (state)\nthis:\n  \\<forall>J\\<subseteq>{0..<n}.\n     card J\n     \\<le> card\n            (\\<Union>j\\<in>J.\n                {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "then"], ["proof (chain)\npicking this:\n  \\<forall>J\\<subseteq>{0..<n}.\n     card J\n     \\<le> card\n            (\\<Union>j\\<in>J.\n                {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})", "obtain R where R_def:\"\\<forall>j\\<in>{0..<n}. R j \\<in> ?not_in_column j \\<and> inj_on R {0..<n}\""], ["proof (prove)\nusing this:\n  \\<forall>J\\<subseteq>{0..<n}.\n     card J\n     \\<le> card\n            (\\<Union>j\\<in>J.\n                {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<forall>j\\<in>{0..<n}.\n           R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n           inj_on R {0..<n} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using marriage_HV[of \"{0..<n}\" \"?not_in_column\"]"], ["proof (prove)\nusing this:\n  \\<forall>J\\<subseteq>{0..<n}.\n     card J\n     \\<le> card\n            (\\<Union>j\\<in>J.\n                {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})\n  \\<lbrakk>finite {0..<n};\n   \\<forall>i\\<in>{0..<n}.\n      finite ({0..<n} - {e Num |e. e \\<in> s \\<and> e Col = i});\n   \\<forall>J\\<subseteq>{0..<n}.\n      card J\n      \\<le> card\n             (\\<Union>j\\<in>J.\n                 {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j})\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       (\\<forall>i\\<in>{0..<n}.\n                           R i\n                           \\<in> {0..<n} -\n                                 {e Num |e.\n                                  e \\<in> s \\<and> e Col = i}) \\<and>\n                       inj_on R {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<forall>j\\<in>{0..<n}.\n           R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n           inj_on R {0..<n} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>{0..<n}.\n     R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n     inj_on R {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "define new_row where \"new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\""], ["proof (state)\nthis:\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "define s' where \"s' = s \\<union> new_row\"\n\n  \\<comment> \\<open>s' is now a latin rect with one more row:\\<close>"], ["proof (state)\nthis:\n  s' = s \\<union> new_row\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "have \"latin_rect s' (n-m) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "proof -\n    \\<comment> \\<open>We prove all four criteria specified in the lemma latinrectiff:\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "have \"n-m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n - m \\<le> n", "by auto"], ["proof (state)\nthis:\n  n - m \\<le> n\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "moreover"], ["proof (state)\nthis:\n  n - m \\<le> n\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "have \"partial_latin_square s' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "have \"inj_on (without Col) s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on num_row s'", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>s'.\n       \\<forall>y\\<in>s'. num_row x = num_row y \\<longrightarrow> x = y", "proof (rule ballI; rule ballI; rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; num_row x = num_row y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix e1 e2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; num_row x = num_row y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"e1 \\<in> s'\" \"e2 \\<in> s'\" \"num_row e1 = num_row e2\""], ["proof (state)\nthis:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  num_row e1 = num_row e2\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; num_row x = num_row y\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  num_row e1 = num_row e2", "have \"e1 Num = e2 Num\" \"e1 Row = e2 Row\""], ["proof (prove)\nusing this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  num_row e1 = num_row e2\n\ngoal (1 subgoal):\n 1. e1 Num = e2 Num &&& e1 Row = e2 Row", "using without_def"], ["proof (prove)\nusing this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  num_row e1 = num_row e2\n  without ?t \\<equiv> \\<lambda>e. (e (next ?t), e (next (next ?t)))\n\ngoal (1 subgoal):\n 1. e1 Num = e2 Num &&& e1 Row = e2 Row", "by auto"], ["proof (state)\nthis:\n  e1 Num = e2 Num\n  e1 Row = e2 Row\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; num_row x = num_row y\\<rbrakk>\n       \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  e1 Num = e2 Num\n  e1 Row = e2 Row\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; num_row x = num_row y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"e1 Col = e2 Col\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 Col = e2 Col", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "assume \"e1 Row = n - Suc m\""], ["proof (state)\nthis:\n  e1 Row = n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "then"], ["proof (chain)\npicking this:\n  e1 Row = n - Suc m", "have \"e2 Row = n - Suc m\""], ["proof (prove)\nusing this:\n  e1 Row = n - Suc m\n\ngoal (1 subgoal):\n 1. e2 Row = n - Suc m", "using without_def \\<open>num_row e1 = num_row e2\\<close>"], ["proof (prove)\nusing this:\n  e1 Row = n - Suc m\n  without ?t \\<equiv> \\<lambda>e. (e (next ?t), e (next (next ?t)))\n  num_row e1 = num_row e2\n\ngoal (1 subgoal):\n 1. e2 Row = n - Suc m", "by auto"], ["proof (state)\nthis:\n  e2 Row = n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "have \"\\<forall>e\\<in>s. e Row < n - Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "using Suc latin_rect_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  (?m \\<le> ?n \\<and>\n   partial_latin_square ?s ?n \\<and>\n   card ?s = ?n * ?m \\<and> (\\<forall>e\\<in>?s. e Row < ?m)) =\n  latin_rect ?s ?m ?n\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "by blast"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "then"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>s. e Row < n - Suc m", "have \"e1 \\<in> new_row\" \"e2 \\<in> new_row\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (1 subgoal):\n 1. e1 \\<in> new_row &&& e2 \\<in> new_row", "using s'_def \\<open>e1 \\<in> s'\\<close> \\<open>e2 \\<in> s'\\<close> \\<open>e1 Row = n - Suc m\\<close> \\<open>e2 Row = n - Suc m\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n  s' = s \\<union> new_row\n  e1 \\<in> s'\n  e2 \\<in> s'\n  e1 Row = n - Suc m\n  e2 Row = n - Suc m\n\ngoal (1 subgoal):\n 1. e1 \\<in> new_row &&& e2 \\<in> new_row", "by auto"], ["proof (state)\nthis:\n  e1 \\<in> new_row\n  e2 \\<in> new_row\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "then"], ["proof (chain)\npicking this:\n  e1 \\<in> new_row\n  e2 \\<in> new_row", "have \"e1 Num = R (e1 Col)\" \"e2 Num = R (e2 Col)\""], ["proof (prove)\nusing this:\n  e1 \\<in> new_row\n  e2 \\<in> new_row\n\ngoal (1 subgoal):\n 1. e1 Num = R (e1 Col) &&& e2 Num = R (e2 Col)", "using new_row_def"], ["proof (prove)\nusing this:\n  e1 \\<in> new_row\n  e2 \\<in> new_row\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n\ngoal (1 subgoal):\n 1. e1 Num = R (e1 Col) &&& e2 Num = R (e2 Col)", "by auto"], ["proof (state)\nthis:\n  e1 Num = R (e1 Col)\n  e2 Num = R (e2 Col)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "then"], ["proof (chain)\npicking this:\n  e1 Num = R (e1 Col)\n  e2 Num = R (e2 Col)", "have \"R (e1 Col) = R (e2 Col)\""], ["proof (prove)\nusing this:\n  e1 Num = R (e1 Col)\n  e2 Num = R (e2 Col)\n\ngoal (1 subgoal):\n 1. R (e1 Col) = R (e2 Col)", "using \\<open>e1 Num = e2 Num\\<close>"], ["proof (prove)\nusing this:\n  e1 Num = R (e1 Col)\n  e2 Num = R (e2 Col)\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. R (e1 Col) = R (e2 Col)", "by auto"], ["proof (state)\nthis:\n  R (e1 Col) = R (e2 Col)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "moreover"], ["proof (state)\nthis:\n  R (e1 Col) = R (e2 Col)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "have \"e1 Col < n\" \"e2 Col < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 Col < n &&& e2 Col < n", "using \\<open>e1 \\<in> new_row\\<close> \\<open>e2 \\<in> new_row\\<close> new_row_def"], ["proof (prove)\nusing this:\n  e1 \\<in> new_row\n  e2 \\<in> new_row\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n\ngoal (1 subgoal):\n 1. e1 Col < n &&& e2 Col < n", "by auto"], ["proof (state)\nthis:\n  e1 Col < n\n  e2 Col < n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Col = e2 Col\n 2. \\<not> ?P \\<Longrightarrow> e1 Col = e2 Col", "ultimately"], ["proof (chain)\npicking this:\n  R (e1 Col) = R (e2 Col)\n  e1 Col < n\n  e2 Col < n", "show \"e1 Col = e2 Col\""], ["proof (prove)\nusing this:\n  R (e1 Col) = R (e2 Col)\n  e1 Col < n\n  e2 Col < n\n\ngoal (1 subgoal):\n 1. e1 Col = e2 Col", "using R_def inj_on_def"], ["proof (prove)\nusing this:\n  R (e1 Col) = R (e2 Col)\n  e1 Col < n\n  e2 Col < n\n  \\<forall>j\\<in>{0..<n}.\n     R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n     inj_on R {0..<n}\n  inj_on ?f ?A =\n  (\\<forall>x\\<in>?A.\n      \\<forall>y\\<in>?A. ?f x = ?f y \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. e1 Col = e2 Col", "by (metis (mono_tags, lifting) atLeast0LessThan lessThan_iff)"], ["proof (state)\nthis:\n  e1 Col = e2 Col\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Col = e2 Col", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Col = e2 Col", "assume \"e1 Row \\<noteq> n - Suc m\""], ["proof (state)\nthis:\n  e1 Row \\<noteq> n - Suc m\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Col = e2 Col", "then"], ["proof (chain)\npicking this:\n  e1 Row \\<noteq> n - Suc m", "have \"e1\\<in>s\" \"e2\\<in>s\""], ["proof (prove)\nusing this:\n  e1 Row \\<noteq> n - Suc m\n\ngoal (1 subgoal):\n 1. e1 \\<in> s &&& e2 \\<in> s", "using new_row_def s'_def \\<open>e1\\<in>s'\\<close> \\<open>e2\\<in>s'\\<close> \\<open>e1 Row = e2 Row\\<close>"], ["proof (prove)\nusing this:\n  e1 Row \\<noteq> n - Suc m\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  s' = s \\<union> new_row\n  e1 \\<in> s'\n  e2 \\<in> s'\n  e1 Row = e2 Row\n\ngoal (1 subgoal):\n 1. e1 \\<in> s &&& e2 \\<in> s", "by auto"], ["proof (state)\nthis:\n  e1 \\<in> s\n  e2 \\<in> s\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Col = e2 Col", "then"], ["proof (chain)\npicking this:\n  e1 \\<in> s\n  e2 \\<in> s", "show \"e1 Col = e2 Col\""], ["proof (prove)\nusing this:\n  e1 \\<in> s\n  e2 \\<in> s\n\ngoal (1 subgoal):\n 1. e1 Col = e2 Col", "using Suc latin_rect_def bij_betw_def"], ["proof (prove)\nusing this:\n  e1 \\<in> s\n  e2 \\<in> s\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n\ngoal (1 subgoal):\n 1. e1 Col = e2 Col", "by (metis \\<open>num_row e1 = num_row e2\\<close> inj_onD)"], ["proof (state)\nthis:\n  e1 Col = e2 Col\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e1 Col = e2 Col\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; num_row x = num_row y\\<rbrakk>\n       \\<Longrightarrow> x = y", "ultimately"], ["proof (chain)\npicking this:\n  e1 Num = e2 Num\n  e1 Row = e2 Row\n  e1 Col = e2 Col", "show \"e1=e2\""], ["proof (prove)\nusing this:\n  e1 Num = e2 Num\n  e1 Row = e2 Row\n  e1 Col = e2 Col\n\ngoal (1 subgoal):\n 1. e1 = e2", "using latin_type.induct[of \"\\<lambda>t. e1 t = e2 t\"]"], ["proof (prove)\nusing this:\n  e1 Num = e2 Num\n  e1 Row = e2 Row\n  e1 Col = e2 Col\n  \\<lbrakk>e1 Row = e2 Row; e1 Col = e2 Col; e1 Num = e2 Num\\<rbrakk>\n  \\<Longrightarrow> e1 ?latin_type = e2 ?latin_type\n\ngoal (1 subgoal):\n 1. e1 = e2", "by auto"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on num_row s'\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "moreover"], ["proof (state)\nthis:\n  inj_on num_row s'\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "have \"inj_on (without Row) s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on col_num s'", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>s'.\n       \\<forall>y\\<in>s'. col_num x = col_num y \\<longrightarrow> x = y", "proof (rule ballI; rule ballI; rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; col_num x = col_num y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix e1 e2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; col_num x = col_num y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"e1 \\<in> s'\" \"e2 \\<in> s'\" \"col_num e1 = col_num e2\""], ["proof (state)\nthis:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  col_num e1 = col_num e2\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; col_num x = col_num y\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  col_num e1 = col_num e2", "have \"e1 Col = e2 Col\" \"e1 Num = e2 Num\""], ["proof (prove)\nusing this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  col_num e1 = col_num e2\n\ngoal (1 subgoal):\n 1. e1 Col = e2 Col &&& e1 Num = e2 Num", "using without_def"], ["proof (prove)\nusing this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  col_num e1 = col_num e2\n  without ?t \\<equiv> \\<lambda>e. (e (next ?t), e (next (next ?t)))\n\ngoal (1 subgoal):\n 1. e1 Col = e2 Col &&& e1 Num = e2 Num", "by auto"], ["proof (state)\nthis:\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; col_num x = col_num y\\<rbrakk>\n       \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; col_num x = col_num y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"e1 Row = e2 Row\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 Row = e2 Row", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Row = e2 Row\n 2. \\<not> ?P \\<Longrightarrow> e1 Row = e2 Row", "assume \"e1 Row = n - Suc m\""], ["proof (state)\nthis:\n  e1 Row = n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Row = e2 Row\n 2. \\<not> ?P \\<Longrightarrow> e1 Row = e2 Row", "have \"\\<forall>e\\<in>s. e Row < n - Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "using Suc latin_rect_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  (?m \\<le> ?n \\<and>\n   partial_latin_square ?s ?n \\<and>\n   card ?s = ?n * ?m \\<and> (\\<forall>e\\<in>?s. e Row < ?m)) =\n  latin_rect ?s ?m ?n\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "by blast"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Row = e2 Row\n 2. \\<not> ?P \\<Longrightarrow> e1 Row = e2 Row", "then"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>s. e Row < n - Suc m", "have \"e2 Num \\<in> ?not_in_column (e2 Col)\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (1 subgoal):\n 1. e2 Num \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}", "using R_def new_row_def \\<open>e1 Col = e2 Col\\<close> \\<open>e1 Num = e2 Num\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n  \\<forall>j\\<in>{0..<n}.\n     R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n     inj_on R {0..<n}\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. e2 Num \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}", "using s'_def \\<open>e1 \\<in> s'\\<close> \\<open>e1 Row = n - Suc m\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n  \\<forall>j\\<in>{0..<n}.\n     R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n     inj_on R {0..<n}\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n  s' = s \\<union> new_row\n  e1 \\<in> s'\n  e1 Row = n - Suc m\n\ngoal (1 subgoal):\n 1. e2 Num \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}", "by auto"], ["proof (state)\nthis:\n  e2 Num \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Row = e2 Row\n 2. \\<not> ?P \\<Longrightarrow> e1 Row = e2 Row", "then"], ["proof (chain)\npicking this:\n  e2 Num \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}", "show \"e1 Row = e2 Row\""], ["proof (prove)\nusing this:\n  e2 Num \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}\n\ngoal (1 subgoal):\n 1. e1 Row = e2 Row", "using new_row_def \\<open>e1 Row = n - Suc m\\<close>  s'_def \\<open>e2 \\<in> s'\\<close>"], ["proof (prove)\nusing this:\n  e2 Num \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  e1 Row = n - Suc m\n  s' = s \\<union> new_row\n  e2 \\<in> s'\n\ngoal (1 subgoal):\n 1. e1 Row = e2 Row", "by auto"], ["proof (state)\nthis:\n  e1 Row = e2 Row\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "assume \"e1 Row \\<noteq> n - Suc m\""], ["proof (state)\nthis:\n  e1 Row \\<noteq> n - Suc m\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "then"], ["proof (chain)\npicking this:\n  e1 Row \\<noteq> n - Suc m", "have \"e1\\<in>s\""], ["proof (prove)\nusing this:\n  e1 Row \\<noteq> n - Suc m\n\ngoal (1 subgoal):\n 1. e1 \\<in> s", "using new_row_def s'_def \\<open>e1\\<in>s'\\<close>"], ["proof (prove)\nusing this:\n  e1 Row \\<noteq> n - Suc m\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  s' = s \\<union> new_row\n  e1 \\<in> s'\n\ngoal (1 subgoal):\n 1. e1 \\<in> s", "by auto"], ["proof (state)\nthis:\n  e1 \\<in> s\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "then"], ["proof (chain)\npicking this:\n  e1 \\<in> s", "have \"e2 Num \\<notin> ?not_in_column (e2 Col)\""], ["proof (prove)\nusing this:\n  e1 \\<in> s\n\ngoal (1 subgoal):\n 1. e2 Num \\<notin> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}", "using \\<open>e1 Col = e2 Col\\<close> \\<open>e1 Num = e2 Num\\<close>"], ["proof (prove)\nusing this:\n  e1 \\<in> s\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. e2 Num \\<notin> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}", "by auto"], ["proof (state)\nthis:\n  e2 Num \\<notin> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "then"], ["proof (chain)\npicking this:\n  e2 Num \\<notin> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}", "have \"e2\\<in>s\""], ["proof (prove)\nusing this:\n  e2 Num \\<notin> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}\n\ngoal (1 subgoal):\n 1. e2 \\<in> s", "using new_row_def s'_def \\<open>e2\\<in>s'\\<close> R_def"], ["proof (prove)\nusing this:\n  e2 Num \\<notin> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = e2 Col}\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  s' = s \\<union> new_row\n  e2 \\<in> s'\n  \\<forall>j\\<in>{0..<n}.\n     R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n     inj_on R {0..<n}\n\ngoal (1 subgoal):\n 1. e2 \\<in> s", "by auto"], ["proof (state)\nthis:\n  e2 \\<in> s\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "moreover"], ["proof (state)\nthis:\n  e2 \\<in> s\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "have \"inj_on col_num s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on col_num s", "using Suc.prems latin_rect_def[of s \"(n - Suc m)\" n] partial_latin_square_def[of s n]"], ["proof (prove)\nusing this:\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  latin_rect s (n - Suc m) n \\<equiv>\n  n - Suc m \\<le> n \\<and>\n  partial_latin_square s n \\<and>\n  bij_betw row_col s ({0..<n - Suc m} \\<times> {0..<n}) \\<and>\n  bij_betw num_row s ({0..<n} \\<times> {0..<n - Suc m})\n  partial_latin_square s n \\<equiv>\n  (\\<forall>t. inj_on (without t) s) \\<and>\n  (\\<forall>e\\<in>s. \\<forall>t. e t < n)\n\ngoal (1 subgoal):\n 1. inj_on col_num s", "by blast"], ["proof (state)\nthis:\n  inj_on col_num s\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Row = e2 Row", "ultimately"], ["proof (chain)\npicking this:\n  e2 \\<in> s\n  inj_on col_num s", "show \"e1 Row = e2 Row\""], ["proof (prove)\nusing this:\n  e2 \\<in> s\n  inj_on col_num s\n\ngoal (1 subgoal):\n 1. e1 Row = e2 Row", "using Suc latin_rect_def"], ["proof (prove)\nusing this:\n  e2 \\<in> s\n  inj_on col_num s\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n\ngoal (1 subgoal):\n 1. e1 Row = e2 Row", "by (metis \\<open>col_num e1 = col_num e2\\<close> \\<open>e1 \\<in> s\\<close> inj_onD)"], ["proof (state)\nthis:\n  e1 Row = e2 Row\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e1 Row = e2 Row\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; col_num x = col_num y\\<rbrakk>\n       \\<Longrightarrow> x = y", "ultimately"], ["proof (chain)\npicking this:\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n  e1 Row = e2 Row", "show \"e1=e2\""], ["proof (prove)\nusing this:\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n  e1 Row = e2 Row\n\ngoal (1 subgoal):\n 1. e1 = e2", "using latin_type.induct[of \"\\<lambda>t. e1 t = e2 t\"]"], ["proof (prove)\nusing this:\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n  e1 Row = e2 Row\n  \\<lbrakk>e1 Row = e2 Row; e1 Col = e2 Col; e1 Num = e2 Num\\<rbrakk>\n  \\<Longrightarrow> e1 ?latin_type = e2 ?latin_type\n\ngoal (1 subgoal):\n 1. e1 = e2", "by auto"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on col_num s'\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "moreover"], ["proof (state)\nthis:\n  inj_on col_num s'\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "have \"inj_on (without Num) s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on row_col s'", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>s'.\n       \\<forall>y\\<in>s'. row_col x = row_col y \\<longrightarrow> x = y", "proof (rule ballI; rule ballI; rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; row_col x = row_col y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix e1 e2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; row_col x = row_col y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"e1 \\<in> s'\" \"e2 \\<in> s'\" \"row_col e1 = row_col e2\""], ["proof (state)\nthis:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  row_col e1 = row_col e2\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; row_col x = row_col y\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  row_col e1 = row_col e2", "have \"e1 Row = e2 Row\" \"e1 Col = e2 Col\""], ["proof (prove)\nusing this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  row_col e1 = row_col e2\n\ngoal (1 subgoal):\n 1. e1 Row = e2 Row &&& e1 Col = e2 Col", "using without_def"], ["proof (prove)\nusing this:\n  e1 \\<in> s'\n  e2 \\<in> s'\n  row_col e1 = row_col e2\n  without ?t \\<equiv> \\<lambda>e. (e (next ?t), e (next (next ?t)))\n\ngoal (1 subgoal):\n 1. e1 Row = e2 Row &&& e1 Col = e2 Col", "by auto"], ["proof (state)\nthis:\n  e1 Row = e2 Row\n  e1 Col = e2 Col\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; row_col x = row_col y\\<rbrakk>\n       \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  e1 Row = e2 Row\n  e1 Col = e2 Col\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; row_col x = row_col y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"e1 Num = e2 Num\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 Num = e2 Num", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Num = e2 Num\n 2. \\<not> ?P \\<Longrightarrow> e1 Num = e2 Num", "assume \"e1 Row = n - Suc m\""], ["proof (state)\nthis:\n  e1 Row = n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Num = e2 Num\n 2. \\<not> ?P \\<Longrightarrow> e1 Num = e2 Num", "then"], ["proof (chain)\npicking this:\n  e1 Row = n - Suc m", "have \"e2 Row = n - Suc m\""], ["proof (prove)\nusing this:\n  e1 Row = n - Suc m\n\ngoal (1 subgoal):\n 1. e2 Row = n - Suc m", "using without_def \\<open>row_col e1 = row_col e2\\<close>"], ["proof (prove)\nusing this:\n  e1 Row = n - Suc m\n  without ?t \\<equiv> \\<lambda>e. (e (next ?t), e (next (next ?t)))\n  row_col e1 = row_col e2\n\ngoal (1 subgoal):\n 1. e2 Row = n - Suc m", "by auto"], ["proof (state)\nthis:\n  e2 Row = n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Num = e2 Num\n 2. \\<not> ?P \\<Longrightarrow> e1 Num = e2 Num", "have \"\\<forall>e\\<in>s. e Row < n - Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "using Suc latin_rect_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  (?m \\<le> ?n \\<and>\n   partial_latin_square ?s ?n \\<and>\n   card ?s = ?n * ?m \\<and> (\\<forall>e\\<in>?s. e Row < ?m)) =\n  latin_rect ?s ?m ?n\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "by blast"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> e1 Num = e2 Num\n 2. \\<not> ?P \\<Longrightarrow> e1 Num = e2 Num", "then"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>s. e Row < n - Suc m", "show \"e1 Num = e2 Num\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (1 subgoal):\n 1. e1 Num = e2 Num", "using \\<open>e1 Col = e2 Col\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n  e1 Col = e2 Col\n\ngoal (1 subgoal):\n 1. e1 Num = e2 Num", "using new_row_def s'_def \\<open>e1 \\<in> s'\\<close> \\<open>e2 \\<in> s'\\<close> \\<open>e1 Row = n - Suc m\\<close> \\<open>e2 Row = n - Suc m\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n  e1 Col = e2 Col\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  s' = s \\<union> new_row\n  e1 \\<in> s'\n  e2 \\<in> s'\n  e1 Row = n - Suc m\n  e2 Row = n - Suc m\n\ngoal (1 subgoal):\n 1. e1 Num = e2 Num", "by auto"], ["proof (state)\nthis:\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Num = e2 Num", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Num = e2 Num", "assume \"e1 Row \\<noteq> n - Suc m\""], ["proof (state)\nthis:\n  e1 Row \\<noteq> n - Suc m\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Num = e2 Num", "then"], ["proof (chain)\npicking this:\n  e1 Row \\<noteq> n - Suc m", "have \"e1\\<in>s\" \"e2\\<in>s\""], ["proof (prove)\nusing this:\n  e1 Row \\<noteq> n - Suc m\n\ngoal (1 subgoal):\n 1. e1 \\<in> s &&& e2 \\<in> s", "using new_row_def s'_def \\<open>e1\\<in>s'\\<close> \\<open>e2\\<in>s'\\<close> \\<open>e1 Row = e2 Row\\<close>"], ["proof (prove)\nusing this:\n  e1 Row \\<noteq> n - Suc m\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  s' = s \\<union> new_row\n  e1 \\<in> s'\n  e2 \\<in> s'\n  e1 Row = e2 Row\n\ngoal (1 subgoal):\n 1. e1 \\<in> s &&& e2 \\<in> s", "by auto"], ["proof (state)\nthis:\n  e1 \\<in> s\n  e2 \\<in> s\n\ngoal (1 subgoal):\n 1. e1 Row \\<noteq> n - Suc m \\<Longrightarrow> e1 Num = e2 Num", "then"], ["proof (chain)\npicking this:\n  e1 \\<in> s\n  e2 \\<in> s", "show \"e1 Num = e2 Num\""], ["proof (prove)\nusing this:\n  e1 \\<in> s\n  e2 \\<in> s\n\ngoal (1 subgoal):\n 1. e1 Num = e2 Num", "using Suc latin_rect_def bij_betw_def"], ["proof (prove)\nusing this:\n  e1 \\<in> s\n  e2 \\<in> s\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n\ngoal (1 subgoal):\n 1. e1 Num = e2 Num", "by (metis \\<open>row_col e1 = row_col e2\\<close> inj_onD)"], ["proof (state)\nthis:\n  e1 Num = e2 Num\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> s'; y \\<in> s'; row_col x = row_col y\\<rbrakk>\n       \\<Longrightarrow> x = y", "ultimately"], ["proof (chain)\npicking this:\n  e1 Row = e2 Row\n  e1 Col = e2 Col\n  e1 Num = e2 Num", "show \"e1=e2\""], ["proof (prove)\nusing this:\n  e1 Row = e2 Row\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n\ngoal (1 subgoal):\n 1. e1 = e2", "using latin_type.induct[of \"\\<lambda>t. e1 t = e2 t\"]"], ["proof (prove)\nusing this:\n  e1 Row = e2 Row\n  e1 Col = e2 Col\n  e1 Num = e2 Num\n  \\<lbrakk>e1 Row = e2 Row; e1 Col = e2 Col; e1 Num = e2 Num\\<rbrakk>\n  \\<Longrightarrow> e1 ?latin_type = e2 ?latin_type\n\ngoal (1 subgoal):\n 1. e1 = e2", "by auto"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on row_col s'\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "moreover"], ["proof (state)\nthis:\n  inj_on row_col s'\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "have \"\\<forall>e\\<in>s'. \\<forall>t. e t < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s'. \\<forall>t. e t < n", "proof (rule ballI; rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e t. e \\<in> s' \\<Longrightarrow> e t < n", "fix e t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e t. e \\<in> s' \\<Longrightarrow> e t < n", "assume \"e\\<in>s'\""], ["proof (state)\nthis:\n  e \\<in> s'\n\ngoal (1 subgoal):\n 1. \\<And>e t. e \\<in> s' \\<Longrightarrow> e t < n", "then"], ["proof (chain)\npicking this:\n  e \\<in> s'", "show \"e t < n\""], ["proof (prove)\nusing this:\n  e \\<in> s'\n\ngoal (1 subgoal):\n 1. e t < n", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>e \\<in> s'; ?P1\\<rbrakk> \\<Longrightarrow> e t < n\n 2. \\<lbrakk>e \\<in> s'; \\<not> ?P1\\<rbrakk> \\<Longrightarrow> e t < n", "assume \"e\\<in>new_row\""], ["proof (state)\nthis:\n  e \\<in> new_row\n\ngoal (2 subgoals):\n 1. \\<lbrakk>e \\<in> s'; ?P1\\<rbrakk> \\<Longrightarrow> e t < n\n 2. \\<lbrakk>e \\<in> s'; \\<not> ?P1\\<rbrakk> \\<Longrightarrow> e t < n", "then"], ["proof (chain)\npicking this:\n  e \\<in> new_row", "show ?thesis"], ["proof (prove)\nusing this:\n  e \\<in> new_row\n\ngoal (1 subgoal):\n 1. e t < n", "using new_row_def R_def"], ["proof (prove)\nusing this:\n  e \\<in> new_row\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  \\<forall>j\\<in>{0..<n}.\n     R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n     inj_on R {0..<n}\n\ngoal (1 subgoal):\n 1. e t < n", "by (induction t) auto"], ["proof (state)\nthis:\n  e t < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n    \\<Longrightarrow> e t < n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n    \\<Longrightarrow> e t < n", "assume \"e\\<notin>new_row\""], ["proof (state)\nthis:\n  e \\<notin> new_row\n\ngoal (1 subgoal):\n 1. \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n    \\<Longrightarrow> e t < n", "then"], ["proof (chain)\npicking this:\n  e \\<notin> new_row", "show ?thesis"], ["proof (prove)\nusing this:\n  e \\<notin> new_row\n\ngoal (1 subgoal):\n 1. e t < n", "using s'_def \\<open>e\\<in>s'\\<close> latin_rect_def partial_latin_square_def Suc"], ["proof (prove)\nusing this:\n  e \\<notin> new_row\n  s' = s \\<union> new_row\n  e \\<in> s'\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n  partial_latin_square ?s ?n \\<equiv>\n  (\\<forall>t. inj_on (without t) ?s) \\<and>\n  (\\<forall>e\\<in>?s. \\<forall>t. e t < ?n)\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. e t < n", "by auto"], ["proof (state)\nthis:\n  e t < n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e t < n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s'. \\<forall>t. e t < n\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "ultimately"], ["proof (chain)\npicking this:\n  inj_on num_row s'\n  inj_on col_num s'\n  inj_on row_col s'\n  \\<forall>e\\<in>s'. \\<forall>t. e t < n", "show \"partial_latin_square s' n\""], ["proof (prove)\nusing this:\n  inj_on num_row s'\n  inj_on col_num s'\n  inj_on row_col s'\n  \\<forall>e\\<in>s'. \\<forall>t. e t < n\n\ngoal (1 subgoal):\n 1. partial_latin_square s' n", "unfolding partial_latin_square_def"], ["proof (prove)\nusing this:\n  inj_on num_row s'\n  inj_on col_num s'\n  inj_on row_col s'\n  \\<forall>e\\<in>s'. \\<forall>t. e t < n\n\ngoal (1 subgoal):\n 1. (\\<forall>t. inj_on (without t) s') \\<and>\n    (\\<forall>e\\<in>s'. \\<forall>t. e t < n)", "using latin_type.induct[of \"\\<lambda>t. inj_on (without t) s'\"]"], ["proof (prove)\nusing this:\n  inj_on num_row s'\n  inj_on col_num s'\n  inj_on row_col s'\n  \\<forall>e\\<in>s'. \\<forall>t. e t < n\n  \\<lbrakk>inj_on col_num s'; inj_on num_row s'; inj_on row_col s'\\<rbrakk>\n  \\<Longrightarrow> inj_on (without ?latin_type) s'\n\ngoal (1 subgoal):\n 1. (\\<forall>t. inj_on (without t) s') \\<and>\n    (\\<forall>e\\<in>s'. \\<forall>t. e t < n)", "by auto"], ["proof (state)\nthis:\n  partial_latin_square s' n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  partial_latin_square s' n\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "moreover"], ["proof (state)\nthis:\n  partial_latin_square s' n\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "have \"card s' = n * (n - m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "have card_s:\"card s = n * (n - Suc m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card s = n * (n - Suc m)", "using latin_rect_iff Suc"], ["proof (prove)\nusing this:\n  (?m \\<le> ?n \\<and>\n   partial_latin_square ?s ?n \\<and>\n   card ?s = ?n * ?m \\<and> (\\<forall>e\\<in>?s. e Row < ?m)) =\n  latin_rect ?s ?m ?n\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. card s = n * (n - Suc m)", "by auto"], ["proof (state)\nthis:\n  card s = n * (n - Suc m)\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "have card_new_row:\"card new_row = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card new_row = n", "unfolding new_row_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}) = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card ((\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}) = n", "have \"inj_on (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) {0..<n}", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{0..<n}.\n       \\<forall>y\\<in>{0..<n}.\n          rec_latin_type (n - Suc m) x (R x) =\n          rec_latin_type (n - Suc m) y (R y) \\<longrightarrow>\n          x = y", "proof (rule ballI; rule ballI; rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {0..<n}; y \\<in> {0..<n};\n        rec_latin_type (n - Suc m) x (R x) =\n        rec_latin_type (n - Suc m) y (R y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix j1 j2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {0..<n}; y \\<in> {0..<n};\n        rec_latin_type (n - Suc m) x (R x) =\n        rec_latin_type (n - Suc m) y (R y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"j1 \\<in> {0..<n}\" \"j2 \\<in> {0..<n}\" \"rec_latin_type (n - Suc m) j1 (R j1) = rec_latin_type (n - Suc m) j2 (R j2)\""], ["proof (state)\nthis:\n  j1 \\<in> {0..<n}\n  j2 \\<in> {0..<n}\n  rec_latin_type (n - Suc m) j1 (R j1) =\n  rec_latin_type (n - Suc m) j2 (R j2)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {0..<n}; y \\<in> {0..<n};\n        rec_latin_type (n - Suc m) x (R x) =\n        rec_latin_type (n - Suc m) y (R y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  j1 \\<in> {0..<n}\n  j2 \\<in> {0..<n}\n  rec_latin_type (n - Suc m) j1 (R j1) =\n  rec_latin_type (n - Suc m) j2 (R j2)", "show  \"j1 = j2\""], ["proof (prove)\nusing this:\n  j1 \\<in> {0..<n}\n  j2 \\<in> {0..<n}\n  rec_latin_type (n - Suc m) j1 (R j1) =\n  rec_latin_type (n - Suc m) j2 (R j2)\n\ngoal (1 subgoal):\n 1. j1 = j2", "using latin_type.rec(2)[of \"(n - Suc m)\" j1 \"R j1\"] latin_type.rec(2)[of _ j2 _]"], ["proof (prove)\nusing this:\n  j1 \\<in> {0..<n}\n  j2 \\<in> {0..<n}\n  rec_latin_type (n - Suc m) j1 (R j1) =\n  rec_latin_type (n - Suc m) j2 (R j2)\n  rec_latin_type (n - Suc m) j1 (R j1) Col = j1\n  rec_latin_type ?f1.0 j2 ?f3.0 Col = j2\n\ngoal (1 subgoal):\n 1. j1 = j2", "by auto"], ["proof (state)\nthis:\n  j1 = j2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) {0..<n}\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}) = n", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) {0..<n}", "show \"card ((\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}) = n\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) {0..<n}\n\ngoal (1 subgoal):\n 1. card ((\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}) = n", "by (simp add: card_image)"], ["proof (state)\nthis:\n  card ((\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}) = n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card new_row = n\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "have \"s \\<inter> new_row = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<inter> new_row = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<inter> new_row = {}", "have \"\\<forall>e\\<in>s. e Row < n - Suc m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "using Suc latin_rect_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  (?m \\<le> ?n \\<and>\n   partial_latin_square ?s ?n \\<and>\n   card ?s = ?n * ?m \\<and> (\\<forall>e\\<in>?s. e Row < ?m)) =\n  latin_rect ?s ?m ?n\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s. e Row < n - Suc m", "by blast"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (1 subgoal):\n 1. s \\<inter> new_row = {}", "then"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>s. e Row < n - Suc m", "have \"\\<forall>e \\<in> new_row. e \\<notin> s\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>new_row. e \\<notin> s", "using new_row_def"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>s. e Row < n - Suc m\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>new_row. e \\<notin> s", "by auto"], ["proof (state)\nthis:\n  \\<forall>e\\<in>new_row. e \\<notin> s\n\ngoal (1 subgoal):\n 1. s \\<inter> new_row = {}", "then"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>new_row. e \\<notin> s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>new_row. e \\<notin> s\n\ngoal (1 subgoal):\n 1. s \\<inter> new_row = {}", "by blast"], ["proof (state)\nthis:\n  s \\<inter> new_row = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<inter> new_row = {}\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "moreover"], ["proof (state)\nthis:\n  s \\<inter> new_row = {}\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "have \"finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s", "using Suc latin_rect_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  latin_rect ?s ?m ?n \\<equiv>\n  ?m \\<le> ?n \\<and>\n  partial_latin_square ?s ?n \\<and>\n  bij_betw row_col ?s ({0..<?m} \\<times> {0..<?n}) \\<and>\n  bij_betw num_row ?s ({0..<?n} \\<times> {0..<?m})\n\ngoal (1 subgoal):\n 1. finite s", "by (metis bij_betw_finite finite_SigmaI finite_atLeastLessThan)"], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "moreover"], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "have \"finite new_row\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite new_row", "using new_row_def"], ["proof (prove)\nusing this:\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n\ngoal (1 subgoal):\n 1. finite new_row", "by simp"], ["proof (state)\nthis:\n  finite new_row\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "ultimately"], ["proof (chain)\npicking this:\n  s \\<inter> new_row = {}\n  finite s\n  finite new_row", "have \"card s' = card s + card new_row\""], ["proof (prove)\nusing this:\n  s \\<inter> new_row = {}\n  finite s\n  finite new_row\n\ngoal (1 subgoal):\n 1. card s' = card s + card new_row", "using s'_def card_Un_disjoint"], ["proof (prove)\nusing this:\n  s \\<inter> new_row = {}\n  finite s\n  finite new_row\n  s' = s \\<union> new_row\n  \\<lbrakk>finite ?A; finite ?B; ?A \\<inter> ?B = {}\\<rbrakk>\n  \\<Longrightarrow> card (?A \\<union> ?B) = card ?A + card ?B\n\ngoal (1 subgoal):\n 1. card s' = card s + card new_row", "by auto"], ["proof (state)\nthis:\n  card s' = card s + card new_row\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "with card_s card_new_row"], ["proof (chain)\npicking this:\n  card s = n * (n - Suc m)\n  card new_row = n\n  card s' = card s + card new_row", "show ?thesis"], ["proof (prove)\nusing this:\n  card s = n * (n - Suc m)\n  card new_row = n\n  card s' = card s + card new_row\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "using Suc"], ["proof (prove)\nusing this:\n  card s = n * (n - Suc m)\n  card new_row = n\n  card s' = card s + card new_row\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. card s' = n * (n - m)", "by (metis Suc_diff_Suc Suc_le_lessD add.commute mult_Suc_right)"], ["proof (state)\nthis:\n  card s' = n * (n - m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card s' = n * (n - m)\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "moreover"], ["proof (state)\nthis:\n  card s' = n * (n - m)\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "have \"\\<forall>e\\<in>s'. e Row < (n - m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>s'. e Row < n - m", "proof (rule ballI; cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; ?P5 e\\<rbrakk> \\<Longrightarrow> e Row < n - m\n 2. \\<And>e.\n       \\<lbrakk>e \\<in> s'; \\<not> ?P5 e\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "fix e"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; ?P5 e\\<rbrakk> \\<Longrightarrow> e Row < n - m\n 2. \\<And>e.\n       \\<lbrakk>e \\<in> s'; \\<not> ?P5 e\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "assume \"e\\<in>new_row\""], ["proof (state)\nthis:\n  e \\<in> new_row\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; ?P5 e\\<rbrakk> \\<Longrightarrow> e Row < n - m\n 2. \\<And>e.\n       \\<lbrakk>e \\<in> s'; \\<not> ?P5 e\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "then"], ["proof (chain)\npicking this:\n  e \\<in> new_row", "show \"e Row < n - m\""], ["proof (prove)\nusing this:\n  e \\<in> new_row\n\ngoal (1 subgoal):\n 1. e Row < n - m", "using Suc new_row_def R_def"], ["proof (prove)\nusing this:\n  e \\<in> new_row\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  new_row = (\\<lambda>j. rec_latin_type (n - Suc m) j (R j)) ` {0..<n}\n  \\<forall>j\\<in>{0..<n}.\n     R j \\<in> {0..<n} - {e Num |e. e \\<in> s \\<and> e Col = j} \\<and>\n     inj_on R {0..<n}\n\ngoal (1 subgoal):\n 1. e Row < n - m", "by auto"], ["proof (state)\nthis:\n  e Row < n - m\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "assume \"e \\<in> s'\" \"e\\<notin>new_row\""], ["proof (state)\nthis:\n  e \\<in> s'\n  e \\<notin> new_row\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "then"], ["proof (chain)\npicking this:\n  e \\<in> s'\n  e \\<notin> new_row", "have \"e Row < n - Suc m\""], ["proof (prove)\nusing this:\n  e \\<in> s'\n  e \\<notin> new_row\n\ngoal (1 subgoal):\n 1. e Row < n - Suc m", "using latin_rect_iff Suc  s'_def \\<open>e\\<in>s'\\<close>"], ["proof (prove)\nusing this:\n  e \\<in> s'\n  e \\<notin> new_row\n  (?m \\<le> ?n \\<and>\n   partial_latin_square ?s ?n \\<and>\n   card ?s = ?n * ?m \\<and> (\\<forall>e\\<in>?s. e Row < ?m)) =\n  latin_rect ?s ?m ?n\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n  s' = s \\<union> new_row\n  e \\<in> s'\n\ngoal (1 subgoal):\n 1. e Row < n - Suc m", "by auto"], ["proof (state)\nthis:\n  e Row < n - Suc m\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<in> s'; e \\<notin> new_row\\<rbrakk>\n       \\<Longrightarrow> e Row < n - m", "then"], ["proof (chain)\npicking this:\n  e Row < n - Suc m", "show \"e Row < n - m\""], ["proof (prove)\nusing this:\n  e Row < n - Suc m\n\ngoal (1 subgoal):\n 1. e Row < n - m", "by auto"], ["proof (state)\nthis:\n  e Row < n - m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>e\\<in>s'. e Row < n - m\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "ultimately"], ["proof (chain)\npicking this:\n  n - m \\<le> n\n  partial_latin_square s' n\n  card s' = n * (n - m)\n  \\<forall>e\\<in>s'. e Row < n - m", "show ?thesis"], ["proof (prove)\nusing this:\n  n - m \\<le> n\n  partial_latin_square s' n\n  card s' = n * (n - m)\n  \\<forall>e\\<in>s'. e Row < n - m\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "using latin_rect_iff[of \"n-m\" n]"], ["proof (prove)\nusing this:\n  n - m \\<le> n\n  partial_latin_square s' n\n  card s' = n * (n - m)\n  \\<forall>e\\<in>s'. e Row < n - m\n  (n - m \\<le> n \\<and>\n   partial_latin_square ?s n \\<and>\n   card ?s = n * (n - m) \\<and> (\\<forall>e\\<in>?s. e Row < n - m)) =\n  latin_rect ?s (n - m) n\n\ngoal (1 subgoal):\n 1. latin_rect s' (n - m) n", "by auto"], ["proof (state)\nthis:\n  latin_rect s' (n - m) n\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment> \\<open>Finally we use the induction hypothesis:\\<close>"], ["proof (state)\nthis:\n  latin_rect s' (n - m) n\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "then"], ["proof (chain)\npicking this:\n  latin_rect s' (n - m) n", "obtain s'' where \"s' \\<subseteq> s''\" \"latin_square s'' n\""], ["proof (prove)\nusing this:\n  latin_rect s' (n - m) n\n\ngoal (1 subgoal):\n 1. (\\<And>s''.\n        \\<lbrakk>s' \\<subseteq> s''; latin_square s'' n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc"], ["proof (prove)\nusing this:\n  latin_rect s' (n - m) n\n  \\<lbrakk>latin_rect ?s (n - m) n; m \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s'. ?s \\<subseteq> s' \\<and> latin_square s' n\n  latin_rect s (n - Suc m) n\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>s''.\n        \\<lbrakk>s' \\<subseteq> s''; latin_square s'' n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s' \\<subseteq> s''\n  latin_square s'' n\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "then"], ["proof (chain)\npicking this:\n  s' \\<subseteq> s''\n  latin_square s'' n", "have \"s \\<subseteq> s''\""], ["proof (prove)\nusing this:\n  s' \\<subseteq> s''\n  latin_square s'' n\n\ngoal (1 subgoal):\n 1. s \\<subseteq> s''", "using s'_def"], ["proof (prove)\nusing this:\n  s' \\<subseteq> s''\n  latin_square s'' n\n  s' = s \\<union> new_row\n\ngoal (1 subgoal):\n 1. s \\<subseteq> s''", "by auto"], ["proof (state)\nthis:\n  s \\<subseteq> s''\n\ngoal (1 subgoal):\n 1. \\<And>m s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>latin_rect s (n - m) n; m \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>s'.\n  s \\<subseteq> s' \\<and> latin_square s' n;\n        latin_rect s (n - Suc m) n; Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'.\n                            s \\<subseteq> s' \\<and> latin_square s' n", "then"], ["proof (chain)\npicking this:\n  s \\<subseteq> s''", "show \"\\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n\""], ["proof (prove)\nusing this:\n  s \\<subseteq> s''\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n", "using \\<open>latin_square s'' n\\<close>"], ["proof (prove)\nusing this:\n  s \\<subseteq> s''\n  latin_square s'' n\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n", "by auto"], ["proof (state)\nthis:\n  \\<exists>s'. s \\<subseteq> s' \\<and> latin_square s' n\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}