{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions/Standard_Redundancy_Criterion.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions", "problem_names": ["lemma set_prems_of:\n  \"set (prems_of \\<iota>) = (if prems_of \\<iota> = [] then {} else {main_prem_of \\<iota>} \\<union> set (side_prems_of \\<iota>))\"", "lemma ex_min_counterex:\n  fixes N :: \"('f :: wellorder) set\"\n  assumes \"\\<not> I \\<Turnstile> N\"\n  shows \"\\<exists>C \\<in> N. \\<not> I \\<Turnstile> {C} \\<and> (\\<forall>D \\<in> N. D < C \\<longrightarrow> I \\<Turnstile> {D})\"", "theorem saturated_model:\n  assumes\n    satur: \"saturated N\" and\n    bot_ni_n: \"N \\<inter> Bot = {}\"\n  shows \"I_of N \\<Turnstile> N\"", "lemma entails_concl_compact_union:\n  assumes\n    fin_e: \"finite EE\" and\n    cd_ent: \"CC \\<union> DD \\<Turnstile> EE\"\n  shows \"\\<exists>CC' \\<subseteq> CC. finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE\"", "lemma Red_F_of_subset: \"N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\"", "lemma wlog_non_Red_F:\n  assumes\n    dd0_sub: \"DD0 \\<subseteq> N\" and\n    dd0_ent: \"DD0 \\<union> CC \\<Turnstile> {E}\" and\n    dd0_lt: \"\\<forall>D' \\<in> DD0. D' < D\"\n  shows \"\\<exists>DD \\<subseteq> N - Red_F N. DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D' \\<in> DD. D' < D)\"", "lemma Red_F_imp_ex_non_Red_F:\n  assumes c_in: \"C \\<in> Red_F N\"\n  shows \"\\<exists>CC \\<subseteq> N - Red_F N. CC \\<Turnstile> {C} \\<and> (\\<forall>C' \\<in> CC. C' < C)\"", "lemma Red_F_subs_Red_F_diff_Red_F: \"Red_F N \\<subseteq> Red_F (N - Red_F N)\"", "lemma Red_F_eq_Red_F_diff_Red_F: \"Red_F N = Red_F (N - Red_F N)\"", "lemma Red_I_of_subset: \"N \\<subseteq> N' \\<Longrightarrow> Red_I N \\<subseteq> Red_I N'\"", "lemma Red_I_subs_Red_I_diff_Red_F: \"Red_I N \\<subseteq> Red_I (N - Red_F N)\"", "lemma Red_I_eq_Red_I_diff_Red_F: \"Red_I N = Red_I (N - Red_F N)\"", "lemma Red_I_to_Inf: \"Red_I N \\<subseteq> Inf\"", "lemma Red_F_of_Red_F_subset: \"N' \\<subseteq> Red_F N \\<Longrightarrow> Red_F N \\<subseteq> Red_F (N - N')\"", "lemma Red_I_of_Red_F_subset: \"N' \\<subseteq> Red_F N \\<Longrightarrow> Red_I N \\<subseteq> Red_I (N - N')\"", "lemma Red_F_model: \"M \\<Turnstile> N - Red_F N \\<Longrightarrow> M \\<Turnstile> N\"", "lemma Red_F_Bot: \"B \\<in> Bot \\<Longrightarrow> N \\<Turnstile> {B} \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\"", "lemma Red_I_of_Inf_to_N:\n  assumes\n    in_\\<iota>: \"\\<iota> \\<in> Inf\" and\n    concl_in: \"concl_of \\<iota> \\<in> N\"\n  shows \"\\<iota> \\<in> Red_I N\"", "lemma saturated_model:\n  assumes\n    satur: \"saturated N\" and\n    bot_ni_n: \"N \\<inter> Bot = {}\"\n  shows \"I_of N \\<Turnstile> N\""], "translations": [["", "lemma set_prems_of:\n  \"set (prems_of \\<iota>) = (if prems_of \\<iota> = [] then {} else {main_prem_of \\<iota>} \\<union> set (side_prems_of \\<iota>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) =\n    (if prems_of \\<iota> = [] then {}\n     else {main_prem_of \\<iota>} \\<union> set (side_prems_of \\<iota>))", "by clarsimp (metis Un_insert_right append_Nil2 append_butlast_last_id list.set(2) set_append)"], ["", "locale counterex_reducing_inference_system = inference_system Inf + consequence_relation\n  for Inf :: \"('f :: wellorder) inference set\" +\n  fixes I_of :: \"'f set \\<Rightarrow> 'f set\"\n  assumes Inf_counterex_reducing:\n    \"N \\<inter> Bot = {} \\<Longrightarrow> D \\<in> N \\<Longrightarrow> \\<not> I_of N \\<Turnstile> {D} \\<Longrightarrow> (\\<And>C. C \\<in> N \\<Longrightarrow> \\<not> I_of N \\<Turnstile> {C} \\<Longrightarrow> D \\<le> C) \\<Longrightarrow>\n     \\<exists>\\<iota> \\<in> Inf. prems_of \\<iota> \\<noteq> [] \\<and> main_prem_of \\<iota> = D \\<and> set (side_prems_of \\<iota>) \\<subseteq> N \\<and> I_of N\n         \\<Turnstile> set (side_prems_of \\<iota>)\n       \\<and> \\<not> I_of N \\<Turnstile> {concl_of \\<iota>} \\<and> concl_of \\<iota> < D\"\nbegin"], ["", "lemma ex_min_counterex:\n  fixes N :: \"('f :: wellorder) set\"\n  assumes \"\\<not> I \\<Turnstile> N\"\n  shows \"\\<exists>C \\<in> N. \\<not> I \\<Turnstile> {C} \\<and> (\\<forall>D \\<in> N. D < C \\<longrightarrow> I \\<Turnstile> {D})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C\\<in>N.\n       \\<not> I \\<Turnstile> {C} \\<and>\n       (\\<forall>D\\<in>N. D < C \\<longrightarrow> I \\<Turnstile> {D})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C\\<in>N.\n       \\<not> I \\<Turnstile> {C} \\<and>\n       (\\<forall>D\\<in>N. D < C \\<longrightarrow> I \\<Turnstile> {D})", "obtain C where\n    \"C \\<in> N\" and \"\\<not> I \\<Turnstile> {C}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<in> N; \\<not> I \\<Turnstile> {C}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms all_formulas_entailed"], ["proof (prove)\nusing this:\n  \\<not> I \\<Turnstile> N\n  \\<forall>C\\<in>?N2.0. ?N1.0 \\<Turnstile> {C} \\<Longrightarrow>\n  ?N1.0 \\<Turnstile> ?N2.0\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<in> N; \\<not> I \\<Turnstile> {C}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  C \\<in> N\n  \\<not> I \\<Turnstile> {C}\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<in>N.\n       \\<not> I \\<Turnstile> {C} \\<and>\n       (\\<forall>D\\<in>N. D < C \\<longrightarrow> I \\<Turnstile> {D})", "then"], ["proof (chain)\npicking this:\n  C \\<in> N\n  \\<not> I \\<Turnstile> {C}", "have c_in: \"C \\<in> {C \\<in> N. \\<not> I \\<Turnstile> {C}}\""], ["proof (prove)\nusing this:\n  C \\<in> N\n  \\<not> I \\<Turnstile> {C}\n\ngoal (1 subgoal):\n 1. C \\<in> {C \\<in> N. \\<not> I \\<Turnstile> {C}}", "by blast"], ["proof (state)\nthis:\n  C \\<in> {C \\<in> N. \\<not> I \\<Turnstile> {C}}\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<in>N.\n       \\<not> I \\<Turnstile> {C} \\<and>\n       (\\<forall>D\\<in>N. D < C \\<longrightarrow> I \\<Turnstile> {D})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C\\<in>N.\n       \\<not> I \\<Turnstile> {C} \\<and>\n       (\\<forall>D\\<in>N. D < C \\<longrightarrow> I \\<Turnstile> {D})", "using wf_eq_minimal[THEN iffD1, rule_format, OF wellorder_class.wf c_in]"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>{C \\<in> N. \\<not> I \\<Turnstile> {C}}.\n     \\<forall>y.\n        (y, z) \\<in> {(x, y). x < y} \\<longrightarrow>\n        y \\<notin> {C \\<in> N. \\<not> I \\<Turnstile> {C}}\n\ngoal (1 subgoal):\n 1. \\<exists>C\\<in>N.\n       \\<not> I \\<Turnstile> {C} \\<and>\n       (\\<forall>D\\<in>N. D < C \\<longrightarrow> I \\<Turnstile> {D})", "by blast"], ["proof (state)\nthis:\n  \\<exists>C\\<in>N.\n     \\<not> I \\<Turnstile> {C} \\<and>\n     (\\<forall>D\\<in>N. D < C \\<longrightarrow> I \\<Turnstile> {D})\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\nTheorem 4.4 (generalizes Theorems 3.9 and 3.16):\n\\<close>"], ["", "locale counterex_reducing_inference_system_with_trivial_redundancy =\n  counterex_reducing_inference_system _ _ Inf + calculus _ Inf _ \"\\<lambda>_. {}\" \"\\<lambda>_. {}\"\n  for Inf :: \"('f :: wellorder) inference set\"\nbegin"], ["", "theorem saturated_model:\n  assumes\n    satur: \"saturated N\" and\n    bot_ni_n: \"N \\<inter> Bot = {}\"\n  shows \"I_of N \\<Turnstile> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I_of N \\<Turnstile> N", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "assume \"\\<not> I_of N \\<Turnstile> N\""], ["proof (state)\nthis:\n  \\<not> I_of N \\<Turnstile> N\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> I_of N \\<Turnstile> N", "obtain D :: 'f where\n    d_in_n: \"D \\<in> N\" and\n    d_cex: \"\\<not> I_of N \\<Turnstile> {D}\" and\n    d_min: \"\\<And>C. C \\<in> N \\<Longrightarrow> C < D \\<Longrightarrow> I_of N \\<Turnstile> {C}\""], ["proof (prove)\nusing this:\n  \\<not> I_of N \\<Turnstile> N\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>D \\<in> N; \\<not> I_of N \\<Turnstile> {D};\n         \\<And>C.\n            \\<lbrakk>C \\<in> N; C < D\\<rbrakk>\n            \\<Longrightarrow> I_of N \\<Turnstile> {C}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson ex_min_counterex)"], ["proof (state)\nthis:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}", "obtain \\<iota> :: \"'f inference\" where\n    \\<iota>_inf: \"\\<iota> \\<in> Inf\" and\n    concl_cex: \"\\<not> I_of N \\<Turnstile> {concl_of \\<iota>}\" and\n    concl_lt_d: \"concl_of \\<iota> < D\""], ["proof (prove)\nusing this:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>.\n        \\<lbrakk>\\<iota> \\<in> Inf;\n         \\<not> I_of N \\<Turnstile> {concl_of \\<iota>};\n         concl_of \\<iota> < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Inf_counterex_reducing[OF bot_ni_n]"], ["proof (prove)\nusing this:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n  \\<lbrakk>?D \\<in> N; \\<not> I_of N \\<Turnstile> {?D};\n   \\<And>C.\n      \\<lbrakk>C \\<in> N; \\<not> I_of N \\<Turnstile> {C}\\<rbrakk>\n      \\<Longrightarrow> ?D \\<le> C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<iota>\\<in>Inf.\n                       prems_of \\<iota> \\<noteq> [] \\<and>\n                       main_prem_of \\<iota> = ?D \\<and>\n                       set (side_prems_of \\<iota>) \\<subseteq> N \\<and>\n                       I_of N \\<Turnstile>\n                       set (side_prems_of \\<iota>) \\<and>\n                       \\<not> I_of N \\<Turnstile> {concl_of \\<iota>} \\<and>\n                       concl_of \\<iota> < ?D\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>.\n        \\<lbrakk>\\<iota> \\<in> Inf;\n         \\<not> I_of N \\<Turnstile> {concl_of \\<iota>};\n         concl_of \\<iota> < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf\n  \\<not> I_of N \\<Turnstile> {concl_of \\<iota>}\n  concl_of \\<iota> < D\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "have \"concl_of \\<iota> \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concl_of \\<iota> \\<in> N", "using \\<iota>_inf Red_I_of_Inf_to_N"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf\n  \\<lbrakk>?\\<iota> \\<in> Inf; concl_of ?\\<iota> \\<in> ?N\\<rbrakk>\n  \\<Longrightarrow> ?\\<iota> \\<in> {}\n\ngoal (1 subgoal):\n 1. concl_of \\<iota> \\<in> N", "by blast"], ["proof (state)\nthis:\n  concl_of \\<iota> \\<in> N\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  concl_of \\<iota> \\<in> N", "show False"], ["proof (prove)\nusing this:\n  concl_of \\<iota> \\<in> N\n\ngoal (1 subgoal):\n 1. False", "using concl_cex concl_lt_d d_min"], ["proof (prove)\nusing this:\n  concl_of \\<iota> \\<in> N\n  \\<not> I_of N \\<Turnstile> {concl_of \\<iota>}\n  concl_of \\<iota> < D\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nAn abstract version of Corollary 3.10 does not hold without some conditions, according to Nitpick:\n\\<close>"], ["", "corollary saturated_complete:\n  assumes\n    satur: \"saturated N\" and\n    unsat: \"N \\<Turnstile> Bot\"\n  shows \"N \\<inter> Bot \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<inter> Bot \\<noteq> {}", "oops"], ["", "end"], ["", "subsection \\<open>Compactness\\<close>"], ["", "locale concl_compact_consequence_relation = consequence_relation +\n  assumes\n    entails_concl_compact: \"finite EE \\<Longrightarrow> CC \\<Turnstile> EE \\<Longrightarrow> \\<exists>CC' \\<subseteq> CC. finite CC' \\<and> CC' \\<Turnstile> EE\"\nbegin"], ["", "lemma entails_concl_compact_union:\n  assumes\n    fin_e: \"finite EE\" and\n    cd_ent: \"CC \\<union> DD \\<Turnstile> EE\"\n  shows \"\\<exists>CC' \\<subseteq> CC. finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "obtain CCDD' where\n    cd1_fin: \"finite CCDD'\" and\n    cd1_sub: \"CCDD' \\<subseteq> CC \\<union> DD\" and\n    cd1_ent: \"CCDD' \\<Turnstile> EE\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>CCDD'.\n        \\<lbrakk>finite CCDD'; CCDD' \\<subseteq> CC \\<union> DD;\n         CCDD' \\<Turnstile> EE\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using entails_concl_compact[OF fin_e cd_ent]"], ["proof (prove)\nusing this:\n  \\<exists>CC'\\<subseteq>CC \\<union> DD.\n     finite CC' \\<and> CC' \\<Turnstile> EE\n\ngoal (1 subgoal):\n 1. (\\<And>CCDD'.\n        \\<lbrakk>finite CCDD'; CCDD' \\<subseteq> CC \\<union> DD;\n         CCDD' \\<Turnstile> EE\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  finite CCDD'\n  CCDD' \\<subseteq> CC \\<union> DD\n  CCDD' \\<Turnstile> EE\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "define CC' where\n    \"CC' = CCDD' - DD\""], ["proof (state)\nthis:\n  CC' = CCDD' - DD\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "have \"CC' \\<subseteq> CC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CC' \\<subseteq> CC", "unfolding CC'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CCDD' - DD \\<subseteq> CC", "using cd1_sub"], ["proof (prove)\nusing this:\n  CCDD' \\<subseteq> CC \\<union> DD\n\ngoal (1 subgoal):\n 1. CCDD' - DD \\<subseteq> CC", "by blast"], ["proof (state)\nthis:\n  CC' \\<subseteq> CC\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "moreover"], ["proof (state)\nthis:\n  CC' \\<subseteq> CC\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "have \"finite CC'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite CC'", "unfolding CC'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (CCDD' - DD)", "using cd1_fin"], ["proof (prove)\nusing this:\n  finite CCDD'\n\ngoal (1 subgoal):\n 1. finite (CCDD' - DD)", "by blast"], ["proof (state)\nthis:\n  finite CC'\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "moreover"], ["proof (state)\nthis:\n  finite CC'\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "have \"CC' \\<union> DD \\<Turnstile> EE\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CC' \\<union> DD \\<Turnstile> EE", "unfolding CC'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CCDD' - DD \\<union> DD \\<Turnstile> EE", "using cd1_ent"], ["proof (prove)\nusing this:\n  CCDD' \\<Turnstile> EE\n\ngoal (1 subgoal):\n 1. CCDD' - DD \\<union> DD \\<Turnstile> EE", "by (metis Un_Diff_cancel2 Un_upper1 entails_trans subset_entailed)"], ["proof (state)\nthis:\n  CC' \\<union> DD \\<Turnstile> EE\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "ultimately"], ["proof (chain)\npicking this:\n  CC' \\<subseteq> CC\n  finite CC'\n  CC' \\<union> DD \\<Turnstile> EE", "show ?thesis"], ["proof (prove)\nusing this:\n  CC' \\<subseteq> CC\n  finite CC'\n  CC' \\<union> DD \\<Turnstile> EE\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC.\n       finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE", "by blast"], ["proof (state)\nthis:\n  \\<exists>CC'\\<subseteq>CC.\n     finite CC' \\<and> CC' \\<union> DD \\<Turnstile> EE\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>The Standard Redundancy Criterion\\<close>"], ["", "locale calculus_with_standard_redundancy =\n  inference_system Inf + concl_compact_consequence_relation Bot entails\n  for\n    Inf :: \"('f :: wellorder) inference set\" and\n    Bot :: \"'f set\" and\n    entails :: \"'f set \\<Rightarrow> 'f set \\<Rightarrow> bool\" (infix \"\\<Turnstile>\" 50) +\n  assumes\n    Inf_has_prem: \"\\<iota> \\<in> Inf \\<Longrightarrow> prems_of \\<iota> \\<noteq> []\" and\n    Inf_reductive: \"\\<iota> \\<in> Inf \\<Longrightarrow> concl_of \\<iota> < main_prem_of \\<iota>\"\nbegin"], ["", "definition redundant_infer :: \"'f set \\<Rightarrow> 'f inference \\<Rightarrow> bool\" where\n  \"redundant_infer N \\<iota> \\<longleftrightarrow>\n   (\\<exists>DD \\<subseteq> N. DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile> {concl_of \\<iota>} \\<and> (\\<forall>D \\<in> DD. D < main_prem_of \\<iota>))\""], ["", "definition Red_I :: \"'f set \\<Rightarrow> 'f inference set\" where\n  \"Red_I N = {\\<iota> \\<in> Inf. redundant_infer N \\<iota>}\""], ["", "definition Red_F :: \"'f set \\<Rightarrow> 'f set\" where\n  \"Red_F N = {C. \\<exists>DD \\<subseteq> N. DD \\<Turnstile> {C} \\<and> (\\<forall>D \\<in> DD. D < C)}\""], ["", "text \\<open>\nThe following results correspond to Lemma 4.5. The lemma \\<open>wlog_non_Red_F\\<close> generalizes the core of\nthe argument.\n\\<close>"], ["", "lemma Red_F_of_subset: \"N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow> Red_F N \\<subseteq> Red_F N'", "unfolding Red_F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    {C. \\<exists>DD\\<subseteq>N.\n           DD \\<Turnstile> {C} \\<and> (\\<forall>D\\<in>DD. D < C)}\n    \\<subseteq> {C. \\<exists>DD\\<subseteq>N'.\n                       DD \\<Turnstile> {C} \\<and>\n                       (\\<forall>D\\<in>DD. D < C)}", "by fast"], ["", "lemma wlog_non_Red_F:\n  assumes\n    dd0_sub: \"DD0 \\<subseteq> N\" and\n    dd0_ent: \"DD0 \\<union> CC \\<Turnstile> {E}\" and\n    dd0_lt: \"\\<forall>D' \\<in> DD0. D' < D\"\n  shows \"\\<exists>DD \\<subseteq> N - Red_F N. DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D' \\<in> DD. D' < D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "obtain DD1 where\n    \"finite DD1\" and\n    \"DD1 \\<subseteq> N\" and\n    \"DD1 \\<union> CC \\<Turnstile> {E}\" and\n    \"\\<forall>D' \\<in> DD1. D' < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>DD1.\n        \\<lbrakk>finite DD1; DD1 \\<subseteq> N;\n         DD1 \\<union> CC \\<Turnstile> {E};\n         \\<forall>D'\\<in>DD1. D' < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using entails_concl_compact_union[OF _ dd0_ent] dd0_lt dd0_sub"], ["proof (prove)\nusing this:\n  finite {E} \\<Longrightarrow>\n  \\<exists>CC'\\<subseteq>DD0.\n     finite CC' \\<and> CC' \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DD0. D' < D\n  DD0 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. (\\<And>DD1.\n        \\<lbrakk>finite DD1; DD1 \\<subseteq> N;\n         DD1 \\<union> CC \\<Turnstile> {E};\n         \\<forall>D'\\<in>DD1. D' < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  finite DD1\n  DD1 \\<subseteq> N\n  DD1 \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DD1. D' < D\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "then"], ["proof (chain)\npicking this:\n  finite DD1\n  DD1 \\<subseteq> N\n  DD1 \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DD1. D' < D", "obtain DD2 :: \"'f multiset\" where\n    \"set_mset DD2 \\<subseteq> N \\<and> set_mset DD2 \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D' \\<in> set_mset DD2. D' < D)\""], ["proof (prove)\nusing this:\n  finite DD1\n  DD1 \\<subseteq> N\n  DD1 \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DD1. D' < D\n\ngoal (1 subgoal):\n 1. (\\<And>DD2.\n        set_mset DD2 \\<subseteq> N \\<and>\n        set_mset DD2 \\<union> CC \\<Turnstile> {E} \\<and>\n        (\\<forall>D'\\<in>#DD2. D' < D) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  finite DD1\n  DD1 \\<subseteq> N\n  DD1 \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DD1. D' < D\n  DD0 \\<subseteq> N\n  DD0 \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DD0. D' < D\n\ngoal (1 subgoal):\n 1. (\\<And>DD2.\n        set_mset DD2 \\<subseteq> N \\<and>\n        set_mset DD2 \\<union> CC \\<Turnstile> {E} \\<and>\n        (\\<forall>D'\\<in>#DD2. D' < D) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_set_mset_mset_set)"], ["proof (state)\nthis:\n  set_mset DD2 \\<subseteq> N \\<and>\n  set_mset DD2 \\<union> CC \\<Turnstile> {E} \\<and>\n  (\\<forall>D'\\<in>#DD2. D' < D)\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "hence dd2: \"DD2 \\<in> {DD. set_mset DD \\<subseteq> N \\<and> set_mset DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D' \\<in> set_mset DD. D' < D)}\""], ["proof (prove)\nusing this:\n  set_mset DD2 \\<subseteq> N \\<and>\n  set_mset DD2 \\<union> CC \\<Turnstile> {E} \\<and>\n  (\\<forall>D'\\<in>#DD2. D' < D)\n\ngoal (1 subgoal):\n 1. DD2\n    \\<in> {DD.\n           set_mset DD \\<subseteq> N \\<and>\n           set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n           (\\<forall>D'\\<in>#DD. D' < D)}", "by blast"], ["proof (state)\nthis:\n  DD2\n  \\<in> {DD.\n         set_mset DD \\<subseteq> N \\<and>\n         set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n         (\\<forall>D'\\<in>#DD. D' < D)}\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "have \"\\<exists>DD. set_mset DD \\<subseteq> N \\<and> set_mset DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D' \\<in># DD. D' < D) \\<and>\n    (\\<forall>DDa. set_mset DDa \\<subseteq> N \\<and> set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D' \\<in># DDa. D' < D) \\<longrightarrow> DD \\<le> DDa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>DD.\n       set_mset DD \\<subseteq> N \\<and>\n       set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n       (\\<forall>D'\\<in>#DD. D' < D) \\<and>\n       (\\<forall>DDa.\n           set_mset DDa \\<subseteq> N \\<and>\n           set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n           (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n           DD \\<le> DDa)", "using wf_eq_minimal[THEN iffD1, rule_format, OF wf_less_multiset, OF dd2]"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>{DD.\n                  set_mset DD \\<subseteq> N \\<and>\n                  set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n                  (\\<forall>D'\\<in>#DD. D' < D)}.\n     \\<forall>y.\n        (y, z) \\<in> {(M, N). M < N} \\<longrightarrow>\n        y \\<notin> {DD.\n                    set_mset DD \\<subseteq> N \\<and>\n                    set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n                    (\\<forall>D'\\<in>#DD. D' < D)}\n\ngoal (1 subgoal):\n 1. \\<exists>DD.\n       set_mset DD \\<subseteq> N \\<and>\n       set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n       (\\<forall>D'\\<in>#DD. D' < D) \\<and>\n       (\\<forall>DDa.\n           set_mset DDa \\<subseteq> N \\<and>\n           set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n           (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n           DD \\<le> DDa)", "unfolding not_le[symmetric]"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>{DD.\n                  set_mset DD \\<subseteq> N \\<and>\n                  set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n                  (\\<forall>D'\\<in>#DD. \\<not> D \\<le> D')}.\n     \\<forall>y.\n        (y, z) \\<in> {(M, N). \\<not> N \\<le> M} \\<longrightarrow>\n        y \\<notin> {DD.\n                    set_mset DD \\<subseteq> N \\<and>\n                    set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n                    (\\<forall>D'\\<in>#DD. \\<not> D \\<le> D')}\n\ngoal (1 subgoal):\n 1. \\<exists>DD.\n       set_mset DD \\<subseteq> N \\<and>\n       set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n       (\\<forall>D'\\<in>#DD. \\<not> D \\<le> D') \\<and>\n       (\\<forall>DDa.\n           set_mset DDa \\<subseteq> N \\<and>\n           set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n           (\\<forall>D'\\<in>#DDa. \\<not> D \\<le> D') \\<longrightarrow>\n           DD \\<le> DDa)", "by blast"], ["proof (state)\nthis:\n  \\<exists>DD.\n     set_mset DD \\<subseteq> N \\<and>\n     set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n     (\\<forall>D'\\<in>#DD. D' < D) \\<and>\n     (\\<forall>DDa.\n         set_mset DDa \\<subseteq> N \\<and>\n         set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n         (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n         DD \\<le> DDa)\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "then"], ["proof (chain)\npicking this:\n  \\<exists>DD.\n     set_mset DD \\<subseteq> N \\<and>\n     set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n     (\\<forall>D'\\<in>#DD. D' < D) \\<and>\n     (\\<forall>DDa.\n         set_mset DDa \\<subseteq> N \\<and>\n         set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n         (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n         DD \\<le> DDa)", "obtain DD :: \"'f multiset\" where\n    dd_subs_n: \"set_mset DD \\<subseteq> N\" and\n    ddcc_ent_e: \"set_mset DD \\<union> CC \\<Turnstile> {E}\" and\n    dd_lt_d: \"\\<forall>D' \\<in># DD. D' < D\" and\n    d_min: \"\\<forall>DDa. set_mset DDa \\<subseteq> N \\<and> set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D' \\<in># DDa. D' < D) \\<longrightarrow> DD \\<le> DDa\""], ["proof (prove)\nusing this:\n  \\<exists>DD.\n     set_mset DD \\<subseteq> N \\<and>\n     set_mset DD \\<union> CC \\<Turnstile> {E} \\<and>\n     (\\<forall>D'\\<in>#DD. D' < D) \\<and>\n     (\\<forall>DDa.\n         set_mset DDa \\<subseteq> N \\<and>\n         set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n         (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n         DD \\<le> DDa)\n\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>set_mset DD \\<subseteq> N;\n         set_mset DD \\<union> CC \\<Turnstile> {E};\n         \\<forall>D'\\<in>#DD. D' < D;\n         \\<forall>DDa.\n            set_mset DDa \\<subseteq> N \\<and>\n            set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n            (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n            DD \\<le> DDa\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  set_mset DD \\<subseteq> N\n  set_mset DD \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>#DD. D' < D\n  \\<forall>DDa.\n     set_mset DDa \\<subseteq> N \\<and>\n     set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n     (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n     DD \\<le> DDa\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "have \"\\<forall>Da \\<in># DD. Da \\<notin> Red_F N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Da\\<in>#DD. Da \\<notin> Red_F N", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "fix Da"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "assume\n      da_in_dd: \"Da \\<in># DD\" and\n      da_rf: \"Da \\<in> Red_F N\""], ["proof (state)\nthis:\n  Da \\<in># DD\n  Da \\<in> Red_F N\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "obtain DDa0 where\n      \"DDa0 \\<subseteq> N\"\n      \"finite DDa0\"\n      \"DDa0 \\<Turnstile> {Da}\"\n      \"\\<forall>D \\<in> DDa0. D < Da\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>DDa0.\n        \\<lbrakk>DDa0 \\<subseteq> N; finite DDa0; DDa0 \\<Turnstile> {Da};\n         \\<forall>D\\<in>DDa0. D < Da\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using da_rf"], ["proof (prove)\nusing this:\n  Da \\<in> Red_F N\n\ngoal (1 subgoal):\n 1. (\\<And>DDa0.\n        \\<lbrakk>DDa0 \\<subseteq> N; finite DDa0; DDa0 \\<Turnstile> {Da};\n         \\<forall>D\\<in>DDa0. D < Da\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Red_F_def mem_Collect_eq"], ["proof (prove)\nusing this:\n  \\<exists>DD\\<subseteq>N.\n     DD \\<Turnstile> {Da} \\<and> (\\<forall>D\\<in>DD. D < Da)\n\ngoal (1 subgoal):\n 1. (\\<And>DDa0.\n        \\<lbrakk>DDa0 \\<subseteq> N; finite DDa0; DDa0 \\<Turnstile> {Da};\n         \\<forall>D\\<in>DDa0. D < Da\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (smt entails_concl_compact finite.emptyI finite.insertI subset_iff)"], ["proof (state)\nthis:\n  DDa0 \\<subseteq> N\n  finite DDa0\n  DDa0 \\<Turnstile> {Da}\n  \\<forall>D\\<in>DDa0. D < Da\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  DDa0 \\<subseteq> N\n  finite DDa0\n  DDa0 \\<Turnstile> {Da}\n  \\<forall>D\\<in>DDa0. D < Da", "obtain DDa1 :: \"'f multiset\" where\n      dda1_subs_n: \"set_mset DDa1 \\<subseteq> N\" and\n      dda1_ent_da: \"set_mset DDa1 \\<Turnstile> {Da}\" and\n      dda1_lt_da: \"\\<forall>D' \\<in># DDa1. D' < Da\""], ["proof (prove)\nusing this:\n  DDa0 \\<subseteq> N\n  finite DDa0\n  DDa0 \\<Turnstile> {Da}\n  \\<forall>D\\<in>DDa0. D < Da\n\ngoal (1 subgoal):\n 1. (\\<And>DDa1.\n        \\<lbrakk>set_mset DDa1 \\<subseteq> N;\n         set_mset DDa1 \\<Turnstile> {Da};\n         \\<forall>D'\\<in>#DDa1. D' < Da\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis finite_set_mset_mset_set)"], ["proof (state)\nthis:\n  set_mset DDa1 \\<subseteq> N\n  set_mset DDa1 \\<Turnstile> {Da}\n  \\<forall>D'\\<in>#DDa1. D' < Da\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "define DDa :: \"'f multiset\" where\n      \"DDa = DD - {#Da#} + DDa1\""], ["proof (state)\nthis:\n  DDa = DD - {#Da#} + DDa1\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "have \"set_mset DDa \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset DDa \\<subseteq> N", "unfolding DDa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (DD - {#Da#} + DDa1) \\<subseteq> N", "using dd_subs_n dda1_subs_n"], ["proof (prove)\nusing this:\n  set_mset DD \\<subseteq> N\n  set_mset DDa1 \\<subseteq> N\n\ngoal (1 subgoal):\n 1. set_mset (DD - {#Da#} + DDa1) \\<subseteq> N", "by (meson contra_subsetD in_diffD subsetI union_iff)"], ["proof (state)\nthis:\n  set_mset DDa \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  set_mset DDa \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "have \"set_mset DDa \\<union> CC \\<Turnstile> {E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset DDa \\<union> CC \\<Turnstile> {E}", "by (rule entails_trans_strong[of _ \"{Da}\"],\n          metis DDa_def dda1_ent_da entail_union entails_trans order_refl set_mset_union\n            subset_entailed,\n          smt DDa_def da_in_dd ddcc_ent_e entails_trans insert_DiffM2 set_mset_add_mset_insert\n            set_mset_empty set_mset_union subset_entailed sup_assoc sup_commute sup_ge1)"], ["proof (state)\nthis:\n  set_mset DDa \\<union> CC \\<Turnstile> {E}\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  set_mset DDa \\<union> CC \\<Turnstile> {E}\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<forall>D' \\<in># DDa. D' < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>D'\\<in>#DDa. D' < D", "using dd_lt_d dda1_lt_da da_in_dd"], ["proof (prove)\nusing this:\n  \\<forall>D'\\<in>#DD. D' < D\n  \\<forall>D'\\<in>#DDa1. D' < Da\n  Da \\<in># DD\n\ngoal (1 subgoal):\n 1. \\<forall>D'\\<in>#DDa. D' < D", "unfolding DDa_def"], ["proof (prove)\nusing this:\n  \\<forall>D'\\<in>#DD. D' < D\n  \\<forall>D'\\<in>#DDa1. D' < Da\n  Da \\<in># DD\n\ngoal (1 subgoal):\n 1. \\<forall>D'\\<in>#DD - {#Da#} + DDa1. D' < D", "by (metis insert_DiffM2 order.strict_trans union_iff)"], ["proof (state)\nthis:\n  \\<forall>D'\\<in>#DDa. D' < D\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>D'\\<in>#DDa. D' < D\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "have \"DDa < DD\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DDa < DD", "unfolding DDa_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. DD - {#Da#} + DDa1 < DD", "by (meson da_in_dd dda1_lt_da mset_lt_single_right_iff single_subset_iff union_le_diff_plus)"], ["proof (state)\nthis:\n  DDa < DD\n\ngoal (1 subgoal):\n 1. \\<And>Da.\n       \\<lbrakk>Da \\<in># DD; Da \\<in> Red_F N\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  set_mset DDa \\<subseteq> N\n  set_mset DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>#DDa. D' < D\n  DDa < DD", "show False"], ["proof (prove)\nusing this:\n  set_mset DDa \\<subseteq> N\n  set_mset DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>#DDa. D' < D\n  DDa < DD\n\ngoal (1 subgoal):\n 1. False", "using d_min"], ["proof (prove)\nusing this:\n  set_mset DDa \\<subseteq> N\n  set_mset DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>#DDa. D' < D\n  DDa < DD\n  \\<forall>DDa.\n     set_mset DDa \\<subseteq> N \\<and>\n     set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n     (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n     DD \\<le> DDa\n\ngoal (1 subgoal):\n 1. False", "unfolding less_eq_multiset_def"], ["proof (prove)\nusing this:\n  set_mset DDa \\<subseteq> N\n  set_mset DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>#DDa. D' < D\n  DDa < DD\n  \\<forall>DDa.\n     set_mset DDa \\<subseteq> N \\<and>\n     set_mset DDa \\<union> CC \\<Turnstile> {E} \\<and>\n     (\\<forall>D'\\<in>#DDa. D' < D) \\<longrightarrow>\n     DD < DDa \\<or> DD = DDa\n\ngoal (1 subgoal):\n 1. False", "by (auto intro!: antisym)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>Da\\<in>#DD. Da \\<notin> Red_F N\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "then"], ["proof (chain)\npicking this:\n  \\<forall>Da\\<in>#DD. Da \\<notin> Red_F N", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>Da\\<in>#DD. Da \\<notin> Red_F N\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "using dd_subs_n ddcc_ent_e dd_lt_d"], ["proof (prove)\nusing this:\n  \\<forall>Da\\<in>#DD. Da \\<notin> Red_F N\n  set_mset DD \\<subseteq> N\n  set_mset DD \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>#DD. D' < D\n\ngoal (1 subgoal):\n 1. \\<exists>DD\\<subseteq>N - Red_F N.\n       DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)", "by blast"], ["proof (state)\nthis:\n  \\<exists>DD\\<subseteq>N - Red_F N.\n     DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Red_F_imp_ex_non_Red_F:\n  assumes c_in: \"C \\<in> Red_F N\"\n  shows \"\\<exists>CC \\<subseteq> N - Red_F N. CC \\<Turnstile> {C} \\<and> (\\<forall>C' \\<in> CC. C' < C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>CC\\<subseteq>N - Red_F N.\n       CC \\<Turnstile> {C} \\<and> (\\<forall>C'\\<in>CC. C' < C)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>CC\\<subseteq>N - Red_F N.\n       CC \\<Turnstile> {C} \\<and> (\\<forall>C'\\<in>CC. C' < C)", "obtain DD :: \"'f set\" where\n    dd_sub: \"DD \\<subseteq> N\" and\n    dd_ent: \"DD \\<Turnstile> {C}\" and\n    dd_lt: \"\\<forall>D \\<in> DD. D < C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>DD \\<subseteq> N; DD \\<Turnstile> {C};\n         \\<forall>D\\<in>DD. D < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using c_in[unfolded Red_F_def]"], ["proof (prove)\nusing this:\n  C \\<in> {C. \\<exists>DD\\<subseteq>N.\n                 DD \\<Turnstile> {C} \\<and> (\\<forall>D\\<in>DD. D < C)}\n\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>DD \\<subseteq> N; DD \\<Turnstile> {C};\n         \\<forall>D\\<in>DD. D < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  DD \\<subseteq> N\n  DD \\<Turnstile> {C}\n  \\<forall>D\\<in>DD. D < C\n\ngoal (1 subgoal):\n 1. \\<exists>CC\\<subseteq>N - Red_F N.\n       CC \\<Turnstile> {C} \\<and> (\\<forall>C'\\<in>CC. C' < C)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>CC\\<subseteq>N - Red_F N.\n       CC \\<Turnstile> {C} \\<and> (\\<forall>C'\\<in>CC. C' < C)", "by (rule wlog_non_Red_F[of \"DD\" N \"{}\" C C, simplified, OF dd_sub dd_ent dd_lt])"], ["proof (state)\nthis:\n  \\<exists>CC\\<subseteq>N - Red_F N.\n     CC \\<Turnstile> {C} \\<and> (\\<forall>C'\\<in>CC. C' < C)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Red_F_subs_Red_F_diff_Red_F: \"Red_F N \\<subseteq> Red_F (N - Red_F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_F N \\<subseteq> Red_F (N - Red_F N)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "fix C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "assume c_rf: \"C \\<in> Red_F N\""], ["proof (state)\nthis:\n  C \\<in> Red_F N\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "then"], ["proof (chain)\npicking this:\n  C \\<in> Red_F N", "obtain CC :: \"'f set\" where\n    cc_subs: \"CC \\<subseteq> N - Red_F N\" and\n    cc_ent_c: \"CC \\<Turnstile> {C}\" and\n    cc_lt_c: \"\\<forall>C' \\<in> CC. C' < C\""], ["proof (prove)\nusing this:\n  C \\<in> Red_F N\n\ngoal (1 subgoal):\n 1. (\\<And>CC.\n        \\<lbrakk>CC \\<subseteq> N - Red_F N; CC \\<Turnstile> {C};\n         \\<forall>C'\\<in>CC. C' < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Red_F_imp_ex_non_Red_F[of C N]"], ["proof (prove)\nusing this:\n  C \\<in> Red_F N\n  C \\<in> Red_F N \\<Longrightarrow>\n  \\<exists>CC\\<subseteq>N - Red_F N.\n     CC \\<Turnstile> {C} \\<and> (\\<forall>C'\\<in>CC. C' < C)\n\ngoal (1 subgoal):\n 1. (\\<And>CC.\n        \\<lbrakk>CC \\<subseteq> N - Red_F N; CC \\<Turnstile> {C};\n         \\<forall>C'\\<in>CC. C' < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  CC \\<subseteq> N - Red_F N\n  CC \\<Turnstile> {C}\n  \\<forall>C'\\<in>CC. C' < C\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "have \"\\<forall>D \\<in> CC. D \\<notin> Red_F N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>D\\<in>CC. D \\<notin> Red_F N", "using cc_subs"], ["proof (prove)\nusing this:\n  CC \\<subseteq> N - Red_F N\n\ngoal (1 subgoal):\n 1. \\<forall>D\\<in>CC. D \\<notin> Red_F N", "by fast"], ["proof (state)\nthis:\n  \\<forall>D\\<in>CC. D \\<notin> Red_F N\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "then"], ["proof (chain)\npicking this:\n  \\<forall>D\\<in>CC. D \\<notin> Red_F N", "have cc_nr:\n    \"\\<forall>C \\<in> CC. \\<forall>DD \\<subseteq> N. DD \\<Turnstile> {C} \\<longrightarrow> (\\<exists>D \\<in> DD. \\<not> D < C)\""], ["proof (prove)\nusing this:\n  \\<forall>D\\<in>CC. D \\<notin> Red_F N\n\ngoal (1 subgoal):\n 1. \\<forall>C\\<in>CC.\n       \\<forall>DD\\<subseteq>N.\n          DD \\<Turnstile> {C} \\<longrightarrow>\n          (\\<exists>D\\<in>DD. \\<not> D < C)", "unfolding Red_F_def"], ["proof (prove)\nusing this:\n  \\<forall>D\\<in>CC.\n     D \\<notin> {C. \\<exists>DD\\<subseteq>N.\n                       DD \\<Turnstile> {C} \\<and>\n                       (\\<forall>D\\<in>DD. D < C)}\n\ngoal (1 subgoal):\n 1. \\<forall>C\\<in>CC.\n       \\<forall>DD\\<subseteq>N.\n          DD \\<Turnstile> {C} \\<longrightarrow>\n          (\\<exists>D\\<in>DD. \\<not> D < C)", "by simp"], ["proof (state)\nthis:\n  \\<forall>C\\<in>CC.\n     \\<forall>DD\\<subseteq>N.\n        DD \\<Turnstile> {C} \\<longrightarrow>\n        (\\<exists>D\\<in>DD. \\<not> D < C)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "have \"CC \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CC \\<subseteq> N", "using cc_subs"], ["proof (prove)\nusing this:\n  CC \\<subseteq> N - Red_F N\n\ngoal (1 subgoal):\n 1. CC \\<subseteq> N", "by auto"], ["proof (state)\nthis:\n  CC \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "then"], ["proof (chain)\npicking this:\n  CC \\<subseteq> N", "have \"CC \\<subseteq> N - {C. \\<exists>DD \\<subseteq> N. DD \\<Turnstile> {C} \\<and> (\\<forall>D \\<in> DD. D < C)}\""], ["proof (prove)\nusing this:\n  CC \\<subseteq> N\n\ngoal (1 subgoal):\n 1. CC \\<subseteq> N -\n                   {C. \\<exists>DD\\<subseteq>N.\n                          DD \\<Turnstile> {C} \\<and>\n                          (\\<forall>D\\<in>DD. D < C)}", "using cc_nr"], ["proof (prove)\nusing this:\n  CC \\<subseteq> N\n  \\<forall>C\\<in>CC.\n     \\<forall>DD\\<subseteq>N.\n        DD \\<Turnstile> {C} \\<longrightarrow>\n        (\\<exists>D\\<in>DD. \\<not> D < C)\n\ngoal (1 subgoal):\n 1. CC \\<subseteq> N -\n                   {C. \\<exists>DD\\<subseteq>N.\n                          DD \\<Turnstile> {C} \\<and>\n                          (\\<forall>D\\<in>DD. D < C)}", "by blast"], ["proof (state)\nthis:\n  CC \\<subseteq> N -\n                 {C. \\<exists>DD\\<subseteq>N.\n                        DD \\<Turnstile> {C} \\<and>\n                        (\\<forall>D\\<in>DD. D < C)}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_F N \\<Longrightarrow> x \\<in> Red_F (N - Red_F N)", "then"], ["proof (chain)\npicking this:\n  CC \\<subseteq> N -\n                 {C. \\<exists>DD\\<subseteq>N.\n                        DD \\<Turnstile> {C} \\<and>\n                        (\\<forall>D\\<in>DD. D < C)}", "show \"C \\<in> Red_F (N - Red_F N)\""], ["proof (prove)\nusing this:\n  CC \\<subseteq> N -\n                 {C. \\<exists>DD\\<subseteq>N.\n                        DD \\<Turnstile> {C} \\<and>\n                        (\\<forall>D\\<in>DD. D < C)}\n\ngoal (1 subgoal):\n 1. C \\<in> Red_F (N - Red_F N)", "using cc_ent_c cc_lt_c"], ["proof (prove)\nusing this:\n  CC \\<subseteq> N -\n                 {C. \\<exists>DD\\<subseteq>N.\n                        DD \\<Turnstile> {C} \\<and>\n                        (\\<forall>D\\<in>DD. D < C)}\n  CC \\<Turnstile> {C}\n  \\<forall>C'\\<in>CC. C' < C\n\ngoal (1 subgoal):\n 1. C \\<in> Red_F (N - Red_F N)", "unfolding Red_F_def"], ["proof (prove)\nusing this:\n  CC \\<subseteq> N -\n                 {C. \\<exists>DD\\<subseteq>N.\n                        DD \\<Turnstile> {C} \\<and>\n                        (\\<forall>D\\<in>DD. D < C)}\n  CC \\<Turnstile> {C}\n  \\<forall>C'\\<in>CC. C' < C\n\ngoal (1 subgoal):\n 1. C \\<in> {C. \\<exists>DD\\<subseteq>N -\n{C. \\<exists>DD\\<subseteq>N.\n       DD \\<Turnstile> {C} \\<and> (\\<forall>D\\<in>DD. D < C)}.\n                   DD \\<Turnstile> {C} \\<and> (\\<forall>D\\<in>DD. D < C)}", "by blast"], ["proof (state)\nthis:\n  C \\<in> Red_F (N - Red_F N)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Red_F_eq_Red_F_diff_Red_F: \"Red_F N = Red_F (N - Red_F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_F N = Red_F (N - Red_F N)", "by (simp add: Red_F_of_subset Red_F_subs_Red_F_diff_Red_F set_eq_subset)"], ["", "text \\<open>\nThe following results correspond to Lemma 4.6. It also uses \\<open>wlog_non_Red_F\\<close>.\n\\<close>"], ["", "lemma Red_I_of_subset: \"N \\<subseteq> N' \\<Longrightarrow> Red_I N \\<subseteq> Red_I N'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow> Red_I N \\<subseteq> Red_I N'", "unfolding Red_I_def redundant_infer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> N' \\<Longrightarrow>\n    {\\<iota> \\<in> Inf.\n     \\<exists>DD\\<subseteq>N.\n        DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n        {concl_of \\<iota>} \\<and>\n        (\\<forall>D\\<in>DD. D < main_prem_of \\<iota>)}\n    \\<subseteq> {\\<iota> \\<in> Inf.\n                 \\<exists>DD\\<subseteq>N'.\n                    DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n                    {concl_of \\<iota>} \\<and>\n                    (\\<forall>D\\<in>DD. D < main_prem_of \\<iota>)}", "by auto"], ["", "lemma Red_I_subs_Red_I_diff_Red_F: \"Red_I N \\<subseteq> Red_I (N - Red_F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I N \\<subseteq> Red_I (N - Red_F N)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "assume \\<iota>_ri: \"\\<iota> \\<in> Red_I N\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I N\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "define CC :: \"'f set\" where\n    \"CC = set (side_prems_of \\<iota>)\""], ["proof (state)\nthis:\n  CC = set (side_prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "define D :: 'f where\n    \"D = main_prem_of \\<iota>\""], ["proof (state)\nthis:\n  D = main_prem_of \\<iota>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "define E :: 'f where\n    \"E = concl_of \\<iota>\""], ["proof (state)\nthis:\n  E = concl_of \\<iota>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "obtain DD :: \"'f set\" where\n    dd_sub: \"DD \\<subseteq> N\" and\n    dd_ent: \"DD \\<union> CC \\<Turnstile> {E}\" and\n    dd_lt_d: \"\\<forall>C \\<in> DD. C < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>DD \\<subseteq> N; DD \\<union> CC \\<Turnstile> {E};\n         \\<forall>C\\<in>DD. C < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<iota>_ri"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I N\n\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>DD \\<subseteq> N; DD \\<union> CC \\<Turnstile> {E};\n         \\<forall>C\\<in>DD. C < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Red_I_def redundant_infer_def CC_def D_def E_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf.\n         \\<exists>DD\\<subseteq>N.\n            DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n            {concl_of \\<iota>} \\<and>\n            (\\<forall>D\\<in>DD. D < main_prem_of \\<iota>)}\n\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>DD \\<subseteq> N;\n         DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n         {concl_of \\<iota>};\n         \\<forall>C\\<in>DD. C < main_prem_of \\<iota>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  DD \\<subseteq> N\n  DD \\<union> CC \\<Turnstile> {E}\n  \\<forall>C\\<in>DD. C < D\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "obtain DDa :: \"'f set\" where\n    \"DDa \\<subseteq> N - Red_F N\" and \"DDa \\<union> CC \\<Turnstile> {E}\" and \"\\<forall>D' \\<in> DDa. D' < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>DDa.\n        \\<lbrakk>DDa \\<subseteq> N - Red_F N;\n         DDa \\<union> CC \\<Turnstile> {E};\n         \\<forall>D'\\<in>DDa. D' < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using wlog_non_Red_F[OF dd_sub dd_ent dd_lt_d]"], ["proof (prove)\nusing this:\n  \\<exists>DD\\<subseteq>N - Red_F N.\n     DD \\<union> CC \\<Turnstile> {E} \\<and> (\\<forall>D'\\<in>DD. D' < D)\n\ngoal (1 subgoal):\n 1. (\\<And>DDa.\n        \\<lbrakk>DDa \\<subseteq> N - Red_F N;\n         DDa \\<union> CC \\<Turnstile> {E};\n         \\<forall>D'\\<in>DDa. D' < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  DDa \\<subseteq> N - Red_F N\n  DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DDa. D' < D\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Red_I N \\<Longrightarrow> x \\<in> Red_I (N - Red_F N)", "then"], ["proof (chain)\npicking this:\n  DDa \\<subseteq> N - Red_F N\n  DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DDa. D' < D", "show \"\\<iota> \\<in> Red_I (N - Red_F N)\""], ["proof (prove)\nusing this:\n  DDa \\<subseteq> N - Red_F N\n  DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DDa. D' < D\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I (N - Red_F N)", "using \\<iota>_ri"], ["proof (prove)\nusing this:\n  DDa \\<subseteq> N - Red_F N\n  DDa \\<union> CC \\<Turnstile> {E}\n  \\<forall>D'\\<in>DDa. D' < D\n  \\<iota> \\<in> Red_I N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I (N - Red_F N)", "unfolding Red_I_def redundant_infer_def CC_def D_def E_def"], ["proof (prove)\nusing this:\n  DDa \\<subseteq> N - Red_F N\n  DDa \\<union> set (side_prems_of \\<iota>) \\<Turnstile> {concl_of \\<iota>}\n  \\<forall>D'\\<in>DDa. D' < main_prem_of \\<iota>\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf.\n         \\<exists>DD\\<subseteq>N.\n            DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n            {concl_of \\<iota>} \\<and>\n            (\\<forall>D\\<in>DD. D < main_prem_of \\<iota>)}\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf.\n           \\<exists>DD\\<subseteq>N - Red_F N.\n              DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n              {concl_of \\<iota>} \\<and>\n              (\\<forall>D\\<in>DD. D < main_prem_of \\<iota>)}", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I (N - Red_F N)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Red_I_eq_Red_I_diff_Red_F: \"Red_I N = Red_I (N - Red_F N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I N = Red_I (N - Red_F N)", "by (metis Diff_subset Red_I_of_subset Red_I_subs_Red_I_diff_Red_F subset_antisym)"], ["", "lemma Red_I_to_Inf: \"Red_I N \\<subseteq> Inf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Red_I N \\<subseteq> Inf", "unfolding Red_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<iota> \\<in> Inf. redundant_infer N \\<iota>} \\<subseteq> Inf", "by blast"], ["", "lemma Red_F_of_Red_F_subset: \"N' \\<subseteq> Red_F N \\<Longrightarrow> Red_F N \\<subseteq> Red_F (N - N')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N' \\<subseteq> Red_F N \\<Longrightarrow>\n    Red_F N \\<subseteq> Red_F (N - N')", "by (metis Diff_mono Red_F_eq_Red_F_diff_Red_F Red_F_of_subset order_refl)"], ["", "lemma Red_I_of_Red_F_subset: \"N' \\<subseteq> Red_F N \\<Longrightarrow> Red_I N \\<subseteq> Red_I (N - N')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N' \\<subseteq> Red_F N \\<Longrightarrow>\n    Red_I N \\<subseteq> Red_I (N - N')", "by (metis Diff_mono Red_I_eq_Red_I_diff_Red_F Red_I_of_subset order_refl)"], ["", "lemma Red_F_model: \"M \\<Turnstile> N - Red_F N \\<Longrightarrow> M \\<Turnstile> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<Turnstile> N - Red_F N \\<Longrightarrow> M \\<Turnstile> N", "by (metis (no_types) DiffI Red_F_imp_ex_non_Red_F entail_set_all_formulas entails_trans\n      subset_entailed)"], ["", "lemma Red_F_Bot: \"B \\<in> Bot \\<Longrightarrow> N \\<Turnstile> {B} \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n    \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}", "using Red_F_model entails_trans subset_entailed"], ["proof (prove)\nusing this:\n  ?M \\<Turnstile> ?N - Red_F ?N \\<Longrightarrow> ?M \\<Turnstile> ?N\n  \\<lbrakk>?N1.0 \\<Turnstile> ?N2.0; ?N2.0 \\<Turnstile> ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N3.0\n  ?N2.0 \\<subseteq> ?N1.0 \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N2.0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> Bot; N \\<Turnstile> {B}\\<rbrakk>\n    \\<Longrightarrow> N - Red_F N \\<Turnstile> {B}", "by blast"], ["", "lemma Red_I_of_Inf_to_N:\n  assumes\n    in_\\<iota>: \"\\<iota> \\<in> Inf\" and\n    concl_in: \"concl_of \\<iota> \\<in> N\"\n  shows \"\\<iota> \\<in> Red_I N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "have \"concl_of \\<iota> \\<in> N \\<Longrightarrow> redundant_infer N \\<iota>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concl_of \\<iota> \\<in> N \\<Longrightarrow> redundant_infer N \\<iota>", "unfolding redundant_infer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. concl_of \\<iota> \\<in> N \\<Longrightarrow>\n    \\<exists>DD\\<subseteq>N.\n       DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n       {concl_of \\<iota>} \\<and>\n       (\\<forall>D\\<in>DD. D < main_prem_of \\<iota>)", "by (metis (no_types) Inf_reductive empty_iff empty_subsetI entail_union in_\\<iota> insert_iff\n        insert_subset subset_entailed subset_refl)"], ["proof (state)\nthis:\n  concl_of \\<iota> \\<in> N \\<Longrightarrow> redundant_infer N \\<iota>\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "then"], ["proof (chain)\npicking this:\n  concl_of \\<iota> \\<in> N \\<Longrightarrow> redundant_infer N \\<iota>", "show \"\\<iota> \\<in> Red_I N\""], ["proof (prove)\nusing this:\n  concl_of \\<iota> \\<in> N \\<Longrightarrow> redundant_infer N \\<iota>\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "by (simp add: Red_I_def concl_in in_\\<iota>)"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I N\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe following corresponds to Theorems 4.7 and 4.8:\n\\<close>"], ["", "sublocale calculus Bot Inf \"(\\<Turnstile>)\" Red_I Red_F"], ["proof (prove)\ngoal (1 subgoal):\n 1. calculus Bot Inf (\\<Turnstile>) Red_I Red_F", "by (unfold_locales, fact Red_I_to_Inf, fact Red_F_Bot, fact Red_F_of_subset,\n      fact Red_I_of_subset, fact Red_F_of_Red_F_subset, fact Red_I_of_Red_F_subset,\n      fact Red_I_of_Inf_to_N)"], ["", "end"], ["", "locale counterex_reducing_calculus_with_standard_redundancy =\n  calculus_with_standard_redundancy Inf + counterex_reducing_inference_system _ _ Inf\n  for Inf :: \"('f :: wellorder) inference set\"\nbegin"], ["", "subsection \\<open>Refutational Completeness\\<close>"], ["", "text \\<open>\nThe following result loosely corresponds to Theorem 4.9.\n\\<close>"], ["", "lemma saturated_model:\n  assumes\n    satur: \"saturated N\" and\n    bot_ni_n: \"N \\<inter> Bot = {}\"\n  shows \"I_of N \\<Turnstile> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I_of N \\<Turnstile> N", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "assume \"\\<not> I_of N \\<Turnstile> N\""], ["proof (state)\nthis:\n  \\<not> I_of N \\<Turnstile> N\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> I_of N \\<Turnstile> N", "obtain D :: 'f where\n    d_in_n: \"D \\<in> N\" and\n    d_cex: \"\\<not> I_of N \\<Turnstile> {D}\" and\n    d_min: \"\\<And>C. C \\<in> N \\<Longrightarrow> C < D \\<Longrightarrow> I_of N \\<Turnstile> {C}\""], ["proof (prove)\nusing this:\n  \\<not> I_of N \\<Turnstile> N\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>D \\<in> N; \\<not> I_of N \\<Turnstile> {D};\n         \\<And>C.\n            \\<lbrakk>C \\<in> N; C < D\\<rbrakk>\n            \\<Longrightarrow> I_of N \\<Turnstile> {C}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_min_counterex"], ["proof (prove)\nusing this:\n  \\<not> I_of N \\<Turnstile> N\n  \\<not> ?I \\<Turnstile> ?N \\<Longrightarrow>\n  \\<exists>C\\<in>?N.\n     \\<not> ?I \\<Turnstile> {C} \\<and>\n     (\\<forall>D\\<in>?N. D < C \\<longrightarrow> ?I \\<Turnstile> {D})\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>D \\<in> N; \\<not> I_of N \\<Turnstile> {D};\n         \\<And>C.\n            \\<lbrakk>C \\<in> N; C < D\\<rbrakk>\n            \\<Longrightarrow> I_of N \\<Turnstile> {C}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}", "obtain \\<iota> :: \"'f inference\" where\n    \\<iota>_in: \"\\<iota> \\<in> Inf\" and\n    \\<iota>_mprem: \"D = main_prem_of \\<iota>\" and\n    sprem_subs_n: \"set (side_prems_of \\<iota>) \\<subseteq> N\" and\n    sprem_true: \"I_of N \\<Turnstile> set (side_prems_of \\<iota>)\" and\n    concl_cex: \"\\<not> I_of N \\<Turnstile> {concl_of \\<iota>}\" and\n    concl_lt_d: \"concl_of \\<iota> < D\""], ["proof (prove)\nusing this:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>.\n        \\<lbrakk>\\<iota> \\<in> Inf; D = main_prem_of \\<iota>;\n         set (side_prems_of \\<iota>) \\<subseteq> N;\n         I_of N \\<Turnstile> set (side_prems_of \\<iota>);\n         \\<not> I_of N \\<Turnstile> {concl_of \\<iota>};\n         concl_of \\<iota> < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Inf_counterex_reducing[OF bot_ni_n] not_le"], ["proof (prove)\nusing this:\n  D \\<in> N\n  \\<not> I_of N \\<Turnstile> {D}\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n  \\<lbrakk>?D \\<in> N; \\<not> I_of N \\<Turnstile> {?D};\n   \\<And>C.\n      \\<lbrakk>C \\<in> N; \\<not> I_of N \\<Turnstile> {C}\\<rbrakk>\n      \\<Longrightarrow> ?D \\<le> C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<iota>\\<in>Inf.\n                       prems_of \\<iota> \\<noteq> [] \\<and>\n                       main_prem_of \\<iota> = ?D \\<and>\n                       set (side_prems_of \\<iota>) \\<subseteq> N \\<and>\n                       I_of N \\<Turnstile>\n                       set (side_prems_of \\<iota>) \\<and>\n                       \\<not> I_of N \\<Turnstile> {concl_of \\<iota>} \\<and>\n                       concl_of \\<iota> < ?D\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<iota>.\n        \\<lbrakk>\\<iota> \\<in> Inf; D = main_prem_of \\<iota>;\n         set (side_prems_of \\<iota>) \\<subseteq> N;\n         I_of N \\<Turnstile> set (side_prems_of \\<iota>);\n         \\<not> I_of N \\<Turnstile> {concl_of \\<iota>};\n         concl_of \\<iota> < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf\n  D = main_prem_of \\<iota>\n  set (side_prems_of \\<iota>) \\<subseteq> N\n  I_of N \\<Turnstile> set (side_prems_of \\<iota>)\n  \\<not> I_of N \\<Turnstile> {concl_of \\<iota>}\n  concl_of \\<iota> < D\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "have \"\\<iota> \\<in> Red_I N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "by (rule subsetD[OF satur[unfolded saturated_def Inf_from_def]],\n        simp add: \\<iota>_in set_prems_of Inf_has_prem)\n      (use \\<iota>_mprem d_in_n sprem_subs_n  in blast)"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I N\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Red_I N", "have \"\\<iota> \\<in> Red_I N\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "using Red_I_without_red_F"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I N\n  Red_I (?N - Red_F ?N) = Red_I ?N\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I N", "by blast"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I N\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Red_I N", "obtain DD :: \"'f set\" where\n    dd_subs_n: \"DD \\<subseteq> N\" and\n    dd_cc_ent_d: \"DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile> {concl_of \\<iota>}\" and\n    dd_lt_d: \"\\<forall>C \\<in> DD. C < D\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I N\n\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>DD \\<subseteq> N;\n         DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n         {concl_of \\<iota>};\n         \\<forall>C\\<in>DD. C < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Red_I_def redundant_infer_def \\<iota>_mprem"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf.\n         \\<exists>DD\\<subseteq>N.\n            DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n            {concl_of \\<iota>} \\<and>\n            (\\<forall>D\\<in>DD. D < main_prem_of \\<iota>)}\n\ngoal (1 subgoal):\n 1. (\\<And>DD.\n        \\<lbrakk>DD \\<subseteq> N;\n         DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile>\n         {concl_of \\<iota>};\n         \\<forall>C\\<in>DD. C < main_prem_of \\<iota>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  DD \\<subseteq> N\n  DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile> {concl_of \\<iota>}\n  \\<forall>C\\<in>DD. C < D\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "from dd_subs_n dd_lt_d"], ["proof (chain)\npicking this:\n  DD \\<subseteq> N\n  \\<forall>C\\<in>DD. C < D", "have \"I_of N \\<Turnstile> DD\""], ["proof (prove)\nusing this:\n  DD \\<subseteq> N\n  \\<forall>C\\<in>DD. C < D\n\ngoal (1 subgoal):\n 1. I_of N \\<Turnstile> DD", "using d_min"], ["proof (prove)\nusing this:\n  DD \\<subseteq> N\n  \\<forall>C\\<in>DD. C < D\n  \\<lbrakk>?C \\<in> N; ?C < D\\<rbrakk>\n  \\<Longrightarrow> I_of N \\<Turnstile> {?C}\n\ngoal (1 subgoal):\n 1. I_of N \\<Turnstile> DD", "by (meson ex_min_counterex subset_iff)"], ["proof (state)\nthis:\n  I_of N \\<Turnstile> DD\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  I_of N \\<Turnstile> DD", "have \"I_of N \\<Turnstile> {concl_of \\<iota>}\""], ["proof (prove)\nusing this:\n  I_of N \\<Turnstile> DD\n\ngoal (1 subgoal):\n 1. I_of N \\<Turnstile> {concl_of \\<iota>}", "using entails_trans dd_cc_ent_d entail_union sprem_true"], ["proof (prove)\nusing this:\n  I_of N \\<Turnstile> DD\n  \\<lbrakk>?N1.0 \\<Turnstile> ?N2.0; ?N2.0 \\<Turnstile> ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N3.0\n  DD \\<union> set (side_prems_of \\<iota>) \\<Turnstile> {concl_of \\<iota>}\n  (?N \\<Turnstile> ?N1.0 \\<and> ?N \\<Turnstile> ?N2.0) =\n  (?N \\<Turnstile> ?N1.0 \\<union> ?N2.0)\n  I_of N \\<Turnstile> set (side_prems_of \\<iota>)\n\ngoal (1 subgoal):\n 1. I_of N \\<Turnstile> {concl_of \\<iota>}", "by blast"], ["proof (state)\nthis:\n  I_of N \\<Turnstile> {concl_of \\<iota>}\n\ngoal (1 subgoal):\n 1. \\<not> I_of N \\<Turnstile> N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  I_of N \\<Turnstile> {concl_of \\<iota>}", "show False"], ["proof (prove)\nusing this:\n  I_of N \\<Turnstile> {concl_of \\<iota>}\n\ngoal (1 subgoal):\n 1. False", "using concl_cex"], ["proof (prove)\nusing this:\n  I_of N \\<Turnstile> {concl_of \\<iota>}\n  \\<not> I_of N \\<Turnstile> {concl_of \\<iota>}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nA more faithful abstract version of Theorem 4.9 does not hold without some conditions, according to\nNitpick:\n\\<close>"], ["", "corollary saturated_complete:\n  assumes\n    satur: \"saturated N\" and\n    unsat: \"N \\<Turnstile> Bot\"\n  shows \"N \\<inter> Bot \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<inter> Bot \\<noteq> {}", "oops"], ["", "end"], ["", "end"]]}