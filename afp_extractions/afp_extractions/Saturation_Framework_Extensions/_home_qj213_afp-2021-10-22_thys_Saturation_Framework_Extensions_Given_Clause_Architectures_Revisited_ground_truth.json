{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions/Given_Clause_Architectures_Revisited.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions", "problem_names": ["lemma gc_invar_infinity:\n  assumes\n    nnil: \"\\<not> lnull Ns\" and\n    invar: \"\\<forall>i. enat i < llength Ns \\<longrightarrow> gc_invar Ns (enat i)\"\n  shows \"gc_invar Ns \\<infinity>\"", "lemma gc_invar_gc_init:\n  assumes\n    \"\\<not> lnull Ns\" and\n    \"active_subset (lhd Ns) = {}\"\n  shows \"gc_invar Ns 0\"", "lemma gc_invar_gc_step:\n  assumes\n    Si_lt: \"enat (Suc i) < llength Ns\" and\n    invar: \"gc_invar Ns i\" and\n    step: \"lnth Ns i \\<leadsto>GC lnth Ns (Suc i)\"\n  shows \"gc_invar Ns (Suc i)\"", "lemma gc_invar_gc:\n  assumes\n    gc: \"chain (\\<leadsto>GC) Ns\" and\n    init: \"active_subset (lhd Ns) = {}\" and\n    i_lt: \"i < llength Ns\"\n  shows \"gc_invar Ns i\"", "lemma gc_fair_new_proof:\n  assumes\n    gc: \"chain (\\<leadsto>GC) Ns\" and\n    init: \"active_subset (lhd Ns) = {}\" and\n    lim: \"passive_subset (Liminf_llist Ns) = {}\"\n  shows \"fair Ns\"", "lemma lgc_invar_infinity:\n  assumes\n    nnil: \"\\<not> lnull TNs\" and\n    invar: \"\\<forall>i. enat i < llength TNs \\<longrightarrow> lgc_invar TNs (enat i)\"\n  shows \"lgc_invar TNs \\<infinity>\"", "lemma lgc_invar_lgc_init:\n  assumes\n    nnil: \"\\<not> lnull TNs\" and\n    n_init: \"active_subset (snd (lhd TNs)) = {}\" and\n    t_init: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\"\n  shows \"lgc_invar TNs 0\"", "lemma lgc_invar_lgc_step:\n  assumes\n    Si_lt: \"enat (Suc i) < llength TNs\" and\n    invar: \"lgc_invar TNs i\" and\n    step: \"lnth TNs i \\<leadsto>LGC lnth TNs (Suc i)\"\n  shows \"lgc_invar TNs (Suc i)\"", "lemma lgc_invar_lgc:\n  assumes\n    lgc: \"chain (\\<leadsto>LGC) TNs\" and\n    n_init: \"active_subset (snd (lhd TNs)) = {}\" and\n    t_init: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\" and\n    i_lt: \"i < llength TNs\"\n  shows \"lgc_invar TNs i\"", "lemma lgc_fair_new_proof:\n  assumes\n    lgc: \"chain (\\<leadsto>LGC) TNs\" and\n    n_init: \"active_subset (snd (lhd TNs)) = {}\" and\n    n_lim: \"passive_subset (Liminf_llist (lmap snd TNs)) = {}\" and\n    t_init: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\" and\n    t_lim: \"Liminf_llist (lmap fst TNs) = {}\"\n  shows \"fair (lmap snd TNs)\""], "translations": [["", "lemma gc_invar_infinity:\n  assumes\n    nnil: \"\\<not> lnull Ns\" and\n    invar: \"\\<forall>i. enat i < llength Ns \\<longrightarrow> gc_invar Ns (enat i)\"\n  shows \"gc_invar Ns \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gc_invar Ns \\<infinity>", "unfolding gc_invar_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist Ns \\<infinity>))\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) \\<infinity>", "proof (intro subsetI, unfold Liminf_upto_llist_infinity Sup_upto_llist_infinity)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "assume \\<iota>_inff: \"\\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist Ns))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "define As where\n    \"As = lmap active_subset Ns\""], ["proof (state)\nthis:\n  As = lmap active_subset Ns\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have act_ns: \"active_subset (Liminf_llist Ns) = Liminf_llist As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. active_subset (Liminf_llist Ns) = Liminf_llist As", "unfolding As_def active_subset_def Liminf_set_filter_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_llist (lmap (\\<lambda>X. {CL \\<in> X. snd CL = active}) Ns) =\n    Liminf_llist (lmap (\\<lambda>M. {CL \\<in> M. snd CL = active}) Ns)", ".."], ["proof (state)\nthis:\n  active_subset (Liminf_llist Ns) = Liminf_llist As\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "note \\<iota>_inf = Inf_if_Inf_from[OF \\<iota>_inff]"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "note \\<iota>_inff' = \\<iota>_inff[unfolded act_ns]"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (Liminf_llist As)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"\\<not> lnull As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull As", "unfolding As_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap active_subset Ns)", "using nnil"], ["proof (prove)\nusing this:\n  \\<not> lnull Ns\n\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap active_subset Ns)", "by auto"], ["proof (state)\nthis:\n  \\<not> lnull As\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "moreover"], ["proof (state)\nthis:\n  \\<not> lnull As\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> Liminf_llist As", "using \\<iota>_inff'[unfolded Inf_from_def]"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist As}\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> Liminf_llist As", "by simp"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> lnull As\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As", "obtain i where\n    i_lt_as: \"enat i < llength As\" and\n    prems_sub_ge_i: \"set (prems_of \\<iota>) \\<subseteq> (\\<Inter>j \\<in> {j. i \\<le> j \\<and> enat j < llength As}. lnth As j)\""], ["proof (prove)\nusing this:\n  \\<not> lnull As\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength As;\n         set (prems_of \\<iota>)\n         \\<subseteq> \\<Inter>\n                      (lnth As `\n                       {j. i \\<le> j \\<and> enat j < llength As})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_subset_Liminf_llist_imp_exists_index"], ["proof (prove)\nusing this:\n  \\<not> lnull As\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\n  \\<lbrakk>\\<not> lnull ?Xs; finite ?X;\n   ?X \\<subseteq> Liminf_llist ?Xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       enat i < llength ?Xs \\<and>\n                       ?X \\<subseteq> \\<Inter>\n (lnth ?Xs ` {j. i \\<le> j \\<and> enat j < llength ?Xs})\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength As;\n         set (prems_of \\<iota>)\n         \\<subseteq> \\<Inter>\n                      (lnth As `\n                       {j. i \\<le> j \\<and> enat j < llength As})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat i < llength As\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter> (lnth As ` {j. i \\<le> j \\<and> enat j < llength As})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "note i_lt_ns = i_lt_as[unfolded As_def, simplified]"], ["proof (state)\nthis:\n  enat i < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"set (prems_of \\<iota>) \\<subseteq> lnth As i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> lnth As i", "using prems_sub_ge_i i_lt_as"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter> (lnth As ` {j. i \\<le> j \\<and> enat j < llength As})\n  enat i < llength As\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> lnth As i", "by auto"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i", "have \"\\<iota> \\<in> Inf_from (active_subset (lnth Ns i))\""], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (lnth Ns i))", "using i_lt_as \\<iota>_inf"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i\n  enat i < llength As\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (lnth Ns i))", "unfolding Inf_from_def As_def"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> lnth (lmap active_subset Ns) i\n  enat i < llength (lmap active_subset Ns)\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           set (prems_of \\<iota>) \\<subseteq> active_subset (lnth Ns i)}", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (lnth Ns i))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_from (active_subset (lnth Ns i))", "have \"\\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset (lnth Ns i))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)", "using nnil i_lt_ns invar[unfolded gc_invar_def]"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset (lnth Ns i))\n  \\<not> lnull Ns\n  enat i < llength Ns\n  \\<forall>i.\n     enat i < llength Ns \\<longrightarrow>\n     Inf_from (active_subset (Liminf_upto_llist Ns (enat i)))\n     \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from (active_subset (Liminf_llist Ns)) \\<Longrightarrow>\n       x \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)", "show \"\\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> Ns)\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "using Sup_upto_llist_subset_Sup_llist"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n  Sup_upto_llist ?Xs ?j \\<subseteq> Sup_llist ?Xs\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> Ns)", "by fastforce"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_llist (lmap Red_I_\\<G> Ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gc_invar_gc_init:\n  assumes\n    \"\\<not> lnull Ns\" and\n    \"active_subset (lhd Ns) = {}\"\n  shows \"gc_invar Ns 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gc_invar Ns 0", "using assms labeled_inf_have_prems"], ["proof (prove)\nusing this:\n  \\<not> lnull Ns\n  active_subset (lhd Ns) = {}\n  ?\\<iota> \\<in> Inf_FL \\<Longrightarrow> prems_of ?\\<iota> \\<noteq> []\n\ngoal (1 subgoal):\n 1. gc_invar Ns 0", "unfolding gc_invar_def Inf_from_def"], ["proof (prove)\nusing this:\n  \\<not> lnull Ns\n  active_subset (lhd Ns) = {}\n  ?\\<iota> \\<in> Inf_FL \\<Longrightarrow> prems_of ?\\<iota> \\<noteq> []\n\ngoal (1 subgoal):\n 1. {\\<iota> \\<in> Inf_FL.\n     set (prems_of \\<iota>)\n     \\<subseteq> active_subset (Liminf_upto_llist Ns 0)}\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) 0", "by auto"], ["", "lemma gc_invar_gc_step:\n  assumes\n    Si_lt: \"enat (Suc i) < llength Ns\" and\n    invar: \"gc_invar Ns i\" and\n    step: \"lnth Ns i \\<leadsto>GC lnth Ns (Suc i)\"\n  shows \"gc_invar Ns (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gc_invar Ns (enat (Suc i))", "using step Si_lt invar"], ["proof (prove)\nusing this:\n  lnth Ns i \\<leadsto>GC lnth Ns (Suc i)\n  enat (Suc i) < llength Ns\n  gc_invar Ns (enat i)\n\ngoal (1 subgoal):\n 1. gc_invar Ns (enat (Suc i))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have i_lt: \"enat i < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength Ns", "using Si_lt Suc_ile_eq order.strict_implies_order"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength Ns\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?a < ?b \\<Longrightarrow> ?a \\<le> ?b\n\ngoal (1 subgoal):\n 1. enat i < llength Ns", "by blast"], ["proof (state)\nthis:\n  enat i < llength Ns\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have lim_i: \"Liminf_upto_llist Ns (enat i) = lnth Ns i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_upto_llist Ns (enat i) = lnth Ns i", "using i_lt"], ["proof (prove)\nusing this:\n  enat i < llength Ns\n\ngoal (1 subgoal):\n 1. Liminf_upto_llist Ns (enat i) = lnth Ns i", "by auto"], ["proof (state)\nthis:\n  Liminf_upto_llist Ns (enat i) = lnth Ns i\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have lim_Si: \"Liminf_upto_llist Ns (enat (Suc i)) = lnth Ns (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_upto_llist Ns (enat (Suc i)) = lnth Ns (Suc i)", "using Si_lt"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength Ns\n\ngoal (1 subgoal):\n 1. Liminf_upto_llist Ns (enat (Suc i)) = lnth Ns (Suc i)", "by auto"], ["proof (state)\nthis:\n  Liminf_upto_llist Ns (enat (Suc i)) = lnth Ns (Suc i)\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "{"], ["proof (state)\nthis:\n  Liminf_upto_llist Ns (enat (Suc i)) = lnth Ns (Suc i)\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "case (process N M M')"], ["proof (state)\nthis:\n  lnth Ns i = N \\<union> M\n  lnth Ns (Suc i) = N \\<union> M'\n  M \\<subseteq> Red_F_\\<G> (N \\<union> M')\n  active_subset M' = {}\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "note ni = this(1) and nSi = this(2) and m'_pas = this(4)"], ["proof (state)\nthis:\n  lnth Ns i = N \\<union> M\n  lnth Ns (Suc i) = N \\<union> M'\n  active_subset M' = {}\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have \"Inf_from (active_subset (N \\<union> M')) \\<subseteq> Inf_from (active_subset (N \\<union> M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M'))\n    \\<subseteq> Inf_from (active_subset (N \\<union> M))", "using m'_pas"], ["proof (prove)\nusing this:\n  active_subset M' = {}\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M'))\n    \\<subseteq> Inf_from (active_subset (N \\<union> M))", "by (metis active_subset_union boolean_algebra_cancel.sup0 Inf_from_mono\n          subset_Un_eq sup_left_idem)"], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> Inf_from (active_subset (N \\<union> M))\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "also"], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> Inf_from (active_subset (N \\<union> M))\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have \"\\<dots> \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M))\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)", "using invar"], ["proof (prove)\nusing this:\n  gc_invar Ns (enat i)\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M))\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)", "unfolding gc_invar_def lim_i ni"], ["proof (prove)\nusing this:\n  Inf_from (active_subset (N \\<union> M))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M))\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)", "by auto"], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "also"], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have \"\\<dots> \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "by simp"], ["proof (state)\nthis:\n  Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (2 subgoals):\n 1. \\<And>N M M'.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> M; lnth Ns (Suc i) = N \\<union> M';\n        M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n 2. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "finally"], ["proof (chain)\npicking this:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. gc_invar Ns (enat (Suc i))", "unfolding gc_invar_def lim_Si nSi"], ["proof (prove)\nusing this:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M'))\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "."], ["proof (state)\nthis:\n  gc_invar Ns (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "case (infer N C L M)"], ["proof (state)\nthis:\n  lnth Ns i = N \\<union> {(C, L)}\n  lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M\n  L \\<noteq> active\n  active_subset M = {}\n  no_labels.Inf_between (fst ` active_subset N) {C}\n  \\<subseteq> no_labels.Red_I_\\<G>\n               (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "note ni = this(1) and nSi = this(2) and l_pas = this(3) and m_pas = this(4) and\n      inff_red = this(5)"], ["proof (state)\nthis:\n  lnth Ns i = N \\<union> {(C, L)}\n  lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M\n  L \\<noteq> active\n  active_subset M = {}\n  no_labels.Inf_between (fst ` active_subset N) {C}\n  \\<subseteq> no_labels.Red_I_\\<G>\n               (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "{"], ["proof (state)\nthis:\n  lnth Ns i = N \\<union> {(C, L)}\n  lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M\n  L \\<noteq> active\n  active_subset M = {}\n  no_labels.Inf_between (fst ` active_subset N) {C}\n  \\<subseteq> no_labels.Red_I_\\<G>\n               (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "assume \\<iota>_inff: \"\\<iota> \\<in> Inf_from (active_subset (N \\<union> {(C, active)} \\<union> M))\""], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> Inf_from (active_subset (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have \\<iota>_inf: \"\\<iota> \\<in> Inf_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "using \\<iota>_inff"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> Inf_from (active_subset (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "unfolding Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset (N \\<union> {(C, active)} \\<union> M)}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_FL", "have F\\<iota>_inf: \"to_F \\<iota> \\<in> Inf_F\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "using Inf_FL_to_Inf_F[folded to_F_def]"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_FL\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  to_F ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "by fastforce"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have \"\\<iota> \\<in> Inf_from (active_subset N \\<union> {(C, active)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset N \\<union> {(C, active)})", "using \\<iota>_inff m_pas"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> Inf_from (active_subset (N \\<union> {(C, active)} \\<union> M))\n  active_subset M = {}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset N \\<union> {(C, active)})", "by simp"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset N \\<union> {(C, active)})\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_from (active_subset N \\<union> {(C, active)})", "have F\\<iota>_inff:\n        \"to_F \\<iota> \\<in> no_labels.Inf_from (fst ` (active_subset N \\<union> {(C, active)}))\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N \\<union> {(C, active)})\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_from\n           (fst ` (active_subset N \\<union> {(C, active)}))", "using F\\<iota>_inf"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N \\<union> {(C, active)})\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_from\n           (fst ` (active_subset N \\<union> {(C, active)}))", "unfolding to_F_def Inf_from_def no_labels.Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset N \\<union> {(C, active)}}\n  Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>)) \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>)\n           \\<subseteq> fst ` (active_subset N \\<union> {(C, active)})}", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from (fst ` (active_subset N \\<union> {(C, active)}))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have \"\\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "proof (cases \"to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_between (fst ` active_subset N)\n           {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n 2. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "case True"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (2 subgoals):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_between (fst ` active_subset N)\n           {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n 2. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}", "have \"to_F \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N \\<union> {(C, active)} \\<union> M))\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> no_labels.Red_I_\\<G> (fst ` (N \\<union> {(C, active)} \\<union> M))", "using inff_red"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\n  no_labels.Inf_between (fst ` active_subset N) {C}\n  \\<subseteq> no_labels.Red_I_\\<G>\n               (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> no_labels.Red_I_\\<G> (fst ` (N \\<union> {(C, active)} \\<union> M))", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota>\n  \\<in> no_labels.Red_I_\\<G> (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (2 subgoals):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_between (fst ` active_subset N)\n           {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n 2. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota>\n  \\<in> no_labels.Red_I_\\<G> (fst ` (N \\<union> {(C, active)} \\<union> M))", "have \"\\<iota> \\<in> Red_I_\\<G> (N \\<union> {(C, active)} \\<union> M)\""], ["proof (prove)\nusing this:\n  to_F \\<iota>\n  \\<in> no_labels.Red_I_\\<G> (fst ` (N \\<union> {(C, active)} \\<union> M))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (N \\<union> {(C, active)} \\<union> M)", "by (subst labeled_red_inf_eq_red_inf[OF \\<iota>_inf])"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> (N \\<union> {(C, active)} \\<union> M)\n\ngoal (2 subgoals):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_between (fst ` active_subset N)\n           {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n 2. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Red_I_\\<G> (N \\<union> {(C, active)} \\<union> M)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (N \\<union> {(C, active)} \\<union> M)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "using Si_lt"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (N \\<union> {(C, active)} \\<union> M)\n  enat (Suc i) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "using nSi"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (N \\<union> {(C, active)} \\<union> M)\n  enat (Suc i) < llength Ns\n  lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "case False"], ["proof (state)\nthis:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}", "have \"to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)", "using F\\<iota>_inff"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from (fst ` (active_subset N \\<union> {(C, active)}))\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)", "unfolding no_labels.Inf_from_def no_labels.Inf_between_def"], ["proof (prove)\nusing this:\n  to_F \\<iota>\n  \\<notin> {\\<iota> \\<in> Inf_F.\n            set (prems_of \\<iota>)\n            \\<subseteq> fst ` active_subset N \\<union> {C}} -\n           {\\<iota> \\<in> Inf_F.\n            set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N - {C}}\n  to_F \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_F.\n         set (prems_of \\<iota>)\n         \\<subseteq> fst ` (active_subset N \\<union> {(C, active)})}\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N}", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)", "have \"\\<iota> \\<in> Inf_from (active_subset N)\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset N)", "using \\<iota>_inf l_pas"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\n  \\<iota> \\<in> Inf_FL\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset N)", "unfolding to_F_def Inf_from_def no_labels.Inf_from_def"], ["proof (prove)\nusing this:\n  Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n  \\<in> {\\<iota> \\<in> Inf_F.\n         set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N}\n  \\<iota> \\<in> Inf_FL\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           set (prems_of \\<iota>) \\<subseteq> active_subset N}", "by clarsimp (smt \\<iota>_inff[unfolded Inf_from_def] active_subset_def imageE image_subset_iff\n              in_mono mem_Collect_eq prod.collapse)"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_from (active_subset N)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "using invar l_pas"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N)\n  gc_invar Ns (enat i)\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "unfolding gc_invar_def lim_i ni"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N)\n  Inf_from (active_subset (N \\<union> {(C, L)}))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat i)\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "}"], ["proof (state)\nthis:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset\n           (N \\<union> {(C, active)} \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2 \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>N C L M.\n       \\<lbrakk>enat (Suc i) < llength Ns; gc_invar Ns (enat i);\n        lnth Ns i = N \\<union> {(C, L)};\n        lnth Ns (Suc i) = N \\<union> {(C, active)} \\<union> M;\n        L \\<noteq> active; active_subset M = {};\n        no_labels.Inf_between (fst ` active_subset N) {C}\n        \\<subseteq> no_labels.Red_I_\\<G>\n                     (fst ` (N \\<union> {(C, active)} \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset\n           (N \\<union> {(C, active)} \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2 \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset\n           (N \\<union> {(C, active)} \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2 \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. gc_invar Ns (enat (Suc i))", "unfolding gc_invar_def lim_Si nSi"], ["proof (prove)\nusing this:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset\n           (N \\<union> {(C, active)} \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2 \\<in> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> {(C, active)} \\<union> M))\n    \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) (enat (Suc i))", "by blast"], ["proof (state)\nthis:\n  gc_invar Ns (enat (Suc i))\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<lbrakk>lnth Ns i = ?N2 \\<union> {(?C2, ?L2)};\n   lnth Ns (Suc i) = ?N2 \\<union> {(?C2, active)} \\<union> ?M2;\n   ?L2 \\<noteq> active; active_subset ?M2 = {};\n   no_labels.Inf_between (fst ` active_subset ?N2) {?C2}\n   \\<subseteq> no_labels.Red_I_\\<G>\n                (fst ` (?N2 \\<union> {(?C2, active)} \\<union> ?M2))\\<rbrakk>\n  \\<Longrightarrow> gc_invar Ns (enat (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gc_invar_gc:\n  assumes\n    gc: \"chain (\\<leadsto>GC) Ns\" and\n    init: \"active_subset (lhd Ns) = {}\" and\n    i_lt: \"i < llength Ns\"\n  shows \"gc_invar Ns i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gc_invar Ns i", "using i_lt"], ["proof (prove)\nusing this:\n  i < llength Ns\n\ngoal (1 subgoal):\n 1. gc_invar Ns i", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>nat.\n       enat nat < llength Ns \\<Longrightarrow> gc_invar Ns (enat nat)\n 2. \\<infinity> < llength Ns \\<Longrightarrow> gc_invar Ns \\<infinity>", "case (enat i)"], ["proof (state)\nthis:\n  enat i < llength Ns\n\ngoal (2 subgoals):\n 1. \\<And>nat.\n       enat nat < llength Ns \\<Longrightarrow> gc_invar Ns (enat nat)\n 2. \\<infinity> < llength Ns \\<Longrightarrow> gc_invar Ns \\<infinity>", "then"], ["proof (chain)\npicking this:\n  enat i < llength Ns", "show ?case"], ["proof (prove)\nusing this:\n  enat i < llength Ns\n\ngoal (1 subgoal):\n 1. gc_invar Ns (enat i)", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat 0 < llength Ns \\<Longrightarrow> gc_invar Ns (enat 0)\n 2. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i);\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "case 0"], ["proof (state)\nthis:\n  enat 0 < llength Ns\n\ngoal (2 subgoals):\n 1. enat 0 < llength Ns \\<Longrightarrow> gc_invar Ns (enat 0)\n 2. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i);\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  enat 0 < llength Ns", "show ?case"], ["proof (prove)\nusing this:\n  enat 0 < llength Ns\n\ngoal (1 subgoal):\n 1. gc_invar Ns (enat 0)", "using gc_invar_gc_init[OF chain_not_lnull[OF gc] init]"], ["proof (prove)\nusing this:\n  enat 0 < llength Ns\n  gc_invar Ns 0\n\ngoal (1 subgoal):\n 1. gc_invar Ns (enat 0)", "by (simp add: enat_0)"], ["proof (state)\nthis:\n  gc_invar Ns (enat 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i);\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i);\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "case (Suc i)"], ["proof (state)\nthis:\n  enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i)\n  enat (Suc i) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i);\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "note ih = this(1) and Si_lt = this(2)"], ["proof (state)\nthis:\n  enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i)\n  enat (Suc i) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i);\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "have i_lt: \"enat i < llength Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength Ns", "using Si_lt Suc_ile_eq less_le"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength Ns\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  (?x < ?y) = (?x \\<le> ?y \\<and> ?x \\<noteq> ?y)\n\ngoal (1 subgoal):\n 1. enat i < llength Ns", "by blast"], ["proof (state)\nthis:\n  enat i < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow> gc_invar Ns (enat i);\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> gc_invar Ns (enat (Suc i))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. gc_invar Ns (enat (Suc i))", "by (rule gc_invar_gc_step[OF Si_lt ih[OF i_lt] chain_lnth_rel[OF gc Si_lt]])"], ["proof (state)\nthis:\n  gc_invar Ns (enat (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gc_invar Ns (enat i)\n\ngoal (1 subgoal):\n 1. \\<infinity> < llength Ns \\<Longrightarrow> gc_invar Ns \\<infinity>", "qed simp"], ["", "lemma gc_fair_new_proof:\n  assumes\n    gc: \"chain (\\<leadsto>GC) Ns\" and\n    init: \"active_subset (lhd Ns) = {}\" and\n    lim: \"passive_subset (Liminf_llist Ns) = {}\"\n  shows \"fair Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empty_ord.fair Ns", "unfolding fair_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"Inf_from (Liminf_llist Ns) \\<subseteq> Inf_from (active_subset (Liminf_llist Ns))\" (is \"?lhs \\<subseteq> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns)\n    \\<subseteq> Inf_from (active_subset (Liminf_llist Ns))", "using lim"], ["proof (prove)\nusing this:\n  passive_subset (Liminf_llist Ns) = {}\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns)\n    \\<subseteq> Inf_from (active_subset (Liminf_llist Ns))", "unfolding active_subset_def passive_subset_def"], ["proof (prove)\nusing this:\n  {CL \\<in> Liminf_llist Ns. snd CL \\<noteq> active} = {}\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns)\n    \\<subseteq> Inf_from {CL \\<in> Liminf_llist Ns. snd CL = active}", "by (metis (no_types, lifting) Inf_from_mono empty_Collect_eq mem_Collect_eq subsetI)"], ["proof (state)\nthis:\n  Inf_from (Liminf_llist Ns)\n  \\<subseteq> Inf_from (active_subset (Liminf_llist Ns))\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "also"], ["proof (state)\nthis:\n  Inf_from (Liminf_llist Ns)\n  \\<subseteq> Inf_from (active_subset (Liminf_llist Ns))\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "have \"... \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)\" (is \"_ \\<subseteq> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_llist Ns))\n    \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "using gc_invar_infinity[OF chain_not_lnull[OF gc]] gc_invar_gc[OF gc init]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     enat i < llength Ns \\<longrightarrow>\n     gc_invar Ns (enat i) \\<Longrightarrow>\n  gc_invar Ns \\<infinity>\n  ?i < llength Ns \\<Longrightarrow> gc_invar Ns ?i\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_llist Ns))\n    \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "unfolding gc_invar_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     enat i < llength Ns \\<longrightarrow>\n     Inf_from (active_subset (Liminf_upto_llist Ns (enat i)))\n     \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns)\n                  (enat i) \\<Longrightarrow>\n  Inf_from (active_subset (Liminf_upto_llist Ns \\<infinity>))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) \\<infinity>\n  ?i < llength Ns \\<Longrightarrow>\n  Inf_from (active_subset (Liminf_upto_llist Ns ?i))\n  \\<subseteq> Sup_upto_llist (lmap Red_I_\\<G> Ns) ?i\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_llist Ns))\n    \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "by fastforce"], ["proof (state)\nthis:\n  Inf_from (active_subset (Liminf_llist Ns))\n  \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "finally"], ["proof (chain)\npicking this:\n  Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "show \"?lhs \\<subseteq> ?rhs\""], ["proof (prove)\nusing this:\n  Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)", "."], ["proof (state)\nthis:\n  Inf_from (Liminf_llist Ns) \\<subseteq> Sup_llist (lmap Red_I_\\<G> Ns)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Lazy Given Clause\\<close>"], ["", "context lazy_given_clause\nbegin"], ["", "definition from_F :: \"'f inference \\<Rightarrow> ('f \\<times> 'l) inference set\" where\n  \"from_F \\<iota> = {\\<iota>' \\<in> Inf_FL. to_F \\<iota>' = \\<iota>}\""], ["", "definition lgc_invar :: \"('f inference set \\<times> ('f \\<times> 'l) set) llist \\<Rightarrow> enat \\<Rightarrow> bool\" where\n  \"lgc_invar TNs i \\<longleftrightarrow>\n   Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) i))\n   \\<subseteq> \\<Union> (from_F ` Liminf_upto_llist (lmap fst TNs) i) \\<union> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) i\""], ["", "lemma lgc_invar_infinity:\n  assumes\n    nnil: \"\\<not> lnull TNs\" and\n    invar: \"\\<forall>i. enat i < llength TNs \\<longrightarrow> lgc_invar TNs (enat i)\"\n  shows \"lgc_invar TNs \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lgc_invar TNs \\<infinity>", "unfolding lgc_invar_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) \\<infinity>))\n    \\<subseteq> \\<Union>\n                 (from_F `\n                  Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                 \\<infinity>", "proof (intro subsetI, unfold Liminf_upto_llist_infinity Sup_upto_llist_infinity)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from\n                (active_subset\n                  (Liminf_llist (lmap snd TNs))) \\<Longrightarrow>\n       x \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n               Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from\n                (active_subset\n                  (Liminf_llist (lmap snd TNs))) \\<Longrightarrow>\n       x \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n               Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "assume \\<iota>_inff: \"\\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from\n                (active_subset\n                  (Liminf_llist (lmap snd TNs))) \\<Longrightarrow>\n       x \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n               Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "define As where\n    \"As = lmap (active_subset \\<circ> snd) TNs\""], ["proof (state)\nthis:\n  As = lmap (active_subset \\<circ> snd) TNs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from\n                (active_subset\n                  (Liminf_llist (lmap snd TNs))) \\<Longrightarrow>\n       x \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n               Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have act_ns: \"active_subset (Liminf_llist (lmap snd TNs)) = Liminf_llist As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. active_subset (Liminf_llist (lmap snd TNs)) = Liminf_llist As", "unfolding As_def active_subset_def Liminf_set_filter_commute[symmetric] llist.map_comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_llist\n     (lmap ((\\<lambda>X. {CL \\<in> X. snd CL = active}) \\<circ> snd) TNs) =\n    Liminf_llist\n     (lmap ((\\<lambda>M. {CL \\<in> M. snd CL = active}) \\<circ> snd) TNs)", ".."], ["proof (state)\nthis:\n  active_subset (Liminf_llist (lmap snd TNs)) = Liminf_llist As\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from\n                (active_subset\n                  (Liminf_llist (lmap snd TNs))) \\<Longrightarrow>\n       x \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n               Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "note \\<iota>_inf = Inf_if_Inf_from[OF \\<iota>_inff]"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from\n                (active_subset\n                  (Liminf_llist (lmap snd TNs))) \\<Longrightarrow>\n       x \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n               Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "note \\<iota>_inff' = \\<iota>_inff[unfolded act_ns]"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (Liminf_llist As)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Inf_from\n                (active_subset\n                  (Liminf_llist (lmap snd TNs))) \\<Longrightarrow>\n       x \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n               Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "show \"\\<iota> \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "assume \\<iota>_ni_lim: \"\\<iota> \\<notin> \\<Union> (from_F ` Liminf_llist (lmap fst TNs))\""], ["proof (state)\nthis:\n  \\<iota> \\<notin> \\<Union> (from_F ` Liminf_llist (lmap fst TNs))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have \"\\<not> lnull As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull As", "unfolding As_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap (active_subset \\<circ> snd) TNs)", "using nnil"], ["proof (prove)\nusing this:\n  \\<not> lnull TNs\n\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap (active_subset \\<circ> snd) TNs)", "by auto"], ["proof (state)\nthis:\n  \\<not> lnull As\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "moreover"], ["proof (state)\nthis:\n  \\<not> lnull As\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have \"set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> Liminf_llist As", "using \\<iota>_inff'[unfolded Inf_from_def]"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>) \\<subseteq> Liminf_llist As}\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> Liminf_llist As", "by simp"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> lnull As\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As", "obtain i where\n        i_lt_as: \"enat i < llength As\" and\n        prems_sub_ge_i: \"set (prems_of \\<iota>) \\<subseteq> (\\<Inter>j \\<in> {j. i \\<le> j \\<and> enat j < llength As}. lnth As j)\""], ["proof (prove)\nusing this:\n  \\<not> lnull As\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength As;\n         set (prems_of \\<iota>)\n         \\<subseteq> \\<Inter>\n                      (lnth As `\n                       {j. i \\<le> j \\<and> enat j < llength As})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_subset_Liminf_llist_imp_exists_index"], ["proof (prove)\nusing this:\n  \\<not> lnull As\n  set (prems_of \\<iota>) \\<subseteq> Liminf_llist As\n  \\<lbrakk>\\<not> lnull ?Xs; finite ?X;\n   ?X \\<subseteq> Liminf_llist ?Xs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       enat i < llength ?Xs \\<and>\n                       ?X \\<subseteq> \\<Inter>\n (lnth ?Xs ` {j. i \\<le> j \\<and> enat j < llength ?Xs})\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength As;\n         set (prems_of \\<iota>)\n         \\<subseteq> \\<Inter>\n                      (lnth As `\n                       {j. i \\<le> j \\<and> enat j < llength As})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  enat i < llength As\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter> (lnth As ` {j. i \\<le> j \\<and> enat j < llength As})\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have ts_nnil: \"\\<not> lnull (lmap fst TNs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap fst TNs)", "using As_def nnil"], ["proof (prove)\nusing this:\n  As = lmap (active_subset \\<circ> snd) TNs\n  \\<not> lnull TNs\n\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap fst TNs)", "by simp"], ["proof (state)\nthis:\n  \\<not> lnull (lmap fst TNs)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have F\\<iota>_ni_lim: \"to_F \\<iota> \\<notin> Liminf_llist (lmap fst TNs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<notin> Liminf_llist (lmap fst TNs)", "using \\<iota>_inf \\<iota>_ni_lim"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_FL\n  \\<iota> \\<notin> \\<Union> (from_F ` Liminf_llist (lmap fst TNs))\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<notin> Liminf_llist (lmap fst TNs)", "unfolding from_F_def"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_FL\n  \\<iota>\n  \\<notin> (\\<Union>\\<iota>\\<in>Liminf_llist (lmap fst TNs).\n               {\\<iota>' \\<in> Inf_FL. to_F \\<iota>' = \\<iota>})\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<notin> Liminf_llist (lmap fst TNs)", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota> \\<notin> Liminf_llist (lmap fst TNs)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "obtain i' where\n        i_le_i': \"i \\<le> i'\" and\n        i'_lt_as: \"enat i' < llength As\" and\n        F\\<iota>_ni_i': \"to_F \\<iota> \\<notin> lnth (lmap fst TNs) i'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>i \\<le> i'; enat i' < llength As;\n         to_F \\<iota> \\<notin> lnth (lmap fst TNs) i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using i_lt_as not_Liminf_llist_imp_exists_index[OF ts_nnil F\\<iota>_ni_lim, of i]"], ["proof (prove)\nusing this:\n  enat i < llength As\n  enat i < llength (lmap fst TNs) \\<Longrightarrow>\n  \\<exists>j\\<ge>i.\n     enat j < llength (lmap fst TNs) \\<and>\n     to_F \\<iota> \\<notin> lnth (lmap fst TNs) j\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>i \\<le> i'; enat i' < llength As;\n         to_F \\<iota> \\<notin> lnth (lmap fst TNs) i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding As_def"], ["proof (prove)\nusing this:\n  enat i < llength (lmap (active_subset \\<circ> snd) TNs)\n  enat i < llength (lmap fst TNs) \\<Longrightarrow>\n  \\<exists>j\\<ge>i.\n     enat j < llength (lmap fst TNs) \\<and>\n     to_F \\<iota> \\<notin> lnth (lmap fst TNs) j\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        \\<lbrakk>i \\<le> i';\n         enat i' < llength (lmap (active_subset \\<circ> snd) TNs);\n         to_F \\<iota> \\<notin> lnth (lmap fst TNs) i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> i'\n  enat i' < llength As\n  to_F \\<iota> \\<notin> lnth (lmap fst TNs) i'\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have \\<iota>_ni_i': \"\\<iota> \\<notin> \\<Union> (from_F ` fst (lnth TNs i'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<notin> \\<Union> (from_F ` fst (lnth TNs i'))", "using F\\<iota>_ni_i' i'_lt_as[unfolded As_def]"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> lnth (lmap fst TNs) i'\n  enat i' < llength (lmap (active_subset \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<notin> \\<Union> (from_F ` fst (lnth TNs i'))", "unfolding from_F_def"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> lnth (lmap fst TNs) i'\n  enat i' < llength (lmap (active_subset \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<notin> (\\<Union>\\<iota>\\<in>fst (lnth TNs i').\n                 {\\<iota>' \\<in> Inf_FL. to_F \\<iota>' = \\<iota>})", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<notin> \\<Union> (from_F ` fst (lnth TNs i'))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have \"set (prems_of \\<iota>) \\<subseteq> (\\<Inter>j \\<in> {j. i' \\<le> j \\<and> enat j < llength As}. lnth As j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>)\n    \\<subseteq> \\<Inter>\n                 (lnth As ` {j. i' \\<le> j \\<and> enat j < llength As})", "using prems_sub_ge_i i_le_i'"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter> (lnth As ` {j. i \\<le> j \\<and> enat j < llength As})\n  i \\<le> i'\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>)\n    \\<subseteq> \\<Inter>\n                 (lnth As ` {j. i' \\<le> j \\<and> enat j < llength As})", "by auto"], ["proof (state)\nthis:\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter>\n               (lnth As ` {j. i' \\<le> j \\<and> enat j < llength As})\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "then"], ["proof (chain)\npicking this:\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter>\n               (lnth As ` {j. i' \\<le> j \\<and> enat j < llength As})", "have \"set (prems_of \\<iota>) \\<subseteq> lnth As i'\""], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter>\n               (lnth As ` {j. i' \\<le> j \\<and> enat j < llength As})\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> lnth As i'", "using i'_lt_as"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>)\n  \\<subseteq> \\<Inter>\n               (lnth As ` {j. i' \\<le> j \\<and> enat j < llength As})\n  enat i' < llength As\n\ngoal (1 subgoal):\n 1. set (prems_of \\<iota>) \\<subseteq> lnth As i'", "by auto"], ["proof (state)\nthis:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i'\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "then"], ["proof (chain)\npicking this:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i'", "have \"\\<iota> \\<in> Inf_from (active_subset (snd (lnth TNs i')))\""], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i'\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (snd (lnth TNs i')))", "using i'_lt_as \\<iota>_inf"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>) \\<subseteq> lnth As i'\n  enat i' < llength As\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset (snd (lnth TNs i')))", "unfolding Inf_from_def As_def"], ["proof (prove)\nusing this:\n  set (prems_of \\<iota>)\n  \\<subseteq> lnth (lmap (active_subset \\<circ> snd) TNs) i'\n  enat i' < llength (lmap (active_subset \\<circ> snd) TNs)\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_FL.\n           set (prems_of \\<iota>)\n           \\<subseteq> active_subset (snd (lnth TNs i'))}", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (snd (lnth TNs i')))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_from (active_subset (snd (lnth TNs i')))", "have \\<iota>_in_i': \"\\<iota> \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i')\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset (snd (lnth TNs i')))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i')", "using \\<iota>_ni_i' i'_lt_as[unfolded As_def] invar[unfolded lgc_invar_def]"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset (snd (lnth TNs i')))\n  \\<iota> \\<notin> \\<Union> (from_F ` fst (lnth TNs i'))\n  enat i' < llength (lmap (active_subset \\<circ> snd) TNs)\n  \\<forall>i.\n     enat i < llength TNs \\<longrightarrow>\n     Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) (enat i)))\n     \\<subseteq> \\<Union>\n                  (from_F `\n                   Liminf_upto_llist (lmap fst TNs) (enat i)) \\<union>\n                 Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i')", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i')\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i')", "have \"\\<iota> \\<in> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i')\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "using Sup_upto_llist_subset_Sup_llist"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i')\n  Sup_upto_llist ?Xs ?j \\<subseteq> Sup_llist ?Xs\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "by fastforce"], ["proof (state)\nthis:\n  \\<iota> \\<in> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "}"], ["proof (state)\nthis:\n  \\<iota>\n  \\<notin> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<Longrightarrow>\n  \\<iota> \\<in> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "then"], ["proof (chain)\npicking this:\n  \\<iota>\n  \\<notin> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<Longrightarrow>\n  \\<iota> \\<in> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<notin> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<Longrightarrow>\n  \\<iota> \\<in> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n          Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "by blast"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n        Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` Liminf_llist (lmap fst TNs)) \\<union>\n        Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lgc_invar_lgc_init:\n  assumes\n    nnil: \"\\<not> lnull TNs\" and\n    n_init: \"active_subset (snd (lhd TNs)) = {}\" and\n    t_init: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\"\n  shows \"lgc_invar TNs 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lgc_invar TNs 0", "unfolding lgc_invar_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "have \"Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0)) =\n    Inf_from {}\" (is \"?lhs = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0)) =\n    Inf_from {}", "using nnil n_init"], ["proof (prove)\nusing this:\n  \\<not> lnull TNs\n  active_subset (snd (lhd TNs)) = {}\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0)) =\n    Inf_from {}", "by auto"], ["proof (state)\nthis:\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0)) =\n  Inf_from {}\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "also"], ["proof (state)\nthis:\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0)) =\n  Inf_from {}\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "have \"... \\<subseteq> \\<Union> (from_F ` fst (lhd TNs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from {} \\<subseteq> \\<Union> (from_F ` fst (lhd TNs))", "using t_init Inf_FL_to_Inf_F"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>\\<in>Inf_F.\n     prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Inf_from {} \\<subseteq> \\<Union> (from_F ` fst (lhd TNs))", "unfolding Inf_from_def from_F_def to_F_def"], ["proof (prove)\nusing this:\n  \\<forall>\\<iota>\\<in>Inf_F.\n     prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  Infer (map fst (prems_of ?\\<iota>\\<^sub>F\\<^sub>L))\n   (fst (concl_of ?\\<iota>\\<^sub>F\\<^sub>L))\n  \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. {\\<iota> \\<in> Inf_FL. set (prems_of \\<iota>) \\<subseteq> {}}\n    \\<subseteq> (\\<Union>\\<iota>\\<in>fst (lhd TNs).\n                    {\\<iota>' \\<in> Inf_FL.\n                     Infer (map fst (prems_of \\<iota>'))\n                      (fst (concl_of \\<iota>')) =\n                     \\<iota>})", "by force"], ["proof (state)\nthis:\n  Inf_from {} \\<subseteq> \\<Union> (from_F ` fst (lhd TNs))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "also"], ["proof (state)\nthis:\n  Inf_from {} \\<subseteq> \\<Union> (from_F ` fst (lhd TNs))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "have \"... \\<subseteq> \\<Union> (from_F ` fst (lhd TNs)) \\<union> Red_I_\\<G> (snd (lhd TNs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (from_F ` fst (lhd TNs))\n    \\<subseteq> \\<Union> (from_F ` fst (lhd TNs)) \\<union>\n                Red_I_\\<G> (snd (lhd TNs))", "by fast"], ["proof (state)\nthis:\n  \\<Union> (from_F ` fst (lhd TNs))\n  \\<subseteq> \\<Union> (from_F ` fst (lhd TNs)) \\<union>\n              Red_I_\\<G> (snd (lhd TNs))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "also"], ["proof (state)\nthis:\n  \\<Union> (from_F ` fst (lhd TNs))\n  \\<subseteq> \\<Union> (from_F ` fst (lhd TNs)) \\<union>\n              Red_I_\\<G> (snd (lhd TNs))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "have \"... = \\<Union> (from_F ` Liminf_upto_llist (lmap fst TNs) 0)\n    \\<union> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0\" (is \"_ = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (from_F ` fst (lhd TNs)) \\<union> Red_I_\\<G> (snd (lhd TNs)) =\n    \\<Union> (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n    Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "using nnil"], ["proof (prove)\nusing this:\n  \\<not> lnull TNs\n\ngoal (1 subgoal):\n 1. \\<Union> (from_F ` fst (lhd TNs)) \\<union> Red_I_\\<G> (snd (lhd TNs)) =\n    \\<Union> (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n    Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "by auto"], ["proof (state)\nthis:\n  \\<Union> (from_F ` fst (lhd TNs)) \\<union> Red_I_\\<G> (snd (lhd TNs)) =\n  \\<Union> (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n  Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "finally"], ["proof (chain)\npicking this:\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n  \\<subseteq> \\<Union>\n               (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "show \"?lhs \\<subseteq> ?rhs\""], ["proof (prove)\nusing this:\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n  \\<subseteq> \\<Union>\n               (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n    \\<subseteq> \\<Union>\n                 (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0", "."], ["proof (state)\nthis:\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) 0))\n  \\<subseteq> \\<Union>\n               (from_F ` Liminf_upto_llist (lmap fst TNs) 0) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lgc_invar_lgc_step:\n  assumes\n    Si_lt: \"enat (Suc i) < llength TNs\" and\n    invar: \"lgc_invar TNs i\" and\n    step: \"lnth TNs i \\<leadsto>LGC lnth TNs (Suc i)\"\n  shows \"lgc_invar TNs (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat (Suc i))", "using step Si_lt invar"], ["proof (prove)\nusing this:\n  lnth TNs i \\<leadsto>LGC lnth TNs (Suc i)\n  enat (Suc i) < llength TNs\n  lgc_invar TNs (enat i)\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat (Suc i))", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "let ?Sup_Red_i = \"Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "let ?Sup_Red_Si = \"Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have i_lt: \"enat i < llength TNs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength TNs", "using Si_lt Suc_ile_eq order.strict_implies_order"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength TNs\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  ?a < ?b \\<Longrightarrow> ?a \\<le> ?b\n\ngoal (1 subgoal):\n 1. enat i < llength TNs", "by blast"], ["proof (state)\nthis:\n  enat i < llength TNs\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have lim_i:\n    \"Liminf_upto_llist (lmap fst TNs) (enat i) = lnth (lmap fst TNs) i\"\n    \"Liminf_upto_llist (lmap snd TNs) (enat i) = lnth (lmap snd TNs) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_upto_llist (lmap fst TNs) (enat i) = lnth (lmap fst TNs) i &&&\n    Liminf_upto_llist (lmap snd TNs) (enat i) = lnth (lmap snd TNs) i", "using i_lt"], ["proof (prove)\nusing this:\n  enat i < llength TNs\n\ngoal (1 subgoal):\n 1. Liminf_upto_llist (lmap fst TNs) (enat i) = lnth (lmap fst TNs) i &&&\n    Liminf_upto_llist (lmap snd TNs) (enat i) = lnth (lmap snd TNs) i", "by auto"], ["proof (state)\nthis:\n  Liminf_upto_llist (lmap fst TNs) (enat i) = lnth (lmap fst TNs) i\n  Liminf_upto_llist (lmap snd TNs) (enat i) = lnth (lmap snd TNs) i\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have lim_Si:\n    \"Liminf_upto_llist (lmap fst TNs) (enat (Suc i)) = lnth (lmap fst TNs) (Suc i)\"\n    \"Liminf_upto_llist (lmap snd TNs) (enat (Suc i)) = lnth (lmap snd TNs) (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf_upto_llist (lmap fst TNs) (enat (Suc i)) =\n    lnth (lmap fst TNs) (Suc i) &&&\n    Liminf_upto_llist (lmap snd TNs) (enat (Suc i)) =\n    lnth (lmap snd TNs) (Suc i)", "using Si_lt"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength TNs\n\ngoal (1 subgoal):\n 1. Liminf_upto_llist (lmap fst TNs) (enat (Suc i)) =\n    lnth (lmap fst TNs) (Suc i) &&&\n    Liminf_upto_llist (lmap snd TNs) (enat (Suc i)) =\n    lnth (lmap snd TNs) (Suc i)", "by auto"], ["proof (state)\nthis:\n  Liminf_upto_llist (lmap fst TNs) (enat (Suc i)) =\n  lnth (lmap fst TNs) (Suc i)\n  Liminf_upto_llist (lmap snd TNs) (enat (Suc i)) =\n  lnth (lmap snd TNs) (Suc i)\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "{"], ["proof (state)\nthis:\n  Liminf_upto_llist (lmap fst TNs) (enat (Suc i)) =\n  lnth (lmap fst TNs) (Suc i)\n  Liminf_upto_llist (lmap snd TNs) (enat (Suc i)) =\n  lnth (lmap snd TNs) (Suc i)\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "case (process N1 N M N2 M' T)"], ["proof (state)\nthis:\n  lnth TNs i = (T, N1)\n  lnth TNs (Suc i) = (T, N2)\n  N1 = N \\<union> M\n  N2 = N \\<union> M'\n  M \\<subseteq> Red_F_\\<G> (N \\<union> M')\n  active_subset M' = {}\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "note tni = this(1) and tnSi = this(2) and n1 = this(3) and n2 = this(4) and m_red = this(5) and\n      m'_pas = this(6)"], ["proof (state)\nthis:\n  lnth TNs i = (T, N1)\n  lnth TNs (Suc i) = (T, N2)\n  N1 = N \\<union> M\n  N2 = N \\<union> M'\n  M \\<subseteq> Red_F_\\<G> (N \\<union> M')\n  active_subset M' = {}\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ni: \"lnth (lmap snd TNs) i = N \\<union> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) i = N \\<union> M", "by (simp add: i_lt n1 tni)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) i = N \\<union> M\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have nSi: \"lnth (lmap snd TNs) (Suc i) = N \\<union> M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) (Suc i) = N \\<union> M'", "by (simp add: Si_lt n2 tnSi)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) (Suc i) = N \\<union> M'\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ti: \"lnth (lmap fst TNs) i = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) i = T", "by (simp add: i_lt tni)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) i = T\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have tSi: \"lnth (lmap fst TNs) (Suc i) = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) (Suc i) = T", "by (simp add: Si_lt tnSi)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) (Suc i) = T\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \"Inf_from (active_subset (N \\<union> M')) \\<subseteq> Inf_from (active_subset (N \\<union> M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M'))\n    \\<subseteq> Inf_from (active_subset (N \\<union> M))", "using m'_pas"], ["proof (prove)\nusing this:\n  active_subset M' = {}\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M'))\n    \\<subseteq> Inf_from (active_subset (N \\<union> M))", "by (metis active_subset_union boolean_algebra_cancel.sup0 Inf_from_mono\n          subset_Un_eq sup_left_idem)"], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> Inf_from (active_subset (N \\<union> M))\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "also"], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> Inf_from (active_subset (N \\<union> M))\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \"\\<dots> \\<subseteq> \\<Union> (from_F ` T) \\<union> ?Sup_Red_i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M))\n    \\<subseteq> \\<Union> (from_F ` T) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "using invar"], ["proof (prove)\nusing this:\n  lgc_invar TNs (enat i)\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M))\n    \\<subseteq> \\<Union> (from_F ` T) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "unfolding lgc_invar_def lim_i ni ti"], ["proof (prove)\nusing this:\n  Inf_from (active_subset (N \\<union> M))\n  \\<subseteq> \\<Union> (from_F ` T) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M))\n    \\<subseteq> \\<Union> (from_F ` T) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "."], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M))\n  \\<subseteq> \\<Union> (from_F ` T) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "also"], ["proof (state)\nthis:\n  Inf_from (active_subset (N \\<union> M))\n  \\<subseteq> \\<Union> (from_F ` T) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \"\\<dots> \\<subseteq> \\<Union> (from_F ` T) \\<union> ?Sup_Red_Si\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (from_F ` T) \\<union>\n    Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n    \\<subseteq> \\<Union> (from_F ` T) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                 (enat (Suc i))", "using Sup_upto_llist_mono"], ["proof (prove)\nusing this:\n  ?j \\<le> ?k \\<Longrightarrow>\n  Sup_upto_llist ?Xs ?j \\<subseteq> Sup_upto_llist ?Xs ?k\n\ngoal (1 subgoal):\n 1. \\<Union> (from_F ` T) \\<union>\n    Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n    \\<subseteq> \\<Union> (from_F ` T) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                 (enat (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<Union> (from_F ` T) \\<union>\n  Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n  \\<subseteq> \\<Union> (from_F ` T) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n               (enat (Suc i))\n\ngoal (4 subgoals):\n 1. \\<And>N1 N M N2 M' T.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T, N1); lnth TNs (Suc i) = (T, N2); N1 = N \\<union> M;\n        N2 = N \\<union> M'; M \\<subseteq> Red_F_\\<G> (N \\<union> M');\n        active_subset M' = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 4. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "finally"], ["proof (chain)\npicking this:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> \\<Union> (from_F ` T) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n               (enat (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> \\<Union> (from_F ` T) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n               (enat (Suc i))\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat (Suc i))", "unfolding lgc_invar_def lim_Si nSi tSi"], ["proof (prove)\nusing this:\n  Inf_from (active_subset (N \\<union> M'))\n  \\<subseteq> \\<Union> (from_F ` T) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n               (enat (Suc i))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> M'))\n    \\<subseteq> \\<Union> (from_F ` T) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                 (enat (Suc i))", "."], ["proof (state)\nthis:\n  lgc_invar TNs (enat (Suc i))\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "case (schedule_infer T2 T1 T' N1 N C L N2)"], ["proof (state)\nthis:\n  lnth TNs i = (T1, N1)\n  lnth TNs (Suc i) = (T2, N2)\n  T2 = T1 \\<union> T'\n  N1 = N \\<union> {(C, L)}\n  N2 = N \\<union> {(C, active)}\n  L \\<noteq> active\n  T' = no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "note tni = this(1) and tnSi = this(2) and t2 = this(3) and n1 = this(4) and n2 = this(5) and\n      l_pas = this(6) and t' = this(7)"], ["proof (state)\nthis:\n  lnth TNs i = (T1, N1)\n  lnth TNs (Suc i) = (T2, N2)\n  T2 = T1 \\<union> T'\n  N1 = N \\<union> {(C, L)}\n  N2 = N \\<union> {(C, active)}\n  L \\<noteq> active\n  T' = no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ni: \"lnth (lmap snd TNs) i = N \\<union> {(C, L)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) i = N \\<union> {(C, L)}", "by (simp add: i_lt n1 tni)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) i = N \\<union> {(C, L)}\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have nSi: \"lnth (lmap snd TNs) (Suc i) = N \\<union> {(C, active)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) (Suc i) = N \\<union> {(C, active)}", "by (simp add: Si_lt n2 tnSi)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) (Suc i) = N \\<union> {(C, active)}\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ti: \"lnth (lmap fst TNs) i = T1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) i = T1", "by (simp add: i_lt tni)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) i = T1\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have tSi: \"lnth (lmap fst TNs) (Suc i) = T1 \\<union> T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) (Suc i) = T1 \\<union> T'", "by (simp add: Si_lt t2 tnSi)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) (Suc i) = T1 \\<union> T'\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "{"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) (Suc i) = T1 \\<union> T'\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "fix \\<iota>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "assume \\<iota>_inff: \"\\<iota> \\<in> Inf_from (active_subset (N \\<union> {(C, active)}))\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (N \\<union> {(C, active)}))\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \\<iota>_inf: \"\\<iota> \\<in> Inf_FL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "using \\<iota>_inff"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset (N \\<union> {(C, active)}))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "unfolding Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset (N \\<union> {(C, active)})}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_FL", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_FL\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_FL", "have F\\<iota>_inf: \"to_F \\<iota> \\<in> Inf_F\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "using Inf_FL_to_Inf_F[folded to_F_def]"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_FL\n  ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_FL \\<Longrightarrow>\n  to_F ?\\<iota>\\<^sub>F\\<^sub>L \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> Inf_F", "by fastforce"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \"\\<iota> \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union> ?Sup_Red_Si\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "proof (cases \"to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_between (fst ` active_subset N)\n           {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n 2. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "case True"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (2 subgoals):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_between (fst ` active_subset N)\n           {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n 2. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}", "have \"\\<iota> \\<in> \\<Union> (from_F ` (T1 \\<union> T'))\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> \\<Union> (from_F ` (T1 \\<union> T'))", "unfolding t' from_F_def"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> (\\<Union>\\<iota>\\<in>T1 \\<union>\n                               no_labels.Inf_between (fst ` active_subset N)\n                                {C}.\n              {\\<iota>' \\<in> Inf_FL. to_F \\<iota>' = \\<iota>})", "using \\<iota>_inf"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_between (fst ` active_subset N) {C}\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> (\\<Union>\\<iota>\\<in>T1 \\<union>\n                               no_labels.Inf_between (fst ` active_subset N)\n                                {C}.\n              {\\<iota>' \\<in> Inf_FL. to_F \\<iota>' = \\<iota>})", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> \\<Union> (from_F ` (T1 \\<union> T'))\n\ngoal (2 subgoals):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_between (fst ` active_subset N)\n           {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n 2. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> \\<Union> (from_F ` (T1 \\<union> T'))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> \\<Union> (from_F ` (T1 \\<union> T'))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "by blast"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "case False"], ["proof (state)\nthis:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "moreover"], ["proof (state)\nthis:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "have \"to_F \\<iota> \\<in> no_labels.Inf_from (fst ` (active_subset N \\<union> {(C, active)}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_from\n           (fst ` (active_subset N \\<union> {(C, active)}))", "using \\<iota>_inff F\\<iota>_inf"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset (N \\<union> {(C, active)}))\n  to_F \\<iota> \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> no_labels.Inf_from\n           (fst ` (active_subset N \\<union> {(C, active)}))", "unfolding to_F_def Inf_from_def no_labels.Inf_from_def"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_FL.\n         set (prems_of \\<iota>)\n         \\<subseteq> active_subset (N \\<union> {(C, active)})}\n  Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>)) \\<in> Inf_F\n\ngoal (1 subgoal):\n 1. Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>)\n           \\<subseteq> fst ` (active_subset N \\<union> {(C, active)})}", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from (fst ` (active_subset N \\<union> {(C, active)}))\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "ultimately"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from (fst ` (active_subset N \\<union> {(C, active)}))", "have \"to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> no_labels.Inf_between (fst ` active_subset N) {C}\n  to_F \\<iota>\n  \\<in> no_labels.Inf_from (fst ` (active_subset N \\<union> {(C, active)}))\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)", "unfolding no_labels.Inf_from_def no_labels.Inf_between_def"], ["proof (prove)\nusing this:\n  to_F \\<iota>\n  \\<notin> {\\<iota> \\<in> Inf_F.\n            set (prems_of \\<iota>)\n            \\<subseteq> fst ` active_subset N \\<union> {C}} -\n           {\\<iota> \\<in> Inf_F.\n            set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N - {C}}\n  to_F \\<iota>\n  \\<in> {\\<iota> \\<in> Inf_F.\n         set (prems_of \\<iota>)\n         \\<subseteq> fst ` (active_subset N \\<union> {(C, active)})}\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<in> {\\<iota> \\<in> Inf_F.\n           set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N}", "by auto"], ["proof (state)\nthis:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)", "have \"\\<iota> \\<in> Inf_from (active_subset N)\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset N)", "using \\<iota>_inf"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<in> no_labels.Inf_from (fst ` active_subset N)\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset N)", "unfolding to_F_def no_labels.Inf_from_def"], ["proof (prove)\nusing this:\n  Infer (map fst (prems_of \\<iota>)) (fst (concl_of \\<iota>))\n  \\<in> {\\<iota> \\<in> Inf_F.\n         set (prems_of \\<iota>) \\<subseteq> fst ` active_subset N}\n  \\<iota> \\<in> Inf_FL\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Inf_from (active_subset N)", "by clarsimp (smt Inf_from_def Un_insert_right \\<iota>_inff active_subset_def\n            boolean_algebra_cancel.sup0 imageE image_subset_iff insert_iff mem_Collect_eq\n            prod.collapse snd_conv subset_iff)"], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Inf_from (active_subset N)", "have \"\\<iota> \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union> ?Sup_Red_i\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "using invar[unfolded lgc_invar_def] l_pas"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N)\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) (enat i)))\n  \\<subseteq> \\<Union>\n               (from_F ` Liminf_upto_llist (lmap fst TNs) (enat i)) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "unfolding lim_i ni ti"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset N)\n  Inf_from (active_subset (N \\<union> {(C, L)}))\n  \\<subseteq> \\<Union> (from_F ` T1) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n  L \\<noteq> active\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "by auto"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (1 subgoal):\n 1. to_F \\<iota>\n    \\<notin> no_labels.Inf_between (fst ` active_subset N)\n              {C} \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "using Sup_upto_llist_mono"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n  ?j \\<le> ?k \\<Longrightarrow>\n  Sup_upto_llist ?Xs ?j \\<subseteq> Sup_upto_llist ?Xs ?k\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "by force"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "}"], ["proof (state)\nthis:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset (N \\<union> {(C, active)})) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (3 subgoals):\n 1. \\<And>T2 T1 T' N1 N C L N2.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T2 = T1 \\<union> T'; N1 = N \\<union> {(C, L)};\n        N2 = N \\<union> {(C, active)}; L \\<noteq> active;\n        T' = no_labels.Inf_between (fst ` active_subset N) {C}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 3. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset (N \\<union> {(C, active)})) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset (N \\<union> {(C, active)})) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat (Suc i))", "unfolding lgc_invar_def lim_i lim_Si nSi tSi"], ["proof (prove)\nusing this:\n  ?\\<iota>2\n  \\<in> Inf_from\n         (active_subset (N \\<union> {(C, active)})) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N \\<union> {(C, active)}))\n    \\<subseteq> \\<Union> (from_F ` (T1 \\<union> T')) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                 (enat (Suc i))", "by fast"], ["proof (state)\nthis:\n  lgc_invar TNs (enat (Suc i))\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "case (compute_infer T1 T2 \\<iota>' N2 N1 M)"], ["proof (state)\nthis:\n  lnth TNs i = (T1, N1)\n  lnth TNs (Suc i) = (T2, N2)\n  T1 = T2 \\<union> {\\<iota>'}\n  N2 = N1 \\<union> M\n  active_subset M = {}\n  \\<iota>' \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "note tni = this(1) and tnSi = this(2) and t1 = this(3) and n2 = this(4) and m_pas = this(5) and\n      \\<iota>'_red = this(6)"], ["proof (state)\nthis:\n  lnth TNs i = (T1, N1)\n  lnth TNs (Suc i) = (T2, N2)\n  T1 = T2 \\<union> {\\<iota>'}\n  N2 = N1 \\<union> M\n  active_subset M = {}\n  \\<iota>' \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ni: \"lnth (lmap snd TNs) i = N1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) i = N1", "by (simp add: i_lt tni)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) i = N1\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have nSi: \"lnth (lmap snd TNs) (Suc i) = N1 \\<union> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) (Suc i) = N1 \\<union> M", "by (simp add: Si_lt n2 tnSi)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) (Suc i) = N1 \\<union> M\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ti: \"lnth (lmap fst TNs) i = T2 \\<union> {\\<iota>'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) i = T2 \\<union> {\\<iota>'}", "by (simp add: i_lt t1 tni)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) i = T2 \\<union> {\\<iota>'}\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have tSi: \"lnth (lmap fst TNs) (Suc i) = T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) (Suc i) = T2", "by (simp add: Si_lt tnSi)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) (Suc i) = T2\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "{"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) (Suc i) = T2\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "fix \\<iota>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "assume \\<iota>_inff: \"\\<iota> \\<in> Inf_from (active_subset (N1 \\<union> M))\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset (N1 \\<union> M))\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \\<iota>_bef: \"\\<iota> \\<in> \\<Union> (from_F ` (T2 \\<union> {\\<iota>'})) \\<union> ?Sup_Red_i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T2 \\<union> {\\<iota>'})) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "using \\<iota>_inff invar[unfolded lgc_invar_def lim_i ti ni] m_pas"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Inf_from (active_subset (N1 \\<union> M))\n  Inf_from (active_subset N1)\n  \\<subseteq> \\<Union> (from_F ` (T2 \\<union> {\\<iota>'})) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n  active_subset M = {}\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` (T2 \\<union> {\\<iota>'})) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)", "by auto"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T2 \\<union> {\\<iota>'})) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \"\\<iota> \\<in> \\<Union> (from_F ` T2) \\<union> ?Sup_Red_Si\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "proof (cases \"\\<iota> \\<in> from_F \\<iota>'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<iota> \\<in> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n 2. \\<iota> \\<notin> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "case \\<iota>_in_\\<iota>': True"], ["proof (state)\nthis:\n  \\<iota> \\<in> from_F \\<iota>'\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n 2. \\<iota> \\<notin> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> from_F \\<iota>'", "have \"\\<iota> \\<in> Red_I_\\<G> (N1 \\<union> M)\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> from_F \\<iota>'\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (N1 \\<union> M)", "using \\<iota>'_red from_F_def labeled_red_inf_eq_red_inf"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> from_F \\<iota>'\n  \\<iota>' \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\n  from_F ?\\<iota> = {\\<iota>' \\<in> Inf_FL. to_F \\<iota>' = ?\\<iota>}\n  ?\\<iota> \\<in> Inf_FL \\<Longrightarrow>\n  (?\\<iota> \\<in> Red_I_\\<G> ?N) =\n  (to_F ?\\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` ?N))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<in> Red_I_\\<G> (N1 \\<union> M)", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<in> Red_I_\\<G> (N1 \\<union> M)\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n 2. \\<iota> \\<notin> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<in> Red_I_\\<G> (N1 \\<union> M)", "have \"\\<iota> \\<in> ?Sup_Red_Si\""], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (N1 \\<union> M)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "using Si_lt"], ["proof (prove)\nusing this:\n  \\<iota> \\<in> Red_I_\\<G> (N1 \\<union> M)\n  enat (Suc i) < llength TNs\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "by (simp add: n2 tnSi)"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (2 subgoals):\n 1. \\<iota> \\<in> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n 2. \\<iota> \\<notin> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota>\n  \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<iota>\n  \\<in> Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<iota> \\<notin> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<iota> \\<notin> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "case False"], ["proof (state)\nthis:\n  \\<iota> \\<notin> from_F \\<iota>'\n\ngoal (1 subgoal):\n 1. \\<iota> \\<notin> from_F \\<iota>' \\<Longrightarrow>\n    \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<notin> from_F \\<iota>'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<iota> \\<notin> from_F \\<iota>'\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "using \\<iota>_bef"], ["proof (prove)\nusing this:\n  \\<iota> \\<notin> from_F \\<iota>'\n  \\<iota>\n  \\<in> \\<Union> (from_F ` (T2 \\<union> {\\<iota>'})) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "}"], ["proof (state)\nthis:\n  ?\\<iota>2 \\<in> Inf_from (active_subset (N1 \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (2 subgoals):\n 1. \\<And>T1 T2 \\<iota> N2 N1 M.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N1); lnth TNs (Suc i) = (T2, N2);\n        T1 = T2 \\<union> {\\<iota>}; N2 = N1 \\<union> M;\n        active_subset M = {};\n        \\<iota> \\<in> no_labels.Red_I_\\<G> (fst ` (N1 \\<union> M))\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n 2. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  ?\\<iota>2 \\<in> Inf_from (active_subset (N1 \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?\\<iota>2 \\<in> Inf_from (active_subset (N1 \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat (Suc i))", "unfolding lgc_invar_def lim_Si tSi nSi"], ["proof (prove)\nusing this:\n  ?\\<iota>2 \\<in> Inf_from (active_subset (N1 \\<union> M)) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (N1 \\<union> M))\n    \\<subseteq> \\<Union> (from_F ` T2) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                 (enat (Suc i))", "by blast"], ["proof (state)\nthis:\n  lgc_invar TNs (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "case (delete_orphans T1 T2 T' N)"], ["proof (state)\nthis:\n  lnth TNs i = (T1, N)\n  lnth TNs (Suc i) = (T2, N)\n  T1 = T2 \\<union> T'\n  T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "note tni = this(1) and tnSi = this(2) and t1 = this(3) and t'_orph = this(4)"], ["proof (state)\nthis:\n  lnth TNs i = (T1, N)\n  lnth TNs (Suc i) = (T2, N)\n  T1 = T2 \\<union> T'\n  T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ni: \"lnth (lmap snd TNs) i = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) i = N", "by (simp add: i_lt tni)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) i = N\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have nSi: \"lnth (lmap snd TNs) (Suc i) = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap snd TNs) (Suc i) = N", "by (simp add: Si_lt tnSi)"], ["proof (state)\nthis:\n  lnth (lmap snd TNs) (Suc i) = N\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have ti: \"lnth (lmap fst TNs) i = T2 \\<union> T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) i = T2 \\<union> T'", "by (simp add: i_lt t1 tni)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) i = T2 \\<union> T'\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have tSi: \"lnth (lmap fst TNs) (Suc i) = T2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnth (lmap fst TNs) (Suc i) = T2", "by (simp add: Si_lt tnSi)"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) (Suc i) = T2\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "{"], ["proof (state)\nthis:\n  lnth (lmap fst TNs) (Suc i) = T2\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "fix \\<iota>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "assume \\<iota>_inff: \"\\<iota> \\<in> Inf_from (active_subset N)\""], ["proof (state)\nthis:\n  \\<iota> \\<in> Inf_from (active_subset N)\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have \"to_F \\<iota> \\<notin> T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<notin> T'", "using t'_orph \\<iota>_inff in_Inf_from_imp_to_F_in_Inf_from"], ["proof (prove)\nusing this:\n  T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\n  \\<iota> \\<in> Inf_from (active_subset N)\n  ?\\<iota> \\<in> Inf_from ?N \\<Longrightarrow>\n  to_F ?\\<iota> \\<in> no_labels.Inf_from (fst ` ?N)\n\ngoal (1 subgoal):\n 1. to_F \\<iota> \\<notin> T'", "by blast"], ["proof (state)\nthis:\n  to_F \\<iota> \\<notin> T'\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "hence \"\\<iota> \\<notin> \\<Union> (from_F ` T')\""], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> T'\n\ngoal (1 subgoal):\n 1. \\<iota> \\<notin> \\<Union> (from_F ` T')", "unfolding from_F_def"], ["proof (prove)\nusing this:\n  to_F \\<iota> \\<notin> T'\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<notin> (\\<Union>\\<iota>\\<in>T'.\n                 {\\<iota>' \\<in> Inf_FL. to_F \\<iota>' = \\<iota>})", "by auto"], ["proof (state)\nthis:\n  \\<iota> \\<notin> \\<Union> (from_F ` T')\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  \\<iota> \\<notin> \\<Union> (from_F ` T')", "have \"\\<iota> \\<in> \\<Union> (from_F ` T2) \\<union> ?Sup_Red_Si\""], ["proof (prove)\nusing this:\n  \\<iota> \\<notin> \\<Union> (from_F ` T')\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "using \\<iota>_inff invar"], ["proof (prove)\nusing this:\n  \\<iota> \\<notin> \\<Union> (from_F ` T')\n  \\<iota> \\<in> Inf_from (active_subset N)\n  lgc_invar TNs (enat i)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "unfolding lgc_invar_def lim_i ni ti"], ["proof (prove)\nusing this:\n  \\<iota> \\<notin> \\<Union> (from_F ` T')\n  \\<iota> \\<in> Inf_from (active_subset N)\n  Inf_from (active_subset N)\n  \\<subseteq> \\<Union> (from_F ` (T2 \\<union> T')) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat i)\n\ngoal (1 subgoal):\n 1. \\<iota>\n    \\<in> \\<Union> (from_F ` T2) \\<union>\n          Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<iota>\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "}"], ["proof (state)\nthis:\n  ?\\<iota>2 \\<in> Inf_from (active_subset N) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>T1 T2 T' N.\n       \\<lbrakk>enat (Suc i) < llength TNs; lgc_invar TNs (enat i);\n        lnth TNs i = (T1, N); lnth TNs (Suc i) = (T2, N);\n        T1 = T2 \\<union> T';\n        T' \\<inter> no_labels.Inf_from (fst ` active_subset N) = {}\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  ?\\<iota>2 \\<in> Inf_from (active_subset N) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?\\<iota>2 \\<in> Inf_from (active_subset N) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat (Suc i))", "unfolding lgc_invar_def lim_Si tSi nSi"], ["proof (prove)\nusing this:\n  ?\\<iota>2 \\<in> Inf_from (active_subset N) \\<Longrightarrow>\n  ?\\<iota>2\n  \\<in> \\<Union> (from_F ` T2) \\<union>\n        Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) (enat (Suc i))\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset N)\n    \\<subseteq> \\<Union> (from_F ` T2) \\<union>\n                Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                 (enat (Suc i))", "by blast"], ["proof (state)\nthis:\n  lgc_invar TNs (enat (Suc i))\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  \\<lbrakk>lnth TNs i = (?T1.2, ?N2); lnth TNs (Suc i) = (?T2.2, ?N2);\n   ?T1.2 = ?T2.2 \\<union> ?T'2;\n   ?T'2 \\<inter> no_labels.Inf_from (fst ` active_subset ?N2) = {}\\<rbrakk>\n  \\<Longrightarrow> lgc_invar TNs (enat (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lgc_invar_lgc:\n  assumes\n    lgc: \"chain (\\<leadsto>LGC) TNs\" and\n    n_init: \"active_subset (snd (lhd TNs)) = {}\" and\n    t_init: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\" and\n    i_lt: \"i < llength TNs\"\n  shows \"lgc_invar TNs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lgc_invar TNs i", "using i_lt"], ["proof (prove)\nusing this:\n  i < llength TNs\n\ngoal (1 subgoal):\n 1. lgc_invar TNs i", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>nat.\n       enat nat < llength TNs \\<Longrightarrow> lgc_invar TNs (enat nat)\n 2. \\<infinity> < llength TNs \\<Longrightarrow> lgc_invar TNs \\<infinity>", "case (enat i)"], ["proof (state)\nthis:\n  enat i < llength TNs\n\ngoal (2 subgoals):\n 1. \\<And>nat.\n       enat nat < llength TNs \\<Longrightarrow> lgc_invar TNs (enat nat)\n 2. \\<infinity> < llength TNs \\<Longrightarrow> lgc_invar TNs \\<infinity>", "then"], ["proof (chain)\npicking this:\n  enat i < llength TNs", "show ?case"], ["proof (prove)\nusing this:\n  enat i < llength TNs\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat i)", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat 0 < llength TNs \\<Longrightarrow> lgc_invar TNs (enat 0)\n 2. \\<And>i.\n       \\<lbrakk>enat i < llength TNs \\<Longrightarrow>\n                lgc_invar TNs (enat i);\n        enat (Suc i) < llength TNs\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "case 0"], ["proof (state)\nthis:\n  enat 0 < llength TNs\n\ngoal (2 subgoals):\n 1. enat 0 < llength TNs \\<Longrightarrow> lgc_invar TNs (enat 0)\n 2. \\<And>i.\n       \\<lbrakk>enat i < llength TNs \\<Longrightarrow>\n                lgc_invar TNs (enat i);\n        enat (Suc i) < llength TNs\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "then"], ["proof (chain)\npicking this:\n  enat 0 < llength TNs", "show ?case"], ["proof (prove)\nusing this:\n  enat 0 < llength TNs\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat 0)", "using lgc_invar_lgc_init[OF chain_not_lnull[OF lgc] n_init t_init]"], ["proof (prove)\nusing this:\n  enat 0 < llength TNs\n  lgc_invar TNs 0\n\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat 0)", "by (simp add: enat_0)"], ["proof (state)\nthis:\n  lgc_invar TNs (enat 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength TNs \\<Longrightarrow>\n                lgc_invar TNs (enat i);\n        enat (Suc i) < llength TNs\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength TNs \\<Longrightarrow>\n                lgc_invar TNs (enat i);\n        enat (Suc i) < llength TNs\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "case (Suc i)"], ["proof (state)\nthis:\n  enat i < llength TNs \\<Longrightarrow> lgc_invar TNs (enat i)\n  enat (Suc i) < llength TNs\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength TNs \\<Longrightarrow>\n                lgc_invar TNs (enat i);\n        enat (Suc i) < llength TNs\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "note ih = this(1) and Si_lt = this(2)"], ["proof (state)\nthis:\n  enat i < llength TNs \\<Longrightarrow> lgc_invar TNs (enat i)\n  enat (Suc i) < llength TNs\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength TNs \\<Longrightarrow>\n                lgc_invar TNs (enat i);\n        enat (Suc i) < llength TNs\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "have i_lt: \"enat i < llength TNs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength TNs", "using Si_lt Suc_ile_eq less_le"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength TNs\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  (?x < ?y) = (?x \\<le> ?y \\<and> ?x \\<noteq> ?y)\n\ngoal (1 subgoal):\n 1. enat i < llength TNs", "by blast"], ["proof (state)\nthis:\n  enat i < llength TNs\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength TNs \\<Longrightarrow>\n                lgc_invar TNs (enat i);\n        enat (Suc i) < llength TNs\\<rbrakk>\n       \\<Longrightarrow> lgc_invar TNs (enat (Suc i))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lgc_invar TNs (enat (Suc i))", "by (rule lgc_invar_lgc_step[OF Si_lt ih[OF i_lt] chain_lnth_rel[OF lgc Si_lt]])"], ["proof (state)\nthis:\n  lgc_invar TNs (enat (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lgc_invar TNs (enat i)\n\ngoal (1 subgoal):\n 1. \\<infinity> < llength TNs \\<Longrightarrow> lgc_invar TNs \\<infinity>", "qed simp"], ["", "lemma lgc_fair_new_proof:\n  assumes\n    lgc: \"chain (\\<leadsto>LGC) TNs\" and\n    n_init: \"active_subset (snd (lhd TNs)) = {}\" and\n    n_lim: \"passive_subset (Liminf_llist (lmap snd TNs)) = {}\" and\n    t_init: \"\\<forall>\\<iota> \\<in> Inf_F. prems_of \\<iota> = [] \\<longrightarrow> \\<iota> \\<in> fst (lhd TNs)\" and\n    t_lim: \"Liminf_llist (lmap fst TNs) = {}\"\n  shows \"fair (lmap snd TNs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. empty_ord.fair (lmap snd TNs)", "unfolding fair_def llist.map_comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have \"Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\" (is \"?lhs \\<subseteq> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Inf_from (active_subset (Liminf_llist (lmap snd TNs)))", "by (rule Inf_from_mono) (use n_lim passive_subset_def active_subset_def in blast)"], ["proof (state)\nthis:\n  Inf_from (Liminf_llist (lmap snd TNs))\n  \\<subseteq> Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "also"], ["proof (state)\nthis:\n  Inf_from (Liminf_llist (lmap snd TNs))\n  \\<subseteq> Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have \"... \\<subseteq> \\<Union> (from_F ` Liminf_upto_llist (lmap fst TNs) \\<infinity>)\n    \\<union> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n    \\<subseteq> \\<Union>\n                 (from_F `\n                  Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n                Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "using lgc_invar_infinity[OF chain_not_lnull[OF lgc]] lgc_invar_lgc[OF lgc n_init t_init]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     enat i < llength TNs \\<longrightarrow>\n     lgc_invar TNs (enat i) \\<Longrightarrow>\n  lgc_invar TNs \\<infinity>\n  ?i < llength TNs \\<Longrightarrow> lgc_invar TNs ?i\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n    \\<subseteq> \\<Union>\n                 (from_F `\n                  Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n                Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "unfolding lgc_invar_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     enat i < llength TNs \\<longrightarrow>\n     Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) (enat i)))\n     \\<subseteq> \\<Union>\n                  (from_F `\n                   Liminf_upto_llist (lmap fst TNs) (enat i)) \\<union>\n                 Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n                  (enat i) \\<Longrightarrow>\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) \\<infinity>))\n  \\<subseteq> \\<Union>\n               (from_F `\n                Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) \\<infinity>\n  ?i < llength TNs \\<Longrightarrow>\n  Inf_from (active_subset (Liminf_upto_llist (lmap snd TNs) ?i))\n  \\<subseteq> \\<Union>\n               (from_F ` Liminf_upto_llist (lmap fst TNs) ?i) \\<union>\n              Sup_upto_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs) ?i\n\ngoal (1 subgoal):\n 1. Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n    \\<subseteq> \\<Union>\n                 (from_F `\n                  Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n                Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "by fastforce"], ["proof (state)\nthis:\n  Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n  \\<subseteq> \\<Union>\n               (from_F `\n                Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n              Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "also"], ["proof (state)\nthis:\n  Inf_from (active_subset (Liminf_llist (lmap snd TNs)))\n  \\<subseteq> \\<Union>\n               (from_F `\n                Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n              Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "have \"... \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\" (is \"_ \\<subseteq> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     (from_F ` Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n    Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "using t_lim"], ["proof (prove)\nusing this:\n  Liminf_llist (lmap fst TNs) = {}\n\ngoal (1 subgoal):\n 1. \\<Union>\n     (from_F ` Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n    Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "by auto"], ["proof (state)\nthis:\n  \\<Union> (from_F ` Liminf_upto_llist (lmap fst TNs) \\<infinity>) \\<union>\n  Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n  \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "finally"], ["proof (chain)\npicking this:\n  Inf_from (Liminf_llist (lmap snd TNs))\n  \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "show \"?lhs \\<subseteq> ?rhs\""], ["proof (prove)\nusing this:\n  Inf_from (Liminf_llist (lmap snd TNs))\n  \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal (1 subgoal):\n 1. Inf_from (Liminf_llist (lmap snd TNs))\n    \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)", "."], ["proof (state)\nthis:\n  Inf_from (Liminf_llist (lmap snd TNs))\n  \\<subseteq> Sup_llist (lmap (Red_I_\\<G> \\<circ> snd) TNs)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}