{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions/Clausal_Calculus.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions", "problem_names": ["lemma entails_iff_unsatisfiable_single:\n  \"CC \\<TTurnstile>e {E} \\<longleftrightarrow> \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\" (is \"_ \\<longleftrightarrow> _ (_ \\<union> ?NegD)\")", "lemma entails_iff_unsatisfiable:\n  \"CC \\<TTurnstile>e EE \\<longleftrightarrow> (\\<forall>E \\<in> EE. \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))\" (is \"?lhs = ?rhs\")", "lemma true_clss_of_interp_iff_equal[simp]: \"J \\<TTurnstile>s clss_of_interp I \\<longleftrightarrow> J = I\"", "lemma entails_iff_models[simp]: \"clss_of_interp I \\<TTurnstile>e CC \\<longleftrightarrow> I \\<TTurnstile>s CC\"", "lemma Inf_counterex_reducing:\n  assumes\n    bot_ni_n: \"N \\<inter> {{#}} = {}\" and\n    d_in_n: \"D \\<in> N\" and\n    n_ent_d: \"\\<not> I_of N \\<TTurnstile>e {D}\" and\n    d_min: \"\\<And>C. C \\<in> N \\<Longrightarrow> \\<not> I_of N \\<TTurnstile>e {C} \\<Longrightarrow> D \\<le> C\"\n  shows \"\\<exists>\\<iota> \\<in> Inf. prems_of \\<iota> \\<noteq> [] \\<and> main_prem_of \\<iota> = D \\<and> set (side_prems_of \\<iota>) \\<subseteq> N\n    \\<and> I_of N \\<TTurnstile>e set (side_prems_of \\<iota>) \\<and> \\<not> I_of N \\<TTurnstile>e {concl_of \\<iota>} \\<and> concl_of \\<iota> < D\"", "lemma clausal_saturated_model: \"saturated N \\<Longrightarrow> {#} \\<notin> N \\<Longrightarrow> J_of N \\<TTurnstile>s N\""], "translations": [["", "lemma entails_iff_unsatisfiable_single:\n  \"CC \\<TTurnstile>e {E} \\<longleftrightarrow> \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\" (is \"_ \\<longleftrightarrow> _ (_ \\<union> ?NegD)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e {E}) =\n    (\\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. CC \\<TTurnstile>e {E} \\<Longrightarrow>\n    \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n 2. \\<not> satisfiable\n            (CC \\<union> {{#- L#} |L. L \\<in># E}) \\<Longrightarrow>\n    CC \\<TTurnstile>e {E}", "assume c_ent_e: \"CC \\<TTurnstile>e {E}\""], ["proof (state)\nthis:\n  CC \\<TTurnstile>e {E}\n\ngoal (2 subgoals):\n 1. CC \\<TTurnstile>e {E} \\<Longrightarrow>\n    \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n 2. \\<not> satisfiable\n            (CC \\<union> {{#- L#} |L. L \\<in># E}) \\<Longrightarrow>\n    CC \\<TTurnstile>e {E}", "have \"\\<not> I \\<TTurnstile>s CC \\<union> ?NegD\" for I"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}", "using c_ent_e[rule_format, of I]"], ["proof (prove)\nusing this:\n  I \\<TTurnstile>s CC \\<Longrightarrow> I \\<TTurnstile>s {E}\n\ngoal (1 subgoal):\n 1. \\<not> I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}", "unfolding true_clss_def true_cls_def true_lit_def if_distribR if_bool_eq_conj"], ["proof (prove)\nusing this:\n  \\<forall>C\\<in>CC.\n     \\<exists>L\\<in>#C.\n        (is_pos L \\<longrightarrow> atm_of L \\<in> I) \\<and>\n        (is_neg L \\<longrightarrow> atm_of L \\<notin> I) \\<Longrightarrow>\n  \\<forall>C\\<in>{E}.\n     \\<exists>L\\<in>#C.\n        (is_pos L \\<longrightarrow> atm_of L \\<in> I) \\<and>\n        (is_neg L \\<longrightarrow> atm_of L \\<notin> I)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C\\<in>CC \\<union> {{#- L#} |L. L \\<in># E}.\n               \\<exists>L\\<in>#C.\n                  (is_pos L \\<longrightarrow> atm_of L \\<in> I) \\<and>\n                  (is_neg L \\<longrightarrow> atm_of L \\<notin> I))", "by (fastforce simp: ball_Un is_pos_neg_not_is_pos)"], ["proof (state)\nthis:\n  \\<not> ?I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}\n\ngoal (2 subgoals):\n 1. CC \\<TTurnstile>e {E} \\<Longrightarrow>\n    \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n 2. \\<not> satisfiable\n            (CC \\<union> {{#- L#} |L. L \\<in># E}) \\<Longrightarrow>\n    CC \\<TTurnstile>e {E}", "then"], ["proof (chain)\npicking this:\n  \\<not> ?I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}", "show \"\\<not> satisfiable (CC \\<union> ?NegD)\""], ["proof (prove)\nusing this:\n  \\<not> ?I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}\n\ngoal (1 subgoal):\n 1. \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})", "by auto"], ["proof (state)\nthis:\n  \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n\ngoal (1 subgoal):\n 1. \\<not> satisfiable\n            (CC \\<union> {{#- L#} |L. L \\<in># E}) \\<Longrightarrow>\n    CC \\<TTurnstile>e {E}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> satisfiable\n            (CC \\<union> {{#- L#} |L. L \\<in># E}) \\<Longrightarrow>\n    CC \\<TTurnstile>e {E}", "assume \"\\<not> satisfiable (CC \\<union> ?NegD)\""], ["proof (state)\nthis:\n  \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n\ngoal (1 subgoal):\n 1. \\<not> satisfiable\n            (CC \\<union> {{#- L#} |L. L \\<in># E}) \\<Longrightarrow>\n    CC \\<TTurnstile>e {E}", "then"], ["proof (chain)\npicking this:\n  \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})", "have \"\\<not> I \\<TTurnstile>s CC \\<union> ?NegD\" for I"], ["proof (prove)\nusing this:\n  \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n\ngoal (1 subgoal):\n 1. \\<not> I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}", "by auto"], ["proof (state)\nthis:\n  \\<not> ?I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}\n\ngoal (1 subgoal):\n 1. \\<not> satisfiable\n            (CC \\<union> {{#- L#} |L. L \\<in># E}) \\<Longrightarrow>\n    CC \\<TTurnstile>e {E}", "then"], ["proof (chain)\npicking this:\n  \\<not> ?I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}", "show \"CC \\<TTurnstile>e {E}\""], ["proof (prove)\nusing this:\n  \\<not> ?I \\<TTurnstile>s CC \\<union> {{#- L#} |L. L \\<in># E}\n\ngoal (1 subgoal):\n 1. CC \\<TTurnstile>e {E}", "unfolding true_clss_def true_cls_def true_lit_def if_distribR if_bool_eq_conj"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>C\\<in>CC \\<union> {{#- L#} |L. L \\<in># E}.\n             \\<exists>L\\<in>#C.\n                (is_pos L \\<longrightarrow> atm_of L \\<in> ?I) \\<and>\n                (is_neg L \\<longrightarrow> atm_of L \\<notin> ?I))\n\ngoal (1 subgoal):\n 1. \\<forall>I.\n       (\\<forall>C\\<in>CC.\n           \\<exists>L\\<in>#C.\n              (is_pos L \\<longrightarrow> atm_of L \\<in> I) \\<and>\n              (is_neg L \\<longrightarrow>\n               atm_of L \\<notin> I)) \\<longrightarrow>\n       (\\<forall>C\\<in>{E}.\n           \\<exists>L\\<in>#C.\n              (is_pos L \\<longrightarrow> atm_of L \\<in> I) \\<and>\n              (is_neg L \\<longrightarrow> atm_of L \\<notin> I))", "by (fastforce simp: ball_Un is_pos_neg_not_is_pos)"], ["proof (state)\nthis:\n  CC \\<TTurnstile>e {E}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma entails_iff_unsatisfiable:\n  \"CC \\<TTurnstile>e EE \\<longleftrightarrow> (\\<forall>E \\<in> EE. \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e EE) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e EE) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "have \"?lhs \\<longleftrightarrow> (\\<forall>E \\<in> EE. CC \\<TTurnstile>e {E})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e EE) = (\\<forall>E\\<in>EE. CC \\<TTurnstile>e {E})", "unfolding true_clss_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>I.\n        Ball CC ((\\<TTurnstile>) I) \\<longrightarrow>\n        Ball EE ((\\<TTurnstile>) I)) =\n    (\\<forall>E\\<in>EE.\n        \\<forall>I.\n           Ball CC ((\\<TTurnstile>) I) \\<longrightarrow>\n           Ball {E} ((\\<TTurnstile>) I))", "by auto"], ["proof (state)\nthis:\n  (CC \\<TTurnstile>e EE) = (\\<forall>E\\<in>EE. CC \\<TTurnstile>e {E})\n\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e EE) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "also"], ["proof (state)\nthis:\n  (CC \\<TTurnstile>e EE) = (\\<forall>E\\<in>EE. CC \\<TTurnstile>e {E})\n\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e EE) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "have \"... \\<longleftrightarrow> ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>E\\<in>EE. CC \\<TTurnstile>e {E}) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "unfolding entails_iff_unsatisfiable_single"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "by auto"], ["proof (state)\nthis:\n  (\\<forall>E\\<in>EE. CC \\<TTurnstile>e {E}) =\n  (\\<forall>E\\<in>EE.\n      \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))\n\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e EE) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "finally"], ["proof (chain)\npicking this:\n  (CC \\<TTurnstile>e EE) =\n  (\\<forall>E\\<in>EE.\n      \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "show ?thesis"], ["proof (prove)\nusing this:\n  (CC \\<TTurnstile>e EE) =\n  (\\<forall>E\\<in>EE.\n      \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))\n\ngoal (1 subgoal):\n 1. (CC \\<TTurnstile>e EE) =\n    (\\<forall>E\\<in>EE.\n        \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))", "."], ["proof (state)\nthis:\n  (CC \\<TTurnstile>e EE) =\n  (\\<forall>E\\<in>EE.\n      \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E}))\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation consequence_relation \"{{#}}\" \"(\\<TTurnstile>e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consequence_relation {{#}} (\\<TTurnstile>e)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. {{#}} \\<noteq> {}\n 2. \\<And>B N1. B \\<in> {{#}} \\<Longrightarrow> {B} \\<TTurnstile>e N1\n 3. \\<And>N2 N1. N2 \\<subseteq> N1 \\<Longrightarrow> N1 \\<TTurnstile>e N2\n 4. \\<And>N2 N1.\n       \\<forall>C\\<in>N2. N1 \\<TTurnstile>e {C} \\<Longrightarrow>\n       N1 \\<TTurnstile>e N2\n 5. \\<And>N1 N2 N3.\n       \\<lbrakk>N1 \\<TTurnstile>e N2; N2 \\<TTurnstile>e N3\\<rbrakk>\n       \\<Longrightarrow> N1 \\<TTurnstile>e N3", "fix N2 N1 :: \"'a clause set\""], ["proof (state)\ngoal (5 subgoals):\n 1. {{#}} \\<noteq> {}\n 2. \\<And>B N1. B \\<in> {{#}} \\<Longrightarrow> {B} \\<TTurnstile>e N1\n 3. \\<And>N2 N1. N2 \\<subseteq> N1 \\<Longrightarrow> N1 \\<TTurnstile>e N2\n 4. \\<And>N2 N1.\n       \\<forall>C\\<in>N2. N1 \\<TTurnstile>e {C} \\<Longrightarrow>\n       N1 \\<TTurnstile>e N2\n 5. \\<And>N1 N2 N3.\n       \\<lbrakk>N1 \\<TTurnstile>e N2; N2 \\<TTurnstile>e N3\\<rbrakk>\n       \\<Longrightarrow> N1 \\<TTurnstile>e N3", "assume \"\\<forall>C \\<in> N2. N1 \\<TTurnstile>e {C}\""], ["proof (state)\nthis:\n  \\<forall>C\\<in>N2. N1 \\<TTurnstile>e {C}\n\ngoal (5 subgoals):\n 1. {{#}} \\<noteq> {}\n 2. \\<And>B N1. B \\<in> {{#}} \\<Longrightarrow> {B} \\<TTurnstile>e N1\n 3. \\<And>N2 N1. N2 \\<subseteq> N1 \\<Longrightarrow> N1 \\<TTurnstile>e N2\n 4. \\<And>N2 N1.\n       \\<forall>C\\<in>N2. N1 \\<TTurnstile>e {C} \\<Longrightarrow>\n       N1 \\<TTurnstile>e N2\n 5. \\<And>N1 N2 N3.\n       \\<lbrakk>N1 \\<TTurnstile>e N2; N2 \\<TTurnstile>e N3\\<rbrakk>\n       \\<Longrightarrow> N1 \\<TTurnstile>e N3", "then"], ["proof (chain)\npicking this:\n  \\<forall>C\\<in>N2. N1 \\<TTurnstile>e {C}", "show \"N1 \\<TTurnstile>e N2\""], ["proof (prove)\nusing this:\n  \\<forall>C\\<in>N2. N1 \\<TTurnstile>e {C}\n\ngoal (1 subgoal):\n 1. N1 \\<TTurnstile>e N2", "unfolding true_clss_singleton"], ["proof (prove)\nusing this:\n  \\<forall>C\\<in>N2.\n     \\<forall>I. I \\<TTurnstile>s N1 \\<longrightarrow> I \\<TTurnstile> C\n\ngoal (1 subgoal):\n 1. N1 \\<TTurnstile>e N2", "by (simp add: true_clss_def)"], ["proof (state)\nthis:\n  N1 \\<TTurnstile>e N2\n\ngoal (4 subgoals):\n 1. {{#}} \\<noteq> {}\n 2. \\<And>B N1. B \\<in> {{#}} \\<Longrightarrow> {B} \\<TTurnstile>e N1\n 3. \\<And>N2 N1. N2 \\<subseteq> N1 \\<Longrightarrow> N1 \\<TTurnstile>e N2\n 4. \\<And>N1 N2 N3.\n       \\<lbrakk>N1 \\<TTurnstile>e N2; N2 \\<TTurnstile>e N3\\<rbrakk>\n       \\<Longrightarrow> N1 \\<TTurnstile>e N3", "qed (auto intro: true_clss_mono)"], ["", "interpretation concl_compact_consequence_relation \"{{#}} :: ('a :: wellorder) clause set\" \"(\\<TTurnstile>e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concl_compact_consequence_relation {{#}} (\\<TTurnstile>e)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "fix CC EE :: \"'a clause set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "assume\n    fin_e: \"finite EE\" and\n    c_ent_e: \"CC \\<TTurnstile>e EE\""], ["proof (state)\nthis:\n  finite EE\n  CC \\<TTurnstile>e EE\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "have \"\\<forall>E \\<in> EE. \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>E\\<in>EE.\n       \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})", "using c_ent_e[unfolded entails_iff_unsatisfiable]"], ["proof (prove)\nusing this:\n  \\<forall>E\\<in>EE.\n     \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n\ngoal (1 subgoal):\n 1. \\<forall>E\\<in>EE.\n       \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})", "."], ["proof (state)\nthis:\n  \\<forall>E\\<in>EE.\n     \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "then"], ["proof (chain)\npicking this:\n  \\<forall>E\\<in>EE.\n     \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})", "have \"\\<forall>E \\<in> EE. \\<exists>DD \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E}. finite DD \\<and> \\<not> satisfiable DD\""], ["proof (prove)\nusing this:\n  \\<forall>E\\<in>EE.\n     \\<not> satisfiable (CC \\<union> {{#- L#} |L. L \\<in># E})\n\ngoal (1 subgoal):\n 1. \\<forall>E\\<in>EE.\n       \\<exists>DD\\<subseteq>CC \\<union> {{#- L#} |L. L \\<in># E}.\n          finite DD \\<and> \\<not> satisfiable DD", "by (subst (asm) clausal_logic_compact)"], ["proof (state)\nthis:\n  \\<forall>E\\<in>EE.\n     \\<exists>DD\\<subseteq>CC \\<union> {{#- L#} |L. L \\<in># E}.\n        finite DD \\<and> \\<not> satisfiable DD\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "then"], ["proof (chain)\npicking this:\n  \\<forall>E\\<in>EE.\n     \\<exists>DD\\<subseteq>CC \\<union> {{#- L#} |L. L \\<in># E}.\n        finite DD \\<and> \\<not> satisfiable DD", "obtain DD_of where\n    d_of: \"\\<forall>E \\<in> EE. DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and> finite (DD_of E)\n      \\<and> \\<not> satisfiable (DD_of E)\""], ["proof (prove)\nusing this:\n  \\<forall>E\\<in>EE.\n     \\<exists>DD\\<subseteq>CC \\<union> {{#- L#} |L. L \\<in># E}.\n        finite DD \\<and> \\<not> satisfiable DD\n\ngoal (1 subgoal):\n 1. (\\<And>DD_of.\n        \\<forall>E\\<in>EE.\n           DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and>\n           finite (DD_of E) \\<and>\n           \\<not> satisfiable (DD_of E) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>E\\<in>EE.\n     DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and>\n     finite (DD_of E) \\<and> \\<not> satisfiable (DD_of E)\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "define CC' where\n    \"CC' = (\\<Union>E \\<in> EE. DD_of E - {{#- L#} |L. L \\<in># E})\""], ["proof (state)\nthis:\n  CC' = (\\<Union>E\\<in>EE. DD_of E - {{#- L#} |L. L \\<in># E})\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "have \"CC' \\<subseteq> CC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CC' \\<subseteq> CC", "unfolding CC'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>E\\<in>EE. DD_of E - {{#- L#} |L. L \\<in># E}) \\<subseteq> CC", "using d_of"], ["proof (prove)\nusing this:\n  \\<forall>E\\<in>EE.\n     DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and>\n     finite (DD_of E) \\<and> \\<not> satisfiable (DD_of E)\n\ngoal (1 subgoal):\n 1. (\\<Union>E\\<in>EE. DD_of E - {{#- L#} |L. L \\<in># E}) \\<subseteq> CC", "by auto"], ["proof (state)\nthis:\n  CC' \\<subseteq> CC\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "moreover"], ["proof (state)\nthis:\n  CC' \\<subseteq> CC\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "have c'_fin: \"finite CC'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite CC'", "unfolding CC'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union>E\\<in>EE. DD_of E - {{#- L#} |L. L \\<in># E})", "using d_of fin_e"], ["proof (prove)\nusing this:\n  \\<forall>E\\<in>EE.\n     DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and>\n     finite (DD_of E) \\<and> \\<not> satisfiable (DD_of E)\n  finite EE\n\ngoal (1 subgoal):\n 1. finite (\\<Union>E\\<in>EE. DD_of E - {{#- L#} |L. L \\<in># E})", "by blast"], ["proof (state)\nthis:\n  finite CC'\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "moreover"], ["proof (state)\nthis:\n  finite CC'\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "have \"CC' \\<TTurnstile>e EE\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CC' \\<TTurnstile>e EE", "unfolding entails_iff_unsatisfiable"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>E\\<in>EE.\n       \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>E.\n       E \\<in> EE \\<Longrightarrow>\n       \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "fix E"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>E.\n       E \\<in> EE \\<Longrightarrow>\n       \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "assume e_in: \"E \\<in> EE\""], ["proof (state)\nthis:\n  E \\<in> EE\n\ngoal (1 subgoal):\n 1. \\<And>E.\n       E \\<in> EE \\<Longrightarrow>\n       \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "have \"DD_of E \\<subseteq> CC' \\<union> {{#- L#} |L. L \\<in># E}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DD_of E \\<subseteq> CC' \\<union> {{#- L#} |L. L \\<in># E}", "using e_in d_of"], ["proof (prove)\nusing this:\n  E \\<in> EE\n  \\<forall>E\\<in>EE.\n     DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and>\n     finite (DD_of E) \\<and> \\<not> satisfiable (DD_of E)\n\ngoal (1 subgoal):\n 1. DD_of E \\<subseteq> CC' \\<union> {{#- L#} |L. L \\<in># E}", "unfolding CC'_def"], ["proof (prove)\nusing this:\n  E \\<in> EE\n  \\<forall>E\\<in>EE.\n     DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and>\n     finite (DD_of E) \\<and> \\<not> satisfiable (DD_of E)\n\ngoal (1 subgoal):\n 1. DD_of E\n    \\<subseteq> (\\<Union>E\\<in>EE.\n                    DD_of E - {{#- L#} |L. L \\<in># E}) \\<union>\n                {{#- L#} |L. L \\<in># E}", "by auto"], ["proof (state)\nthis:\n  DD_of E \\<subseteq> CC' \\<union> {{#- L#} |L. L \\<in># E}\n\ngoal (1 subgoal):\n 1. \\<And>E.\n       E \\<in> EE \\<Longrightarrow>\n       \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "moreover"], ["proof (state)\nthis:\n  DD_of E \\<subseteq> CC' \\<union> {{#- L#} |L. L \\<in># E}\n\ngoal (1 subgoal):\n 1. \\<And>E.\n       E \\<in> EE \\<Longrightarrow>\n       \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "have \"\\<not> satisfiable (DD_of E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> satisfiable (DD_of E)", "using e_in d_of"], ["proof (prove)\nusing this:\n  E \\<in> EE\n  \\<forall>E\\<in>EE.\n     DD_of E \\<subseteq> CC \\<union> {{#- L#} |L. L \\<in># E} \\<and>\n     finite (DD_of E) \\<and> \\<not> satisfiable (DD_of E)\n\ngoal (1 subgoal):\n 1. \\<not> satisfiable (DD_of E)", "by auto"], ["proof (state)\nthis:\n  \\<not> satisfiable (DD_of E)\n\ngoal (1 subgoal):\n 1. \\<And>E.\n       E \\<in> EE \\<Longrightarrow>\n       \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "ultimately"], ["proof (chain)\npicking this:\n  DD_of E \\<subseteq> CC' \\<union> {{#- L#} |L. L \\<in># E}\n  \\<not> satisfiable (DD_of E)", "show \"\\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})\""], ["proof (prove)\nusing this:\n  DD_of E \\<subseteq> CC' \\<union> {{#- L#} |L. L \\<in># E}\n  \\<not> satisfiable (DD_of E)\n\ngoal (1 subgoal):\n 1. \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})", "by (rule unsatisfiable_mono[of \"DD_of E\"])"], ["proof (state)\nthis:\n  \\<not> satisfiable (CC' \\<union> {{#- L#} |L. L \\<in># E})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  CC' \\<TTurnstile>e EE\n\ngoal (1 subgoal):\n 1. \\<And>EE CC.\n       \\<lbrakk>finite EE; CC \\<TTurnstile>e EE\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC'\\<subseteq>CC.\n                            finite CC' \\<and> CC' \\<TTurnstile>e EE", "ultimately"], ["proof (chain)\npicking this:\n  CC' \\<subseteq> CC\n  finite CC'\n  CC' \\<TTurnstile>e EE", "show \"\\<exists>CC' \\<subseteq> CC. finite CC' \\<and> CC' \\<TTurnstile>e EE\""], ["proof (prove)\nusing this:\n  CC' \\<subseteq> CC\n  finite CC'\n  CC' \\<TTurnstile>e EE\n\ngoal (1 subgoal):\n 1. \\<exists>CC'\\<subseteq>CC. finite CC' \\<and> CC' \\<TTurnstile>e EE", "by blast"], ["proof (state)\nthis:\n  \\<exists>CC'\\<subseteq>CC. finite CC' \\<and> CC' \\<TTurnstile>e EE\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Counterexample-Reducing Inference Systems\\<close>"], ["", "definition clss_of_interp :: \"'a set \\<Rightarrow> 'a literal multiset set\" where\n  \"clss_of_interp I = {{#(if A \\<in> I then Pos else Neg) A#} |A. True}\""], ["", "lemma true_clss_of_interp_iff_equal[simp]: \"J \\<TTurnstile>s clss_of_interp I \\<longleftrightarrow> J = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (J \\<TTurnstile>s clss_of_interp I) = (J = I)", "unfolding clss_of_interp_def true_clss_def true_cls_def true_lit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>C\\<in>{{#(if A \\<in> I then Pos else Neg) A#} |A. True}.\n        \\<exists>L\\<in>#C.\n           (if is_pos L then \\<lambda>P. P else Not) (atm_of L \\<in> J)) =\n    (J = I)", "by force"], ["", "lemma entails_iff_models[simp]: \"clss_of_interp I \\<TTurnstile>e CC \\<longleftrightarrow> I \\<TTurnstile>s CC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (clss_of_interp I \\<TTurnstile>e CC) = (I \\<TTurnstile>s CC)", "by simp"], ["", "locale clausal_counterex_reducing_inference_system = inference_system Inf\n  for Inf :: \"('a :: wellorder) clause inference set\" +\n  fixes J_of :: \"'a clause set \\<Rightarrow> 'a interp\"\n  assumes clausal_Inf_counterex_reducing:\n    \"{#} \\<notin> N \\<Longrightarrow> D \\<in> N \\<Longrightarrow> \\<not> J_of N \\<TTurnstile> D \\<Longrightarrow> (\\<And>C. C \\<in> N \\<Longrightarrow> \\<not> J_of N \\<TTurnstile> C \\<Longrightarrow> D \\<le> C) \\<Longrightarrow>\n     \\<exists>\\<iota> \\<in> Inf. prems_of \\<iota> \\<noteq> [] \\<and> main_prem_of \\<iota> = D \\<and> set (side_prems_of \\<iota>) \\<subseteq> N \\<and>\n       J_of N \\<TTurnstile>s set (side_prems_of \\<iota>) \\<and> \\<not> J_of N \\<TTurnstile> concl_of \\<iota> \\<and> concl_of \\<iota> < D\"\nbegin"], ["", "abbreviation I_of :: \"'a clause set \\<Rightarrow> 'a clause set\" where\n  \"I_of N \\<equiv> clss_of_interp (J_of N)\""], ["", "lemma Inf_counterex_reducing:\n  assumes\n    bot_ni_n: \"N \\<inter> {{#}} = {}\" and\n    d_in_n: \"D \\<in> N\" and\n    n_ent_d: \"\\<not> I_of N \\<TTurnstile>e {D}\" and\n    d_min: \"\\<And>C. C \\<in> N \\<Longrightarrow> \\<not> I_of N \\<TTurnstile>e {C} \\<Longrightarrow> D \\<le> C\"\n  shows \"\\<exists>\\<iota> \\<in> Inf. prems_of \\<iota> \\<noteq> [] \\<and> main_prem_of \\<iota> = D \\<and> set (side_prems_of \\<iota>) \\<subseteq> N\n    \\<and> I_of N \\<TTurnstile>e set (side_prems_of \\<iota>) \\<and> \\<not> I_of N \\<TTurnstile>e {concl_of \\<iota>} \\<and> concl_of \\<iota> < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<iota>\\<in>Inf.\n       inference.prems_of \\<iota> \\<noteq> [] \\<and>\n       Standard_Redundancy_Criterion.main_prem_of \\<iota> = D \\<and>\n       set (Standard_Redundancy_Criterion.side_prems_of \\<iota>)\n       \\<subseteq> N \\<and>\n       I_of N \\<TTurnstile>e\n       set (Standard_Redundancy_Criterion.side_prems_of \\<iota>) \\<and>\n       \\<not> I_of N \\<TTurnstile>e\n              {Calculus.inference.concl_of \\<iota>} \\<and>\n       Calculus.inference.concl_of \\<iota> < D", "using bot_ni_n clausal_Inf_counterex_reducing d_in_n d_min n_ent_d"], ["proof (prove)\nusing this:\n  N \\<inter> {{#}} = {}\n  \\<lbrakk>{#} \\<notin> ?N; ?D \\<in> ?N; \\<not> J_of ?N \\<TTurnstile> ?D;\n   \\<And>C.\n      \\<lbrakk>C \\<in> ?N; \\<not> J_of ?N \\<TTurnstile> C\\<rbrakk>\n      \\<Longrightarrow> ?D \\<le> C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<iota>\\<in>Inf.\n                       inference.prems_of \\<iota> \\<noteq> [] \\<and>\n                       Standard_Redundancy_Criterion.main_prem_of \\<iota> =\n                       ?D \\<and>\n                       set (Standard_Redundancy_Criterion.side_prems_of\n                             \\<iota>)\n                       \\<subseteq> ?N \\<and>\n                       J_of ?N \\<TTurnstile>s\n                       set (Standard_Redundancy_Criterion.side_prems_of\n                             \\<iota>) \\<and>\n                       \\<not> J_of ?N \\<TTurnstile>\n                              Calculus.inference.concl_of \\<iota> \\<and>\n                       Calculus.inference.concl_of \\<iota> < ?D\n  D \\<in> N\n  \\<lbrakk>?C \\<in> N; \\<not> I_of N \\<TTurnstile>e {?C}\\<rbrakk>\n  \\<Longrightarrow> D \\<le> ?C\n  \\<not> I_of N \\<TTurnstile>e {D}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<iota>\\<in>Inf.\n       inference.prems_of \\<iota> \\<noteq> [] \\<and>\n       Standard_Redundancy_Criterion.main_prem_of \\<iota> = D \\<and>\n       set (Standard_Redundancy_Criterion.side_prems_of \\<iota>)\n       \\<subseteq> N \\<and>\n       I_of N \\<TTurnstile>e\n       set (Standard_Redundancy_Criterion.side_prems_of \\<iota>) \\<and>\n       \\<not> I_of N \\<TTurnstile>e\n              {Calculus.inference.concl_of \\<iota>} \\<and>\n       Calculus.inference.concl_of \\<iota> < D", "by auto"], ["", "sublocale counterex_reducing_inference_system \"{{#}}\" \"(\\<TTurnstile>e)\" Inf I_of"], ["proof (prove)\ngoal (1 subgoal):\n 1. Standard_Redundancy_Criterion.counterex_reducing_inference_system {{#}}\n     (\\<TTurnstile>e) Inf I_of", "by unfold_locales (fact Inf_counterex_reducing)"], ["", "end"], ["", "subsection \\<open>Counterexample-Reducing Calculi Equipped with a Standard Redundancy Criterion\\<close>"], ["", "locale clausal_counterex_reducing_calculus_with_standard_redundancy =\n  calculus_with_standard_redundancy Inf \"{{#}}\" \"(\\<TTurnstile>e)\" +\n  clausal_counterex_reducing_inference_system Inf J_of\n  for\n    Inf :: \"('a :: wellorder) clause inference set\" and\n    J_of :: \"'a clause set \\<Rightarrow> 'a set\"\nbegin"], ["", "sublocale counterex_reducing_calculus_with_standard_redundancy \"{{#}}\" \"(\\<TTurnstile>e)\" I_of"], ["proof (prove)\ngoal (1 subgoal):\n 1. counterex_reducing_calculus_with_standard_redundancy {{#}}\n     (\\<TTurnstile>e) I_of Inf", "by unfold_locales"], ["", "lemma clausal_saturated_model: \"saturated N \\<Longrightarrow> {#} \\<notin> N \\<Longrightarrow> J_of N \\<TTurnstile>s N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>saturated N; {#} \\<notin> N\\<rbrakk>\n    \\<Longrightarrow> J_of N \\<TTurnstile>s N", "by (simp add: saturated_model[simplified])"], ["", "corollary clausal_saturated_complete: \"saturated N \\<Longrightarrow> (\\<forall>I. \\<not> I \\<TTurnstile>s N) \\<Longrightarrow> {#} \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>saturated N; \\<forall>I. \\<not> I \\<TTurnstile>s N\\<rbrakk>\n    \\<Longrightarrow> {#} \\<in> N", "using clausal_saturated_model"], ["proof (prove)\nusing this:\n  \\<lbrakk>saturated ?N; {#} \\<notin> ?N\\<rbrakk>\n  \\<Longrightarrow> J_of ?N \\<TTurnstile>s ?N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>saturated N; \\<forall>I. \\<not> I \\<TTurnstile>s N\\<rbrakk>\n    \\<Longrightarrow> {#} \\<in> N", "by blast"], ["", "end"], ["", "end"]]}