{"file_name": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions/Soundness.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Saturation_Framework_Extensions", "problem_names": ["lemma Inf_consist_preserving:\n  assumes n_cons: \"\\<not> N \\<Turnstile> Bot\"\n  shows \"\\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot\"", "lemma Red_F_Sup_subset_Red_F_Liminf:\n  \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_F (Sup_llist Ns) \\<subseteq> Red_F (Liminf_llist Ns)\"", "lemma Red_I_Sup_subset_Red_I_Liminf:\n  \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_I (Sup_llist Ns) \\<subseteq> Red_I (Liminf_llist Ns)\"", "lemma unsat_limit_iff:\n  assumes\n    chain_red: \"chain (\\<rhd>) Ns\" and\n    chain_ent: \"chain (\\<Turnstile>) Ns\"\n  shows \"Liminf_llist Ns \\<Turnstile> Bot \\<longleftrightarrow> lhd Ns \\<Turnstile> Bot\"", "lemma Red_F_limit_Sup: \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_F (Liminf_llist Ns) = Red_F (Sup_llist Ns)\"", "lemma Red_I_limit_Sup: \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_I (Liminf_llist Ns) = Red_I (Sup_llist Ns)\""], "translations": [["", "lemma Inf_consist_preserving:\n  assumes n_cons: \"\\<not> N \\<Turnstile> Bot\"\n  shows \"\\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot", "have \"N \\<Turnstile> concl_of ` Inf_from N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<Turnstile> concl_of ` Inf_from N", "using sound"], ["proof (prove)\nusing this:\n  ?\\<iota> \\<in> Inf \\<Longrightarrow>\n  set (prems_of ?\\<iota>) \\<Turnstile> {concl_of ?\\<iota>}\n\ngoal (1 subgoal):\n 1. N \\<Turnstile> concl_of ` Inf_from N", "unfolding Inf_from_def image_def Bex_def mem_Collect_eq"], ["proof (prove)\nusing this:\n  ?\\<iota> \\<in> Inf \\<Longrightarrow>\n  set (prems_of ?\\<iota>) \\<Turnstile> {concl_of ?\\<iota>}\n\ngoal (1 subgoal):\n 1. N \\<Turnstile>\n    {y. \\<exists>x.\n           (x \\<in> Inf \\<and> set (prems_of x) \\<subseteq> N) \\<and>\n           y = concl_of x}", "by (smt all_formulas_entailed entails_trans mem_Collect_eq subset_entailed)"], ["proof (state)\nthis:\n  N \\<Turnstile> concl_of ` Inf_from N\n\ngoal (1 subgoal):\n 1. \\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot", "then"], ["proof (chain)\npicking this:\n  N \\<Turnstile> concl_of ` Inf_from N", "show ?thesis"], ["proof (prove)\nusing this:\n  N \\<Turnstile> concl_of ` Inf_from N\n\ngoal (1 subgoal):\n 1. \\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot", "using n_cons entails_trans_strong"], ["proof (prove)\nusing this:\n  N \\<Turnstile> concl_of ` Inf_from N\n  \\<not> N \\<Turnstile> Bot\n  \\<lbrakk>?N1.0 \\<Turnstile> ?N2.0;\n   ?N1.0 \\<union> ?N2.0 \\<Turnstile> ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N3.0\n\ngoal (1 subgoal):\n 1. \\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot", "by blast"], ["proof (state)\nthis:\n  \\<not> N \\<union> concl_of ` Inf_from N \\<Turnstile> Bot\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\nThe limit of a derivation based on a redundancy criterion is satisfiable if and only if the initial\nset is satisfiable. This material is partly based on Section 4.1 of Bachmair and Ganzinger's\n\\emph{Handbook} chapter, but adapted to the saturation framework of Waldmann et al.\n\\<close>"], ["", "context calculus\nbegin"], ["", "text \\<open>\nThe next three lemmas correspond to Lemma 4.2:\n\\<close>"], ["", "lemma Red_F_Sup_subset_Red_F_Liminf:\n  \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_F (Sup_llist Ns) \\<subseteq> Red_F (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<rhd>) Ns \\<Longrightarrow>\n    Red_F (Sup_llist Ns) \\<subseteq> Red_F (Liminf_llist Ns)", "by (metis Liminf_llist_subset_Sup_llist Red_in_Sup Un_absorb1 calculus.Red_F_of_Red_F_subset\n      calculus_axioms double_diff sup_ge2)"], ["", "lemma Red_I_Sup_subset_Red_I_Liminf:\n  \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_I (Sup_llist Ns) \\<subseteq> Red_I (Liminf_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<rhd>) Ns \\<Longrightarrow>\n    Red_I (Sup_llist Ns) \\<subseteq> Red_I (Liminf_llist Ns)", "by (metis Liminf_llist_subset_Sup_llist Red_I_of_Red_F_subset Red_in_Sup double_diff subset_refl)"], ["", "text \\<open>\nProof idea due to Uwe Waldmann:\n\\<close>"], ["", "lemma unsat_limit_iff:\n  assumes\n    chain_red: \"chain (\\<rhd>) Ns\" and\n    chain_ent: \"chain (\\<Turnstile>) Ns\"\n  shows \"Liminf_llist Ns \\<Turnstile> Bot \\<longleftrightarrow> lhd Ns \\<Turnstile> Bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Liminf_llist Ns \\<Turnstile> Bot) = (lhd Ns \\<Turnstile> Bot)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Liminf_llist Ns \\<Turnstile> Bot \\<Longrightarrow>\n    lhd Ns \\<Turnstile> Bot\n 2. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "assume \"Liminf_llist Ns \\<Turnstile> Bot\""], ["proof (state)\nthis:\n  Liminf_llist Ns \\<Turnstile> Bot\n\ngoal (2 subgoals):\n 1. Liminf_llist Ns \\<Turnstile> Bot \\<Longrightarrow>\n    lhd Ns \\<Turnstile> Bot\n 2. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "moreover"], ["proof (state)\nthis:\n  Liminf_llist Ns \\<Turnstile> Bot\n\ngoal (2 subgoals):\n 1. Liminf_llist Ns \\<Turnstile> Bot \\<Longrightarrow>\n    lhd Ns \\<Turnstile> Bot\n 2. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "have \"Sup_llist Ns \\<Turnstile> Liminf_llist Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_llist Ns \\<Turnstile> Liminf_llist Ns", "by (simp add: Liminf_llist_subset_Sup_llist subset_entailed)"], ["proof (state)\nthis:\n  Sup_llist Ns \\<Turnstile> Liminf_llist Ns\n\ngoal (2 subgoals):\n 1. Liminf_llist Ns \\<Turnstile> Bot \\<Longrightarrow>\n    lhd Ns \\<Turnstile> Bot\n 2. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "moreover"], ["proof (state)\nthis:\n  Sup_llist Ns \\<Turnstile> Liminf_llist Ns\n\ngoal (2 subgoals):\n 1. Liminf_llist Ns \\<Turnstile> Bot \\<Longrightarrow>\n    lhd Ns \\<Turnstile> Bot\n 2. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "have \"lhd Ns \\<Turnstile> Sup_llist Ns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Sup_llist Ns", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Sup_llist Ns", "have \"lhd Ns \\<Turnstile> lnth Ns i\" if \"i < llength Ns\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> lnth Ns i", "using that"], ["proof (prove)\nusing this:\n  enat i < llength Ns\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> lnth Ns i", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat 0 < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns 0\n 2. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow>\n                lhd Ns \\<Turnstile> lnth Ns i;\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns (Suc i)", "case 0"], ["proof (state)\nthis:\n  enat 0 < llength Ns\n\ngoal (2 subgoals):\n 1. enat 0 < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns 0\n 2. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow>\n                lhd Ns \\<Turnstile> lnth Ns i;\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns (Suc i)", "then"], ["proof (chain)\npicking this:\n  enat 0 < llength Ns", "show ?case"], ["proof (prove)\nusing this:\n  enat 0 < llength Ns\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> lnth Ns 0", "using chain_ent chain_not_lnull lhd_conv_lnth subset_entailed"], ["proof (prove)\nusing this:\n  enat 0 < llength Ns\n  chain (\\<Turnstile>) Ns\n  chain ?R ?xs \\<Longrightarrow> \\<not> lnull ?xs\n  \\<not> lnull ?xs \\<Longrightarrow> lhd ?xs = lnth ?xs 0\n  ?N2.0 \\<subseteq> ?N1.0 \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N2.0\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> lnth Ns 0", "by fastforce"], ["proof (state)\nthis:\n  lhd Ns \\<Turnstile> lnth Ns 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow>\n                lhd Ns \\<Turnstile> lnth Ns i;\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns (Suc i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow>\n                lhd Ns \\<Turnstile> lnth Ns i;\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns (Suc i)", "case (Suc i)"], ["proof (state)\nthis:\n  enat i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns i\n  enat (Suc i) < llength Ns\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>enat i < llength Ns \\<Longrightarrow>\n                lhd Ns \\<Turnstile> lnth Ns i;\n        enat (Suc i) < llength Ns\\<rbrakk>\n       \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns (Suc i)", "then"], ["proof (chain)\npicking this:\n  enat i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns i\n  enat (Suc i) < llength Ns", "show ?case"], ["proof (prove)\nusing this:\n  enat i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns i\n  enat (Suc i) < llength Ns\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> lnth Ns (Suc i)", "using Suc_ile_eq chain_ent chain_lnth_rel entails_trans less_le"], ["proof (prove)\nusing this:\n  enat i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns i\n  enat (Suc i) < llength Ns\n  (enat (Suc ?m) \\<le> ?n) = (enat ?m < ?n)\n  chain (\\<Turnstile>) Ns\n  \\<lbrakk>chain ?R ?xs; enat (Suc ?j) < llength ?xs\\<rbrakk>\n  \\<Longrightarrow> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))\n  \\<lbrakk>?N1.0 \\<Turnstile> ?N2.0; ?N2.0 \\<Turnstile> ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N3.0\n  (?x < ?y) = (?x \\<le> ?y \\<and> ?x \\<noteq> ?y)\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> lnth Ns (Suc i)", "by blast"], ["proof (state)\nthis:\n  lhd Ns \\<Turnstile> lnth Ns (Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat ?i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns ?i\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Sup_llist Ns", "thus ?thesis"], ["proof (prove)\nusing this:\n  enat ?i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns ?i\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Sup_llist Ns", "unfolding Sup_llist_def"], ["proof (prove)\nusing this:\n  enat ?i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns ?i\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> \\<Union> (lnth Ns ` {i. enat i < llength Ns})", "using entail_unions"], ["proof (prove)\nusing this:\n  enat ?i < llength Ns \\<Longrightarrow> lhd Ns \\<Turnstile> lnth Ns ?i\n  (\\<forall>i\\<in>?I. ?N \\<Turnstile> ?Ni i) =\n  (?N \\<Turnstile> \\<Union> (?Ni ` ?I))\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> \\<Union> (lnth Ns ` {i. enat i < llength Ns})", "by fastforce"], ["proof (state)\nthis:\n  lhd Ns \\<Turnstile> Sup_llist Ns\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lhd Ns \\<Turnstile> Sup_llist Ns\n\ngoal (2 subgoals):\n 1. Liminf_llist Ns \\<Turnstile> Bot \\<Longrightarrow>\n    lhd Ns \\<Turnstile> Bot\n 2. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "ultimately"], ["proof (chain)\npicking this:\n  Liminf_llist Ns \\<Turnstile> Bot\n  Sup_llist Ns \\<Turnstile> Liminf_llist Ns\n  lhd Ns \\<Turnstile> Sup_llist Ns", "show \"lhd Ns \\<Turnstile> Bot\""], ["proof (prove)\nusing this:\n  Liminf_llist Ns \\<Turnstile> Bot\n  Sup_llist Ns \\<Turnstile> Liminf_llist Ns\n  lhd Ns \\<Turnstile> Sup_llist Ns\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot", "using entails_trans"], ["proof (prove)\nusing this:\n  Liminf_llist Ns \\<Turnstile> Bot\n  Sup_llist Ns \\<Turnstile> Liminf_llist Ns\n  lhd Ns \\<Turnstile> Sup_llist Ns\n  \\<lbrakk>?N1.0 \\<Turnstile> ?N2.0; ?N2.0 \\<Turnstile> ?N3.0\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<Turnstile> ?N3.0\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot", "by blast"], ["proof (state)\nthis:\n  lhd Ns \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "assume \"lhd Ns \\<Turnstile> Bot\""], ["proof (state)\nthis:\n  lhd Ns \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "then"], ["proof (chain)\npicking this:\n  lhd Ns \\<Turnstile> Bot", "have \"Sup_llist Ns \\<Turnstile> Bot\""], ["proof (prove)\nusing this:\n  lhd Ns \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. Sup_llist Ns \\<Turnstile> Bot", "by (meson chain_ent chain_not_lnull entails_trans lhd_subset_Sup_llist subset_entailed)"], ["proof (state)\nthis:\n  Sup_llist Ns \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "then"], ["proof (chain)\npicking this:\n  Sup_llist Ns \\<Turnstile> Bot", "have \"Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot\""], ["proof (prove)\nusing this:\n  Sup_llist Ns \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot", "using Red_F_Bot entail_set_all_formulas"], ["proof (prove)\nusing this:\n  Sup_llist Ns \\<Turnstile> Bot\n  \\<lbrakk>?B \\<in> Bot; ?N \\<Turnstile> {?B}\\<rbrakk>\n  \\<Longrightarrow> ?N - Red_F ?N \\<Turnstile> {?B}\n  (?N1.0 \\<Turnstile> ?N2.0) =\n  (\\<forall>C\\<in>?N2.0. ?N1.0 \\<Turnstile> {C})\n\ngoal (1 subgoal):\n 1. Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot", "by blast"], ["proof (state)\nthis:\n  Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "then"], ["proof (chain)\npicking this:\n  Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot", "have \"Liminf_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot\""], ["proof (prove)\nusing this:\n  Sup_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. Liminf_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot", "by (smt Diff_idemp Diff_mono Diff_subset Liminf_llist_subset_Sup_llist\n        Red_F_Sup_subset_Red_F_Liminf Red_F_of_subset Red_in_Sup antisym_conv chain_red double_diff\n        entail_set_all_formulas order_refl order_trans subset_antisym)"], ["proof (state)\nthis:\n  Liminf_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. lhd Ns \\<Turnstile> Bot \\<Longrightarrow>\n    Liminf_llist Ns \\<Turnstile> Bot", "then"], ["proof (chain)\npicking this:\n  Liminf_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot", "show \"Liminf_llist Ns \\<Turnstile> Bot\""], ["proof (prove)\nusing this:\n  Liminf_llist Ns - Red_F (Sup_llist Ns) \\<Turnstile> Bot\n\ngoal (1 subgoal):\n 1. Liminf_llist Ns \\<Turnstile> Bot", "by (meson Diff_subset entails_trans subset_entailed)"], ["proof (state)\nthis:\n  Liminf_llist Ns \\<Turnstile> Bot\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Some easy consequences:\\<close>"], ["", "lemma Red_F_limit_Sup: \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_F (Liminf_llist Ns) = Red_F (Sup_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<rhd>) Ns \\<Longrightarrow>\n    Red_F (Liminf_llist Ns) = Red_F (Sup_llist Ns)", "by (metis Liminf_llist_subset_Sup_llist Red_F_of_Red_F_subset Red_F_of_subset Red_in_Sup\n      double_diff order_refl subset_antisym)"], ["", "lemma Red_I_limit_Sup: \"chain (\\<rhd>) Ns \\<Longrightarrow> Red_I (Liminf_llist Ns) = Red_I (Sup_llist Ns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<rhd>) Ns \\<Longrightarrow>\n    Red_I (Liminf_llist Ns) = Red_I (Sup_llist Ns)", "by (metis Liminf_llist_subset_Sup_llist Red_I_of_Red_F_subset Red_I_of_subset Red_in_Sup\n      double_diff order_refl subset_antisym)"], ["", "end"], ["", "end"]]}