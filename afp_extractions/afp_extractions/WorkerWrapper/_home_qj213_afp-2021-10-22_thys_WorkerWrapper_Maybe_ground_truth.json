{"file_name": "/home/qj213/afp-2021-10-22/thys/WorkerWrapper/Maybe.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/WorkerWrapper", "problem_names": ["lemma mcatch_strict[simp]: \"mcatch\\<cdot>\\<bottom> = \\<bottom>\"", "lemma mbind_strict1[simp]: \"\\<bottom> >>=\\<^sub>M g = \\<bottom>\"", "lemma leftID[simp]: \"Just\\<cdot>a >>=\\<^sub>M f = f\\<cdot>a\"", "lemma rightID[simp]: \"m >>=\\<^sub>M Just = m\"", "lemma assoc[simp]: \"(m >>=\\<^sub>M f) >>=\\<^sub>M g = m >>=\\<^sub>M (\\<Lambda> x. f\\<cdot>x >>=\\<^sub>M g)\"", "lemma nothing_bind[simp]: \"Nothing >>=\\<^sub>M f = Nothing\"", "lemma just_bind[simp]: \"Just\\<cdot>x >>=\\<^sub>M f = f\\<cdot>x\"", "lemma mliftM2_Nothing1[simp]: \"mliftM2 f\\<cdot>Nothing\\<cdot>y = Nothing\"", "lemma mliftM2_Nothing2[simp]: \"mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>Nothing = Nothing\"", "lemma mliftM2_op[simp]: \"mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>(Just\\<cdot>y) = Just\\<cdot>(f\\<cdot>x\\<cdot>y)\"", "lemma mliftM2_strict1[simp]: \"mliftM2 f\\<cdot>\\<bottom> = \\<bottom>\"", "lemma mliftM2_strict2[simp]: \"mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>\\<bottom> = \\<bottom>\""], "translations": [["", "lemma mcatch_strict[simp]: \"mcatch\\<cdot>\\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mcatch\\<cdot>\\<bottom> = \\<bottom>", "by (rule cfun_eqI, simp add: mcatch_def)"], ["", "definition\n  mbind :: \"'a Maybe \\<rightarrow> ('a \\<rightarrow> 'b Maybe) \\<rightarrow> 'b Maybe\" where\n  \"mbind \\<equiv> \\<Lambda> f g. (case f of Nothing \\<Rightarrow> Nothing | Just\\<cdot>f' \\<Rightarrow> g\\<cdot>f')\""], ["", "abbreviation\n  mbind_syn :: \"'a Maybe \\<Rightarrow> ('a \\<rightarrow> 'b Maybe) \\<Rightarrow> 'b Maybe\" (infixl \">>=\\<^sub>M\" 55) where\n  \"f >>=\\<^sub>M g \\<equiv> mbind\\<cdot>f\\<cdot>g\""], ["", "lemma mbind_strict1[simp]: \"\\<bottom> >>=\\<^sub>M g = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> >>=\\<^sub>M g = \\<bottom>", "by (simp add: mbind_def)"], ["", "text\\<open>The standard monad laws.\\<close>"], ["", "lemma leftID[simp]: \"Just\\<cdot>a >>=\\<^sub>M f = f\\<cdot>a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Just\\<cdot>a >>=\\<^sub>M f = f\\<cdot>a", "by (simp add: mbind_def)"], ["", "lemma rightID[simp]: \"m >>=\\<^sub>M Just = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m >>=\\<^sub>M Just = m", "by (cases m, simp_all add: mbind_def)"], ["", "lemma assoc[simp]: \"(m >>=\\<^sub>M f) >>=\\<^sub>M g = m >>=\\<^sub>M (\\<Lambda> x. f\\<cdot>x >>=\\<^sub>M g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m >>=\\<^sub>M f >>=\\<^sub>M g =\n    m >>=\\<^sub>M (\\<Lambda> x. f\\<cdot>x >>=\\<^sub>M g)", "by (cases m, simp_all add: mbind_def)"], ["", "text\\<open>Reduction for the Maybe monad.\\<close>"], ["", "lemma nothing_bind[simp]: \"Nothing >>=\\<^sub>M f = Nothing\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Nothing >>=\\<^sub>M f = Nothing", "by (simp add: mbind_def)"], ["", "lemma just_bind[simp]: \"Just\\<cdot>x >>=\\<^sub>M f = f\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Just\\<cdot>x >>=\\<^sub>M f = f\\<cdot>x", "by (simp add: mbind_def)"], ["", "definition\n  mliftM2 :: \"('a \\<rightarrow> 'b \\<rightarrow> 'c) \\<Rightarrow> 'a Maybe \\<rightarrow> 'b Maybe \\<rightarrow> 'c Maybe\" where\n  \"mliftM2 f \\<equiv> \\<Lambda> x y. x >>=\\<^sub>M (\\<Lambda> x'. y >>=\\<^sub>M (\\<Lambda> y'. Just\\<cdot>(f\\<cdot>x'\\<cdot>y')))\""], ["", "lemma mliftM2_Nothing1[simp]: \"mliftM2 f\\<cdot>Nothing\\<cdot>y = Nothing\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mliftM2 f\\<cdot>Nothing\\<cdot>y = Nothing", "by (simp add: mliftM2_def)"], ["", "lemma mliftM2_Nothing2[simp]: \"mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>Nothing = Nothing\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>Nothing = Nothing", "by (simp add: mliftM2_def)"], ["", "lemma mliftM2_op[simp]: \"mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>(Just\\<cdot>y) = Just\\<cdot>(f\\<cdot>x\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>(Just\\<cdot>y) =\n    Just\\<cdot>(f\\<cdot>x\\<cdot>y)", "by (simp add: mliftM2_def)"], ["", "lemma mliftM2_strict1[simp]: \"mliftM2 f\\<cdot>\\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mliftM2 f\\<cdot>\\<bottom> = \\<bottom>", "by (rule cfun_eqI)+ (simp add: mliftM2_def)"], ["", "lemma mliftM2_strict2[simp]: \"mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>\\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mliftM2 f\\<cdot>(Just\\<cdot>x)\\<cdot>\\<bottom> = \\<bottom>", "by (simp add: mliftM2_def)"], ["", "end"]]}