{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Strong_Late_Axiomatisation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma inputSuppPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"\\<And>y. y \\<in> supp(P, Q, x) \\<Longrightarrow> (P[x::=y], Q[x::=y]) \\<in> Rel\"\n  and     Eqvt: \"eqvt Rel\"\n\n  shows \"a<x>.P \\<leadsto>[Rel] a<x>.Q\"", "lemma inputSuppPresBisim:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n\n  assumes PSimQ: \"\\<And>y. y \\<in> supp(P, Q, x) \\<Longrightarrow> P[x::=y] \\<sim> Q[x::=y]\"\n\n  shows \"a<x>.P \\<sim> a<x>.Q\"", "lemma SumIdemp':\n  fixes P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<equiv>\\<^sub>e P'\"\n\n  shows \"P \\<oplus> P' \\<equiv>\\<^sub>e P\"", "lemma SumPres':\n  fixes P  :: pi\n  and   P' :: pi\n  and   Q  :: pi\n  and   Q' :: pi\n\n  assumes PeqP': \"P \\<equiv>\\<^sub>e P'\"\n  and     QeqQ': \"Q \\<equiv>\\<^sub>e Q'\"\n\n  shows \"P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'\"", "lemma sound:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<equiv>\\<^sub>e Q\"\n\n  shows \"P \\<sim> Q\"", "lemma zeroDest[dest]:\n  fixes a :: name\n  and   b :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"(a{b}.P) \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False\"\n  and   \"(a<x>.P) \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False\"\n  and   \"(\\<tau>.(P)) \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False\"\n\n  and   \"\\<zero> \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow> False\"\n  and   \"\\<zero> \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow> False\"\n  and   \"\\<zero> \\<equiv>\\<^sub>e \\<tau>.(P) \\<Longrightarrow> False\"", "lemma eq_eqvt:\n  fixes pi::\"name prm\"\n  and   x::\"'a::pt_name\"\n  shows \"pi\\<bullet>(x=y) = ((pi\\<bullet>x)=(pi\\<bullet>y))\"", "lemma depthEqvt[simp]:\n  fixes P :: pi\n  and   p :: \"name prm\"\n  \n  shows \"depth(p \\<bullet> P) = depth P\"", "lemma depthInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"depth (a<x>.P) = 1 + (depth P)\"", "lemma validEqvt[simp]:\n  fixes P :: pi\n  and   p :: \"name prm\"\n  \n  shows \"valid(p \\<bullet> P) = valid P\"", "lemma validInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"valid (a<x>.P) = valid P\"", "lemma depthMin[intro]:\n  fixes P\n\n  shows \"0 \\<le> depth P\"", "lemma hnfTransition:\n  fixes P :: pi\n\n  assumes \"hnf P\"\n  and     \"P \\<noteq> \\<zero>\"\n\n  shows \"\\<exists>Rs. P \\<longmapsto> Rs\"", "lemma summandsIdemp:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"Q \\<in> summands P\"\n  and     \"Q \\<equiv>\\<^sub>e Q'\"\n  \n  shows \"P \\<oplus> Q' \\<equiv>\\<^sub>e P\"", "lemma uhnfSum:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes Phnf: \"uhnf P\"\n  and     Qhnf: \"uhnf Q\"\n  and     validP: \"valid P\"\n  and     validQ: \"valid Q\"\n\n  shows \"\\<exists>R. uhnf R \\<and> valid R \\<and> P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and> (depth R) \\<le> (depth (P \\<oplus> Q))\"", "lemma uhnfRes:\n  fixes x :: name\n  and   P :: pi\n\n  assumes Phnf: \"uhnf P\"\n  and     validP: \"valid P\"\n\n  shows \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth(<\\<nu>x>P)\"", "lemma expandHnf:\n  fixes P :: pi\n  and   S :: \"pi set\"\n\n  assumes \"(P, S) \\<in> sumComposeSet\"\n  and     \"\\<forall>P \\<in> S. uhnf P \\<and> valid P\"\n\n  shows \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P\"", "lemma hnfSummandsRemove:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<in> summands Q\"\n  and     \"uhnf Q\"\n\n  shows \"(summands Q) - {P' | P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} = (summands Q) - {P}\"", "lemma pullSummand:\n  fixes P  :: pi\n  and   Q  :: pi\n\n  assumes PsummQ: \"P \\<in> summands Q\"\n  and     Qhnf:   \"uhnf Q\"\n\n  shows \"\\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and> (summands Q') = ((summands Q)  - {x. \\<exists>P'. x = P' \\<and> P' \\<in> (summands Q) \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf Q'\"", "lemma nSym:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"\\<not>(P \\<equiv>\\<^sub>e Q)\"\n\n  shows \"\\<not>(Q \\<equiv>\\<^sub>e P)\"", "lemma summandsZero:\n  fixes P :: pi\n  \n  assumes \"summands P = {}\"\n  and     \"hnf P\"\n\n  shows \"P = \\<zero>\"", "lemma summandsZero':\n  fixes P :: pi\n  \n  assumes summP: \"summands P = {}\"\n  and     Puhnf: \"uhnf P\"\n\n  shows \"P = \\<zero>\"", "lemma summandEquiv:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes Phnf: \"uhnf P\"\n  and     Qhnf: \"uhnf Q\"\n  and     PinQ: \"\\<forall>P' \\<in> summands P. \\<exists>Q' \\<in> summands Q. P' \\<equiv>\\<^sub>e Q'\"\n  and     QinP: \"\\<forall>Q' \\<in> summands Q. \\<exists>P' \\<in> summands P. Q' \\<equiv>\\<^sub>e P'\"\n\n  shows \"P \\<equiv>\\<^sub>e Q\"", "lemma validSubst[simp]:\n  fixes P :: pi\n  and   a :: name\n  and   b :: name\n  and   p :: pi\n  \n  shows \"valid(P[a::=b]) = valid P\"", "lemma validOutputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n\n  assumes \"P \\<longmapsto>a[b] \\<prec> P'\" \n  and     \"valid P\"\n\n  shows \"valid P'\"", "lemma validInputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   x  :: name\n  and   P' :: pi\n\n  assumes PTrans: \"P \\<longmapsto>a<x> \\<prec> P'\" \n  and     validP: \"valid P\"\n\n  shows \"valid P'\"", "lemma validBoundOutputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   x  :: name\n  and   P' :: pi\n\n  assumes PTrans: \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\" \n  and     validP: \"valid P\"\n\n  shows \"valid P'\"", "lemma validTauTransition:\n  fixes P  :: pi\n  and   P' :: pi\n\n  assumes PTrans: \"P \\<longmapsto>\\<tau> \\<prec> P'\"\n  and     validP: \"valid P\"\n\n  shows \"valid P'\"", "lemmas validTransition = validInputTransition validOutputTransition validTauTransition validBoundOutputTransition", "lemma validSummand:\n  fixes P  :: pi\n  and   P' :: pi\n  and   a  :: name\n  and   b  :: name\n  and   x  :: name\n\n  assumes \"valid P\"\n  and     \"hnf P\"\n\n  shows \"\\<tau>.(P') \\<in> summands P \\<Longrightarrow> valid P'\"\n  and   \"a{b}.P' \\<in> summands P \\<Longrightarrow> valid P'\"\n  and   \"a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\"\n  and   \"\\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk> \\<Longrightarrow> valid P'\"", "lemma validExpand:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"valid P\"\n  and     \"valid Q\"\n  and     \"uhnf P\"\n  and     \"uhnf Q\"\n\n  shows \"\\<forall>R \\<in> (expandSet P Q). uhnf R \\<and> valid R\"", "lemma expandComplete:\n  fixes F :: \"pi set\"\n\n  assumes \"finite F\"\n\n  shows \"\\<exists>P. (P, F) \\<in> sumComposeSet\"", "lemma expandDepth:\n  fixes F :: \"pi set\"\n  and   P :: pi\n  and   Q :: pi\n\n  assumes \"(P, F) \\<in> sumComposeSet\"\n  and     \"F \\<noteq> {}\"\n\n  shows \"\\<exists>Q \\<in> F. depth P \\<le> depth Q \\<and> (\\<forall>R \\<in> F. depth R \\<le> depth Q)\"", "lemma depthSubst[simp]:\n  fixes P :: pi\n  and   a :: name\n  and   b :: name\n\n  shows \"depth(P[a::=b]) = depth P\"", "lemma depthTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n\n  assumes Phnf: \"hnf P\"\n\n  shows \"P \\<longmapsto>a[b] \\<prec> P' \\<Longrightarrow> depth P' < depth P\"\n  and   \"P \\<longmapsto>a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\"\n  and   \"P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\"\n  and   \"P \\<longmapsto>a<\\<nu>x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\"", "lemma maxExpandDepth:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  \n  assumes \"R \\<in> expandSet P Q\"\n  and     \"hnf P\"\n  and     \"hnf Q\"\n\n  shows \"depth R \\<le> depth(P \\<parallel> Q)\"", "lemma expandDepth':\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n\n  shows \"\\<exists>R. (R, expandSet P Q) \\<in> sumComposeSet \\<and> depth R \\<le> depth(P \\<parallel> Q)\"", "lemma validToHnf:\n  fixes P :: pi\n\n  assumes \"valid P\"\n\n  shows \"\\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> (depth Q) \\<le> (depth P)\"", "lemma depthZero:\n  fixes P :: pi\n  \n  assumes \"depth P = 0\"\n  and     \"uhnf P\"\n\n  shows \"P = \\<zero>\"", "lemma completeAux:\n  fixes n :: nat\n  and   P :: pi\n  and   Q :: pi\n\n  assumes \"depth P + depth Q \\<le> n\"\n  and     \"valid P\"\n  and     \"valid Q\"\n  and     \"uhnf P\"\n  and     \"uhnf Q\"\n  and     \"P \\<sim> Q\"\n\n  shows \"P \\<equiv>\\<^sub>e Q\"", "lemma complete: \n  fixes P :: pi\n  and   Q :: pi\n\n  assumes validP: \"valid P\"\n  and     validQ: \"valid Q\"\n  and     PBisimQ: \"P \\<sim> Q\"\n\n  shows \"P \\<equiv>\\<^sub>e Q\""], "translations": [["", "lemma inputSuppPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"\\<And>y. y \\<in> supp(P, Q, x) \\<Longrightarrow> (P[x::=y], Q[x::=y]) \\<in> Rel\"\n  and     Eqvt: \"eqvt Rel\"\n\n  shows \"a<x>.P \\<leadsto>[Rel] a<x>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<leadsto>[Rel] a<x>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<leadsto>[Rel] a<x>.Q", "from Eqvt"], ["proof (chain)\npicking this:\n  eqvt Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. a<x>.P \\<leadsto>[Rel] a<x>.Q", "proof(induct rule: simCasesCont[where C=\"(x, a, Q, P)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>a<x>.Q \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> Q';\n        xa \\<sharp> a<x>.P; xa \\<sharp> a<x>.Q; xa \\<sharp> aa;\n        xa \\<sharp> (x, a, Q, P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' aa xa Rel\n 2. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "case(Bound b y Q')"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> Q'\n  y \\<sharp> a<x>.P\n  y \\<sharp> a<x>.Q\n  y \\<sharp> b\n  y \\<sharp> (x, a, Q, P)\n\ngoal (2 subgoals):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>a<x>.Q \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> Q';\n        xa \\<sharp> a<x>.P; xa \\<sharp> a<x>.Q; xa \\<sharp> aa;\n        xa \\<sharp> (x, a, Q, P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' aa xa Rel\n 2. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"x \\<in> supp(P, Q, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> supp (P, Q, x)", "by(simp add: supp_prod supp_atm)"], ["proof (state)\nthis:\n  x \\<in> supp (P, Q, x)\n\ngoal (2 subgoals):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>a<x>.Q \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> Q';\n        xa \\<sharp> a<x>.P; xa \\<sharp> a<x>.Q; xa \\<sharp> aa;\n        xa \\<sharp> (x, a, Q, P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' aa xa Rel\n 2. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with PRelQ"], ["proof (chain)\npicking this:\n  ?y \\<in> supp (P, Q, x) \\<Longrightarrow> (P[x::=?y], Q[x::=?y]) \\<in> Rel\n  x \\<in> supp (P, Q, x)", "have \"(P, Q) \\<in> Rel\""], ["proof (prove)\nusing this:\n  ?y \\<in> supp (P, Q, x) \\<Longrightarrow> (P[x::=?y], Q[x::=?y]) \\<in> Rel\n  x \\<in> supp (P, Q, x)\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel", "by fastforce"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>a<x>.Q \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> Q';\n        xa \\<sharp> a<x>.P; xa \\<sharp> a<x>.Q; xa \\<sharp> aa;\n        xa \\<sharp> (x, a, Q, P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' aa xa Rel\n 2. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have QTrans: \"a<x>.Q \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.Q \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>a<x>.Q \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> Q';\n        xa \\<sharp> a<x>.P; xa \\<sharp> a<x>.Q; xa \\<sharp> aa;\n        xa \\<sharp> (x, a, Q, P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' aa xa Rel\n 2. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"y \\<sharp> (x, a, Q, P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> (x, a, Q, P)", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> (x, a, Q, P)\n\ngoal (2 subgoals):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>a<x>.Q \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> Q';\n        xa \\<sharp> a<x>.P; xa \\<sharp> a<x>.Q; xa \\<sharp> aa;\n        xa \\<sharp> (x, a, Q, P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' aa xa Rel\n 2. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "hence \"y \\<noteq> a\" and yineqx: \"y \\<noteq> x\" and \"y \\<sharp> Q\" and \"y \\<sharp> P\""], ["proof (prove)\nusing this:\n  y \\<sharp> (x, a, Q, P)\n\ngoal (1 subgoal):\n 1. (y \\<noteq> a &&& y \\<noteq> x) &&& y \\<sharp> Q &&& y \\<sharp> P", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  y \\<noteq> a\n  y \\<noteq> x\n  y \\<sharp> Q\n  y \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>a<x>.Q \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> Q';\n        xa \\<sharp> a<x>.P; xa \\<sharp> a<x>.Q; xa \\<sharp> aa;\n        xa \\<sharp> (x, a, Q, P)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<longmapsto> aa\\<guillemotleft>xa\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' aa xa Rel\n 2. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with QTrans"], ["proof (chain)\npicking this:\n  a<x>.Q \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> Q'\n  y \\<noteq> a\n  y \\<noteq> x\n  y \\<sharp> Q\n  y \\<sharp> P", "show ?case"], ["proof (prove)\nusing this:\n  a<x>.Q \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> Q'\n  y \\<noteq> a\n  y \\<noteq> x\n  y \\<sharp> Q\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a<x>.P \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n       derivative P' Q' b y Rel", "proof(induct rule: inputCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>b = InputS a; Q' = [(x, y)] \\<bullet> Q; y \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and>\n                         derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y\n                          Rel", "have \"a<y>.([(x, y)] \\<bullet> P) \\<longmapsto>a<y> \\<prec> ([(x, y)] \\<bullet> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<y>.([(x, y)] \\<bullet>\n          P) \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P", "by(rule Input)"], ["proof (state)\nthis:\n  a<y>.([(x, y)] \\<bullet>\n        P) \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b = InputS a; Q' = [(x, y)] \\<bullet> Q; y \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and>\n                         derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y\n                          Rel", "hence \"a<x>.P \\<longmapsto>a<y> \\<prec> ([(x, y)] \\<bullet> P)\""], ["proof (prove)\nusing this:\n  a<y>.([(x, y)] \\<bullet>\n        P) \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P\n\ngoal (1 subgoal):\n 1. a<x>.P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P", "using \\<open>y \\<sharp> P\\<close>"], ["proof (prove)\nusing this:\n  a<y>.([(x, y)] \\<bullet>\n        P) \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. a<x>.P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P", "by(simp add: alphaInput)"], ["proof (state)\nthis:\n  a<x>.P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b = InputS a; Q' = [(x, y)] \\<bullet> Q; y \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and>\n                         derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y\n                          Rel", "moreover"], ["proof (state)\nthis:\n  a<x>.P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b = InputS a; Q' = [(x, y)] \\<bullet> Q; y \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and>\n                         derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y\n                          Rel", "have \"derivative ([(x, y)] \\<bullet> P) ([(x, y)] \\<bullet> Q) (InputS a) y Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. derivative ([(x, y)] \\<bullet> P) ([(x, y)] \\<bullet> Q) (InputS a) y\n     Rel", "proof(auto simp add: derivative_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u])\n       \\<in> Rel", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u])\n       \\<in> Rel", "have \"x \\<in> supp(P, Q, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> supp (P, Q, x)", "by(simp add: supp_prod supp_atm)"], ["proof (state)\nthis:\n  x \\<in> supp (P, Q, x)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u])\n       \\<in> Rel", "have \"(P[x::=u], Q[x::=u]) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P[x::=u], Q[x::=u]) \\<in> Rel", "proof(cases \"u \\<in> supp(P, Q, x)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<in> supp (P, Q, x) \\<Longrightarrow> (P[x::=u], Q[x::=u]) \\<in> Rel\n 2. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "case True"], ["proof (state)\nthis:\n  u \\<in> supp (P, Q, x)\n\ngoal (2 subgoals):\n 1. u \\<in> supp (P, Q, x) \\<Longrightarrow> (P[x::=u], Q[x::=u]) \\<in> Rel\n 2. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "with PRelQ"], ["proof (chain)\npicking this:\n  ?y \\<in> supp (P, Q, x) \\<Longrightarrow> (P[x::=?y], Q[x::=?y]) \\<in> Rel\n  u \\<in> supp (P, Q, x)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?y \\<in> supp (P, Q, x) \\<Longrightarrow> (P[x::=?y], Q[x::=?y]) \\<in> Rel\n  u \\<in> supp (P, Q, x)\n\ngoal (1 subgoal):\n 1. (P[x::=u], Q[x::=u]) \\<in> Rel", "by auto"], ["proof (state)\nthis:\n  (P[x::=u], Q[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "case False"], ["proof (state)\nthis:\n  u \\<notin> supp (P, Q, x)\n\ngoal (1 subgoal):\n 1. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "hence \"u \\<sharp> P\" and \"u \\<sharp> Q\""], ["proof (prove)\nusing this:\n  u \\<notin> supp (P, Q, x)\n\ngoal (1 subgoal):\n 1. u \\<sharp> P &&& u \\<sharp> Q", "by(auto simp add: fresh_def supp_prod)"], ["proof (state)\nthis:\n  u \\<sharp> P\n  u \\<sharp> Q\n\ngoal (1 subgoal):\n 1. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  u \\<sharp> P\n  u \\<sharp> Q\n\ngoal (1 subgoal):\n 1. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "from \\<open>eqvt Rel\\<close> \\<open>(P, Q) \\<in> Rel\\<close>"], ["proof (chain)\npicking this:\n  eqvt Rel\n  (P, Q) \\<in> Rel", "have \"([(x, u)] \\<bullet> P, [(x, u)] \\<bullet> Q) \\<in> Rel\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, u)] \\<bullet> P, [(x, u)] \\<bullet> Q) \\<in> Rel", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  ([(x, u)] \\<bullet> P, [(x, u)] \\<bullet> Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. u \\<notin> supp (P, Q, x) \\<Longrightarrow>\n    (P[x::=u], Q[x::=u]) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  u \\<sharp> P\n  u \\<sharp> Q\n  ([(x, u)] \\<bullet> P, [(x, u)] \\<bullet> Q) \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<sharp> P\n  u \\<sharp> Q\n  ([(x, u)] \\<bullet> P, [(x, u)] \\<bullet> Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P[x::=u], Q[x::=u]) \\<in> Rel", "by(simp only: injPermSubst)"], ["proof (state)\nthis:\n  (P[x::=u], Q[x::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P[x::=u], Q[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u])\n       \\<in> Rel", "with \\<open>y \\<sharp> P\\<close> \\<open>y \\<sharp> Q\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P\n  y \\<sharp> Q\n  (P[x::=u], Q[x::=u]) \\<in> Rel", "show \"(([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n  y \\<sharp> Q\n  (P[x::=u], Q[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "by(simp add: renaming)"], ["proof (state)\nthis:\n  (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  derivative ([(x, y)] \\<bullet> P) ([(x, y)] \\<bullet> Q) (InputS a) y Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b = InputS a; Q' = [(x, y)] \\<bullet> Q; y \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and>\n                         derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y\n                          Rel", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P\n  derivative ([(x, y)] \\<bullet> P) ([(x, y)] \\<bullet> Q) (InputS a) y Rel", "show \"\\<exists>P'. a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and> derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y Rel\""], ["proof (prove)\nusing this:\n  a<x>.P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P\n  derivative ([(x, y)] \\<bullet> P) ([(x, y)] \\<bullet> Q) (InputS a) y Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and>\n       derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a<x>.P \\<longmapsto> a<y> \\<prec> P' \\<and>\n     derivative P' ([(x, y)] \\<bullet> Q) (InputS a) y Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a<x>.P \\<longmapsto> b\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n     derivative P' Q' b y Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "case(Free \\<alpha> Q')"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "hence False"], ["proof (prove)\nusing this:\n  a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a<x>.P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a<x>.P \\<leadsto>[Rel] a<x>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inputSuppPresBisim:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n\n  assumes PSimQ: \"\\<And>y. y \\<in> supp(P, Q, x) \\<Longrightarrow> P[x::=y] \\<sim> Q[x::=y]\"\n\n  shows \"a<x>.P \\<sim> a<x>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "let ?X = \"{(a<x>.P, a<x>.Q) | a x P Q. \\<forall>y \\<in> supp(P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "have \"eqvt ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt\n     {(a<x>.P, a<x>.Q) |a x P Q.\n      \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "apply(auto simp add: eqvt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa x P perma Q.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       \\<exists>a xa Pa.\n          (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> P) =\n          a<xa>.Pa \\<and>\n          (\\<exists>Qa.\n              (perma \\<bullet>\n               aa)<(perma \\<bullet> x)>.(perma \\<bullet> Q) =\n              a<xa>.Qa \\<and>\n              (\\<forall>y\\<in>supp (Pa, Qa, xa).\n                  Pa[xa::=y] \\<sim> Qa[xa::=y]))", "apply(rule_tac x=\"perma \\<bullet> aa\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa x P perma Q.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       \\<exists>xa Pa.\n          (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> P) =\n          (perma \\<bullet> aa)<xa>.Pa \\<and>\n          (\\<exists>Qa.\n              (perma \\<bullet>\n               aa)<(perma \\<bullet> x)>.(perma \\<bullet> Q) =\n              (perma \\<bullet> aa)<xa>.Qa \\<and>\n              (\\<forall>y\\<in>supp (Pa, Qa, xa).\n                  Pa[xa::=y] \\<sim> Qa[xa::=y]))", "apply(rule_tac x=\"perma \\<bullet> x\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa x P perma Q.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       \\<exists>Pa.\n          (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> P) =\n          (perma \\<bullet> aa)<(perma \\<bullet> x)>.Pa \\<and>\n          (\\<exists>Qa.\n              (perma \\<bullet>\n               aa)<(perma \\<bullet> x)>.(perma \\<bullet> Q) =\n              (perma \\<bullet> aa)<(perma \\<bullet> x)>.Qa \\<and>\n              (\\<forall>y\\<in>supp (Pa, Qa, perma \\<bullet> x).\n                  Pa[(perma \\<bullet> x)::=y] \\<sim>\n                  Qa[(perma \\<bullet> x)::=y]))", "apply(rule_tac x=\"perma \\<bullet> P\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa x P perma Q.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> P) =\n       (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> P) \\<and>\n       (\\<exists>Qa.\n           (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> Q) =\n           (perma \\<bullet> aa)<(perma \\<bullet> x)>.Qa \\<and>\n           (\\<forall>y\\<in>supp (perma \\<bullet> P, Qa, perma \\<bullet> x).\n               (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n               Qa[(perma \\<bullet> x)::=y]))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa x P perma Q.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       \\<exists>Qa.\n          (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> Q) =\n          (perma \\<bullet> aa)<(perma \\<bullet> x)>.Qa \\<and>\n          (\\<forall>y\\<in>supp (perma \\<bullet> P, Qa, perma \\<bullet> x).\n              (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n              Qa[(perma \\<bullet> x)::=y])", "apply(rule_tac x=\"perma \\<bullet> Q\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa x P perma Q.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> Q) =\n       (perma \\<bullet> aa)<(perma \\<bullet> x)>.(perma \\<bullet> Q) \\<and>\n       (\\<forall>y\\<in>supp\n                        (perma \\<bullet> P, perma \\<bullet> Q,\n                         perma \\<bullet> x).\n           (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n           (perma \\<bullet> Q)[(perma \\<bullet> x)::=y])", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x P perma Q y.\n       \\<lbrakk>\\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y];\n        y \\<in> supp\n                 (perma \\<bullet> P, perma \\<bullet> Q,\n                  perma \\<bullet> x)\\<rbrakk>\n       \\<Longrightarrow> (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n                         (perma \\<bullet> Q)[(perma \\<bullet> x)::=y]", "apply(drule_tac pi=\"rev perma\" in pt_set_bij2[OF pt_name_inst, OF at_name_inst])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x P perma Q y.\n       \\<lbrakk>\\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y];\n        rev perma \\<bullet> y\n        \\<in> rev perma \\<bullet>\n              supp\n               (perma \\<bullet> P, perma \\<bullet> Q,\n                perma \\<bullet> x)\\<rbrakk>\n       \\<Longrightarrow> (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n                         (perma \\<bullet> Q)[(perma \\<bullet> x)::=y]", "apply(simp add: eqvts pt_rev_pi[OF pt_name_inst, OF at_name_inst])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x P perma Q y.\n       \\<lbrakk>\\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y];\n        rev perma \\<bullet> y \\<in> supp (P, Q, x)\\<rbrakk>\n       \\<Longrightarrow> (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n                         (perma \\<bullet> Q)[(perma \\<bullet> x)::=y]", "apply(erule_tac x=\"rev perma \\<bullet> y\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x P perma Q y.\n       \\<lbrakk>rev perma \\<bullet> y \\<in> supp (P, Q, x);\n        P[x::=(rev perma \\<bullet> y)] \\<sim>\n        Q[x::=(rev perma \\<bullet> y)]\\<rbrakk>\n       \\<Longrightarrow> (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n                         (perma \\<bullet> Q)[(perma \\<bullet> x)::=y]\n 2. \\<And>x P perma Q y.\n       \\<lbrakk>rev perma \\<bullet> y \\<in> supp (P, Q, x);\n        rev perma \\<bullet> y \\<notin> supp (P, Q, x)\\<rbrakk>\n       \\<Longrightarrow> (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n                         (perma \\<bullet> Q)[(perma \\<bullet> x)::=y]", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x P perma Q y.\n       \\<lbrakk>rev perma \\<bullet> y \\<in> supp (P, Q, x);\n        P[x::=(rev perma \\<bullet> y)] \\<sim>\n        Q[x::=(rev perma \\<bullet> y)]\\<rbrakk>\n       \\<Longrightarrow> (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n                         (perma \\<bullet> Q)[(perma \\<bullet> x)::=y]", "apply(drule_tac p=perma in bisimClosed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x P perma Q y.\n       \\<lbrakk>rev perma \\<bullet> y \\<in> supp (P, Q, x);\n        perma \\<bullet> P[x::=(rev perma \\<bullet> y)] \\<sim>\n        perma \\<bullet> Q[x::=(rev perma \\<bullet> y)]\\<rbrakk>\n       \\<Longrightarrow> (perma \\<bullet> P)[(perma \\<bullet> x)::=y] \\<sim>\n                         (perma \\<bullet> Q)[(perma \\<bullet> x)::=y]", "by(simp add: eqvts pt_pi_rev[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  eqvt\n   {(a<x>.P, a<x>.Q) |a x P Q.\n    \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "from assms"], ["proof (chain)\npicking this:\n  ?y \\<in> supp (P, Q, x) \\<Longrightarrow> P[x::=?y] \\<sim> Q[x::=?y]", "have \"(a<x>.P, a<x>.Q) \\<in> ?X\""], ["proof (prove)\nusing this:\n  ?y \\<in> supp (P, Q, x) \\<Longrightarrow> P[x::=?y] \\<sim> Q[x::=?y]\n\ngoal (1 subgoal):\n 1. (a<x>.P, a<x>.Q)\n    \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n           \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "by fastforce"], ["proof (state)\nthis:\n  (a<x>.P, a<x>.Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (a<x>.P, a<x>.Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x).\n                 P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       R \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                      \\<forall>y\\<in>supp (P, Q, x).\n                         P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x).\n                 P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x).\n                 P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       R \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                      \\<forall>y\\<in>supp (P, Q, x).\n                         P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x).\n                 P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                   \\<forall>y\\<in>supp (P, Q, x).\n                      P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                  bisim)] Q", "using \\<open>eqvt ?X\\<close>"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n  eqvt\n   {(a<x>.P, a<x>.Q) |a x P Q.\n    \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                   \\<forall>y\\<in>supp (P, Q, x).\n                      P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                  bisim)] Q", "by(fastforce intro: inputSuppPres)"], ["proof (state)\nthis:\n  P \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                 \\<forall>y\\<in>supp (P, Q, x).\n                    P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                bisim)] Q\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x).\n                 P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x).\n                 P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x).\n                 P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. (Q, P)\n    \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n           \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}", "by(fastforce simp add: supp_prod dest: symmetric)"], ["proof (state)\nthis:\n  (Q, P)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a<x>.P \\<sim> a<x>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive equiv :: \"pi \\<Rightarrow> pi \\<Rightarrow> bool\" (infixr \"\\<equiv>\\<^sub>e\" 80)\nwhere\n  Refl:              \"P \\<equiv>\\<^sub>e P\"\n| Sym:               \"P \\<equiv>\\<^sub>e Q \\<Longrightarrow> Q \\<equiv>\\<^sub>e P\"\n| Trans:             \"\\<lbrakk>P \\<equiv>\\<^sub>e Q; Q \\<equiv>\\<^sub>e R\\<rbrakk> \\<Longrightarrow> P \\<equiv>\\<^sub>e R\"\n\n| Match:             \"[a\\<frown>a]P \\<equiv>\\<^sub>e P\"\n| Match':            \"a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<equiv>\\<^sub>e \\<zero>\"\n\n| Mismatch:         \"a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<equiv>\\<^sub>e P\"\n| Mismatch':        \"[a\\<noteq>a]P \\<equiv>\\<^sub>e \\<zero>\"\n \n| SumSym:            \"P \\<oplus> Q \\<equiv>\\<^sub>e Q \\<oplus> P\"\n| SumAssoc:          \"(P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> (Q \\<oplus> R)\"\n| SumZero:           \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\"\n| SumIdemp:          \"P \\<oplus> P \\<equiv>\\<^sub>e P\"\n| SumRes:            \"<\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e (<\\<nu>x>P) \\<oplus> (<\\<nu>x>Q)\"\n\n| ResNil:            \"<\\<nu>x>\\<zero> \\<equiv>\\<^sub>e \\<zero>\"\n| ResInput:          \"\\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk> \\<Longrightarrow> <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e a<y>.(<\\<nu>x>P)\"\n| ResInput':         \"<\\<nu>x>x<y>.P \\<equiv>\\<^sub>e \\<zero>\"\n| ResOutput:         \"\\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk> \\<Longrightarrow> <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e a{b}.(<\\<nu>x>P)\"\n| ResOutput':        \"<\\<nu>x>x{b}.P \\<equiv>\\<^sub>e \\<zero>\"\n| ResTau:            \"<\\<nu>x>\\<tau>.(P) \\<equiv>\\<^sub>e \\<tau>.(<\\<nu>x>P)\"\n| ResComm:           \"<\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>x>P\"\n| ResFresh:          \"x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<equiv>\\<^sub>e P\"\n\n| Expand:            \"\\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q\\<rbrakk> \\<Longrightarrow> P \\<parallel> Q \\<equiv>\\<^sub>e R\"\n\n| SumPres:           \"P \\<equiv>\\<^sub>e Q \\<Longrightarrow> P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\" \n| ParPres:           \"\\<lbrakk>P \\<equiv>\\<^sub>e P'; Q \\<equiv>\\<^sub>e Q'\\<rbrakk> \\<Longrightarrow> P \\<parallel> Q \\<equiv>\\<^sub>e P' \\<parallel> Q'\"\n| ResPres:           \"P \\<equiv>\\<^sub>e Q \\<Longrightarrow> <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>Q\"\n| TauPres:           \"P \\<equiv>\\<^sub>e Q \\<Longrightarrow> \\<tau>.(P) \\<equiv>\\<^sub>e \\<tau>.(Q)\"\n| OutputPres:        \"P \\<equiv>\\<^sub>e Q \\<Longrightarrow> a{b}.P \\<equiv>\\<^sub>e a{b}.Q\"\n| InputPres:         \"\\<lbrakk>\\<forall>y \\<in> supp(P, Q, x). P[x::=y] \\<equiv>\\<^sub>e Q[x::=y]\\<rbrakk> \\<Longrightarrow> a<x>.P \\<equiv>\\<^sub>e a<x>.Q\""], ["", "lemma SumIdemp':\n  fixes P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<equiv>\\<^sub>e P'\"\n\n  shows \"P \\<oplus> P' \\<equiv>\\<^sub>e P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "have \"P \\<equiv>\\<^sub>e P \\<oplus> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e P \\<oplus> P", "by(blast intro: Sym SumIdemp)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e P \\<oplus> P\n\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "moreover"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e P \\<oplus> P\n\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "from assms"], ["proof (chain)\npicking this:\n  P \\<equiv>\\<^sub>e P'", "have \"P \\<oplus> P \\<equiv>\\<^sub>e P' \\<oplus> P\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> P \\<equiv>\\<^sub>e P' \\<oplus> P", "by(rule SumPres)"], ["proof (state)\nthis:\n  P \\<oplus> P \\<equiv>\\<^sub>e P' \\<oplus> P\n\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> P \\<equiv>\\<^sub>e P' \\<oplus> P\n\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "have \"P' \\<oplus> P \\<equiv>\\<^sub>e P \\<oplus> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<oplus> P \\<equiv>\\<^sub>e P \\<oplus> P'", "by(rule SumSym)"], ["proof (state)\nthis:\n  P' \\<oplus> P \\<equiv>\\<^sub>e P \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "ultimately"], ["proof (chain)\npicking this:\n  P \\<equiv>\\<^sub>e P \\<oplus> P\n  P \\<oplus> P \\<equiv>\\<^sub>e P' \\<oplus> P\n  P' \\<oplus> P \\<equiv>\\<^sub>e P \\<oplus> P'", "have \"P \\<equiv>\\<^sub>e P \\<oplus> P'\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e P \\<oplus> P\n  P \\<oplus> P \\<equiv>\\<^sub>e P' \\<oplus> P\n  P' \\<oplus> P \\<equiv>\\<^sub>e P \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e P \\<oplus> P'", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e P \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "thus ?thesis"], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e P \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<equiv>\\<^sub>e P", "by(rule Sym)"], ["proof (state)\nthis:\n  P \\<oplus> P' \\<equiv>\\<^sub>e P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SumPres':\n  fixes P  :: pi\n  and   P' :: pi\n  and   Q  :: pi\n  and   Q' :: pi\n\n  assumes PeqP': \"P \\<equiv>\\<^sub>e P'\"\n  and     QeqQ': \"Q \\<equiv>\\<^sub>e Q'\"\n\n  shows \"P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "from PeqP'"], ["proof (chain)\npicking this:\n  P \\<equiv>\\<^sub>e P'", "have \"P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q", "by(rule SumPres)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "have \"P' \\<oplus> Q \\<equiv>\\<^sub>e Q \\<oplus> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<oplus> Q \\<equiv>\\<^sub>e Q \\<oplus> P'", "by(rule SumSym)"], ["proof (state)\nthis:\n  P' \\<oplus> Q \\<equiv>\\<^sub>e Q \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "moreover"], ["proof (state)\nthis:\n  P' \\<oplus> Q \\<equiv>\\<^sub>e Q \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "from QeqQ'"], ["proof (chain)\npicking this:\n  Q \\<equiv>\\<^sub>e Q'", "have \"Q \\<oplus> P' \\<equiv>\\<^sub>e Q' \\<oplus> P'\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. Q \\<oplus> P' \\<equiv>\\<^sub>e Q' \\<oplus> P'", "by(rule SumPres)"], ["proof (state)\nthis:\n  Q \\<oplus> P' \\<equiv>\\<^sub>e Q' \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "moreover"], ["proof (state)\nthis:\n  Q \\<oplus> P' \\<equiv>\\<^sub>e Q' \\<oplus> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "have \"Q' \\<oplus> P' \\<equiv>\\<^sub>e P' \\<oplus> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' \\<oplus> P' \\<equiv>\\<^sub>e P' \\<oplus> Q'", "by(rule SumSym)"], ["proof (state)\nthis:\n  Q' \\<oplus> P' \\<equiv>\\<^sub>e P' \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q\n  P' \\<oplus> Q \\<equiv>\\<^sub>e Q \\<oplus> P'\n  Q \\<oplus> P' \\<equiv>\\<^sub>e Q' \\<oplus> P'\n  Q' \\<oplus> P' \\<equiv>\\<^sub>e P' \\<oplus> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q\n  P' \\<oplus> Q \\<equiv>\\<^sub>e Q \\<oplus> P'\n  Q \\<oplus> P' \\<equiv>\\<^sub>e Q' \\<oplus> P'\n  Q' \\<oplus> P' \\<equiv>\\<^sub>e P' \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<oplus> Q'\n\ngoal:\nNo subgoals!", "qed"], ["", "(*\nlemma ParComm:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"(R, expandSet P Q) \\<in> sumComposeSet\"\n\n  obtains R' where \"(R, expandSet Q P) \\<in> sumComposeSet\" and \"R \\<equiv>\\<^sub>e R'\"\nusing assms\napply(induct S==\"expandSet P Q\" rule: sumComposeSet.induct)\napply auto\napply(simp add: expandSet_def)\napply fastforce\napply auto\napply(clarify)\n*)"], ["", "lemma sound:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<equiv>\\<^sub>e Q\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof(induct)"], ["proof (state)\ngoal (27 subgoals):\n 1. \\<And>P. P \\<sim> P\n 2. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> Q \\<sim> P\n 3. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 4. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 5. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 6. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 7. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 8. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 9. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 10. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\nA total of 27 subgoals...", "case(Refl P)"], ["proof (state)\nthis:\n  \n\ngoal (27 subgoals):\n 1. \\<And>P. P \\<sim> P\n 2. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> Q \\<sim> P\n 3. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 4. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 5. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 6. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 7. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 8. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 9. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 10. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\nA total of 27 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> P", "by(rule reflexive)"], ["proof (state)\nthis:\n  P \\<sim> P\n\ngoal (26 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> Q \\<sim> P\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 3. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 5. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 6. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 7. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 8. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 9. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 10. \\<And>P. P \\<oplus> P \\<sim> P\nA total of 26 subgoals...", "next"], ["proof (state)\ngoal (26 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> Q \\<sim> P\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 3. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 5. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 6. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 7. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 8. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 9. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 10. \\<And>P. P \\<oplus> P \\<sim> P\nA total of 26 subgoals...", "case(Sym P Q)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n  P \\<sim> Q\n\ngoal (26 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> Q \\<sim> P\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 3. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 5. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 6. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 7. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 8. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 9. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 10. \\<And>P. P \\<oplus> P \\<sim> P\nA total of 26 subgoals...", "have \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by fact"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (26 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> Q \\<sim> P\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 3. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 5. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 6. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 7. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 8. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 9. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 10. \\<And>P. P \\<oplus> P \\<sim> P\nA total of 26 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. Q \\<sim> P", "by(rule symmetric)"], ["proof (state)\nthis:\n  Q \\<sim> P\n\ngoal (25 subgoals):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 2. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 3. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 5. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 6. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 7. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 8. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 9. \\<And>P. P \\<oplus> P \\<sim> P\n 10. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\nA total of 25 subgoals...", "next"], ["proof (state)\ngoal (25 subgoals):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 2. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 3. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 5. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 6. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 7. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 8. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 9. \\<And>P. P \\<oplus> P \\<sim> P\n 10. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\nA total of 25 subgoals...", "case(Trans P Q R)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n  P \\<sim> Q\n  Q \\<equiv>\\<^sub>e R\n  Q \\<sim> R\n\ngoal (25 subgoals):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 2. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 3. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 5. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 6. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 7. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 8. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 9. \\<And>P. P \\<oplus> P \\<sim> P\n 10. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\nA total of 25 subgoals...", "have \"P \\<sim> Q\" and \"Q \\<sim> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q &&& Q \\<sim> R", "by fact+"], ["proof (state)\nthis:\n  P \\<sim> Q\n  Q \\<sim> R\n\ngoal (25 subgoals):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q; Q \\<equiv>\\<^sub>e R;\n        Q \\<sim> R\\<rbrakk>\n       \\<Longrightarrow> P \\<sim> R\n 2. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 3. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 4. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 5. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 6. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 7. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 8. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 9. \\<And>P. P \\<oplus> P \\<sim> P\n 10. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\nA total of 25 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  Q \\<sim> R\n\ngoal (1 subgoal):\n 1. P \\<sim> R", "by(rule transitive)"], ["proof (state)\nthis:\n  P \\<sim> R\n\ngoal (24 subgoals):\n 1. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 2. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 3. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 4. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 5. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 6. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 7. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 8. \\<And>P. P \\<oplus> P \\<sim> P\n 9. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 10. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\nA total of 24 subgoals...", "next"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 2. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 3. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 4. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 5. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 6. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 7. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 8. \\<And>P. P \\<oplus> P \\<sim> P\n 9. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 10. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\nA total of 24 subgoals...", "case(Match a P)"], ["proof (state)\nthis:\n  \n\ngoal (24 subgoals):\n 1. \\<And>a P. [a\\<frown>a]P \\<sim> P\n 2. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 3. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 4. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 5. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 6. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 7. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 8. \\<And>P. P \\<oplus> P \\<sim> P\n 9. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 10. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\nA total of 24 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<frown>a]P \\<sim> P", "by(rule matchId)"], ["proof (state)\nthis:\n  [a\\<frown>a]P \\<sim> P\n\ngoal (23 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 2. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 3. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 4. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 5. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 6. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 7. \\<And>P. P \\<oplus> P \\<sim> P\n 8. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 9. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 10. \\<And>x a y P.\n        \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\nA total of 23 subgoals...", "next"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 2. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 3. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 4. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 5. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 6. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 7. \\<And>P. P \\<oplus> P \\<sim> P\n 8. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 9. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 10. \\<And>x a y P.\n        \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\nA total of 23 subgoals...", "case(Match' a b P)"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (23 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 2. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 3. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 4. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 5. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 6. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 7. \\<And>P. P \\<oplus> P \\<sim> P\n 8. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 9. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 10. \\<And>x a y P.\n        \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\nA total of 23 subgoals...", "have \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b", "by fact"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (23 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<frown>b]P \\<sim> \\<zero>\n 2. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 3. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 4. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 5. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 6. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 7. \\<And>P. P \\<oplus> P \\<sim> P\n 8. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 9. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 10. \\<And>x a y P.\n        \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\nA total of 23 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<sim> \\<zero>", "by(rule matchNil)"], ["proof (state)\nthis:\n  [a\\<frown>b]P \\<sim> \\<zero>\n\ngoal (22 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 2. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 3. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 4. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 5. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 6. \\<And>P. P \\<oplus> P \\<sim> P\n 7. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 8. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 9. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 10. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\nA total of 22 subgoals...", "next"], ["proof (state)\ngoal (22 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 2. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 3. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 4. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 5. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 6. \\<And>P. P \\<oplus> P \\<sim> P\n 7. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 8. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 9. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 10. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\nA total of 22 subgoals...", "case(Mismatch a b P)"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (22 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 2. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 3. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 4. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 5. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 6. \\<And>P. P \\<oplus> P \\<sim> P\n 7. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 8. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 9. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 10. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\nA total of 22 subgoals...", "have \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b", "by fact"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (22 subgoals):\n 1. \\<And>a b P. a \\<noteq> b \\<Longrightarrow> [a\\<noteq>b]P \\<sim> P\n 2. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 3. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 4. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 5. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 6. \\<And>P. P \\<oplus> P \\<sim> P\n 7. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 8. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 9. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 10. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\nA total of 22 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<sim> P", "by(rule mismatchId)"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<sim> P\n\ngoal (21 subgoals):\n 1. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 2. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 3. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 4. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 5. \\<And>P. P \\<oplus> P \\<sim> P\n 6. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 7. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 8. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 9. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 10. \\<And>x a b P.\n        \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\nA total of 21 subgoals...", "next"], ["proof (state)\ngoal (21 subgoals):\n 1. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 2. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 3. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 4. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 5. \\<And>P. P \\<oplus> P \\<sim> P\n 6. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 7. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 8. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 9. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 10. \\<And>x a b P.\n        \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\nA total of 21 subgoals...", "case(Mismatch' a P)"], ["proof (state)\nthis:\n  \n\ngoal (21 subgoals):\n 1. \\<And>a P. [a\\<noteq>a]P \\<sim> \\<zero>\n 2. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 3. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 4. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 5. \\<And>P. P \\<oplus> P \\<sim> P\n 6. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 7. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 8. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 9. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 10. \\<And>x a b P.\n        \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\nA total of 21 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>a]P \\<sim> \\<zero>", "by(rule mismatchNil)"], ["proof (state)\nthis:\n  [a\\<noteq>a]P \\<sim> \\<zero>\n\ngoal (20 subgoals):\n 1. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 2. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 3. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 4. \\<And>P. P \\<oplus> P \\<sim> P\n 5. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 6. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 7. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 8. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 9. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 10. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\nA total of 20 subgoals...", "next"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 2. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 3. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 4. \\<And>P. P \\<oplus> P \\<sim> P\n 5. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 6. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 7. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 8. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 9. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 10. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\nA total of 20 subgoals...", "case(SumSym P Q)"], ["proof (state)\nthis:\n  \n\ngoal (20 subgoals):\n 1. \\<And>P Q. P \\<oplus> Q \\<sim> Q \\<oplus> P\n 2. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 3. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 4. \\<And>P. P \\<oplus> P \\<sim> P\n 5. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 6. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 7. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 8. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 9. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 10. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\nA total of 20 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<sim> Q \\<oplus> P", "by(rule sumSym)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<sim> Q \\<oplus> P\n\ngoal (19 subgoals):\n 1. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 2. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 3. \\<And>P. P \\<oplus> P \\<sim> P\n 4. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 5. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 6. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 7. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 8. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 9. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 10. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\nA total of 19 subgoals...", "next"], ["proof (state)\ngoal (19 subgoals):\n 1. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 2. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 3. \\<And>P. P \\<oplus> P \\<sim> P\n 4. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 5. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 6. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 7. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 8. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 9. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 10. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\nA total of 19 subgoals...", "case(SumAssoc P Q R)"], ["proof (state)\nthis:\n  \n\ngoal (19 subgoals):\n 1. \\<And>P Q R. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n 2. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 3. \\<And>P. P \\<oplus> P \\<sim> P\n 4. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 5. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 6. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 7. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 8. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 9. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 10. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\nA total of 19 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R", "by(rule sumAssoc)"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> R \\<sim> P \\<oplus> Q \\<oplus> R\n\ngoal (18 subgoals):\n 1. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 2. \\<And>P. P \\<oplus> P \\<sim> P\n 3. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 4. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 5. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 6. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 7. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 8. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 9. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 10. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\nA total of 18 subgoals...", "next"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 2. \\<And>P. P \\<oplus> P \\<sim> P\n 3. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 4. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 5. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 6. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 7. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 8. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 9. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 10. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\nA total of 18 subgoals...", "case(SumZero P)"], ["proof (state)\nthis:\n  \n\ngoal (18 subgoals):\n 1. \\<And>P. P \\<oplus> \\<zero> \\<sim> P\n 2. \\<And>P. P \\<oplus> P \\<sim> P\n 3. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 4. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 5. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 6. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 7. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 8. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 9. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 10. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<sim> P", "by(rule sumZero)"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<sim> P\n\ngoal (17 subgoals):\n 1. \\<And>P. P \\<oplus> P \\<sim> P\n 2. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 3. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 4. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 5. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 6. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 7. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 8. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 9. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 10. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>P. P \\<oplus> P \\<sim> P\n 2. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 3. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 4. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 5. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 6. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 7. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 8. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 9. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 10. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\nA total of 17 subgoals...", "case(SumIdemp P)"], ["proof (state)\nthis:\n  \n\ngoal (17 subgoals):\n 1. \\<And>P. P \\<oplus> P \\<sim> P\n 2. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 3. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 4. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 5. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 6. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 7. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 8. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 9. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 10. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\nA total of 17 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> P \\<sim> P", "by(rule sumIdemp)"], ["proof (state)\nthis:\n  P \\<oplus> P \\<sim> P\n\ngoal (16 subgoals):\n 1. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 2. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 3. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 4. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 5. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 6. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 7. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 8. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 9. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 10. \\<And>R P Q.\n        \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n         hnf Q\\<rbrakk>\n        \\<Longrightarrow> P \\<parallel> Q \\<sim> R\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 2. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 3. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 4. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 5. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 6. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 7. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 8. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 9. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 10. \\<And>R P Q.\n        \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n         hnf Q\\<rbrakk>\n        \\<Longrightarrow> P \\<parallel> Q \\<sim> R\nA total of 16 subgoals...", "case(SumRes x P Q)"], ["proof (state)\nthis:\n  \n\ngoal (16 subgoals):\n 1. \\<And>x P Q. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n 2. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 3. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 4. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 5. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 6. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 7. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 8. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 9. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 10. \\<And>R P Q.\n        \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n         hnf Q\\<rbrakk>\n        \\<Longrightarrow> P \\<parallel> Q \\<sim> R\nA total of 16 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q", "by(rule sumRes)"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<oplus> Q) \\<sim> <\\<nu>x>P \\<oplus> <\\<nu>x>Q\n\ngoal (15 subgoals):\n 1. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 2. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 3. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 4. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 5. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 6. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 7. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 8. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 9. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 10. \\<And>P Q R.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 2. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 3. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 4. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 5. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 6. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 7. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 8. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 9. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 10. \\<And>P Q R.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\nA total of 15 subgoals...", "case(ResNil x)"], ["proof (state)\nthis:\n  \n\ngoal (15 subgoals):\n 1. \\<And>x. <\\<nu>x>\\<zero> \\<sim> \\<zero>\n 2. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 3. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 4. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 5. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 6. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 7. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 8. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 9. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 10. \\<And>P Q R.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\nA total of 15 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>\\<zero> \\<sim> \\<zero>", "by(rule nilRes)"], ["proof (state)\nthis:\n  <\\<nu>x>\\<zero> \\<sim> \\<zero>\n\ngoal (14 subgoals):\n 1. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 2. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 3. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 4. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 5. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 6. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 7. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 8. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 9. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 10. \\<And>P P' Q Q'.\n        \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n         Q \\<sim> Q'\\<rbrakk>\n        \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 2. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 3. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 4. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 5. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 6. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 7. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 8. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 9. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 10. \\<And>P P' Q Q'.\n        \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n         Q \\<sim> Q'\\<rbrakk>\n        \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\nA total of 14 subgoals...", "case(ResInput x a y P)"], ["proof (state)\nthis:\n  x \\<noteq> a\n  x \\<noteq> y\n\ngoal (14 subgoals):\n 1. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 2. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 3. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 4. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 5. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 6. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 7. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 8. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 9. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 10. \\<And>P P' Q Q'.\n        \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n         Q \\<sim> Q'\\<rbrakk>\n        \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\nA total of 14 subgoals...", "have \"x \\<noteq> a\" and \"x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> a &&& x \\<noteq> y", "by fact+"], ["proof (state)\nthis:\n  x \\<noteq> a\n  x \\<noteq> y\n\ngoal (14 subgoals):\n 1. \\<And>x a y P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n 2. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 3. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 4. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 5. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 6. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 7. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 8. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 9. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 10. \\<And>P P' Q Q'.\n        \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n         Q \\<sim> Q'\\<rbrakk>\n        \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\nA total of 14 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)", "by(rule resInput)"], ["proof (state)\nthis:\n  <\\<nu>x>a<y>.P \\<sim> a<y>.(<\\<nu>x>P)\n\ngoal (13 subgoals):\n 1. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 2. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 3. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 4. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 5. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 6. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 7. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 8. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 9. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 10. \\<And>P Q x.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 2. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 3. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 4. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 5. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 6. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 7. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 8. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 9. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 10. \\<And>P Q x.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\nA total of 13 subgoals...", "case(ResInput' x y P)"], ["proof (state)\nthis:\n  \n\ngoal (13 subgoals):\n 1. \\<And>x y P. <\\<nu>x>x<y>.P \\<sim> \\<zero>\n 2. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 3. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 4. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 5. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 6. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 7. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 8. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 9. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 10. \\<And>P Q x.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\nA total of 13 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>x<y>.P \\<sim> \\<zero>", "by(rule resNil)"], ["proof (state)\nthis:\n  <\\<nu>x>x<y>.P \\<sim> \\<zero>\n\ngoal (12 subgoals):\n 1. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 2. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 3. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 4. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 5. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 6. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 7. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 8. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 9. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 10. \\<And>P Q.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 2. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 3. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 4. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 5. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 6. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 7. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 8. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 9. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 10. \\<And>P Q.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\nA total of 12 subgoals...", "case(ResOutput x a b P)"], ["proof (state)\nthis:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (12 subgoals):\n 1. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 2. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 3. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 4. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 5. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 6. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 7. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 8. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 9. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 10. \\<And>P Q.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\nA total of 12 subgoals...", "have \"x \\<noteq> a\" and \"x \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> a &&& x \\<noteq> b", "by fact+"], ["proof (state)\nthis:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (12 subgoals):\n 1. \\<And>x a b P.\n       \\<lbrakk>x \\<noteq> a; x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n 2. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 3. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 4. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 5. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 6. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 7. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 8. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 9. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 10. \\<And>P Q.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\nA total of 12 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)", "by(rule resOutput)"], ["proof (state)\nthis:\n  <\\<nu>x>a{b}.P \\<sim> a{b}.(<\\<nu>x>P)\n\ngoal (11 subgoals):\n 1. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 2. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 3. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 4. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 5. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 6. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 7. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 8. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 9. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 10. \\<And>P Q a b.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 2. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 3. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 4. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 5. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 6. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 7. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 8. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 9. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 10. \\<And>P Q a b.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\nA total of 11 subgoals...", "case(ResOutput' x b P)"], ["proof (state)\nthis:\n  \n\ngoal (11 subgoals):\n 1. \\<And>x b P. <\\<nu>x>x{b}.P \\<sim> \\<zero>\n 2. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 3. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 4. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 5. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 6. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 7. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 8. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 9. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 10. \\<And>P Q a b.\n        \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\nA total of 11 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>x{b}.P \\<sim> \\<zero>", "by(rule resNil)"], ["proof (state)\nthis:\n  <\\<nu>x>x{b}.P \\<sim> \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 2. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 3. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 4. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 5. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 6. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 7. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 8. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 9. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 10. \\<And>P Q x a.\n        \\<forall>y\\<in>supp (P, Q, x).\n           P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n           P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n        a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 2. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 3. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 4. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 5. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 6. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 7. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 8. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 9. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 10. \\<And>P Q x a.\n        \\<forall>y\\<in>supp (P, Q, x).\n           P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n           P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n        a<x>.P \\<sim> a<x>.Q", "case(ResTau x P)"], ["proof (state)\nthis:\n  \n\ngoal (10 subgoals):\n 1. \\<And>x P. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n 2. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 3. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 4. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 5. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 6. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 7. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 8. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 9. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 10. \\<And>P Q x a.\n        \\<forall>y\\<in>supp (P, Q, x).\n           P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n           P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n        a<x>.P \\<sim> a<x>.Q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)", "by(rule resTau)"], ["proof (state)\nthis:\n  <\\<nu>x>\\<tau>.P \\<sim> \\<tau>.(<\\<nu>x>P)\n\ngoal (9 subgoals):\n 1. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 2. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 3. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 4. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 5. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 6. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 7. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 8. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 9. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 2. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 3. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 4. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 5. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 6. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 7. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 8. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 9. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(ResComm x P)"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>x y P. <\\<nu>x><\\<nu>y>P \\<sim> <\\<nu>y><\\<nu>x>P\n 2. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 3. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 4. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 5. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 6. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 7. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 8. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 9. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>P>P_ \\<sim> <\\<nu>P><\\<nu>x>P_", "by(rule resComm)"], ["proof (state)\nthis:\n  <\\<nu>x><\\<nu>P>P_ \\<sim> <\\<nu>P><\\<nu>x>P_\n\ngoal (8 subgoals):\n 1. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 2. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 3. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 4. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 5. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 6. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 7. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 8. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 2. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 3. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 4. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 5. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 6. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 7. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 8. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(ResFresh x P)"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (8 subgoals):\n 1. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 2. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 3. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 4. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 5. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 6. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 7. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 8. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "have \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (8 subgoals):\n 1. \\<And>x P. x \\<sharp> P \\<Longrightarrow> <\\<nu>x>P \\<sim> P\n 2. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 3. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 4. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 5. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 6. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 7. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 8. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<sim> P", "by(rule scopeFresh)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<sim> P\n\ngoal (7 subgoals):\n 1. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 3. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 4. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 5. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 6. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 7. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 3. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 4. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 5. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 6. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 7. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(Expand R P Q)"], ["proof (state)\nthis:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n\ngoal (7 subgoals):\n 1. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 3. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 4. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 5. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 6. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 7. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "have \"(R, expandSet P Q) \\<in> sumComposeSet\" and \"hnf P\" and \"hnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (R, expandSet P Q) \\<in> sumComposeSet &&& hnf P &&& hnf Q", "by fact+"], ["proof (state)\nthis:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n\ngoal (7 subgoals):\n 1. \\<And>R P Q.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P;\n        hnf Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> R\n 2. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 3. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 4. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 5. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 6. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 7. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<sim> R", "by(rule expandSC)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<sim> R\n\ngoal (6 subgoals):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 2. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 3. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 4. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 5. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 6. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 2. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 3. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 4. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 5. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 6. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(SumPres P Q R)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n  P \\<sim> Q\n\ngoal (6 subgoals):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> R \\<sim> Q \\<oplus> R\n 2. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 3. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 4. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 5. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 6. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "from \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "show ?case"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<sim> Q \\<oplus> R", "by(rule sumPres)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<sim> Q \\<oplus> R\n\ngoal (5 subgoals):\n 1. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 2. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 3. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 4. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 5. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 2. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 3. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 4. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 5. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(ParPres P P' Q Q')"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e P'\n  P \\<sim> P'\n  Q \\<equiv>\\<^sub>e Q'\n  Q \\<sim> Q'\n\ngoal (5 subgoals):\n 1. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 2. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 3. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 4. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 5. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "have \"P \\<sim> P'\" and \"Q \\<sim> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> P' &&& Q \\<sim> Q'", "by fact+"], ["proof (state)\nthis:\n  P \\<sim> P'\n  Q \\<sim> Q'\n\ngoal (5 subgoals):\n 1. \\<And>P P' Q Q'.\n       \\<lbrakk>P \\<equiv>\\<^sub>e P'; P \\<sim> P'; Q \\<equiv>\\<^sub>e Q';\n        Q \\<sim> Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n 2. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 3. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 4. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 5. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<sim> P'\n  Q \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<sim> P' \\<parallel> Q'", "by(metis transitive symmetric parPres parSym)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<sim> P' \\<parallel> Q'\n\ngoal (4 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 2. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 3. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 4. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 2. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 3. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 4. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(ResPres P Q x)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n  P \\<sim> Q\n\ngoal (4 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>P \\<sim> <\\<nu>x>Q\n 2. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 3. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 4. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "from \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "show ?case"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<sim> <\\<nu>x>Q", "by(rule resPres)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<sim> <\\<nu>x>Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 2. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 3. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 2. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 3. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(TauPres P Q)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n  P \\<sim> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.P \\<sim> \\<tau>.Q\n 2. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 3. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "from \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "show ?case"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<tau>.P \\<sim> \\<tau>.Q", "by(rule tauPres)"], ["proof (state)\nthis:\n  \\<tau>.P \\<sim> \\<tau>.Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 2. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 2. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(OutputPres P Q a b)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n  P \\<sim> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q a b.\n       \\<lbrakk>P \\<equiv>\\<^sub>e Q; P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> a{b}.P \\<sim> a{b}.Q\n 2. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "from \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "show ?case"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. a{b}.P \\<sim> a{b}.Q", "by(rule outputPres)"], ["proof (state)\nthis:\n  a{b}.P \\<sim> a{b}.Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "case(InputPres P Q x a)"], ["proof (state)\nthis:\n  \\<forall>y\\<in>supp (P, Q, x).\n     P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and> P[x::=y] \\<sim> Q[x::=y]\n\ngoal (1 subgoal):\n 1. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "have \"\\<forall>y \\<in> supp(P, Q, x). P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and> P[x::=y] \\<sim> Q[x::=y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>supp (P, Q, x).\n       P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and> P[x::=y] \\<sim> Q[x::=y]", "by fact"], ["proof (state)\nthis:\n  \\<forall>y\\<in>supp (P, Q, x).\n     P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and> P[x::=y] \\<sim> Q[x::=y]\n\ngoal (1 subgoal):\n 1. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "hence \"\\<forall>y \\<in> supp(P, Q, x). P[x::=y] \\<sim> Q[x::=y]\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>supp (P, Q, x).\n     P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and> P[x::=y] \\<sim> Q[x::=y]\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]", "by blast"], ["proof (state)\nthis:\n  \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]\n\ngoal (1 subgoal):\n 1. \\<And>P Q x a.\n       \\<forall>y\\<in>supp (P, Q, x).\n          P[x::=y] \\<equiv>\\<^sub>e Q[x::=y] \\<and>\n          P[x::=y] \\<sim> Q[x::=y] \\<Longrightarrow>\n       a<x>.P \\<sim> a<x>.Q", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>supp (P, Q, x). P[x::=y] \\<sim> Q[x::=y]\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "by(rule_tac inputSuppPresBisim) auto"], ["proof (state)\nthis:\n  a<x>.P \\<sim> a<x>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zeroDest[dest]:\n  fixes a :: name\n  and   b :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"(a{b}.P) \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False\"\n  and   \"(a<x>.P) \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False\"\n  and   \"(\\<tau>.(P)) \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False\"\n\n  and   \"\\<zero> \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow> False\"\n  and   \"\\<zero> \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow> False\"\n  and   \"\\<zero> \\<equiv>\\<^sub>e \\<tau>.(P) \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((a{b}.P \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False) &&&\n     (a<x>.P \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False) &&&\n     (\\<tau>.P \\<equiv>\\<^sub>e \\<zero> \\<Longrightarrow> False)) &&&\n    (\\<zero> \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow> False) &&&\n    (\\<zero> \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow> False) &&&\n    (\\<zero> \\<equiv>\\<^sub>e \\<tau>.P \\<Longrightarrow> False)", "by(auto dest: sound)"], ["", "lemma eq_eqvt:\n  fixes pi::\"name prm\"\n  and   x::\"'a::pt_name\"\n  shows \"pi\\<bullet>(x=y) = ((pi\\<bullet>x)=(pi\\<bullet>y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<bullet> (x = y) = (pi \\<bullet> x = pi \\<bullet> y)", "by(simp add: perm_bool perm_bij)"], ["", "nominal_primrec \"depth\" :: \"pi \\<Rightarrow> nat\" where\n  \"depth \\<zero> = 0\"\n| \"depth (\\<tau>.(P)) = 1 + (depth P)\"\n| \"a \\<sharp> x \\<Longrightarrow> depth (a<x>.P) = 1 + (depth P)\"\n| \"depth (a{b}.P) = 1 + (depth P)\"\n| \"depth ([a\\<frown>b]P) = (depth P)\"\n| \"depth ([a\\<noteq>b]P) = (depth P)\"\n| \"depth (P \\<oplus> Q) = max (depth P) (depth Q)\"\n| \"depth (P \\<parallel> Q) = ((depth P) + (depth Q))\"\n| \"depth (<\\<nu>x>P) = (depth P)\"\n| \"depth (!P) = (depth P)\""], ["proof (prove)\ngoal (44 subgoals):\n 1. finite (supp 0)\n 2. finite (supp (\\<lambda>a b P. (+) 1))\n 3. finite (supp (\\<lambda>P. (+) 1))\n 4. finite (supp (\\<lambda>a x P. (+) 1))\n 5. finite (supp (\\<lambda>a b P Pa. Pa))\n 6. finite (supp (\\<lambda>a b P Pa. Pa))\n 7. finite (supp (\\<lambda>P Q. max))\n 8. finite (supp (\\<lambda>P Q. (+)))\n 9. finite (supp (\\<lambda>x P Pa. Pa))\n 10. finite (supp (\\<lambda>P Pa. Pa))\nA total of 44 subgoals...", "apply(auto simp add: fresh_nat)"], ["proof (prove)\ngoal (29 subgoals):\n 1. finite (supp 0)\n 2. finite (supp (\\<lambda>a b P. Suc))\n 3. finite (supp (\\<lambda>P. Suc))\n 4. finite (supp (\\<lambda>a x P. Suc))\n 5. finite (supp (\\<lambda>a b P Pa. Pa))\n 6. finite (supp (\\<lambda>a b P Pa. Pa))\n 7. finite (supp (\\<lambda>P Q. max))\n 8. finite (supp (\\<lambda>P Q. (+)))\n 9. finite (supp (\\<lambda>x P Pa. Pa))\n 10. finite (supp (\\<lambda>P Pa. Pa))\nA total of 29 subgoals...", "apply(finite_guess)+"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>a x.\n       a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P. Suc)\n 2. \\<And>a x. a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>P. Suc)\n 3. \\<And>a x.\n       a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>a x P. Suc)\n 4. \\<And>a x.\n       a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. Pa)\n 5. \\<And>a x.\n       a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. Pa)\n 6. \\<And>a x. a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>P Q. max)\n 7. \\<And>a x. a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>P Q. (+))\n 8. \\<And>a x.\n       a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>x P Pa. Pa)\n 9. \\<And>a x. a \\<noteq> x \\<Longrightarrow> x \\<sharp> (\\<lambda>P Pa. Pa)\n 10. \\<And>x. x \\<sharp> (\\<lambda>a b P. Suc)\nA total of 18 subgoals...", "by(fresh_guess)+"], ["", "lemma depthEqvt[simp]:\n  fixes P :: pi\n  and   p :: \"name prm\"\n  \n  shows \"depth(p \\<bullet> P) = depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (p \\<bullet> P) = depth P", "by(nominal_induct P rule: pi.strong_induct, auto simp add: name_bij)"], ["", "lemma depthInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"depth (a<x>.P) = 1 + (depth P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a<x>.P) = 1 + depth P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. depth (a<x>.P) = 1 + depth P", "obtain y where yineqa: \"y \\<noteq> a\" and yFreshP: \"y \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<noteq> a; y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force intro: name_exists_fresh[of \"(a, P)\"] simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<noteq> a\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. depth (a<x>.P) = 1 + depth P", "from yFreshP"], ["proof (chain)\npicking this:\n  y \\<sharp> P", "have \"a<x>.P = a<y>.([(x, y)] \\<bullet> P)\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "by(simp add: alphaInput)"], ["proof (state)\nthis:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. depth (a<x>.P) = 1 + depth P", "with yineqa"], ["proof (chain)\npicking this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. depth (a<x>.P) = 1 + depth P", "by simp"], ["proof (state)\nthis:\n  depth (a<x>.P) = 1 + depth P\n\ngoal:\nNo subgoals!", "qed"], ["", "nominal_primrec \"valid\" :: \"pi \\<Rightarrow> bool\" where\n  \"valid \\<zero> = True\"\n| \"valid (\\<tau>.(P)) = valid P\"\n| \"x \\<sharp> a \\<Longrightarrow> valid (a<x>.P) = valid P\"\n| \"valid (a{b}.P) = valid P\"\n| \"valid ([a\\<frown>b]P) = valid P\"\n| \"valid ([a\\<noteq>b]P) = valid P\"\n| \"valid (P \\<oplus> Q) = ((valid P) \\<and> (valid Q))\"\n| \"valid (P \\<parallel> Q) = ((valid P) \\<and> (valid Q))\"\n| \"valid (<\\<nu>x>P) = valid P\"\n| \"valid (!P) = False\""], ["proof (prove)\ngoal (44 subgoals):\n 1. finite (supp True)\n 2. finite (supp (\\<lambda>a b P Pa. Pa))\n 3. finite (supp (\\<lambda>P Pa. Pa))\n 4. finite (supp (\\<lambda>a x P Pa. Pa))\n 5. finite (supp (\\<lambda>a b P Pa. Pa))\n 6. finite (supp (\\<lambda>a b P Pa. Pa))\n 7. finite (supp (\\<lambda>P Q. (\\<and>)))\n 8. finite (supp (\\<lambda>P Q. (\\<and>)))\n 9. finite (supp (\\<lambda>x P Pa. Pa))\n 10. finite (supp (\\<lambda>P Pa. False))\nA total of 44 subgoals...", "apply(auto simp add: fresh_bool)"], ["proof (prove)\ngoal (29 subgoals):\n 1. finite (supp True)\n 2. finite (supp (\\<lambda>a b P Pa. Pa))\n 3. finite (supp (\\<lambda>P Pa. Pa))\n 4. finite (supp (\\<lambda>a x P Pa. Pa))\n 5. finite (supp (\\<lambda>a b P Pa. Pa))\n 6. finite (supp (\\<lambda>a b P Pa. Pa))\n 7. finite (supp (\\<lambda>P Q. (\\<and>)))\n 8. finite (supp (\\<lambda>P Q. (\\<and>)))\n 9. finite (supp (\\<lambda>x P Pa. Pa))\n 10. finite (supp (\\<lambda>P Pa. False))\nA total of 29 subgoals...", "apply(finite_guess)+"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. Pa)\n 2. \\<And>a x. x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>P Pa. Pa)\n 3. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a x P Pa. Pa)\n 4. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. Pa)\n 5. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. Pa)\n 6. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>P Q. (\\<and>))\n 7. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>P Q. (\\<and>))\n 8. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>x P Pa. Pa)\n 9. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>P Pa. False)\n 10. \\<And>x. x \\<sharp> (\\<lambda>a b P Pa. Pa)\nA total of 18 subgoals...", "by(fresh_guess)+"], ["", "lemma validEqvt[simp]:\n  fixes P :: pi\n  and   p :: \"name prm\"\n  \n  shows \"valid(p \\<bullet> P) = valid P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (p \\<bullet> P) = valid P", "by(nominal_induct P rule: pi.strong_induct, auto simp add: name_bij)"], ["", "lemma validInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"valid (a<x>.P) = valid P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a<x>.P) = valid P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid (a<x>.P) = valid P", "obtain y where yineqa: \"y \\<noteq> a\" and yFreshP: \"y \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<noteq> a; y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force intro: name_exists_fresh[of \"(a, P)\"] simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<noteq> a\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. valid (a<x>.P) = valid P", "from yFreshP"], ["proof (chain)\npicking this:\n  y \\<sharp> P", "have \"a<x>.P = a<y>.([(x, y)] \\<bullet> P)\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "by(simp add: alphaInput)"], ["proof (state)\nthis:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. valid (a<x>.P) = valid P", "with yineqa"], ["proof (chain)\npicking this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. valid (a<x>.P) = valid P", "by simp"], ["proof (state)\nthis:\n  valid (a<x>.P) = valid P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma depthMin[intro]:\n  fixes P\n\n  shows \"0 \\<le> depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> depth P", "by(induct P rule: pi.induct, auto)"], ["", "lemma hnfTransition:\n  fixes P :: pi\n\n  assumes \"hnf P\"\n  and     \"P \\<noteq> \\<zero>\"\n\n  shows \"\\<exists>Rs. P \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Rs. P \\<longmapsto> Rs", "using assms"], ["proof (prove)\nusing this:\n  hnf P\n  P \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Rs. P \\<longmapsto> Rs", "by(induct rule: pi.induct, auto intro: Output Tau Input Sum1 Open)"], ["", "definition \"uhnf\" :: \"pi \\<Rightarrow> bool\" where\n  \"uhnf P \\<equiv> hnf P \\<and> (\\<forall>R \\<in> summands P. \\<forall>R' \\<in> summands P. R \\<noteq> R' \\<longrightarrow> \\<not>(R \\<equiv>\\<^sub>e R'))\""], ["", "lemma summandsIdemp:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"Q \\<in> summands P\"\n  and     \"Q \\<equiv>\\<^sub>e Q'\"\n  \n  shows \"P \\<oplus> Q' \\<equiv>\\<^sub>e P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e P", "using assms"], ["proof (prove)\nusing this:\n  Q \\<in> summands P\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e P", "proof(nominal_induct P arbitrary: Q rule: pi.strong_inducts)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> summands \\<zero>; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero>\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>Q \\<in> summands pi;\n                     Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                    \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n         Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n        \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(PiNil Q)"], ["proof (state)\nthis:\n  Q \\<in> summands \\<zero>\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> summands \\<zero>; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero>\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>Q \\<in> summands pi;\n                     Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                    \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n         Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n        \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<in> summands \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands \\<zero>", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> summands \\<zero>; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero>\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>Q \\<in> summands pi;\n                     Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                    \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n         Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n        \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence False"], ["proof (prove)\nusing this:\n  Q \\<in> summands \\<zero>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> summands \\<zero>; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero>\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>Q \\<in> summands pi;\n                     Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                    \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n         Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n        \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<zero> \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero>", "by simp"], ["proof (state)\nthis:\n  \\<zero> \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero>\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Output a b P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  Q \\<in> summands (a{b}.P)\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence \"a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q", "by(blast intro: SumPres' Refl Sym)"], ["proof (state)\nthis:\n  a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "moreover"], ["proof (state)\nthis:\n  a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q = a{b}.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = a{b}.P", "proof  -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q = a{b}.P", "have \"Q \\<in> summands (a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands (a{b}.P)", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands (a{b}.P)\n\ngoal (1 subgoal):\n 1. Q = a{b}.P", "thus ?thesis"], ["proof (prove)\nusing this:\n  Q \\<in> summands (a{b}.P)\n\ngoal (1 subgoal):\n 1. Q = a{b}.P", "by simp"], ["proof (state)\nthis:\n  Q = a{b}.P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q = a{b}.P\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1{name2}.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1{name2}.pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "ultimately"], ["proof (chain)\npicking this:\n  a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n  Q = a{b}.P", "show ?case"], ["proof (prove)\nusing this:\n  a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n  Q = a{b}.P\n\ngoal (1 subgoal):\n 1. a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P", "by(blast intro: SumIdemp Trans)"], ["proof (state)\nthis:\n  a{b}.P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.P\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Tau P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  Q \\<in> summands (\\<tau>.P)\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence \"\\<tau>.(P) \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.(P) \\<oplus> Q\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<tau>.P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q", "by(blast intro: SumPres' Refl Sym)"], ["proof (state)\nthis:\n  \\<tau>.P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "moreover"], ["proof (state)\nthis:\n  \\<tau>.P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q = \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = \\<tau>.P", "proof  -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q = \\<tau>.P", "have \"Q \\<in> summands (\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands (\\<tau>.P)", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands (\\<tau>.P)\n\ngoal (1 subgoal):\n 1. Q = \\<tau>.P", "thus ?thesis"], ["proof (prove)\nusing this:\n  Q \\<in> summands (\\<tau>.P)\n\ngoal (1 subgoal):\n 1. Q = \\<tau>.P", "by simp"], ["proof (state)\nthis:\n  Q = \\<tau>.P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q = \\<tau>.P\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (\\<tau>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n  Q = \\<tau>.P", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n  Q = \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<tau>.P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.P", "by(blast intro: SumIdemp Trans)"], ["proof (state)\nthis:\n  \\<tau>.P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Input a x P Q)"], ["proof (state)\nthis:\n  x \\<sharp> a\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  Q \\<in> summands (a<x>.P)\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence \"a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q", "by(blast intro: SumPres' Refl Sym)"], ["proof (state)\nthis:\n  a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "moreover"], ["proof (state)\nthis:\n  a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q = a<x>.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = a<x>.P", "proof  -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q = a<x>.P", "have \"Q \\<in> summands (a<x>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands (a<x>.P)", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands (a<x>.P)\n\ngoal (1 subgoal):\n 1. Q = a<x>.P", "thus ?thesis"], ["proof (prove)\nusing this:\n  Q \\<in> summands (a<x>.P)\n\ngoal (1 subgoal):\n 1. Q = a<x>.P", "by simp"], ["proof (state)\nthis:\n  Q = a<x>.P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q = a<x>.P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (name1<name2>.pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         name1<name2>.pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n  Q = a<x>.P", "show ?case"], ["proof (prove)\nusing this:\n  a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n  Q = a<x>.P\n\ngoal (1 subgoal):\n 1. a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P", "by(blast intro: SumIdemp Trans)"], ["proof (state)\nthis:\n  a<x>.P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.P\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Match a b P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  Q \\<in> summands ([a\\<frown>b]P)\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<in> summands ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence False"], ["proof (prove)\nusing this:\n  Q \\<in> summands ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<frown>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<frown>name2]pi\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<frown>b]P", "by simp"], ["proof (state)\nthis:\n  [a\\<frown>b]P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<frown>b]P\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Mismatch a b P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  Q \\<in> summands ([a\\<noteq>b]P)\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<in> summands ([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence False"], ["proof (prove)\nusing this:\n  Q \\<in> summands ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands ([name1\\<noteq>name2]pi);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         [name1\\<noteq>name2]pi\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<noteq>b]P", "by simp"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<noteq>b]P\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Sum P Q R)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  \\<lbrakk>?Q \\<in> summands Q; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> Q \\<oplus> Q' \\<equiv>\\<^sub>e Q\n  R \\<in> summands (P \\<oplus> Q)\n  R \\<equiv>\\<^sub>e Q'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have IHP: \"\\<And>P'. \\<lbrakk>P' \\<in> summands P; P' \\<equiv>\\<^sub>e Q'\\<rbrakk> \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>P' \\<in> summands P; P' \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>?P' \\<in> summands P; ?P' \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have IHQ: \"\\<And>Q''. \\<lbrakk>Q'' \\<in> summands Q; Q'' \\<equiv>\\<^sub>e Q'\\<rbrakk> \\<Longrightarrow> Q \\<oplus> Q' \\<equiv>\\<^sub>e Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q''.\n       \\<lbrakk>Q'' \\<in> summands Q; Q'' \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> Q \\<oplus> Q' \\<equiv>\\<^sub>e Q", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>?Q'' \\<in> summands Q; ?Q'' \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> Q \\<oplus> Q' \\<equiv>\\<^sub>e Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have ReqQ': \"R \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<equiv>\\<^sub>e Q'", "by fact"], ["proof (state)\nthis:\n  R \\<equiv>\\<^sub>e Q'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"R \\<in> summands(P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> summands (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  R \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence \"R \\<in> summands P \\<or> R \\<in> summands Q\""], ["proof (prove)\nusing this:\n  R \\<in> summands (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. R \\<in> summands P \\<or> R \\<in> summands Q", "by simp"], ["proof (state)\nthis:\n  R \\<in> summands P \\<or> R \\<in> summands Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<oplus> pi2); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<oplus> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<oplus> pi2\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "thus ?case"], ["proof (prove)\nusing this:\n  R \\<in> summands P \\<or> R \\<in> summands Q\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "assume \"R \\<in> summands P\""], ["proof (state)\nthis:\n  R \\<in> summands P\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "hence PQ'eqP: \"P \\<oplus> Q' \\<equiv>\\<^sub>e P\""], ["proof (prove)\nusing this:\n  R \\<in> summands P\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e P", "using ReqQ'"], ["proof (prove)\nusing this:\n  R \\<in> summands P\n  R \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e P", "by(rule IHP)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e P\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "have \"(P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> (Q \\<oplus> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'", "by(rule SumAssoc)"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "moreover"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "have \"P \\<oplus> (Q \\<oplus> Q') \\<equiv>\\<^sub>e P \\<oplus> (Q' \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> Q", "by(blast intro: Refl SumSym SumPres')"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> Q\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> Q\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "have \"P \\<oplus> (Q' \\<oplus> Q) \\<equiv>\\<^sub>e (P \\<oplus> Q') \\<oplus> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> Q \\<equiv>\\<^sub>e (P \\<oplus> Q') \\<oplus> Q", "by(blast intro: SumAssoc Sym)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> Q \\<equiv>\\<^sub>e (P \\<oplus> Q') \\<oplus> Q\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> Q \\<equiv>\\<^sub>e (P \\<oplus> Q') \\<oplus> Q\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "from PQ'eqP"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e P", "have \"(P \\<oplus> Q') \\<oplus> Q \\<equiv>\\<^sub>e P \\<oplus> Q\""], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q') \\<oplus> Q \\<equiv>\\<^sub>e P \\<oplus> Q", "by(blast intro: SumPres' Refl)"], ["proof (state)\nthis:\n  (P \\<oplus> Q') \\<oplus> Q \\<equiv>\\<^sub>e P \\<oplus> Q\n\ngoal (2 subgoals):\n 1. R \\<in> summands P \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n 2. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "ultimately"], ["proof (chain)\npicking this:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n  P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> Q\n  P \\<oplus> Q' \\<oplus> Q \\<equiv>\\<^sub>e (P \\<oplus> Q') \\<oplus> Q\n  (P \\<oplus> Q') \\<oplus> Q \\<equiv>\\<^sub>e P \\<oplus> Q", "show ?case"], ["proof (prove)\nusing this:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n  P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> Q\n  P \\<oplus> Q' \\<oplus> Q \\<equiv>\\<^sub>e (P \\<oplus> Q') \\<oplus> Q\n  (P \\<oplus> Q') \\<oplus> Q \\<equiv>\\<^sub>e P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "assume \"R \\<in> summands Q\""], ["proof (state)\nthis:\n  R \\<in> summands Q\n\ngoal (1 subgoal):\n 1. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "hence QQ'eqQ: \"Q \\<oplus> Q' \\<equiv>\\<^sub>e Q\""], ["proof (prove)\nusing this:\n  R \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<oplus> Q' \\<equiv>\\<^sub>e Q", "using ReqQ'"], ["proof (prove)\nusing this:\n  R \\<in> summands Q\n  R \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. Q \\<oplus> Q' \\<equiv>\\<^sub>e Q", "by(rule IHQ)"], ["proof (state)\nthis:\n  Q \\<oplus> Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "have \"(P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> (Q \\<oplus> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'", "by(rule SumAssoc)"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "moreover"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "from QQ'eqQ"], ["proof (chain)\npicking this:\n  Q \\<oplus> Q' \\<equiv>\\<^sub>e Q", "have \"P \\<oplus> (Q \\<oplus> Q') \\<equiv>\\<^sub>e P \\<oplus> Q\""], ["proof (prove)\nusing this:\n  Q \\<oplus> Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "by(blast intro: Refl SumPres')"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. R \\<in> summands Q \\<Longrightarrow>\n    (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "ultimately"], ["proof (chain)\npicking this:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n  P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "show ?case"], ["proof (prove)\nusing this:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> Q'\n  P \\<oplus> Q \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q", "by(rule Trans)"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Par P Q R)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  \\<lbrakk>?Q \\<in> summands Q; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> Q \\<oplus> Q' \\<equiv>\\<^sub>e Q\n  R \\<in> summands (P \\<parallel> Q)\n  R \\<equiv>\\<^sub>e Q'\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"R \\<in> summands (P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> summands (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  R \\<in> summands (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence False"], ["proof (prove)\nusing this:\n  R \\<in> summands (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi1;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<oplus> Q' \\<equiv>\\<^sub>e pi1;\n        \\<And>Q.\n           \\<lbrakk>Q \\<in> summands pi2; Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<oplus> Q' \\<equiv>\\<^sub>e pi2;\n        Q \\<in> summands (pi1 \\<parallel> pi2);\n        Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> (pi1 \\<parallel> pi2) \\<oplus> Q' \\<equiv>\\<^sub>e\n                         pi1 \\<parallel> pi2\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. (P \\<parallel> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<parallel> Q", "by simp"], ["proof (state)\nthis:\n  (P \\<parallel> Q) \\<oplus> Q' \\<equiv>\\<^sub>e P \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Res x P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  Q \\<in> summands (<\\<nu>x>P)\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence \"(<\\<nu>x>P) \\<oplus> Q' \\<equiv>\\<^sub>e (<\\<nu>x>P) \\<oplus> Q\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q", "by(blast intro: SumPres' Refl Sym)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q = <\\<nu>x>P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = <\\<nu>x>P", "proof  -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q = <\\<nu>x>P", "have \"Q \\<in> summands (<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. Q = <\\<nu>x>P", "thus ?thesis"], ["proof (prove)\nusing this:\n  Q \\<in> summands (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. Q = <\\<nu>x>P", "by(auto simp add: if_split)"], ["proof (state)\nthis:\n  Q = <\\<nu>x>P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q = <\\<nu>x>P\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (<\\<nu>name>pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<oplus> Q' \\<equiv>\\<^sub>e\n                         <\\<nu>name>pi\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n  Q = <\\<nu>x>P", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n  Q = <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>P", "by(blast intro: SumIdemp Trans)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "case(Bang P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> summands P; ?Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n  \\<Longrightarrow> P \\<oplus> Q' \\<equiv>\\<^sub>e P\n  Q \\<in> summands (!P)\n  Q \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "have \"Q \\<in> summands(!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> summands (!P)", "by fact"], ["proof (state)\nthis:\n  Q \\<in> summands (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "hence False"], ["proof (prove)\nusing this:\n  Q \\<in> summands (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>Q \\<in> summands pi;\n                    Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n                   \\<Longrightarrow> pi \\<oplus> Q' \\<equiv>\\<^sub>e pi;\n        Q \\<in> summands (!pi); Q \\<equiv>\\<^sub>e Q'\\<rbrakk>\n       \\<Longrightarrow> !pi \\<oplus> Q' \\<equiv>\\<^sub>e !pi", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. !P \\<oplus> Q' \\<equiv>\\<^sub>e !P", "by simp"], ["proof (state)\nthis:\n  !P \\<oplus> Q' \\<equiv>\\<^sub>e !P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uhnfSum:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes Phnf: \"uhnf P\"\n  and     Qhnf: \"uhnf Q\"\n  and     validP: \"valid P\"\n  and     validQ: \"valid Q\"\n\n  shows \"\\<exists>R. uhnf R \\<and> valid R \\<and> P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and> (depth R) \\<le> (depth (P \\<oplus> Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (P \\<oplus> Q)", "using assms"], ["proof (prove)\nusing this:\n  uhnf P\n  uhnf Q\n  valid P\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (P \\<oplus> Q)", "proof(nominal_induct P arbitrary: Q rule: pi.strong_inducts)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "case(PiNil Q)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n  uhnf Q\n  valid \\<zero>\n  valid Q\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "have \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf Q", "by fact"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "have \"valid Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid Q", "by fact"], ["proof (state)\nthis:\n  valid Q\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid Q\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "have \"\\<zero> \\<oplus> Q \\<equiv>\\<^sub>e Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e Q", "by(blast intro: SumZero SumSym Trans)"], ["proof (state)\nthis:\n  \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e Q\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e Q\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "have \"depth Q \\<le> depth(\\<zero> \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth Q \\<le> depth (\\<zero> \\<oplus> Q)", "by auto"], ["proof (state)\nthis:\n  depth Q \\<le> depth (\\<zero> \\<oplus> Q)\n\ngoal (10 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>uhnf \\<zero>; uhnf Q; valid \\<zero>; valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<zero> \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 6. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 8. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 9. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 10. \\<And>pi Q.\n        \\<lbrakk>\\<And>Q.\n                    \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>R.\n   uhnf R \\<and>\n   valid R \\<and>\n   pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n   depth R \\<le> depth (pi \\<oplus> Q);\n         uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n        \\<Longrightarrow> \\<exists>R.\n                             uhnf R \\<and>\n                             valid R \\<and>\n                             !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                             depth R \\<le> depth (!pi \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf Q\n  valid Q\n  \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (\\<zero> \\<oplus> Q)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf Q\n  valid Q\n  \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (\\<zero> \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<zero> \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     \\<zero> \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (\\<zero> \\<oplus> Q)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Output a b P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  uhnf (a{b}.P)\n  uhnf Q\n  valid (a{b}.P)\n  valid Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1{name2}.pi); uhnf Q; valid (name1{name2}.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1{name2}.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1{name2}.pi \\<oplus> Q)\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 5. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 7. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 8. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 9. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "proof(case_tac \"Q = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "assume \"Q = \\<zero>\""], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have \"uhnf (a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a{b}.P)", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a{b}.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (a{b}.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have \"valid (a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a{b}.P)", "by fact"], ["proof (state)\nthis:\n  valid (a{b}.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (a{b}.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have \"a{b}.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.P", "by(rule SumZero)"], ["proof (state)\nthis:\n  a{b}.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  a{b}.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have \"depth(a{b}.P) \\<le> depth(a{b}.P \\<oplus> \\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a{b}.P) \\<le> depth (a{b}.P \\<oplus> \\<zero>)", "by simp"], ["proof (state)\nthis:\n  depth (a{b}.P) \\<le> depth (a{b}.P \\<oplus> \\<zero>)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q = \\<zero>\n  uhnf (a{b}.P)\n  valid (a{b}.P)\n  a{b}.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.P\n  depth (a{b}.P) \\<le> depth (a{b}.P \\<oplus> \\<zero>)", "show ?case"], ["proof (prove)\nusing this:\n  Q = \\<zero>\n  uhnf (a{b}.P)\n  valid (a{b}.P)\n  a{b}.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.P\n  depth (a{b}.P) \\<le> depth (a{b}.P \\<oplus> \\<zero>)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "assume QineqNil: \"Q \\<noteq> \\<zero>\""], ["proof (state)\nthis:\n  Q \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have Qhnf: \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf Q", "by fact"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have validQ: \"valid Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid Q", "by fact"], ["proof (state)\nthis:\n  valid Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have validP: \"valid(a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a{b}.P)", "by fact"], ["proof (state)\nthis:\n  valid (a{b}.P)\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "proof(case_tac \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e a{b}.P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "assume \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e a{b}.P\""], ["proof (state)\nthis:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P", "obtain Q' where \"Q' \\<in> summands Q\" and \"Q' \\<equiv>\\<^sub>e a{b}.P\""], ["proof (prove)\nusing this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> summands Q; Q' \\<equiv>\\<^sub>e a{b}.P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e a{b}.P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "hence \"Q \\<oplus> a{b}.P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\nusing this:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e a{b}.P\n\ngoal (1 subgoal):\n 1. Q \\<oplus> a{b}.P \\<equiv>\\<^sub>e Q", "by(rule summandsIdemp)"], ["proof (state)\nthis:\n  Q \\<oplus> a{b}.P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q \\<oplus> a{b}.P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have \"depth Q \\<le> depth(Q \\<oplus> a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth Q \\<le> depth (Q \\<oplus> a{b}.P)", "by simp"], ["proof (state)\nthis:\n  depth Q \\<le> depth (Q \\<oplus> a{b}.P)\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<oplus> a{b}.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> a{b}.P)", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<oplus> a{b}.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> a{b}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "using Qhnf validQ"], ["proof (prove)\nusing this:\n  Q \\<oplus> a{b}.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> a{b}.P)\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "by(force intro: SumSym Trans)"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "assume \"\\<not>(\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e a{b}.P)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "hence \"\\<forall>Q' \\<in> summands Q. \\<not>(Q' \\<equiv>\\<^sub>e a{b}.P)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a{b}.P)\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a{b}.P", "by simp"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a{b}.P\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "with Qhnf QineqNil"], ["proof (chain)\npicking this:\n  uhnf Q\n  Q \\<noteq> \\<zero>\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a{b}.P", "have \"uhnf (a{b}.P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  uhnf Q\n  Q \\<noteq> \\<zero>\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a{b}.P\n\ngoal (1 subgoal):\n 1. uhnf (a{b}.P \\<oplus> Q)", "by(force dest: Sym simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "from validQ validP"], ["proof (chain)\npicking this:\n  valid Q\n  valid (a{b}.P)", "have \"valid(a{b}.P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  valid Q\n  valid (a{b}.P)\n\ngoal (1 subgoal):\n 1. valid (a{b}.P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  valid (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have \"a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q", "by(rule Refl)"], ["proof (state)\nthis:\n  a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "have \"depth(a{b}.P \\<oplus> Q) \\<le> depth(a{b}.P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a{b}.P \\<oplus> Q) \\<le> depth (a{b}.P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  depth (a{b}.P \\<oplus> Q) \\<le> depth (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a{b}.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a{b}.P \\<oplus> Q)\n  valid (a{b}.P \\<oplus> Q)\n  a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n  depth (a{b}.P \\<oplus> Q) \\<le> depth (a{b}.P \\<oplus> Q)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a{b}.P \\<oplus> Q)\n  valid (a{b}.P \\<oplus> Q)\n  a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e a{b}.P \\<oplus> Q\n  depth (a{b}.P \\<oplus> Q) \\<le> depth (a{b}.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a{b}.P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a{b}.P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a{b}.P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a{b}.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a{b}.P \\<oplus> Q)\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Tau P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  uhnf (\\<tau>.P)\n  uhnf Q\n  valid (\\<tau>.P)\n  valid Q\n\ngoal (8 subgoals):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (\\<tau>.pi); uhnf Q; valid (\\<tau>.pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            \\<tau>.pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (\\<tau>.pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 4. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 6. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 7. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 8. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "proof(case_tac \"Q = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "assume \"Q = \\<zero>\""], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have \"uhnf (\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (\\<tau>.P)", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (\\<tau>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (\\<tau>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have \"valid (\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (\\<tau>.P)", "by fact"], ["proof (state)\nthis:\n  valid (\\<tau>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (\\<tau>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have \"\\<tau>.(P) \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.P", "by(rule SumZero)"], ["proof (state)\nthis:\n  \\<tau>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  \\<tau>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have \"depth(\\<tau>.(P)) \\<le> depth(\\<tau>.(P) \\<oplus> \\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (\\<tau>.P) \\<le> depth (\\<tau>.P \\<oplus> \\<zero>)", "by simp"], ["proof (state)\nthis:\n  depth (\\<tau>.P) \\<le> depth (\\<tau>.P \\<oplus> \\<zero>)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q = \\<zero>\n  uhnf (\\<tau>.P)\n  valid (\\<tau>.P)\n  \\<tau>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.P\n  depth (\\<tau>.P) \\<le> depth (\\<tau>.P \\<oplus> \\<zero>)", "show ?case"], ["proof (prove)\nusing this:\n  Q = \\<zero>\n  uhnf (\\<tau>.P)\n  valid (\\<tau>.P)\n  \\<tau>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.P\n  depth (\\<tau>.P) \\<le> depth (\\<tau>.P \\<oplus> \\<zero>)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "assume QineqNil: \"Q \\<noteq> \\<zero>\""], ["proof (state)\nthis:\n  Q \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have Qhnf: \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf Q", "by fact"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have validP: \"valid(\\<tau>.(P))\" and validQ: \"valid Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (\\<tau>.P) &&& valid Q", "by fact+"], ["proof (state)\nthis:\n  valid (\\<tau>.P)\n  valid Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "proof(case_tac \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.(P)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e \\<tau>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "assume \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.(P)\""], ["proof (state)\nthis:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e \\<tau>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.P", "obtain Q' where \"Q' \\<in> summands Q\" and \"Q' \\<equiv>\\<^sub>e \\<tau>.(P)\""], ["proof (prove)\nusing this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> summands Q; Q' \\<equiv>\\<^sub>e \\<tau>.P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e \\<tau>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "hence \"Q \\<oplus> \\<tau>.(P) \\<equiv>\\<^sub>e Q\""], ["proof (prove)\nusing this:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (1 subgoal):\n 1. Q \\<oplus> \\<tau>.P \\<equiv>\\<^sub>e Q", "by(rule summandsIdemp)"], ["proof (state)\nthis:\n  Q \\<oplus> \\<tau>.P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e \\<tau>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q \\<oplus> \\<tau>.P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e \\<tau>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have \"depth Q \\<le> depth(Q \\<oplus> \\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth Q \\<le> depth (Q \\<oplus> \\<tau>.P)", "by simp"], ["proof (state)\nthis:\n  depth Q \\<le> depth (Q \\<oplus> \\<tau>.P)\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e \\<tau>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<oplus> \\<tau>.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> \\<tau>.P)", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<oplus> \\<tau>.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> \\<tau>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "using Qhnf validQ"], ["proof (prove)\nusing this:\n  Q \\<oplus> \\<tau>.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> \\<tau>.P)\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "by(force intro: SumSym Trans)"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "assume \"\\<not>(\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.(P))\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.P)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "hence \"\\<forall>Q' \\<in> summands Q. \\<not>(Q' \\<equiv>\\<^sub>e \\<tau>.(P))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e \\<tau>.P)\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e \\<tau>.P", "by simp"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "with Qhnf QineqNil"], ["proof (chain)\npicking this:\n  uhnf Q\n  Q \\<noteq> \\<zero>\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e \\<tau>.P", "have \"uhnf (\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  uhnf Q\n  Q \\<noteq> \\<zero>\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (1 subgoal):\n 1. uhnf (\\<tau>.P \\<oplus> Q)", "by(force dest: Sym simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "from validP validQ"], ["proof (chain)\npicking this:\n  valid (\\<tau>.P)\n  valid Q", "have \"valid(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  valid (\\<tau>.P)\n  valid Q\n\ngoal (1 subgoal):\n 1. valid (\\<tau>.P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  valid (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have \"\\<tau>.(P) \\<oplus> Q \\<equiv>\\<^sub>e \\<tau>.(P) \\<oplus> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q", "by(rule Refl)"], ["proof (state)\nthis:\n  \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "have \"depth(\\<tau>.(P) \\<oplus> Q) \\<le> depth(\\<tau>.(P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (\\<tau>.P \\<oplus> Q) \\<le> depth (\\<tau>.P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  depth (\\<tau>.P \\<oplus> Q) \\<le> depth (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e \\<tau>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (\\<tau>.P \\<oplus> Q)\n  valid (\\<tau>.P \\<oplus> Q)\n  \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n  depth (\\<tau>.P \\<oplus> Q) \\<le> depth (\\<tau>.P \\<oplus> Q)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (\\<tau>.P \\<oplus> Q)\n  valid (\\<tau>.P \\<oplus> Q)\n  \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e \\<tau>.P \\<oplus> Q\n  depth (\\<tau>.P \\<oplus> Q) \\<le> depth (\\<tau>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (\\<tau>.P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     \\<tau>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (\\<tau>.P \\<oplus> Q)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Input a x P Q)"], ["proof (state)\nthis:\n  x \\<sharp> a\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  uhnf (a<x>.P)\n  uhnf Q\n  valid (a<x>.P)\n  valid Q\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>Q.\n           \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (name1<name2>.pi); uhnf Q; valid (name1<name2>.pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            name1<name2>.pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (name1<name2>.pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 3. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 5. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 6. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 7. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "proof(case_tac \"Q = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "assume \"Q = \\<zero>\""], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have \"uhnf (a<x>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a<x>.P)", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a<x>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (a<x>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have \"valid (a<x>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a<x>.P)", "by fact"], ["proof (state)\nthis:\n  valid (a<x>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (a<x>.P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have \"a<x>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.P", "by(rule SumZero)"], ["proof (state)\nthis:\n  a<x>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  a<x>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have \"depth(a<x>.P) \\<le> depth(a<x>.P \\<oplus> \\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a<x>.P) \\<le> depth (a<x>.P \\<oplus> \\<zero>)", "by simp"], ["proof (state)\nthis:\n  depth (a<x>.P) \\<le> depth (a<x>.P \\<oplus> \\<zero>)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q = \\<zero>\n  uhnf (a<x>.P)\n  valid (a<x>.P)\n  a<x>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.P\n  depth (a<x>.P) \\<le> depth (a<x>.P \\<oplus> \\<zero>)", "show ?case"], ["proof (prove)\nusing this:\n  Q = \\<zero>\n  uhnf (a<x>.P)\n  valid (a<x>.P)\n  a<x>.P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.P\n  depth (a<x>.P) \\<le> depth (a<x>.P \\<oplus> \\<zero>)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "assume QineqNil: \"Q \\<noteq> \\<zero>\""], ["proof (state)\nthis:\n  Q \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have validP: \"valid(a<x>.P)\" and validQ: \"valid Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a<x>.P) &&& valid Q", "by fact+"], ["proof (state)\nthis:\n  valid (a<x>.P)\n  valid Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have Qhnf: \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf Q", "by fact"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "proof(case_tac \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e a<x>.P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "assume \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e a<x>.P\""], ["proof (state)\nthis:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P", "obtain Q' where \"Q' \\<in> summands Q\" and \"Q' \\<equiv>\\<^sub>e a<x>.P\""], ["proof (prove)\nusing this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> summands Q; Q' \\<equiv>\\<^sub>e a<x>.P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e a<x>.P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "hence \"Q \\<oplus> a<x>.P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\nusing this:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e a<x>.P\n\ngoal (1 subgoal):\n 1. Q \\<oplus> a<x>.P \\<equiv>\\<^sub>e Q", "by(rule summandsIdemp)"], ["proof (state)\nthis:\n  Q \\<oplus> a<x>.P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q \\<oplus> a<x>.P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have \"depth Q \\<le> depth(Q \\<oplus> a<x>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth Q \\<le> depth (Q \\<oplus> a<x>.P)", "by simp"], ["proof (state)\nthis:\n  depth Q \\<le> depth (Q \\<oplus> a<x>.P)\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<oplus> a<x>.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> a<x>.P)", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<oplus> a<x>.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> a<x>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "using Qhnf validQ"], ["proof (prove)\nusing this:\n  Q \\<oplus> a<x>.P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> a<x>.P)\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "by(force intro: SumSym Trans)"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "assume \"\\<not>(\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e a<x>.P)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "hence \"\\<forall>Q' \\<in> summands Q. \\<not>(Q' \\<equiv>\\<^sub>e a<x>.P)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e a<x>.P)\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a<x>.P", "by simp"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a<x>.P\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "with Qhnf QineqNil"], ["proof (chain)\npicking this:\n  uhnf Q\n  Q \\<noteq> \\<zero>\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a<x>.P", "have \"uhnf (a<x>.P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  uhnf Q\n  Q \\<noteq> \\<zero>\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e a<x>.P\n\ngoal (1 subgoal):\n 1. uhnf (a<x>.P \\<oplus> Q)", "by(force dest: Sym simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "from validP validQ"], ["proof (chain)\npicking this:\n  valid (a<x>.P)\n  valid Q", "have \"valid(a<x>.P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  valid (a<x>.P)\n  valid Q\n\ngoal (1 subgoal):\n 1. valid (a<x>.P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  valid (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have \"a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q", "by(rule Refl)"], ["proof (state)\nthis:\n  a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "have \"depth(a<x>.P \\<oplus> Q) \\<le> depth(a<x>.P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a<x>.P \\<oplus> Q) \\<le> depth (a<x>.P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  depth (a<x>.P \\<oplus> Q) \\<le> depth (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e a<x>.P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a<x>.P \\<oplus> Q)\n  valid (a<x>.P \\<oplus> Q)\n  a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n  depth (a<x>.P \\<oplus> Q) \\<le> depth (a<x>.P \\<oplus> Q)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a<x>.P \\<oplus> Q)\n  valid (a<x>.P \\<oplus> Q)\n  a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e a<x>.P \\<oplus> Q\n  depth (a<x>.P \\<oplus> Q) \\<le> depth (a<x>.P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (a<x>.P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a<x>.P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a<x>.P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     a<x>.P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (a<x>.P \\<oplus> Q)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Match a b P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  uhnf ([a\\<frown>b]P)\n  uhnf Q\n  valid ([a\\<frown>b]P)\n  valid Q\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have \"uhnf ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  uhnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "hence False"], ["proof (prove)\nusing this:\n  uhnf ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. False", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<frown>name2]pi); uhnf Q;\n        valid ([name1\\<frown>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<frown>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<frown>name2]pi \\<oplus> Q)\n 2. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 4. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 5. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 6. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       [a\\<frown>b]P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth ([a\\<frown>b]P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     [a\\<frown>b]P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth ([a\\<frown>b]P \\<oplus> Q)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Mismatch a b P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  uhnf ([a\\<noteq>b]P)\n  uhnf Q\n  valid ([a\\<noteq>b]P)\n  valid Q\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have \"uhnf ([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  uhnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "hence False"], ["proof (prove)\nusing this:\n  uhnf ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. False", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf ([name1\\<noteq>name2]pi); uhnf Q;\n        valid ([name1\\<noteq>name2]pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            [name1\\<noteq>name2]pi \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ([name1\\<noteq>name2]pi \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 3. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 4. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 5. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       [a\\<noteq>b]P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth ([a\\<noteq>b]P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     [a\\<noteq>b]P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth ([a\\<noteq>b]P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Sum P Q R)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  \\<lbrakk>uhnf Q; uhnf ?Q; valid Q; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       Q \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (Q \\<oplus> ?Q)\n  uhnf (P \\<oplus> Q)\n  uhnf R\n  valid (P \\<oplus> Q)\n  valid R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have Rhnf: \"uhnf R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf R", "by fact"], ["proof (state)\nthis:\n  uhnf R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have validR: \"valid R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid R", "by fact"], ["proof (state)\nthis:\n  valid R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have PQhnf: \"uhnf (P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  uhnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have validPQ: \"valid(P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  valid (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have \"\\<exists>T. uhnf T \\<and> valid T \\<and> Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and> depth T \\<le> depth (Q \\<oplus> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "from PQhnf"], ["proof (chain)\npicking this:\n  uhnf (P \\<oplus> Q)", "have \"uhnf Q\""], ["proof (prove)\nusing this:\n  uhnf (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. uhnf Q", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "moreover"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "from validPQ"], ["proof (chain)\npicking this:\n  valid (P \\<oplus> Q)", "have \"valid Q\""], ["proof (prove)\nusing this:\n  valid (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. valid Q", "by simp+"], ["proof (state)\nthis:\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "moreover"], ["proof (state)\nthis:\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "have \"\\<And>R. \\<lbrakk>uhnf Q; uhnf R; valid Q; valid R\\<rbrakk> \\<Longrightarrow> \\<exists>T. uhnf T \\<and> valid T \\<and> Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and> depth T \\<le> depth(Q \\<oplus> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>uhnf Q; uhnf R; valid Q; valid R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T.\n                            uhnf T \\<and>\n                            valid T \\<and>\n                            Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n                            depth T \\<le> depth (Q \\<oplus> R)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf Q; uhnf ?R; valid Q; valid ?R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T.\n                       uhnf T \\<and>\n                       valid T \\<and>\n                       Q \\<oplus> ?R \\<equiv>\\<^sub>e T \\<and>\n                       depth T \\<le> depth (Q \\<oplus> ?R)\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf Q\n  valid Q\n  \\<lbrakk>uhnf Q; uhnf ?R; valid Q; valid ?R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T.\n                       uhnf T \\<and>\n                       valid T \\<and>\n                       Q \\<oplus> ?R \\<equiv>\\<^sub>e T \\<and>\n                       depth T \\<le> depth (Q \\<oplus> ?R)", "show ?thesis"], ["proof (prove)\nusing this:\n  uhnf Q\n  valid Q\n  \\<lbrakk>uhnf Q; uhnf ?R; valid Q; valid ?R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T.\n                       uhnf T \\<and>\n                       valid T \\<and>\n                       Q \\<oplus> ?R \\<equiv>\\<^sub>e T \\<and>\n                       depth T \\<le> depth (Q \\<oplus> ?R)\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "using Rhnf validR"], ["proof (prove)\nusing this:\n  uhnf Q\n  valid Q\n  \\<lbrakk>uhnf Q; uhnf ?R; valid Q; valid ?R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T.\n                       uhnf T \\<and>\n                       valid T \\<and>\n                       Q \\<oplus> ?R \\<equiv>\\<^sub>e T \\<and>\n                       depth T \\<le> depth (Q \\<oplus> ?R)\n  uhnf R\n  valid R\n\ngoal (1 subgoal):\n 1. \\<exists>T.\n       uhnf T \\<and>\n       valid T \\<and>\n       Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n       depth T \\<le> depth (Q \\<oplus> R)", "by blast"], ["proof (state)\nthis:\n  \\<exists>T.\n     uhnf T \\<and>\n     valid T \\<and>\n     Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n     depth T \\<le> depth (Q \\<oplus> R)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T.\n     uhnf T \\<and>\n     valid T \\<and>\n     Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n     depth T \\<le> depth (Q \\<oplus> R)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "then"], ["proof (chain)\npicking this:\n  \\<exists>T.\n     uhnf T \\<and>\n     valid T \\<and>\n     Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n     depth T \\<le> depth (Q \\<oplus> R)", "obtain T where Thnf: \"uhnf T\" and QReqT: \"Q \\<oplus> R \\<equiv>\\<^sub>e T\" and validT: \"valid T\"\n                  and Tdepth: \"depth T \\<le> depth(Q \\<oplus> R)\""], ["proof (prove)\nusing this:\n  \\<exists>T.\n     uhnf T \\<and>\n     valid T \\<and>\n     Q \\<oplus> R \\<equiv>\\<^sub>e T \\<and>\n     depth T \\<le> depth (Q \\<oplus> R)\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>uhnf T; Q \\<oplus> R \\<equiv>\\<^sub>e T; valid T;\n         depth T \\<le> depth (Q \\<oplus> R)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf T\n  Q \\<oplus> R \\<equiv>\\<^sub>e T\n  valid T\n  depth T \\<le> depth (Q \\<oplus> R)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have \"\\<exists>S. uhnf S \\<and> valid S \\<and> P \\<oplus> T \\<equiv>\\<^sub>e S \\<and> depth S \\<le> depth(P \\<oplus> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "from PQhnf"], ["proof (chain)\npicking this:\n  uhnf (P \\<oplus> Q)", "have \"uhnf P\""], ["proof (prove)\nusing this:\n  uhnf (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. uhnf P", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf P\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "moreover"], ["proof (state)\nthis:\n  uhnf P\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "from validPQ"], ["proof (chain)\npicking this:\n  valid (P \\<oplus> Q)", "have \"valid P\""], ["proof (prove)\nusing this:\n  valid (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "moreover"], ["proof (state)\nthis:\n  valid P\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "have \"\\<And>T. \\<lbrakk>uhnf P; uhnf T; valid P; valid T\\<rbrakk> \\<Longrightarrow> \\<exists>S. uhnf S \\<and> valid S \\<and> P \\<oplus> T \\<equiv>\\<^sub>e S \\<and> depth S \\<le> depth(P \\<oplus> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>uhnf P; uhnf T; valid P; valid T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S.\n                            uhnf S \\<and>\n                            valid S \\<and>\n                            P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n                            depth S \\<le> depth (P \\<oplus> T)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?T; valid P; valid ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>S.\n                       uhnf S \\<and>\n                       valid S \\<and>\n                       P \\<oplus> ?T \\<equiv>\\<^sub>e S \\<and>\n                       depth S \\<le> depth (P \\<oplus> ?T)\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf P\n  valid P\n  \\<lbrakk>uhnf P; uhnf ?T; valid P; valid ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>S.\n                       uhnf S \\<and>\n                       valid S \\<and>\n                       P \\<oplus> ?T \\<equiv>\\<^sub>e S \\<and>\n                       depth S \\<le> depth (P \\<oplus> ?T)", "show ?thesis"], ["proof (prove)\nusing this:\n  uhnf P\n  valid P\n  \\<lbrakk>uhnf P; uhnf ?T; valid P; valid ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>S.\n                       uhnf S \\<and>\n                       valid S \\<and>\n                       P \\<oplus> ?T \\<equiv>\\<^sub>e S \\<and>\n                       depth S \\<le> depth (P \\<oplus> ?T)\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "using Thnf validT"], ["proof (prove)\nusing this:\n  uhnf P\n  valid P\n  \\<lbrakk>uhnf P; uhnf ?T; valid P; valid ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>S.\n                       uhnf S \\<and>\n                       valid S \\<and>\n                       P \\<oplus> ?T \\<equiv>\\<^sub>e S \\<and>\n                       depth S \\<le> depth (P \\<oplus> ?T)\n  uhnf T\n  valid T\n\ngoal (1 subgoal):\n 1. \\<exists>S.\n       uhnf S \\<and>\n       valid S \\<and>\n       P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n       depth S \\<le> depth (P \\<oplus> T)", "by blast"], ["proof (state)\nthis:\n  \\<exists>S.\n     uhnf S \\<and>\n     valid S \\<and>\n     P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n     depth S \\<le> depth (P \\<oplus> T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>S.\n     uhnf S \\<and>\n     valid S \\<and>\n     P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n     depth S \\<le> depth (P \\<oplus> T)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "then"], ["proof (chain)\npicking this:\n  \\<exists>S.\n     uhnf S \\<and>\n     valid S \\<and>\n     P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n     depth S \\<le> depth (P \\<oplus> T)", "obtain S where Shnf: \"uhnf S\" and PTeqS: \"P \\<oplus> T \\<equiv>\\<^sub>e S\" and validS: \"valid S\"\n                  and Sdepth: \"depth S \\<le> depth(P \\<oplus> T)\""], ["proof (prove)\nusing this:\n  \\<exists>S.\n     uhnf S \\<and>\n     valid S \\<and>\n     P \\<oplus> T \\<equiv>\\<^sub>e S \\<and>\n     depth S \\<le> depth (P \\<oplus> T)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>uhnf S; P \\<oplus> T \\<equiv>\\<^sub>e S; valid S;\n         depth S \\<le> depth (P \\<oplus> T)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf S\n  P \\<oplus> T \\<equiv>\\<^sub>e S\n  valid S\n  depth S \\<le> depth (P \\<oplus> T)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have \"(P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S", "have \"(P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> (Q \\<oplus> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> R", "by(rule SumAssoc)"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S", "moreover"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S", "from QReqT"], ["proof (chain)\npicking this:\n  Q \\<oplus> R \\<equiv>\\<^sub>e T", "have \"P \\<oplus> (Q \\<oplus> R) \\<equiv>\\<^sub>e P \\<oplus> T\""], ["proof (prove)\nusing this:\n  Q \\<oplus> R \\<equiv>\\<^sub>e T\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> T", "by(blast intro: Refl SumPres')"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> T\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S", "ultimately"], ["proof (chain)\npicking this:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> R\n  P \\<oplus> Q \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> T", "show ?thesis"], ["proof (prove)\nusing this:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> R\n  P \\<oplus> Q \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> T\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S", "using PTeqS"], ["proof (prove)\nusing this:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> Q \\<oplus> R\n  P \\<oplus> Q \\<oplus> R \\<equiv>\\<^sub>e P \\<oplus> T\n  P \\<oplus> T \\<equiv>\\<^sub>e S\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "from Tdepth Sdepth"], ["proof (chain)\npicking this:\n  depth T \\<le> depth (Q \\<oplus> R)\n  depth S \\<le> depth (P \\<oplus> T)", "have \"depth S \\<le> depth((P \\<oplus> Q) \\<oplus> R)\""], ["proof (prove)\nusing this:\n  depth T \\<le> depth (Q \\<oplus> R)\n  depth S \\<le> depth (P \\<oplus> T)\n\ngoal (1 subgoal):\n 1. depth S \\<le> depth ((P \\<oplus> Q) \\<oplus> R)", "by auto"], ["proof (state)\nthis:\n  depth S \\<le> depth ((P \\<oplus> Q) \\<oplus> R)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<oplus> pi2); uhnf Q; valid (pi1 \\<oplus> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<oplus> pi2) \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<oplus> pi2) \\<oplus> Q)\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 3. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 4. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S\n  depth S \\<le> depth ((P \\<oplus> Q) \\<oplus> R)", "show ?case"], ["proof (prove)\nusing this:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S\n  depth S \\<le> depth ((P \\<oplus> Q) \\<oplus> R)\n\ngoal (1 subgoal):\n 1. \\<exists>Ra.\n       uhnf Ra \\<and>\n       valid Ra \\<and>\n       (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e Ra \\<and>\n       depth Ra \\<le> depth ((P \\<oplus> Q) \\<oplus> R)", "using Shnf validS"], ["proof (prove)\nusing this:\n  (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e S\n  depth S \\<le> depth ((P \\<oplus> Q) \\<oplus> R)\n  uhnf S\n  valid S\n\ngoal (1 subgoal):\n 1. \\<exists>Ra.\n       uhnf Ra \\<and>\n       valid Ra \\<and>\n       (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e Ra \\<and>\n       depth Ra \\<le> depth ((P \\<oplus> Q) \\<oplus> R)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Ra.\n     uhnf Ra \\<and>\n     valid Ra \\<and>\n     (P \\<oplus> Q) \\<oplus> R \\<equiv>\\<^sub>e Ra \\<and>\n     depth Ra \\<le> depth ((P \\<oplus> Q) \\<oplus> R)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Par P Q R)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  \\<lbrakk>uhnf Q; uhnf ?Q; valid Q; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       Q \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (Q \\<oplus> ?Q)\n  uhnf (P \\<parallel> Q)\n  uhnf R\n  valid (P \\<parallel> Q)\n  valid R\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have \"uhnf (P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  uhnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "hence False"], ["proof (prove)\nusing this:\n  uhnf (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. False", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi1; uhnf Q; valid pi1; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi1 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi1 \\<oplus> Q);\n        \\<And>Q.\n           \\<lbrakk>uhnf pi2; uhnf Q; valid pi2; valid Q\\<rbrakk>\n           \\<Longrightarrow> \\<exists>R.\n                                uhnf R \\<and>\n                                valid R \\<and>\n                                pi2 \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                                depth R \\<le> depth (pi2 \\<oplus> Q);\n        uhnf (pi1 \\<parallel> pi2); uhnf Q; valid (pi1 \\<parallel> pi2);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            (pi1 \\<parallel> pi2) \\<oplus>\n                            Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R\n                            \\<le> depth ((pi1 \\<parallel> pi2) \\<oplus> Q)\n 2. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 3. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Ra.\n       uhnf Ra \\<and>\n       valid Ra \\<and>\n       (P \\<parallel> Q) \\<oplus> R \\<equiv>\\<^sub>e Ra \\<and>\n       depth Ra \\<le> depth ((P \\<parallel> Q) \\<oplus> R)", "by simp"], ["proof (state)\nthis:\n  \\<exists>Ra.\n     uhnf Ra \\<and>\n     valid Ra \\<and>\n     (P \\<parallel> Q) \\<oplus> R \\<equiv>\\<^sub>e Ra \\<and>\n     depth Ra \\<le> depth ((P \\<parallel> Q) \\<oplus> R)\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Res x P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  uhnf (<\\<nu>x>P)\n  uhnf Q\n  valid (<\\<nu>x>P)\n  valid Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (<\\<nu>name>pi); uhnf Q; valid (<\\<nu>name>pi);\n        valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            <\\<nu>name>pi \\<oplus> Q \\<equiv>\\<^sub>e\n                            R \\<and>\n                            depth R \\<le> depth (<\\<nu>name>pi \\<oplus> Q)\n 2. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "proof(case_tac \"Q = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "assume \"Q = \\<zero>\""], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"uhnf (<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"valid (<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  valid (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"<\\<nu>x>P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>P", "by(rule SumZero)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"depth(<\\<nu>x>P) \\<le> depth((<\\<nu>x>P) \\<oplus> \\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (<\\<nu>x>P) \\<le> depth (<\\<nu>x>P \\<oplus> \\<zero>)", "by simp"], ["proof (state)\nthis:\n  depth (<\\<nu>x>P) \\<le> depth (<\\<nu>x>P \\<oplus> \\<zero>)\n\ngoal (2 subgoals):\n 1. Q = \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q = \\<zero>\n  uhnf (<\\<nu>x>P)\n  valid (<\\<nu>x>P)\n  <\\<nu>x>P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth (<\\<nu>x>P) \\<le> depth (<\\<nu>x>P \\<oplus> \\<zero>)", "show ?case"], ["proof (prove)\nusing this:\n  Q = \\<zero>\n  uhnf (<\\<nu>x>P)\n  valid (<\\<nu>x>P)\n  <\\<nu>x>P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth (<\\<nu>x>P) \\<le> depth (<\\<nu>x>P \\<oplus> \\<zero>)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "assume QineqNil: \"Q \\<noteq> \\<zero>\""], ["proof (state)\nthis:\n  Q \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have Qhnf: \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf Q", "by fact"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have validP: \"valid(<\\<nu>x>P)\" and validQ: \"valid Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (<\\<nu>x>P) &&& valid Q", "by fact+"], ["proof (state)\nthis:\n  valid (<\\<nu>x>P)\n  valid Q\n\ngoal (1 subgoal):\n 1. Q \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "proof(case_tac \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "assume \"\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P\""], ["proof (state)\nthis:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P", "obtain Q' where \"Q' \\<in> summands Q\" and \"Q' \\<equiv>\\<^sub>e <\\<nu>x>P\""], ["proof (prove)\nusing this:\n  \\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> summands Q; Q' \\<equiv>\\<^sub>e <\\<nu>x>P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "hence \"Q \\<oplus> <\\<nu>x>P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\nusing this:\n  Q' \\<in> summands Q\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. Q \\<oplus> <\\<nu>x>P \\<equiv>\\<^sub>e Q", "by(rule summandsIdemp)"], ["proof (state)\nthis:\n  Q \\<oplus> <\\<nu>x>P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  Q \\<oplus> <\\<nu>x>P \\<equiv>\\<^sub>e Q\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"depth Q \\<le> depth(Q \\<oplus> <\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth Q \\<le> depth (Q \\<oplus> <\\<nu>x>P)", "by simp"], ["proof (state)\nthis:\n  depth Q \\<le> depth (Q \\<oplus> <\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. \\<exists>Q'\\<in>summands Q.\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>P \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n 2. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<oplus> <\\<nu>x>P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> <\\<nu>x>P)", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<oplus> <\\<nu>x>P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> <\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "using Qhnf validQ"], ["proof (prove)\nusing this:\n  Q \\<oplus> <\\<nu>x>P \\<equiv>\\<^sub>e Q\n  depth Q \\<le> depth (Q \\<oplus> <\\<nu>x>P)\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "by(force intro: SumSym Trans)"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "assume \"\\<not>(\\<exists>Q' \\<in> summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "hence \"\\<forall>Q' \\<in> summands Q. \\<not>(Q' \\<equiv>\\<^sub>e <\\<nu>x>P)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>Q'\\<in>summands Q. Q' \\<equiv>\\<^sub>e <\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e <\\<nu>x>P", "by simp"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"uhnf (<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n  uhnf (<\\<nu>x>P)", "have \"uhnf (<\\<nu>x>P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n  uhnf (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>x>P \\<oplus> Q)", "using Qhnf QineqNil"], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>summands Q. \\<not> Q' \\<equiv>\\<^sub>e <\\<nu>x>P\n  uhnf (<\\<nu>x>P)\n  uhnf Q\n  Q \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>x>P \\<oplus> Q)", "by(force dest: Sym simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "from validP validQ"], ["proof (chain)\npicking this:\n  valid (<\\<nu>x>P)\n  valid Q", "have \"valid(<\\<nu>x>P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  valid (<\\<nu>x>P)\n  valid Q\n\ngoal (1 subgoal):\n 1. valid (<\\<nu>x>P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  valid (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"(<\\<nu>x>P) \\<oplus> Q \\<equiv>\\<^sub>e (<\\<nu>x>P) \\<oplus> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q", "by(rule Refl)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "have \"depth((<\\<nu>x>P) \\<oplus> Q) \\<le> depth((<\\<nu>x>P) \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (<\\<nu>x>P \\<oplus> Q) \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  depth (<\\<nu>x>P \\<oplus> Q) \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>Q'\\<in>summands Q.\n               Q' \\<equiv>\\<^sub>e <\\<nu>x>P) \\<Longrightarrow>\n    \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (<\\<nu>x>P \\<oplus> Q)\n  valid (<\\<nu>x>P \\<oplus> Q)\n  <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n  depth (<\\<nu>x>P \\<oplus> Q) \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (<\\<nu>x>P \\<oplus> Q)\n  valid (<\\<nu>x>P \\<oplus> Q)\n  <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<oplus> Q\n  depth (<\\<nu>x>P \\<oplus> Q) \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     <\\<nu>x>P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (<\\<nu>x>P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "case(Bang P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; uhnf ?Q; valid P; valid ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R.\n                       uhnf R \\<and>\n                       valid R \\<and>\n                       P \\<oplus> ?Q \\<equiv>\\<^sub>e R \\<and>\n                       depth R \\<le> depth (P \\<oplus> ?Q)\n  uhnf (!P)\n  uhnf Q\n  valid (!P)\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "have \"uhnf (!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (!P)", "by fact"], ["proof (state)\nthis:\n  uhnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "hence False"], ["proof (prove)\nusing this:\n  uhnf (!P)\n\ngoal (1 subgoal):\n 1. False", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>uhnf pi; uhnf Q; valid pi; valid Q\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>R.\n  uhnf R \\<and>\n  valid R \\<and>\n  pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n  depth R \\<le> depth (pi \\<oplus> Q);\n        uhnf (!pi); uhnf Q; valid (!pi); valid Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            uhnf R \\<and>\n                            valid R \\<and>\n                            !pi \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n                            depth R \\<le> depth (!pi \\<oplus> Q)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       uhnf R \\<and>\n       valid R \\<and>\n       !P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n       depth R \\<le> depth (!P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  \\<exists>R.\n     uhnf R \\<and>\n     valid R \\<and>\n     !P \\<oplus> Q \\<equiv>\\<^sub>e R \\<and>\n     depth R \\<le> depth (!P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uhnfRes:\n  fixes x :: name\n  and   P :: pi\n\n  assumes Phnf: \"uhnf P\"\n  and     validP: \"valid P\"\n\n  shows \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth(<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "using assms"], ["proof (prove)\nusing this:\n  uhnf P\n  valid P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "proof(nominal_induct P avoiding: x rule: pi.strong_inducts)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "case(PiNil x)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"<\\<nu>x>\\<zero> \\<equiv>\\<^sub>e \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e \\<zero>", "by(rule ResNil)"], ["proof (state)\nthis:\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"depth \\<zero> \\<le> depth(<\\<nu>x>\\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uhnf \\<zero>; valid \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>P'.\n   uhnf P' \\<and>\n   valid P' \\<and>\n   <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n         uhnf (!pi); valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>P'.\n                             uhnf P' \\<and>\n                             valid P' \\<and>\n                             <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                             depth P' \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf \\<zero>\n  valid \\<zero>\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf \\<zero>\n  valid \\<zero>\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>\\<zero>)", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>\\<zero>)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Output a b P)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  uhnf (a{b}.P)\n  valid (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"valid(a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a{b}.P)", "by fact"], ["proof (state)\nthis:\n  valid (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (a{b}.P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1{name2}.pi); valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1{name2}.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "proof(case_tac \"x=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "assume \"x = a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P", "by(blast intro: ResOutput' Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"depth \\<zero> \\<le> depth(<\\<nu>x>x{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "ultimately"], ["proof (chain)\npicking this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)", "show ?case"], ["proof (prove)\nusing this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "assume xineqa: \"x \\<noteq> a\""], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "proof(case_tac \"x=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "assume \"x=b\""], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "from xineqa"], ["proof (chain)\npicking this:\n  x \\<noteq> a", "have \"uhnf(<\\<nu>x>a{x}.P)\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>x>a{x}.P)", "by(force simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(<\\<nu>x>a{x}.P)\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (<\\<nu>x>a{x}.P)", "by simp"], ["proof (state)\nthis:\n  valid (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  valid (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"<\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P", "by(rule Refl)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"depth(<\\<nu>x>a{x}.P) \\<le> depth(<\\<nu>x>a{x}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)", "by simp"], ["proof (state)\nthis:\n  depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "ultimately"], ["proof (chain)\npicking this:\n  x = b\n  uhnf (<\\<nu>x>a{x}.P)\n  valid (<\\<nu>x>a{x}.P)\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n  depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)", "show ?case"], ["proof (prove)\nusing this:\n  x = b\n  uhnf (<\\<nu>x>a{x}.P)\n  valid (<\\<nu>x>a{x}.P)\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n  depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "assume xineqb: \"x \\<noteq> b\""], ["proof (state)\nthis:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"uhnf(a{b}.(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a{b}.(<\\<nu>x>P))", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  uhnf (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(a{b}.(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (a{b}.(<\\<nu>x>P))", "by simp"], ["proof (state)\nthis:\n  valid (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  valid (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "from xineqa xineqb"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<noteq> b", "have \"a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P", "by(blast intro: ResOutput Sym)"], ["proof (state)\nthis:\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "have \"depth(a{b}.(<\\<nu>x>P)) \\<le> depth(<\\<nu>x>a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)", "by simp"], ["proof (state)\nthis:\n  depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a{b}.(<\\<nu>x>P))\n  valid (a{b}.(<\\<nu>x>P))\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n  depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a{b}.(<\\<nu>x>P))\n  valid (a{b}.(<\\<nu>x>P))\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n  depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a{b}.P)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a{b}.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Tau P)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  uhnf (\\<tau>.P)\n  valid (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"valid(\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (\\<tau>.P)", "by fact"], ["proof (state)\nthis:\n  valid (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (\\<tau>.P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf(\\<tau>.(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (\\<tau>.(<\\<nu>x>P))", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(\\<tau>.(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (\\<tau>.(<\\<nu>x>P))", "by simp"], ["proof (state)\nthis:\n  valid (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  valid (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"\\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P", "by(blast intro: ResTau Sym)"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"depth(\\<tau>.(<\\<nu>x>P)) \\<le> depth(<\\<nu>x>\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)", "by simp"], ["proof (state)\nthis:\n  depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (\\<tau>.pi); valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>\\<tau>.pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n  valid (\\<tau>.(<\\<nu>x>P))\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n  depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n  valid (\\<tau>.(<\\<nu>x>P))\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n  depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>\\<tau>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>\\<tau>.P)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>\\<tau>.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>\\<tau>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Input a y P x)"], ["proof (state)\nthis:\n  y \\<sharp> x\n  y \\<sharp> a\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  uhnf (a<y>.P)\n  valid (a<y>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"valid(a<y>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a<y>.P)", "by fact"], ["proof (state)\nthis:\n  valid (a<y>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (a<y>.P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"y \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> x", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> x\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence yineqx: \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  y \\<sharp> x\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by simp"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (name1<name2>.pi); valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>name1<name2>.pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "proof(case_tac \"x=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "assume \"x = a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "have \"\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P", "by(blast intro: ResInput' Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "have \"depth \\<zero> \\<le> depth(<\\<nu>x>x<y>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "ultimately"], ["proof (chain)\npicking this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)", "show ?case"], ["proof (prove)\nusing this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "assume xineqa: \"x \\<noteq> a\""], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "have \"uhnf(a<y>.(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a<y>.(<\\<nu>x>P))", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  uhnf (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(a<y>.(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (a<y>.(<\\<nu>x>P))", "by simp"], ["proof (state)\nthis:\n  valid (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  valid (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "from xineqa yineqx"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  y \\<noteq> x", "have \"a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P", "by(blast intro: ResInput Sym)"], ["proof (state)\nthis:\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "have \"depth(a<y>.(<\\<nu>x>P)) \\<le> depth(<\\<nu>x>a<y>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)", "by simp"], ["proof (state)\nthis:\n  depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a<y>.(<\\<nu>x>P))\n  valid (a<y>.(<\\<nu>x>P))\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n  depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a<y>.(<\\<nu>x>P))\n  valid (a<y>.(<\\<nu>x>P))\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n  depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>a<y>.P)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>a<y>.P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Match a b P x)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  uhnf ([a\\<frown>b]P)\n  valid ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  uhnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence False"], ["proof (prove)\nusing this:\n  uhnf ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. False", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<frown>name2]pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>[a\\<frown>b]P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>[a\\<frown>b]P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Mismatch a b P x)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  uhnf ([a\\<noteq>b]P)\n  valid ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  uhnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence False"], ["proof (prove)\nusing this:\n  uhnf ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. False", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf ([name1\\<noteq>name2]pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>[a\\<noteq>b]P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>[a\\<noteq>b]P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Sum P Q x)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  \\<lbrakk>uhnf Q; valid Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>Q \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>Q)\n  uhnf (P \\<oplus> Q)\n  valid (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"valid(P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  valid (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\" and validQ: \"valid Q\""], ["proof (prove)\nusing this:\n  valid (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. valid P &&& valid Q", "by simp+"], ["proof (state)\nthis:\n  valid P\n  valid Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf(P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  uhnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence Phnf: \"uhnf P\" and Qhnf: \"uhnf Q\""], ["proof (prove)\nusing this:\n  uhnf (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. uhnf P &&& uhnf Q", "by(auto simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf P\n  uhnf Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> (depth P') \\<le> (depth(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "have \"\\<lbrakk>uhnf P; valid P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. uhnf P' \\<and> valid P' \\<and> <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and> (depth P') \\<le> (depth (<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>uhnf P; valid P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         uhnf P' \\<and>\n                         valid P' \\<and>\n                         <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and>\n                         depth P' \\<le> depth (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "with validP Phnf"], ["proof (chain)\npicking this:\n  valid P\n  uhnf P\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>x>P)", "show ?thesis"], ["proof (prove)\nusing this:\n  valid P\n  uhnf P\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>x>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "obtain P' where P'hnf: \"uhnf P'\" and P'eqP: \"P' \\<equiv>\\<^sub>e <\\<nu>x>P\" and validP': \"valid P'\"\n                   and P'depth: \"(depth P') \\<le> (depth(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>uhnf P'; P' \\<equiv>\\<^sub>e <\\<nu>x>P; valid P';\n         depth P' \\<le> depth (<\\<nu>x>P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf P'\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  valid P'\n  depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"\\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> (depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "have \"\\<lbrakk>uhnf Q; valid Q\\<rbrakk> \\<Longrightarrow> \\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> <\\<nu>x>Q \\<equiv>\\<^sub>e Q' \\<and> (depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>uhnf Q; valid Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         uhnf Q' \\<and>\n                         valid Q' \\<and>\n                         <\\<nu>x>Q \\<equiv>\\<^sub>e Q' \\<and>\n                         depth Q' \\<le> depth (<\\<nu>x>Q)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf Q; valid Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       uhnf Q' \\<and>\n                       valid Q' \\<and>\n                       <\\<nu>x>Q \\<equiv>\\<^sub>e Q' \\<and>\n                       depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "with validQ Qhnf"], ["proof (chain)\npicking this:\n  valid Q\n  uhnf Q\n  \\<lbrakk>uhnf Q; valid Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       uhnf Q' \\<and>\n                       valid Q' \\<and>\n                       <\\<nu>x>Q \\<equiv>\\<^sub>e Q' \\<and>\n                       depth Q' \\<le> depth (<\\<nu>x>Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  valid Q\n  uhnf Q\n  \\<lbrakk>uhnf Q; valid Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       uhnf Q' \\<and>\n                       valid Q' \\<and>\n                       <\\<nu>x>Q \\<equiv>\\<^sub>e Q' \\<and>\n                       depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "obtain Q' where Q'hnf: \"uhnf Q'\" and Q'eqQ: \"Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\" and validQ': \"valid Q'\"\n                   and Q'depth: \"(depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>uhnf Q'; Q' \\<equiv>\\<^sub>e <\\<nu>x>Q; valid Q';\n         depth Q' \\<le> depth (<\\<nu>x>Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q'\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  valid Q'\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "from P'hnf Q'hnf validP' validQ'"], ["proof (chain)\npicking this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'", "obtain R where Rhnf: \"uhnf R\" and validR: \"valid R\"\n                                              and P'Q'eqR: \"P' \\<oplus> Q' \\<equiv>\\<^sub>e R\"\n                                              and Rdepth: \"depth R \\<le> depth(P' \\<oplus> Q')\""], ["proof (prove)\nusing this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n         depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac uhnfSum)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> uhnf ?Q6\n 2. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> valid P'\n 3. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> valid ?Q6\n 4. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q';\n     \\<exists>R.\n        uhnf R \\<and>\n        valid R \\<and>\n        P' \\<oplus> ?Q6 \\<equiv>\\<^sub>e R \\<and>\n        depth R \\<le> depth (P' \\<oplus> ?Q6)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q';\n     \\<exists>R.\n        uhnf R \\<and>\n        valid R \\<and>\n        P' \\<oplus> Q' \\<equiv>\\<^sub>e R \\<and>\n        depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  uhnf R\n  valid R\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P' \\<oplus> Q')\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "from P'eqP Q'eqQ P'Q'eqR"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R", "have \"<\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R\n\ngoal (1 subgoal):\n 1. <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R", "by(blast intro: Sym SumPres' SumRes Trans)"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "from Rdepth P'depth Q'depth"], ["proof (chain)\npicking this:\n  depth R \\<le> depth (P' \\<oplus> Q')\n  depth P' \\<le> depth (<\\<nu>x>P)\n  depth Q' \\<le> depth (<\\<nu>x>Q)", "have \"depth R \\<le> depth(<\\<nu>x>(P \\<oplus> Q))\""], ["proof (prove)\nusing this:\n  depth R \\<le> depth (P' \\<oplus> Q')\n  depth P' \\<le> depth (<\\<nu>x>P)\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "by auto"], ["proof (state)\nthis:\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<oplus> pi2); valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "using validR Rhnf"], ["proof (prove)\nusing this:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n  valid R\n  uhnf R\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Par P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  \\<lbrakk>uhnf Q; valid Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>Q \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>Q)\n  uhnf (P \\<parallel> Q)\n  valid (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf(P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  uhnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence False"], ["proof (prove)\nusing this:\n  uhnf (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. False", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi1; valid pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi1 \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           \\<lbrakk>uhnf pi2; valid pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi2 \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi2);\n        uhnf (pi1 \\<parallel> pi2); valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<equiv>\\<^sub>e\n                            P' \\<and>\n                            depth P'\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>(P \\<parallel> Q))", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x>(P \\<parallel> Q))\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Res y P x)"], ["proof (state)\nthis:\n  y \\<sharp> x\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  uhnf (<\\<nu>y>P)\n  valid (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"valid(<\\<nu>y>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (<\\<nu>y>P)", "by fact"], ["proof (state)\nthis:\n  valid (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf(<\\<nu>y>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>y>P)", "by fact"], ["proof (state)\nthis:\n  uhnf (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "then"], ["proof (chain)\npicking this:\n  uhnf (<\\<nu>y>P)", "obtain a P' where aineqy: \"a \\<noteq> y\" and PeqP': \"P = a{y}.P'\""], ["proof (prove)\nusing this:\n  uhnf (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. (\\<And>a P'.\n        \\<lbrakk>a \\<noteq> y; P = a{y}.P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force simp add: uhnf_def)"], ["proof (state)\nthis:\n  a \\<noteq> y\n  P = a{y}.P'\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                uhnf P' \\<and>\n                                valid P' \\<and>\n                                <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and>\n                                depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (<\\<nu>name>pi); valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x><\\<nu>name>pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "proof(case_tac \"x=y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "assume \"x=y\""], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "from aineqy"], ["proof (chain)\npicking this:\n  a \\<noteq> y", "have \"uhnf(<\\<nu>y>a{y}.P')\""], ["proof (prove)\nusing this:\n  a \\<noteq> y\n\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>y>a{y}.P')", "by(force simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (<\\<nu>y>a{y}.P')\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  uhnf (<\\<nu>y>a{y}.P')\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "from validP PeqP'"], ["proof (chain)\npicking this:\n  valid P\n  P = a{y}.P'", "have \"valid(<\\<nu>y>a{y}.P')\""], ["proof (prove)\nusing this:\n  valid P\n  P = a{y}.P'\n\ngoal (1 subgoal):\n 1. valid (<\\<nu>y>a{y}.P')", "by simp"], ["proof (state)\nthis:\n  valid (<\\<nu>y>a{y}.P')\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  valid (<\\<nu>y>a{y}.P')\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"<\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'", "have \"y \\<sharp> <\\<nu>y>a{y}.P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> <\\<nu>y>a{y}.P'", "by(simp add: name_fresh_abs)"], ["proof (state)\nthis:\n  y \\<sharp> <\\<nu>y>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'", "hence \"<\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> <\\<nu>y>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'", "by(rule ResFresh)"], ["proof (state)\nthis:\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'", "thus ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"depth(<\\<nu>y>a{y}.P') \\<le> depth(<\\<nu>y><\\<nu>y>a{y}.P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (<\\<nu>y>a{y}.P') \\<le> depth (<\\<nu>y><\\<nu>y>a{y}.P')", "by simp"], ["proof (state)\nthis:\n  depth (<\\<nu>y>a{y}.P') \\<le> depth (<\\<nu>y><\\<nu>y>a{y}.P')\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "ultimately"], ["proof (chain)\npicking this:\n  x = y\n  uhnf (<\\<nu>y>a{y}.P')\n  valid (<\\<nu>y>a{y}.P')\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n  depth (<\\<nu>y>a{y}.P') \\<le> depth (<\\<nu>y><\\<nu>y>a{y}.P')", "show ?case"], ["proof (prove)\nusing this:\n  x = y\n  uhnf (<\\<nu>y>a{y}.P')\n  valid (<\\<nu>y>a{y}.P')\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n  depth (<\\<nu>y>a{y}.P') \\<le> depth (<\\<nu>y><\\<nu>y>a{y}.P')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "using PeqP'"], ["proof (prove)\nusing this:\n  x = y\n  uhnf (<\\<nu>y>a{y}.P')\n  valid (<\\<nu>y>a{y}.P')\n  <\\<nu>y><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.P'\n  depth (<\\<nu>y>a{y}.P') \\<le> depth (<\\<nu>y><\\<nu>y>a{y}.P')\n  P = a{y}.P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "assume xineqy: \"x\\<noteq>y\""], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "proof(case_tac \"x=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "assume \"x=a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"<\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "have \"<\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>a>a{y}.P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>a>a{y}.P'", "by(rule ResComm)"], ["proof (state)\nthis:\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>a>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "moreover"], ["proof (state)\nthis:\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>a>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "have \"<\\<nu>y><\\<nu>a>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>a>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "by(blast intro: ResOutput' ResNil ResPres Trans)"], ["proof (state)\nthis:\n  <\\<nu>y><\\<nu>a>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n\ngoal (1 subgoal):\n 1. <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>a>a{y}.P'\n  <\\<nu>y><\\<nu>a>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "show ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>a>a{y}.P'\n  <\\<nu>y><\\<nu>a>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n\ngoal (1 subgoal):\n 1. <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"depth \\<zero> \\<le> depth(<\\<nu>a><\\<nu>y>a{y}.P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>a><\\<nu>y>a{y}.P')", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>a><\\<nu>y>a{y}.P')\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "ultimately"], ["proof (chain)\npicking this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth (<\\<nu>a><\\<nu>y>a{y}.P')", "show ?case"], ["proof (prove)\nusing this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth (<\\<nu>a><\\<nu>y>a{y}.P')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "using PeqP'"], ["proof (prove)\nusing this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  <\\<nu>a><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth (<\\<nu>a><\\<nu>y>a{y}.P')\n  P = a{y}.P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "assume xineqa: \"x \\<noteq> a\""], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "from aineqy"], ["proof (chain)\npicking this:\n  a \\<noteq> y", "have \"uhnf(<\\<nu>y>a{y}.(<\\<nu>x>P'))\""], ["proof (prove)\nusing this:\n  a \\<noteq> y\n\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>y>a{y}.(<\\<nu>x>P'))", "by(force simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  uhnf (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "from validP PeqP'"], ["proof (chain)\npicking this:\n  valid P\n  P = a{y}.P'", "have \"valid(<\\<nu>y>a{y}.(<\\<nu>x>P'))\""], ["proof (prove)\nusing this:\n  valid P\n  P = a{y}.P'\n\ngoal (1 subgoal):\n 1. valid (<\\<nu>y>a{y}.(<\\<nu>x>P'))", "by simp"], ["proof (state)\nthis:\n  valid (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  valid (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"<\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "have \"<\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>x>a{y}.P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>x>a{y}.P'", "by(rule ResComm)"], ["proof (state)\nthis:\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>x>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>x>a{y}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "from xineqa xineqy"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<noteq> y", "have \"<\\<nu>y><\\<nu>x>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. <\\<nu>y><\\<nu>x>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "by(blast intro: ResOutput ResPres Trans)"], ["proof (state)\nthis:\n  <\\<nu>y><\\<nu>x>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>x>a{y}.P'\n  <\\<nu>y><\\<nu>x>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "show ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y><\\<nu>x>a{y}.P'\n  <\\<nu>y><\\<nu>x>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n\ngoal (1 subgoal):\n 1. <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "have \"depth(<\\<nu>y>a{y}.(<\\<nu>x>P')) \\<le> depth(<\\<nu>x><\\<nu>y>a{y}.P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (<\\<nu>y>a{y}.(<\\<nu>x>P')) \\<le> depth (<\\<nu>x><\\<nu>y>a{y}.P')", "by simp"], ["proof (state)\nthis:\n  depth (<\\<nu>y>a{y}.(<\\<nu>x>P')) \\<le> depth (<\\<nu>x><\\<nu>y>a{y}.P')\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n  valid (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n  depth (<\\<nu>y>a{y}.(<\\<nu>x>P')) \\<le> depth (<\\<nu>x><\\<nu>y>a{y}.P')", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n  valid (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n  depth (<\\<nu>y>a{y}.(<\\<nu>x>P')) \\<le> depth (<\\<nu>x><\\<nu>y>a{y}.P')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "using PeqP'"], ["proof (prove)\nusing this:\n  uhnf (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n  valid (<\\<nu>y>a{y}.(<\\<nu>x>P'))\n  <\\<nu>x><\\<nu>y>a{y}.P' \\<equiv>\\<^sub>e <\\<nu>y>a{y}.(<\\<nu>x>P')\n  depth (<\\<nu>y>a{y}.(<\\<nu>x>P')) \\<le> depth (<\\<nu>x><\\<nu>y>a{y}.P')\n  P = a{y}.P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x><\\<nu>y>P \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "case(Bang P x)"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf P; valid P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       uhnf P' \\<and>\n                       valid P' \\<and>\n                       <\\<nu>?b>P \\<equiv>\\<^sub>e P' \\<and>\n                       depth P' \\<le> depth (<\\<nu>?b>P)\n  uhnf (!P)\n  valid (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "have \"valid(!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (!P)", "by fact"], ["proof (state)\nthis:\n  valid (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "hence False"], ["proof (prove)\nusing this:\n  valid (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>uhnf pi; valid pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>P'.\n  uhnf P' \\<and>\n  valid P' \\<and>\n  <\\<nu>b>pi \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>b>pi);\n        uhnf (!pi); valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            <\\<nu>x>!pi \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (<\\<nu>x>!pi)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       <\\<nu>x>!P \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (<\\<nu>x>!P)", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     <\\<nu>x>!P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth (<\\<nu>x>!P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandHnf:\n  fixes P :: pi\n  and   S :: \"pi set\"\n\n  assumes \"(P, S) \\<in> sumComposeSet\"\n  and     \"\\<forall>P \\<in> S. uhnf P \\<and> valid P\"\n\n  shows \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P", "using assms"], ["proof (prove)\nusing this:\n  (P, S) \\<in> sumComposeSet\n  \\<forall>P\\<in>S. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P", "proof(induct rule: sumComposeSet.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "case empty"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{}. uhnf P \\<and> valid P\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "have \"\\<zero> \\<equiv>\\<^sub>e \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e \\<zero>", "by(rule Refl)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "have \"depth \\<zero> \\<le> depth \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth \\<zero>", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth \\<zero>\n\ngoal (2 subgoals):\n 1. \\<forall>P\\<in>{}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     \\<zero> \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth \\<zero>\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "case(insert Q S P)"], ["proof (state)\nthis:\n  Q \\<in> S\n  (P, S - {Q}) \\<in> sumComposeSet\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P\n  \\<forall>P\\<in>S. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "have Shnf: \"\\<forall>P \\<in> S. uhnf P \\<and> valid P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>S. uhnf P \\<and> valid P", "by fact"], ["proof (state)\nthis:\n  \\<forall>P\\<in>S. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "hence \"\\<forall>P \\<in> (S - {(Q)}). uhnf P \\<and> valid P\""], ["proof (prove)\nusing this:\n  \\<forall>P\\<in>S. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P", "by simp"], ["proof (state)\nthis:\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "have \"\\<forall>P \\<in> (S - {(Q)}). uhnf P \\<and> valid P \\<Longrightarrow> \\<exists>P'. uhnf P' \\<and> valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P", "by fact"], ["proof (state)\nthis:\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P", "obtain P' where P'hnf: \"uhnf P'\" and validP': \"valid P'\"\n                         and PeqP': \"P \\<equiv>\\<^sub>e P'\" and PP'depth: \"depth P' \\<le> depth P\""], ["proof (prove)\nusing this:\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P\n  \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>uhnf P'; valid P'; P \\<equiv>\\<^sub>e P';\n         depth P' \\<le> depth P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf P'\n  valid P'\n  P \\<equiv>\\<^sub>e P'\n  depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "have \"Q \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> S", "by fact"], ["proof (state)\nthis:\n  Q \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "with Shnf"], ["proof (chain)\npicking this:\n  \\<forall>P\\<in>S. uhnf P \\<and> valid P\n  Q \\<in> S", "have \"uhnf Q\" and \"valid Q\""], ["proof (prove)\nusing this:\n  \\<forall>P\\<in>S. uhnf P \\<and> valid P\n  Q \\<in> S\n\ngoal (1 subgoal):\n 1. uhnf Q &&& valid Q", "by simp+"], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "with P'hnf validP'"], ["proof (chain)\npicking this:\n  uhnf P'\n  valid P'\n  uhnf Q\n  valid Q", "obtain R where Rhnf: \"uhnf R\" and validR: \"valid R\"\n                                and P'QeqR: \"P' \\<oplus> Q \\<equiv>\\<^sub>e R\" and P'QRdepth: \"depth R \\<le> depth (P' \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  uhnf P'\n  valid P'\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q \\<equiv>\\<^sub>e R;\n         depth R \\<le> depth (P' \\<oplus> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest: uhnfSum)"], ["proof (state)\nthis:\n  uhnf R\n  valid R\n  P' \\<oplus> Q \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P' \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "from PeqP' P'QeqR"], ["proof (chain)\npicking this:\n  P \\<equiv>\\<^sub>e P'\n  P' \\<oplus> Q \\<equiv>\\<^sub>e R", "have \"P \\<oplus> Q \\<equiv>\\<^sub>e R\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e P'\n  P' \\<oplus> Q \\<equiv>\\<^sub>e R\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e R", "by(blast intro: SumPres Trans)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "from PP'depth P'QRdepth"], ["proof (chain)\npicking this:\n  depth P' \\<le> depth P\n  depth R \\<le> depth (P' \\<oplus> Q)", "have \"depth R \\<le> depth(P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  depth P' \\<le> depth P\n  depth R \\<le> depth (P' \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. depth R \\<le> depth (P \\<oplus> Q)", "by simp"], ["proof (state)\nthis:\n  depth R \\<le> depth (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<forall>P\\<in>S - {Q}. uhnf P \\<and> valid P \\<Longrightarrow>\n        \\<exists>P'.\n           uhnf P' \\<and>\n           valid P' \\<and>\n           P \\<equiv>\\<^sub>e P' \\<and> depth P' \\<le> depth P;\n        \\<forall>P\\<in>S. uhnf P \\<and> valid P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            uhnf P' \\<and>\n                            valid P' \\<and>\n                            P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n                            depth P' \\<le> depth (P \\<oplus> Q)", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P \\<oplus> Q)", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (P \\<oplus> Q)", "using Rhnf validR"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P \\<oplus> Q)\n  uhnf R\n  valid R\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n       depth P' \\<le> depth (P \\<oplus> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P \\<oplus> Q \\<equiv>\\<^sub>e P' \\<and>\n     depth P' \\<le> depth (P \\<oplus> Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hnfSummandsRemove:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<in> summands Q\"\n  and     \"uhnf Q\"\n\n  shows \"(summands Q) - {P' | P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} = (summands Q) - {P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summands Q -\n    {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} =\n    summands Q - {P}", "using assms"], ["proof (prove)\nusing this:\n  P \\<in> summands Q\n  uhnf Q\n\ngoal (1 subgoal):\n 1. summands Q -\n    {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} =\n    summands Q - {P}", "by(auto intro: Refl simp add: uhnf_def)"], ["", "lemma pullSummand:\n  fixes P  :: pi\n  and   Q  :: pi\n\n  assumes PsummQ: \"P \\<in> summands Q\"\n  and     Qhnf:   \"uhnf Q\"\n\n  shows \"\\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and> (summands Q') = ((summands Q)  - {x. \\<exists>P'. x = P' \\<and> P' \\<in> (summands Q) \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n       summands Q' =\n       summands Q -\n       {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n       summands Q' =\n       summands Q -\n       {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "have SumGoal: \"\\<And>P Q R. \\<lbrakk>P \\<in> summands Q; uhnf(Q \\<oplus> R);\n                           \\<And>P. \\<lbrakk>P \\<in> summands Q\\<rbrakk> \\<Longrightarrow> \\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and> \n                                   (summands Q') = ((summands Q) - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf Q';\n                           \\<And>P. \\<lbrakk>P \\<in> summands R\\<rbrakk> \\<Longrightarrow> \\<exists>R'. P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and> \n                                   (summands R') = ((summands R) - {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf R'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n             summands Q' = summands (pi.Sum Q R) - {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and> uhnf Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "fix P Q R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "assume IHR: \"\\<And>P. P \\<in> summands R \\<Longrightarrow> \\<exists>R'. P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and> \n                                         (summands R') = ((summands R) - {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf R'\""], ["proof (state)\nthis:\n  ?P \\<in> summands R \\<Longrightarrow>\n  \\<exists>R'.\n     ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n     summands R' =\n     summands R -\n     {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf R'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "assume PsummQ: \"P \\<in> summands Q\""], ["proof (state)\nthis:\n  P \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "assume \"\\<And>P. P \\<in> summands Q \\<Longrightarrow> \\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and> \n                                   (summands Q') = ((summands Q) - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf Q'\""], ["proof (state)\nthis:\n  ?P \\<in> summands Q \\<Longrightarrow>\n  \\<exists>Q'.\n     ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n     summands Q' =\n     summands Q -\n     {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<in> summands Q\n  ?P \\<in> summands Q \\<Longrightarrow>\n  \\<exists>Q'.\n     ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n     summands Q' =\n     summands Q -\n     {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf Q'", "obtain Q' where PQ'eqQ: \"P \\<oplus> Q' \\<equiv>\\<^sub>e Q\"\n                           and Q'summQ: \"(summands Q') = ((summands Q) - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P})\"\n                           and Q'hnf: \"uhnf Q'\""], ["proof (prove)\nusing this:\n  P \\<in> summands Q\n  ?P \\<in> summands Q \\<Longrightarrow>\n  \\<exists>Q'.\n     ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n     summands Q' =\n     summands Q -\n     {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>P \\<oplus> Q' \\<equiv>\\<^sub>e Q;\n         summands Q' =\n         summands Q -\n         {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P};\n         uhnf Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "assume QRhnf: \"uhnf(Q \\<oplus> R)\""], ["proof (state)\nthis:\n  uhnf (Q \\<oplus> R)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       \\<lbrakk>P \\<in> summands Q; uhnf (Q \\<oplus> R);\n        \\<And>P.\n           P \\<in> summands Q \\<Longrightarrow>\n           \\<exists>Q'.\n              P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n              summands Q' =\n              summands Q -\n              {P' |P'.\n               P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf Q';\n        \\<And>P.\n           P \\<in> summands R \\<Longrightarrow>\n           \\<exists>R'.\n              P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n              summands R' =\n              summands R -\n              {P' |P'.\n               P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n              uhnf R'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            Q \\<oplus> R \\<and>\n                            summands Q' =\n                            summands (Q \\<oplus> R) -\n                            {P' |P'.\n                             P' \\<in> summands (Q \\<oplus> R) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "show \"\\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n             summands Q' = summands (pi.Sum Q R) - {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and> uhnf Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "proof(cases \"\\<exists>P' \\<in> summands R. P' \\<equiv>\\<^sub>e P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume \"\\<exists>P' \\<in> summands R. P' \\<equiv>\\<^sub>e P\""], ["proof (state)\nthis:\n  \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P\n\ngoal (2 subgoals):\n 1. \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P", "obtain P' where P'summR: \"P' \\<in> summands R\" and P'eqP: \"P' \\<equiv>\\<^sub>e P\""], ["proof (prove)\nusing this:\n  \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P' \\<in> summands R; P' \\<equiv>\\<^sub>e P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P' \\<in> summands R\n  P' \\<equiv>\\<^sub>e P\n\ngoal (2 subgoals):\n 1. \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "with IHR"], ["proof (chain)\npicking this:\n  ?P \\<in> summands R \\<Longrightarrow>\n  \\<exists>R'.\n     ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n     summands R' =\n     summands R -\n     {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf R'\n  P' \\<in> summands R\n  P' \\<equiv>\\<^sub>e P", "obtain R' where PR'eqR: \"P' \\<oplus> R' \\<equiv>\\<^sub>e R\"\n        and R'summR: \"(summands R') = ((summands R) - {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'})\"\n        and R'hnf: \"uhnf R'\""], ["proof (prove)\nusing this:\n  ?P \\<in> summands R \\<Longrightarrow>\n  \\<exists>R'.\n     ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n     summands R' =\n     summands R -\n     {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf R'\n  P' \\<in> summands R\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>P' \\<oplus> R' \\<equiv>\\<^sub>e R;\n         summands R' =\n         summands R -\n         {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'};\n         uhnf R'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P' \\<oplus> R' \\<equiv>\\<^sub>e R\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  uhnf R'\n\ngoal (2 subgoals):\n 1. \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "have L1: \"P \\<oplus> (Q' \\<oplus> R') \\<equiv>\\<^sub>e Q \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "from P'eqP"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e P", "have \"P \\<oplus> (Q' \\<oplus> R') \\<equiv>\\<^sub>e (P \\<oplus> P') \\<oplus> (Q' \\<oplus> R')\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n    (P \\<oplus> P') \\<oplus> Q' \\<oplus> R'", "by(blast intro: SumIdemp' SumPres Sym)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"(P \\<oplus> P') \\<oplus> (Q' \\<oplus> R') \\<equiv>\\<^sub>e P \\<oplus> (P' \\<oplus> (Q' \\<oplus> R'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<oplus> P') \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n    P \\<oplus> P' \\<oplus> Q' \\<oplus> R'", "by(rule SumAssoc)"], ["proof (state)\nthis:\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "moreover"], ["proof (state)\nthis:\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"P \\<oplus> (P' \\<oplus> (Q' \\<oplus> R')) \\<equiv>\\<^sub>e P \\<oplus> (P' \\<oplus> (R' \\<oplus> Q'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n    P \\<oplus> P' \\<oplus> R' \\<oplus> Q'", "by(blast intro: Refl SumPres' SumSym)"], ["proof (state)\nthis:\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"P \\<oplus> (P' \\<oplus> (R' \\<oplus> Q')) \\<equiv>\\<^sub>e P \\<oplus> (P' \\<oplus> R') \\<oplus> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> P' \\<oplus> R' \\<oplus> Q' \\<equiv>\\<^sub>e\n    P \\<oplus> (P' \\<oplus> R') \\<oplus> Q'", "by(blast intro: Refl SumPres' Sym SumAssoc)"], ["proof (state)\nthis:\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q' \\<equiv>\\<^sub>e\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q' \\<equiv>\\<^sub>e\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e (P \\<oplus> Q') \\<oplus> (P' \\<oplus> R')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n    (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n    (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'", "have \"P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> (P' \\<oplus> R')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n    P \\<oplus> Q' \\<oplus> P' \\<oplus> R'", "by(blast intro: Refl SumPres' SumSym)"], ["proof (state)\nthis:\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n  P \\<oplus> Q' \\<oplus> P' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n    (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'", "thus ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n  P \\<oplus> Q' \\<oplus> P' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n    (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'", "by(blast intro: Sym SumAssoc Trans)"], ["proof (state)\nthis:\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "from PQ'eqQ PR'eqR"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q\n  P' \\<oplus> R' \\<equiv>\\<^sub>e R", "have \"(P \\<oplus> Q') \\<oplus> (P' \\<oplus> R') \\<equiv>\\<^sub>e Q \\<oplus> R\""], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q\n  P' \\<oplus> R' \\<equiv>\\<^sub>e R\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q') \\<oplus> P' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "by(rule SumPres')"], ["proof (state)\nthis:\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R'\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R'\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q'\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q' \\<equiv>\\<^sub>e\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q'\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R'\n  (P \\<oplus> P') \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R'\n  P \\<oplus> P' \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q'\n  P \\<oplus> P' \\<oplus> R' \\<oplus> Q' \\<equiv>\\<^sub>e\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q'\n  P \\<oplus> (P' \\<oplus> R') \\<oplus> Q' \\<equiv>\\<^sub>e\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R'\n  (P \\<oplus> Q') \\<oplus> P' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "by(blast intro!: Trans)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (2 subgoals):\n 1. \\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "proof(cases \"Q' = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume Q'eqNil: \"Q' = \\<zero>\""], ["proof (state)\nthis:\n  Q' = \\<zero>\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "have \"P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"P \\<oplus> R' \\<equiv>\\<^sub>e P \\<oplus> (R' \\<oplus> \\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e P \\<oplus> R' \\<oplus> \\<zero>", "by(blast intro: SumZero Refl Trans SumPres' Sym)"], ["proof (state)\nthis:\n  P \\<oplus> R' \\<equiv>\\<^sub>e P \\<oplus> R' \\<oplus> \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> R' \\<equiv>\\<^sub>e P \\<oplus> R' \\<oplus> \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"P \\<oplus> (R' \\<oplus> \\<zero>) \\<equiv>\\<^sub>e P \\<oplus> (\\<zero> \\<oplus> R')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<oplus> \\<zero> \\<equiv>\\<^sub>e\n    P \\<oplus> \\<zero> \\<oplus> R'", "by(blast intro: SumSym Trans SumPres' Refl)"], ["proof (state)\nthis:\n  P \\<oplus> R' \\<oplus> \\<zero> \\<equiv>\\<^sub>e\n  P \\<oplus> \\<zero> \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> R' \\<equiv>\\<^sub>e P \\<oplus> R' \\<oplus> \\<zero>\n  P \\<oplus> R' \\<oplus> \\<zero> \\<equiv>\\<^sub>e\n  P \\<oplus> \\<zero> \\<oplus> R'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> R' \\<equiv>\\<^sub>e P \\<oplus> R' \\<oplus> \\<zero>\n  P \\<oplus> R' \\<oplus> \\<zero> \\<equiv>\\<^sub>e\n  P \\<oplus> \\<zero> \\<oplus> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "using L1 Q'eqNil"], ["proof (prove)\nusing this:\n  P \\<oplus> R' \\<equiv>\\<^sub>e P \\<oplus> R' \\<oplus> \\<zero>\n  P \\<oplus> R' \\<oplus> \\<zero> \\<equiv>\\<^sub>e\n  P \\<oplus> \\<zero> \\<oplus> R'\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n  Q' = \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from R'summR Q'summQ P'eqP Q'eqNil"], ["proof (chain)\npicking this:\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  P' \\<equiv>\\<^sub>e P\n  Q' = \\<zero>", "have \"summands (R') = (summands (Q \\<oplus> R) - {P' |P'. P' \\<in> summands(Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P})\""], ["proof (prove)\nusing this:\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  P' \\<equiv>\\<^sub>e P\n  Q' = \\<zero>\n\ngoal (1 subgoal):\n 1. summands R' =\n    summands (Q \\<oplus> R) -\n    {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}", "by(auto intro: Sym Trans)"], ["proof (state)\nthis:\n  summands R' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands R' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands R' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "using R'hnf"], ["proof (prove)\nusing this:\n  P \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands R' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf R'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume Q'ineqNil: \"Q' \\<noteq> \\<zero>\""], ["proof (state)\nthis:\n  Q' \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "proof(case_tac \"R' = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. R' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume R'eqNil: \"R' = \\<zero>\""], ["proof (state)\nthis:\n  R' = \\<zero>\n\ngoal (2 subgoals):\n 1. R' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "have \"P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"P \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> (Q' \\<oplus> \\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> \\<zero>", "by(blast intro: SumZero Refl Trans SumPres' Sym)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R", "with L1 R'eqNil"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n  R' = \\<zero>\n  P \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> \\<zero>", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n  R' = \\<zero>\n  P \\<oplus> Q' \\<equiv>\\<^sub>e P \\<oplus> Q' \\<oplus> \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (2 subgoals):\n 1. R' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (2 subgoals):\n 1. R' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from R'summR Q'summQ P'eqP R'eqNil"], ["proof (chain)\npicking this:\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  P' \\<equiv>\\<^sub>e P\n  R' = \\<zero>", "have \"summands (Q') = (summands (Q \\<oplus> R) - {P' |P'. P' \\<in> summands(Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P})\""], ["proof (prove)\nusing this:\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  P' \\<equiv>\\<^sub>e P\n  R' = \\<zero>\n\ngoal (1 subgoal):\n 1. summands Q' =\n    summands (Q \\<oplus> R) -\n    {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}", "by(auto intro: Sym Trans)"], ["proof (state)\nthis:\n  summands Q' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (2 subgoals):\n 1. R' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands Q' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands Q' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "using Q'hnf"], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands Q' =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume R'ineqNil: \"R' \\<noteq> \\<zero>\""], ["proof (state)\nthis:\n  R' \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from R'summR Q'summQ P'eqP"], ["proof (chain)\npicking this:\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  P' \\<equiv>\\<^sub>e P", "have \"summands (Q' \\<oplus> R') = (summands (Q \\<oplus> R) - {P' |P'. P' \\<in> summands(Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P})\""], ["proof (prove)\nusing this:\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. summands (Q' \\<oplus> R') =\n    summands (Q \\<oplus> R) -\n    {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}", "by(auto intro: Sym Trans)"], ["proof (state)\nthis:\n  summands (Q' \\<oplus> R') =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (1 subgoal):\n 1. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  summands (Q' \\<oplus> R') =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (1 subgoal):\n 1. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from QRhnf Q'hnf R'hnf R'summR Q'summQ Q'ineqNil R'ineqNil"], ["proof (chain)\npicking this:\n  uhnf (Q \\<oplus> R)\n  uhnf Q'\n  uhnf R'\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  Q' \\<noteq> \\<zero>\n  R' \\<noteq> \\<zero>", "have \"uhnf(Q' \\<oplus> R')\""], ["proof (prove)\nusing this:\n  uhnf (Q \\<oplus> R)\n  uhnf Q'\n  uhnf R'\n  summands R' =\n  summands R -\n  {P'' |P''. P'' \\<in> summands R \\<and> P'' \\<equiv>\\<^sub>e P'}\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  Q' \\<noteq> \\<zero>\n  R' \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. uhnf (Q' \\<oplus> R')", "by(auto simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (Q' \\<oplus> R')\n\ngoal (1 subgoal):\n 1. R' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  summands (Q' \\<oplus> R') =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf (Q' \\<oplus> R')", "show ?thesis"], ["proof (prove)\nusing this:\n  summands (Q' \\<oplus> R') =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf (Q' \\<oplus> R')\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "using L1"], ["proof (prove)\nusing this:\n  summands (Q' \\<oplus> R') =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf (Q' \\<oplus> R')\n  P \\<oplus> Q' \\<oplus> R' \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume \"\\<not>(\\<exists>P' \\<in> summands R. P' \\<equiv>\\<^sub>e P)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "hence Case: \"\\<forall>P' \\<in> summands R. \\<not>(P' \\<equiv>\\<^sub>e P)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>P'\\<in>summands R. P' \\<equiv>\\<^sub>e P)\n\ngoal (1 subgoal):\n 1. \\<forall>P'\\<in>summands R. \\<not> P' \\<equiv>\\<^sub>e P", "by simp"], ["proof (state)\nthis:\n  \\<forall>P'\\<in>summands R. \\<not> P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>P'\\<in>summands R.\n               P' \\<equiv>\\<^sub>e P) \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "proof(case_tac \"Q' = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume Q'eqNil: \"Q' = \\<zero>\""], ["proof (state)\nthis:\n  Q' = \\<zero>\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "have \"P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "have \"P \\<oplus> R \\<equiv>\\<^sub>e (P \\<oplus> \\<zero>) \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e (P \\<oplus> \\<zero>) \\<oplus> R", "by(blast intro: SumZero Sym Trans SumPres)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<equiv>\\<^sub>e (P \\<oplus> \\<zero>) \\<oplus> R\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> R \\<equiv>\\<^sub>e (P \\<oplus> \\<zero>) \\<oplus> R\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "from  PQ'eqQ"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q", "have \"P \\<oplus> (Q' \\<oplus> R) \\<equiv>\\<^sub>e Q \\<oplus> R\""], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "by(blast intro: SumAssoc Trans Sym SumPres)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> R \\<equiv>\\<^sub>e (P \\<oplus> \\<zero>) \\<oplus> R\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> R \\<equiv>\\<^sub>e (P \\<oplus> \\<zero>) \\<oplus> R\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "using Q'eqNil"], ["proof (prove)\nusing this:\n  P \\<oplus> R \\<equiv>\\<^sub>e (P \\<oplus> \\<zero>) \\<oplus> R\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n  Q' = \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "by(blast intro: SumAssoc Trans)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from Q'summQ Q'eqNil Case"], ["proof (chain)\npicking this:\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  Q' = \\<zero>\n  \\<forall>P'\\<in>summands R. \\<not> P' \\<equiv>\\<^sub>e P", "have \"summands (R) = (summands (Q \\<oplus> R) - {P' |P'. P' \\<in> summands(Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P})\""], ["proof (prove)\nusing this:\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  Q' = \\<zero>\n  \\<forall>P'\\<in>summands R. \\<not> P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. summands R =\n    summands (Q \\<oplus> R) -\n    {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}", "by auto"], ["proof (state)\nthis:\n  summands R =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  summands R =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from QRhnf"], ["proof (chain)\npicking this:\n  uhnf (Q \\<oplus> R)", "have \"uhnf R\""], ["proof (prove)\nusing this:\n  uhnf (Q \\<oplus> R)\n\ngoal (1 subgoal):\n 1. uhnf R", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf R\n\ngoal (2 subgoals):\n 1. Q' = \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands R =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf R", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands R =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf R\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume Q'ineqNil: \"Q' \\<noteq> \\<zero>\""], ["proof (state)\nthis:\n  Q' \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from PQ'eqQ"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q", "have \"P \\<oplus> (Q' \\<oplus> R) \\<equiv>\\<^sub>e Q \\<oplus> R\""], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R", "by(blast intro: SumAssoc Trans Sym SumPres)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from Q'summQ Case"], ["proof (chain)\npicking this:\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  \\<forall>P'\\<in>summands R. \\<not> P' \\<equiv>\\<^sub>e P", "have \"summands (Q' \\<oplus> R) = (summands (Q \\<oplus> R) - {P' |P'. P' \\<in> summands(Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P})\""], ["proof (prove)\nusing this:\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  \\<forall>P'\\<in>summands R. \\<not> P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. summands (Q' \\<oplus> R) =\n    summands (Q \\<oplus> R) -\n    {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}", "by auto"], ["proof (state)\nthis:\n  summands (Q' \\<oplus> R) =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  summands (Q' \\<oplus> R) =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from QRhnf Q'hnf Q'summQ Q'ineqNil"], ["proof (chain)\npicking this:\n  uhnf (Q \\<oplus> R)\n  uhnf Q'\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  Q' \\<noteq> \\<zero>", "have \"uhnf (Q' \\<oplus> R)\""], ["proof (prove)\nusing this:\n  uhnf (Q \\<oplus> R)\n  uhnf Q'\n  summands Q' =\n  summands Q - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}\n  Q' \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. uhnf (Q' \\<oplus> R)", "by(auto simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (Q' \\<oplus> R)\n\ngoal (1 subgoal):\n 1. Q' \\<noteq> \\<zero> \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands (Q' \\<oplus> R) =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf (Q' \\<oplus> R)", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> Q' \\<oplus> R \\<equiv>\\<^sub>e Q \\<oplus> R\n  summands (Q' \\<oplus> R) =\n  summands (Q \\<oplus> R) -\n  {P' |P'. P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf (Q' \\<oplus> R)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands ?Q; uhnf (?Q \\<oplus> ?R);\n   \\<And>P.\n      P \\<in> summands ?Q \\<Longrightarrow>\n      \\<exists>Q'.\n         P \\<oplus> Q' \\<equiv>\\<^sub>e ?Q \\<and>\n         summands Q' =\n         summands ?Q -\n         {P' |P'. P' \\<in> summands ?Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n         uhnf Q';\n   \\<And>P.\n      P \\<in> summands ?R \\<Longrightarrow>\n      \\<exists>R'.\n         P \\<oplus> R' \\<equiv>\\<^sub>e ?R \\<and>\n         summands R' =\n         summands ?R -\n         {P' |P'. P' \\<in> summands ?R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n         uhnf R'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e ?Q \\<oplus> ?R \\<and>\n                       summands Q' =\n                       summands (?Q \\<oplus> ?R) -\n                       {P' |P'.\n                        P' \\<in> summands (?Q \\<oplus> ?R) \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n       summands Q' =\n       summands Q -\n       {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from assms"], ["proof (chain)\npicking this:\n  P \\<in> summands Q\n  uhnf Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<in> summands Q\n  uhnf Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n       summands Q' =\n       summands Q -\n       {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "proof(nominal_induct Q arbitrary: P rule: pi.strong_inducts)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>P \\<in> summands \\<zero>; uhnf \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero> \\<and>\n                            summands Q' =\n                            summands \\<zero> -\n                            {P' |P'.\n                             P' \\<in> summands \\<zero> \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>P.\n                    \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>Q'.\n   P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n   summands Q' =\n   summands pi -\n   {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n   uhnf Q';\n         P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q'.\n                             P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                             summands Q' =\n                             summands (!pi) -\n                             {P' |P'.\n                              P' \\<in> summands (!pi) \\<and>\n                              P' \\<equiv>\\<^sub>e P} \\<and>\n                             uhnf Q'", "case PiNil"], ["proof (state)\nthis:\n  P \\<in> summands \\<zero>\n  uhnf \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>P \\<in> summands \\<zero>; uhnf \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero> \\<and>\n                            summands Q' =\n                            summands \\<zero> -\n                            {P' |P'.\n                             P' \\<in> summands \\<zero> \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>P.\n                    \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>Q'.\n   P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n   summands Q' =\n   summands pi -\n   {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n   uhnf Q';\n         P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q'.\n                             P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                             summands Q' =\n                             summands (!pi) -\n                             {P' |P'.\n                              P' \\<in> summands (!pi) \\<and>\n                              P' \\<equiv>\\<^sub>e P} \\<and>\n                             uhnf Q'", "have \"P \\<in> summands \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands \\<zero>", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>P \\<in> summands \\<zero>; uhnf \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero> \\<and>\n                            summands Q' =\n                            summands \\<zero> -\n                            {P' |P'.\n                             P' \\<in> summands \\<zero> \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>P.\n                    \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>Q'.\n   P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n   summands Q' =\n   summands pi -\n   {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n   uhnf Q';\n         P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q'.\n                             P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                             summands Q' =\n                             summands (!pi) -\n                             {P' |P'.\n                              P' \\<in> summands (!pi) \\<and>\n                              P' \\<equiv>\\<^sub>e P} \\<and>\n                             uhnf Q'", "hence False"], ["proof (prove)\nusing this:\n  P \\<in> summands \\<zero>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>P \\<in> summands \\<zero>; uhnf \\<zero>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero> \\<and>\n                            summands Q' =\n                            summands \\<zero> -\n                            {P' |P'.\n                             P' \\<in> summands \\<zero> \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>P.\n                    \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>Q'.\n   P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n   summands Q' =\n   summands pi -\n   {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n   uhnf Q';\n         P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q'.\n                             P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                             summands Q' =\n                             summands (!pi) -\n                             {P' |P'.\n                              P' \\<in> summands (!pi) \\<and>\n                              P' \\<equiv>\\<^sub>e P} \\<and>\n                             uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero> \\<and>\n       summands Q' =\n       summands \\<zero> -\n       {P' |P'.\n        P' \\<in> summands \\<zero> \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e \\<zero> \\<and>\n     summands Q' =\n     summands \\<zero> -\n     {P' |P'. P' \\<in> summands \\<zero> \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Output a b Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands (a{b}.Q)\n  uhnf (a{b}.Q)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands (a{b}.Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands (a{b}.Q)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands (a{b}.Q)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence PeqQ: \"P = a{b}.Q\""], ["proof (prove)\nusing this:\n  P \\<in> summands (a{b}.Q)\n\ngoal (1 subgoal):\n 1. P = a{b}.Q", "by simp"], ["proof (state)\nthis:\n  P = a{b}.Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "by(rule SumZero)"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q", "with PeqQ"], ["proof (chain)\npicking this:\n  P = a{b}.Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "show ?thesis"], ["proof (prove)\nusing this:\n  P = a{b}.Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q", "by simp"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"(summands \\<zero>) = (summands (a{b}.Q)) - {P' | P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a{b}.Q) -\n    {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a{b}.Q) -\n    {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "have \"a{b}.Q \\<equiv>\\<^sub>e a{b}.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.Q \\<equiv>\\<^sub>e a{b}.Q", "by(rule Refl)"], ["proof (state)\nthis:\n  a{b}.Q \\<equiv>\\<^sub>e a{b}.Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a{b}.Q) -\n    {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "with PeqQ"], ["proof (chain)\npicking this:\n  P = a{b}.Q\n  a{b}.Q \\<equiv>\\<^sub>e a{b}.Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P = a{b}.Q\n  a{b}.Q \\<equiv>\\<^sub>e a{b}.Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a{b}.Q) -\n    {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "by simp"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (a{b}.Q) -\n  {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (a{b}.Q) -\n  {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (a{b}.Q) -\n  {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (name1{name2}.pi); uhnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1{name2}.pi \\<and>\n                            summands Q' =\n                            summands (name1{name2}.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1{name2}.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q\n  summands \\<zero> =\n  summands (a{b}.Q) -\n  {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a{b}.Q\n  summands \\<zero> =\n  summands (a{b}.Q) -\n  {P' |P'. P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.Q \\<and>\n       summands Q' =\n       summands (a{b}.Q) -\n       {P' |P'.\n        P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e a{b}.Q \\<and>\n     summands Q' =\n     summands (a{b}.Q) -\n     {P' |P'.\n      P' \\<in> summands (a{b}.Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Tau Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands (\\<tau>.Q)\n  uhnf (\\<tau>.Q)\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands (\\<tau>.(Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands (\\<tau>.Q)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands (\\<tau>.Q)\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence PeqQ: \"P = \\<tau>.(Q)\""], ["proof (prove)\nusing this:\n  P \\<in> summands (\\<tau>.Q)\n\ngoal (1 subgoal):\n 1. P = \\<tau>.Q", "by simp"], ["proof (state)\nthis:\n  P = \\<tau>.Q\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.(Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "by(rule SumZero)"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q", "with PeqQ"], ["proof (chain)\npicking this:\n  P = \\<tau>.Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "show ?thesis"], ["proof (prove)\nusing this:\n  P = \\<tau>.Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q", "by simp"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"(summands \\<zero>) = (summands (\\<tau>.(Q))) - {P' | P'. P' \\<in> summands (\\<tau>.(Q)) \\<and> P' \\<equiv>\\<^sub>e P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (\\<tau>.Q) -\n    {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (\\<tau>.Q) -\n    {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "have \"\\<tau>.(Q) \\<equiv>\\<^sub>e \\<tau>.(Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.Q \\<equiv>\\<^sub>e \\<tau>.Q", "by(rule Refl)"], ["proof (state)\nthis:\n  \\<tau>.Q \\<equiv>\\<^sub>e \\<tau>.Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (\\<tau>.Q) -\n    {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "with PeqQ"], ["proof (chain)\npicking this:\n  P = \\<tau>.Q\n  \\<tau>.Q \\<equiv>\\<^sub>e \\<tau>.Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P = \\<tau>.Q\n  \\<tau>.Q \\<equiv>\\<^sub>e \\<tau>.Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (\\<tau>.Q) -\n    {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "by simp"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (\\<tau>.Q) -\n  {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (\\<tau>.Q) -\n  {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (\\<tau>.Q) -\n  {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (\\<tau>.pi); uhnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            summands Q' =\n                            summands (\\<tau>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (\\<tau>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q\n  summands \\<zero> =\n  summands (\\<tau>.Q) -\n  {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e \\<tau>.Q\n  summands \\<zero> =\n  summands (\\<tau>.Q) -\n  {P' |P'. P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.Q \\<and>\n       summands Q' =\n       summands (\\<tau>.Q) -\n       {P' |P'.\n        P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e \\<tau>.Q \\<and>\n     summands Q' =\n     summands (\\<tau>.Q) -\n     {P' |P'.\n      P' \\<in> summands (\\<tau>.Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Input a x Q)"], ["proof (state)\nthis:\n  x \\<sharp> a\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands (a<x>.Q)\n  uhnf (a<x>.Q)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands (a<x>.Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands (a<x>.Q)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands (a<x>.Q)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence PeqQ: \"P = a<x>.Q\""], ["proof (prove)\nusing this:\n  P \\<in> summands (a<x>.Q)\n\ngoal (1 subgoal):\n 1. P = a<x>.Q", "by simp"], ["proof (state)\nthis:\n  P = a<x>.Q\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "by(rule SumZero)"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q", "with PeqQ"], ["proof (chain)\npicking this:\n  P = a<x>.Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "show ?thesis"], ["proof (prove)\nusing this:\n  P = a<x>.Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q", "by simp"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"(summands \\<zero>) = (summands (a<x>.Q)) - {P' | P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a<x>.Q) -\n    {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a<x>.Q) -\n    {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "have \"a<x>.Q \\<equiv>\\<^sub>e a<x>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.Q \\<equiv>\\<^sub>e a<x>.Q", "by(rule Refl)"], ["proof (state)\nthis:\n  a<x>.Q \\<equiv>\\<^sub>e a<x>.Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a<x>.Q) -\n    {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "with PeqQ"], ["proof (chain)\npicking this:\n  P = a<x>.Q\n  a<x>.Q \\<equiv>\\<^sub>e a<x>.Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P = a<x>.Q\n  a<x>.Q \\<equiv>\\<^sub>e a<x>.Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (a<x>.Q) -\n    {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}", "by simp"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (a<x>.Q) -\n  {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (a<x>.Q) -\n  {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (a<x>.Q) -\n  {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> name1;\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n                                summands Q' =\n                                summands pi -\n                                {P' |P'.\n                                 P' \\<in> summands pi \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (name1<name2>.pi); uhnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            name1<name2>.pi \\<and>\n                            summands Q' =\n                            summands (name1<name2>.pi) -\n                            {P' |P'.\n                             P' \\<in> summands (name1<name2>.pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q\n  summands \\<zero> =\n  summands (a<x>.Q) -\n  {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e a<x>.Q\n  summands \\<zero> =\n  summands (a<x>.Q) -\n  {P' |P'. P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.Q \\<and>\n       summands Q' =\n       summands (a<x>.Q) -\n       {P' |P'.\n        P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e a<x>.Q \\<and>\n     summands Q' =\n     summands (a<x>.Q) -\n     {P' |P'.\n      P' \\<in> summands (a<x>.Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Match a b Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands ([a\\<frown>b]Q)\n  uhnf ([a\\<frown>b]Q)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands ([a\\<frown>b]Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands ([a\\<frown>b]Q)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands ([a\\<frown>b]Q)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence False"], ["proof (prove)\nusing this:\n  P \\<in> summands ([a\\<frown>b]Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<frown>name2]pi);\n        uhnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<frown>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<frown>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<frown>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<frown>b]Q \\<and>\n       summands Q' =\n       summands ([a\\<frown>b]Q) -\n       {P' |P'.\n        P' \\<in> summands ([a\\<frown>b]Q) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<frown>b]Q \\<and>\n     summands Q' =\n     summands ([a\\<frown>b]Q) -\n     {P' |P'.\n      P' \\<in> summands ([a\\<frown>b]Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Mismatch a b Q)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands ([a\\<noteq>b]Q)\n  uhnf ([a\\<noteq>b]Q)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands ([a\\<noteq>b]Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands ([a\\<noteq>b]Q)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands ([a\\<noteq>b]Q)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence False"], ["proof (prove)\nusing this:\n  P \\<in> summands ([a\\<noteq>b]Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands ([name1\\<noteq>name2]pi);\n        uhnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            [name1\\<noteq>name2]pi \\<and>\n                            summands Q' =\n                            summands ([name1\\<noteq>name2]pi) -\n                            {P' |P'.\n                             P' \\<in> summands\n ([name1\\<noteq>name2]pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<noteq>b]Q \\<and>\n       summands Q' =\n       summands ([a\\<noteq>b]Q) -\n       {P' |P'.\n        P' \\<in> summands ([a\\<noteq>b]Q) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e [a\\<noteq>b]Q \\<and>\n     summands Q' =\n     summands ([a\\<noteq>b]Q) -\n     {P' |P'.\n      P' \\<in> summands ([a\\<noteq>b]Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Sum Q R)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  \\<lbrakk>?P \\<in> summands R; uhnf R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e R \\<and>\n                       summands Q' =\n                       summands R -\n                       {P' |P'.\n                        P' \\<in> summands R \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands (Q \\<oplus> R)\n  uhnf (Q \\<oplus> R)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have QRhnf: \"uhnf (Q \\<oplus> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (Q \\<oplus> R)", "by fact"], ["proof (state)\nthis:\n  uhnf (Q \\<oplus> R)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence Qhnf: \"uhnf Q\" and Rhnf: \"uhnf R\""], ["proof (prove)\nusing this:\n  uhnf (Q \\<oplus> R)\n\ngoal (1 subgoal):\n 1. uhnf Q &&& uhnf R", "by(simp add: uhnf_def)+"], ["proof (state)\nthis:\n  uhnf Q\n  uhnf R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"\\<And>P. \\<lbrakk>P \\<in> summands Q; uhnf Q\\<rbrakk> \\<Longrightarrow> \\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and> \n                                          (summands Q') = ((summands Q) - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       \\<lbrakk>P \\<in> summands Q; uhnf Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                            summands Q' =\n                            summands Q -\n                            {P' |P'.\n                             P' \\<in> summands Q \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "with Qhnf"], ["proof (chain)\npicking this:\n  uhnf Q\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'", "have IHQ: \"\\<And>P. P \\<in> summands Q \\<Longrightarrow> \\<exists>Q'. P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and> \n                                  (summands Q') = ((summands Q) - {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf Q'\""], ["proof (prove)\nusing this:\n  uhnf Q\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> summands Q \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n          summands Q' =\n          summands Q -\n          {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n          uhnf Q'", "by simp"], ["proof (state)\nthis:\n  ?P \\<in> summands Q \\<Longrightarrow>\n  \\<exists>Q'.\n     ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n     summands Q' =\n     summands Q -\n     {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf Q'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"\\<And>P. \\<lbrakk>P \\<in> summands R; uhnf R\\<rbrakk> \\<Longrightarrow> \\<exists>R'. P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and> \n                                          (summands R') = ((summands R) - {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       \\<lbrakk>P \\<in> summands R; uhnf R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R'.\n                            P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n                            summands R' =\n                            summands R -\n                            {P' |P'.\n                             P' \\<in> summands R \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf R'", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands R; uhnf R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R'.\n                       ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n                       summands R' =\n                       summands R -\n                       {P' |P'.\n                        P' \\<in> summands R \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf R'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "with Rhnf"], ["proof (chain)\npicking this:\n  uhnf R\n  \\<lbrakk>?P \\<in> summands R; uhnf R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R'.\n                       ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n                       summands R' =\n                       summands R -\n                       {P' |P'.\n                        P' \\<in> summands R \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf R'", "have IHR: \"\\<And>P. P \\<in> summands R \\<Longrightarrow> \\<exists>R'. P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and> \n                                  (summands R') = ((summands R) - {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P}) \\<and> uhnf R'\""], ["proof (prove)\nusing this:\n  uhnf R\n  \\<lbrakk>?P \\<in> summands R; uhnf R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>R'.\n                       ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n                       summands R' =\n                       summands R -\n                       {P' |P'.\n                        P' \\<in> summands R \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf R'\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> summands R \\<Longrightarrow>\n       \\<exists>R'.\n          P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n          summands R' =\n          summands R -\n          {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n          uhnf R'", "by simp"], ["proof (state)\nthis:\n  ?P \\<in> summands R \\<Longrightarrow>\n  \\<exists>R'.\n     ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n     summands R' =\n     summands R -\n     {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf R'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands (Q \\<oplus> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands (Q \\<oplus> R)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands (Q \\<oplus> R)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence \"P \\<in> summands Q \\<or> P \\<in> summands R\""], ["proof (prove)\nusing this:\n  P \\<in> summands (Q \\<oplus> R)\n\ngoal (1 subgoal):\n 1. P \\<in> summands Q \\<or> P \\<in> summands R", "by simp"], ["proof (state)\nthis:\n  P \\<in> summands Q \\<or> P \\<in> summands R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<oplus> pi2);\n        uhnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<oplus> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<oplus> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<oplus> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<in> summands Q \\<or> P \\<in> summands R\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<in> summands Q \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume \"P \\<in> summands Q\""], ["proof (state)\nthis:\n  P \\<in> summands Q\n\ngoal (2 subgoals):\n 1. P \\<in> summands Q \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'\n 2. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "using QRhnf IHQ IHR"], ["proof (prove)\nusing this:\n  P \\<in> summands Q\n  uhnf (Q \\<oplus> R)\n  ?P \\<in> summands Q \\<Longrightarrow>\n  \\<exists>Q'.\n     ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n     summands Q' =\n     summands Q -\n     {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf Q'\n  ?P \\<in> summands R \\<Longrightarrow>\n  \\<exists>R'.\n     ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n     summands R' =\n     summands R -\n     {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf R'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by(rule SumGoal)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "assume \"P \\<in> summands R\""], ["proof (state)\nthis:\n  P \\<in> summands R\n\ngoal (1 subgoal):\n 1. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<in> summands R\n\ngoal (1 subgoal):\n 1. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "from QRhnf"], ["proof (chain)\npicking this:\n  uhnf (Q \\<oplus> R)", "have \"uhnf (R \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  uhnf (Q \\<oplus> R)\n\ngoal (1 subgoal):\n 1. uhnf (R \\<oplus> Q)", "by(auto simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (R \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<in> summands R\n  uhnf (R \\<oplus> Q)", "have \"\\<exists>Q'. (pi.Sum P Q') \\<equiv>\\<^sub>e (pi.Sum R Q) \\<and>\n         summands Q' = summands (pi.Sum R Q) - {P' |P'. P' \\<in> summands (pi.Sum R Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and> uhnf Q'\""], ["proof (prove)\nusing this:\n  P \\<in> summands R\n  uhnf (R \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e R \\<oplus> Q \\<and>\n       summands Q' =\n       summands (R \\<oplus> Q) -\n       {P' |P'.\n        P' \\<in> summands (R \\<oplus> Q) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "using IHR IHQ"], ["proof (prove)\nusing this:\n  P \\<in> summands R\n  uhnf (R \\<oplus> Q)\n  ?P \\<in> summands R \\<Longrightarrow>\n  \\<exists>R'.\n     ?P \\<oplus> R' \\<equiv>\\<^sub>e R \\<and>\n     summands R' =\n     summands R -\n     {P' |P'. P' \\<in> summands R \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf R'\n  ?P \\<in> summands Q \\<Longrightarrow>\n  \\<exists>Q'.\n     ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n     summands Q' =\n     summands Q -\n     {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e ?P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e R \\<oplus> Q \\<and>\n       summands Q' =\n       summands (R \\<oplus> Q) -\n       {P' |P'.\n        P' \\<in> summands (R \\<oplus> Q) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by(rule SumGoal)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e R \\<oplus> Q \\<and>\n     summands Q' =\n     summands (R \\<oplus> Q) -\n     {P' |P'.\n      P' \\<in> summands (R \\<oplus> Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. P \\<in> summands R \\<Longrightarrow>\n    \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e R \\<oplus> Q \\<and>\n     summands Q' =\n     summands (R \\<oplus> Q) -\n     {P' |P'.\n      P' \\<in> summands (R \\<oplus> Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n       summands Q' =\n       summands (Q \\<oplus> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<oplus> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by(force intro: SumSym Trans)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<oplus> R \\<and>\n     summands Q' =\n     summands (Q \\<oplus> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<oplus> R) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Par Q R P)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  \\<lbrakk>?P \\<in> summands R; uhnf R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e R \\<and>\n                       summands Q' =\n                       summands R -\n                       {P' |P'.\n                        P' \\<in> summands R \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands (Q \\<parallel> R)\n  uhnf (Q \\<parallel> R)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands (Q \\<parallel> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands (Q \\<parallel> R)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands (Q \\<parallel> R)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence False"], ["proof (prove)\nusing this:\n  P \\<in> summands (Q \\<parallel> R)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi1; uhnf pi1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi1 \\<and>\n  summands Q' =\n  summands pi1 -\n  {P' |P'. P' \\<in> summands pi1 \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        \\<And>P.\n           \\<lbrakk>P \\<in> summands pi2; uhnf pi2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Q'.\n                                P \\<oplus> Q' \\<equiv>\\<^sub>e pi2 \\<and>\n                                summands Q' =\n                                summands pi2 -\n                                {P' |P'.\n                                 P' \\<in> summands pi2 \\<and>\n                                 P' \\<equiv>\\<^sub>e P} \\<and>\n                                uhnf Q';\n        P \\<in> summands (pi1 \\<parallel> pi2);\n        uhnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            pi1 \\<parallel> pi2 \\<and>\n                            summands Q' =\n                            summands (pi1 \\<parallel> pi2) -\n                            {P' |P'.\n                             P' \\<in> summands (pi1 \\<parallel> pi2) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<parallel> R \\<and>\n       summands Q' =\n       summands (Q \\<parallel> R) -\n       {P' |P'.\n        P' \\<in> summands (Q \\<parallel> R) \\<and>\n        P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<parallel> R \\<and>\n     summands Q' =\n     summands (Q \\<parallel> R) -\n     {P' |P'.\n      P' \\<in> summands (Q \\<parallel> R) \\<and>\n      P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Res x Q P)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands (<\\<nu>x>Q)\n  uhnf (<\\<nu>x>Q)\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands (<\\<nu>x>Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands (<\\<nu>x>Q)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands (<\\<nu>x>Q)\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence PeqQ: \"P = <\\<nu>x>Q\""], ["proof (prove)\nusing this:\n  P \\<in> summands (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. P = <\\<nu>x>Q", "by(simp add: if_split)"], ["proof (state)\nthis:\n  P = <\\<nu>x>Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q", "have \"P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "by(rule SumZero)"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q", "with PeqQ"], ["proof (chain)\npicking this:\n  P = <\\<nu>x>Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P", "show ?thesis"], ["proof (prove)\nusing this:\n  P = <\\<nu>x>Q\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q", "by simp"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"(summands \\<zero>) = (summands (<\\<nu>x>Q)) - {P' | P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (<\\<nu>x>Q) -\n    {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (<\\<nu>x>Q) -\n    {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}", "have \"<\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x>Q", "by(rule Refl)"], ["proof (state)\nthis:\n  <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x>Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (<\\<nu>x>Q) -\n    {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}", "with PeqQ"], ["proof (chain)\npicking this:\n  P = <\\<nu>x>Q\n  <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x>Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P = <\\<nu>x>Q\n  <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x>Q\n\ngoal (1 subgoal):\n 1. summands \\<zero> =\n    summands (<\\<nu>x>Q) -\n    {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}", "by simp"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (<\\<nu>x>Q) -\n  {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (<\\<nu>x>Q) -\n  {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "moreover"], ["proof (state)\nthis:\n  summands \\<zero> =\n  summands (<\\<nu>x>Q) -\n  {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (<\\<nu>name>pi); uhnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e\n                            <\\<nu>name>pi \\<and>\n                            summands Q' =\n                            summands (<\\<nu>name>pi) -\n                            {P' |P'.\n                             P' \\<in> summands (<\\<nu>name>pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q\n  summands \\<zero> =\n  summands (<\\<nu>x>Q) -\n  {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>Q\n  summands \\<zero> =\n  summands (<\\<nu>x>Q) -\n  {P' |P'. P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P}\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and>\n       summands Q' =\n       summands (<\\<nu>x>Q) -\n       {P' |P'.\n        P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and>\n     summands Q' =\n     summands (<\\<nu>x>Q) -\n     {P' |P'.\n      P' \\<in> summands (<\\<nu>x>Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "case(Bang Q P)"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<in> summands Q; uhnf Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n                       summands Q' =\n                       summands Q -\n                       {P' |P'.\n                        P' \\<in> summands Q \\<and>\n                        P' \\<equiv>\\<^sub>e ?P} \\<and>\n                       uhnf Q'\n  P \\<in> summands (!Q)\n  uhnf (!Q)\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "have \"P \\<in> summands (!Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> summands (!Q)", "by fact"], ["proof (state)\nthis:\n  P \\<in> summands (!Q)\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "hence False"], ["proof (prove)\nusing this:\n  P \\<in> summands (!Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>P \\<in> summands pi; uhnf pi\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Q'.\n  P \\<oplus> Q' \\<equiv>\\<^sub>e pi \\<and>\n  summands Q' =\n  summands pi -\n  {P' |P'. P' \\<in> summands pi \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n  uhnf Q';\n        P \\<in> summands (!pi); uhnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            P \\<oplus> Q' \\<equiv>\\<^sub>e !pi \\<and>\n                            summands Q' =\n                            summands (!pi) -\n                            {P' |P'.\n                             P' \\<in> summands (!pi) \\<and>\n                             P' \\<equiv>\\<^sub>e P} \\<and>\n                            uhnf Q'", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       P \\<oplus> Q' \\<equiv>\\<^sub>e !Q \\<and>\n       summands Q' =\n       summands (!Q) -\n       {P' |P'. P' \\<in> summands (!Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n       uhnf Q'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e !Q \\<and>\n     summands Q' =\n     summands (!Q) -\n     {P' |P'. P' \\<in> summands (!Q) \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     P \\<oplus> Q' \\<equiv>\\<^sub>e Q \\<and>\n     summands Q' =\n     summands Q -\n     {P' |P'. P' \\<in> summands Q \\<and> P' \\<equiv>\\<^sub>e P} \\<and>\n     uhnf Q'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nSym:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"\\<not>(P \\<equiv>\\<^sub>e Q)\"\n\n  shows \"\\<not>(Q \\<equiv>\\<^sub>e P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Q \\<equiv>\\<^sub>e P", "using assms"], ["proof (prove)\nusing this:\n  \\<not> P \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. \\<not> Q \\<equiv>\\<^sub>e P", "by(blast dest: Sym)"], ["", "lemma summandsZero:\n  fixes P :: pi\n  \n  assumes \"summands P = {}\"\n  and     \"hnf P\"\n\n  shows \"P = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = \\<zero>", "using assms"], ["proof (prove)\nusing this:\n  summands P = {}\n  hnf P\n\ngoal (1 subgoal):\n 1. P = \\<zero>", "by(nominal_induct P rule: pi.strong_inducts, auto intro: Refl SumIdemp SumPres' Trans)"], ["", "lemma summandsZero':\n  fixes P :: pi\n  \n  assumes summP: \"summands P = {}\"\n  and     Puhnf: \"uhnf P\"\n\n  shows \"P = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = \\<zero>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P = \\<zero>", "from Puhnf"], ["proof (chain)\npicking this:\n  uhnf P", "have \"hnf P\""], ["proof (prove)\nusing this:\n  uhnf P\n\ngoal (1 subgoal):\n 1. hnf P", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  hnf P\n\ngoal (1 subgoal):\n 1. P = \\<zero>", "with summP"], ["proof (chain)\npicking this:\n  summands P = {}\n  hnf P", "show ?thesis"], ["proof (prove)\nusing this:\n  summands P = {}\n  hnf P\n\ngoal (1 subgoal):\n 1. P = \\<zero>", "by(rule summandsZero)"], ["proof (state)\nthis:\n  P = \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summandEquiv:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes Phnf: \"uhnf P\"\n  and     Qhnf: \"uhnf Q\"\n  and     PinQ: \"\\<forall>P' \\<in> summands P. \\<exists>Q' \\<in> summands Q. P' \\<equiv>\\<^sub>e Q'\"\n  and     QinP: \"\\<forall>Q' \\<in> summands Q. \\<exists>P' \\<in> summands P. Q' \\<equiv>\\<^sub>e P'\"\n\n  shows \"P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "from finiteSummands assms"], ["proof (chain)\npicking this:\n  finite (summands ?P)\n  uhnf P\n  uhnf Q\n  \\<forall>P'\\<in>summands P.\n     \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (summands ?P)\n  uhnf P\n  uhnf Q\n  \\<forall>P'\\<in>summands P.\n     \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "proof(induct F==\"summands P\" arbitrary: P Q rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "case(empty P Q)"], ["proof (state)\nthis:\n  {} = summands P\n  uhnf P\n  uhnf Q\n  \\<forall>P'\\<in>summands P.\n     \\<exists>a\\<in>summands Q. P' \\<equiv>\\<^sub>e a\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>a\\<in>summands P. Q' \\<equiv>\\<^sub>e a\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have PEmpty: \"{} = summands P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} = summands P", "by fact"], ["proof (state)\nthis:\n  {} = summands P\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "moreover"], ["proof (state)\nthis:\n  {} = summands P\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have \"\\<forall>Q'\\<in>summands Q. \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>summands Q.\n       \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "by fact"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "ultimately"], ["proof (chain)\npicking this:\n  {} = summands P\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "have QEmpty: \"summands Q = {}\""], ["proof (prove)\nusing this:\n  {} = summands P\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. summands Q = {}", "by simp"], ["proof (state)\nthis:\n  summands Q = {}\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have \"P = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = \\<zero>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P = \\<zero>", "have \"uhnf P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf P", "by fact"], ["proof (state)\nthis:\n  uhnf P\n\ngoal (1 subgoal):\n 1. P = \\<zero>", "with PEmpty"], ["proof (chain)\npicking this:\n  {} = summands P\n  uhnf P", "show ?thesis"], ["proof (prove)\nusing this:\n  {} = summands P\n  uhnf P\n\ngoal (1 subgoal):\n 1. P = \\<zero>", "by(blast intro: summandsZero')"], ["proof (state)\nthis:\n  P = \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P = \\<zero>\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "moreover"], ["proof (state)\nthis:\n  P = \\<zero>\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have \"Q = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q = \\<zero>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q = \\<zero>", "have \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf Q", "by fact"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. Q = \\<zero>", "with QEmpty"], ["proof (chain)\npicking this:\n  summands Q = {}\n  uhnf Q", "show ?thesis"], ["proof (prove)\nusing this:\n  summands Q = {}\n  uhnf Q\n\ngoal (1 subgoal):\n 1. Q = \\<zero>", "by(blast intro: summandsZero')"], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>{} = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "ultimately"], ["proof (chain)\npicking this:\n  P = \\<zero>\n  Q = \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  P = \\<zero>\n  Q = \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "by(blast intro: Refl)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "case(insert P' F P Q)"], ["proof (state)\nthis:\n  finite F\n  P' \\<notin> F\n  \\<lbrakk>F = summands ?P; uhnf ?P; uhnf ?Q;\n   \\<forall>P'\\<in>summands ?P. Bex (summands ?Q) ((\\<equiv>\\<^sub>e) P');\n   \\<forall>Q'\\<in>summands ?Q.\n      Bex (summands ?P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n  \\<Longrightarrow> ?P \\<equiv>\\<^sub>e ?Q\n  insert P' F = summands P\n  uhnf P\n  uhnf Q\n  \\<forall>P'\\<in>summands P. Bex (summands Q) ((\\<equiv>\\<^sub>e) P')\n  \\<forall>Q'\\<in>summands Q. Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have Phnf: \"uhnf P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf P", "by fact"], ["proof (state)\nthis:\n  uhnf P\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have Qhnf: \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf Q", "by fact"], ["proof (state)\nthis:\n  uhnf Q\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have IH: \"\\<And>P Q. \\<lbrakk>F = summands P; uhnf P; uhnf Q; \\<forall>P' \\<in> summands P. \\<exists>Q' \\<in> summands Q. P' \\<equiv>\\<^sub>e Q';\n              \\<forall>Q' \\<in> summands Q. \\<exists>P' \\<in> summands P. Q' \\<equiv>\\<^sub>e P'\\<rbrakk> \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q';\n        \\<forall>Q'\\<in>summands Q.\n           \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>F = summands ?P; uhnf ?P; uhnf ?Q;\n   \\<forall>P'\\<in>summands ?P.\n      \\<exists>Q'\\<in>summands ?Q. P' \\<equiv>\\<^sub>e Q';\n   \\<forall>Q'\\<in>summands ?Q.\n      \\<exists>P'\\<in>summands ?P. Q' \\<equiv>\\<^sub>e P'\\<rbrakk>\n  \\<Longrightarrow> ?P \\<equiv>\\<^sub>e ?Q\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have PeqQ: \"\\<forall>P' \\<in> summands P. \\<exists>Q' \\<in> summands Q. P' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'\\<in>summands P.\n       \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'", "by fact"], ["proof (state)\nthis:\n  \\<forall>P'\\<in>summands P.\n     \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have QeqP: \"\\<forall>Q' \\<in> summands Q. \\<exists>P' \\<in> summands P. Q' \\<equiv>\\<^sub>e P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>summands Q.\n       \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "by fact"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have PSumm: \"insert P' F = summands P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert P' F = summands P", "by fact"], ["proof (state)\nthis:\n  insert P' F = summands P\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "hence P'SummP: \"P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  insert P' F = summands P\n\ngoal (1 subgoal):\n 1. P' \\<in> summands P", "by auto"], ["proof (state)\nthis:\n  P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "with Phnf"], ["proof (chain)\npicking this:\n  uhnf P\n  P' \\<in> summands P", "obtain P'' where P'P''eqP: \"P' \\<oplus> P'' \\<equiv>\\<^sub>e P\" \n                           and P''Summ: \"summands P'' = summands P - {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\"\n                           and P''hnf: \"uhnf P''\""], ["proof (prove)\nusing this:\n  uhnf P\n  P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P' \\<oplus> P'' \\<equiv>\\<^sub>e P;\n         summands P'' =\n         summands P -\n         {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'};\n         uhnf P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: pullSummand)"], ["proof (state)\nthis:\n  P' \\<oplus> P'' \\<equiv>\\<^sub>e P\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n  uhnf P''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "from PeqQ P'SummP"], ["proof (chain)\npicking this:\n  \\<forall>P'\\<in>summands P.\n     \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'\n  P' \\<in> summands P", "obtain Q' where Q'SummQ: \"Q' \\<in> summands Q\" and P'eqQ': \"P' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\nusing this:\n  \\<forall>P'\\<in>summands P.\n     \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'\n  P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> summands Q; P' \\<equiv>\\<^sub>e Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<in> summands Q\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "from Q'SummQ Qhnf"], ["proof (chain)\npicking this:\n  Q' \\<in> summands Q\n  uhnf Q", "obtain Q'' where Q'Q''eqQ: \"Q' \\<oplus> Q'' \\<equiv>\\<^sub>e Q\" \n                                   and Q''Summ: \"summands Q'' = summands Q - {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}\"\n                                   and Q''hnf: \"uhnf Q''\""], ["proof (prove)\nusing this:\n  Q' \\<in> summands Q\n  uhnf Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>Q' \\<oplus> Q'' \\<equiv>\\<^sub>e Q;\n         summands Q'' =\n         summands Q -\n         {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'};\n         uhnf Q''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: pullSummand)"], ["proof (state)\nthis:\n  Q' \\<oplus> Q'' \\<equiv>\\<^sub>e Q\n  summands Q'' =\n  summands Q -\n  {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}\n  uhnf Q''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have FeqP'': \"F = summands P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = summands P''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F = summands P''", "have \"P' \\<notin> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<notin> F", "by fact"], ["proof (state)\nthis:\n  P' \\<notin> F\n\ngoal (1 subgoal):\n 1. F = summands P''", "with P''Summ PSumm hnfSummandsRemove[OF P'SummP Phnf]"], ["proof (chain)\npicking this:\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n  insert P' F = summands P\n  summands P -\n  {P'a |P'a. P'a \\<in> summands P \\<and> P'a \\<equiv>\\<^sub>e P'} =\n  summands P - {P'}\n  P' \\<notin> F", "show ?thesis"], ["proof (prove)\nusing this:\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n  insert P' F = summands P\n  summands P -\n  {P'a |P'a. P'a \\<in> summands P \\<and> P'a \\<equiv>\\<^sub>e P'} =\n  summands P - {P'}\n  P' \\<notin> F\n\ngoal (1 subgoal):\n 1. F = summands P''", "by blast"], ["proof (state)\nthis:\n  F = summands P''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F = summands P''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "moreover"], ["proof (state)\nthis:\n  F = summands P''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have \"\\<forall>P' \\<in> summands P''. \\<exists>Q' \\<in> summands Q''. P' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'\\<in>summands P''.\n       \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'", "proof(rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P' \\<in> summands P'' \\<Longrightarrow>\n       \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'", "fix P'''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P' \\<in> summands P'' \\<Longrightarrow>\n       \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'", "assume P'''Summ: \"P''' \\<in> summands P''\""], ["proof (state)\nthis:\n  P''' \\<in> summands P''\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P' \\<in> summands P'' \\<Longrightarrow>\n       \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'", "with P''Summ"], ["proof (chain)\npicking this:\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n  P''' \\<in> summands P''", "have \"P''' \\<in> summands P\""], ["proof (prove)\nusing this:\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n  P''' \\<in> summands P''\n\ngoal (1 subgoal):\n 1. P''' \\<in> summands P", "by simp"], ["proof (state)\nthis:\n  P''' \\<in> summands P\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P' \\<in> summands P'' \\<Longrightarrow>\n       \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'", "with PeqQ"], ["proof (chain)\npicking this:\n  \\<forall>P'\\<in>summands P.\n     \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'\n  P''' \\<in> summands P", "obtain Q''' where Q'''Summ: \"Q''' \\<in> summands Q\" and P'''eqQ''': \"P''' \\<equiv>\\<^sub>e Q'''\""], ["proof (prove)\nusing this:\n  \\<forall>P'\\<in>summands P.\n     \\<exists>Q'\\<in>summands Q. P' \\<equiv>\\<^sub>e Q'\n  P''' \\<in> summands P\n\ngoal (1 subgoal):\n 1. (\\<And>Q'''.\n        \\<lbrakk>Q''' \\<in> summands Q; P''' \\<equiv>\\<^sub>e Q'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q''' \\<in> summands Q\n  P''' \\<equiv>\\<^sub>e Q'''\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P' \\<in> summands P'' \\<Longrightarrow>\n       \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'", "have \"Q''' \\<in> summands Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q''' \\<in> summands Q''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q''' \\<in> summands Q''", "from P'''Summ P''Summ"], ["proof (chain)\npicking this:\n  P''' \\<in> summands P''\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}", "have \"\\<not>(P''' \\<equiv>\\<^sub>e P')\""], ["proof (prove)\nusing this:\n  P''' \\<in> summands P''\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n\ngoal (1 subgoal):\n 1. \\<not> P''' \\<equiv>\\<^sub>e P'", "by simp"], ["proof (state)\nthis:\n  \\<not> P''' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. Q''' \\<in> summands Q''", "with P'eqQ' P'''eqQ'''"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e Q'\n  P''' \\<equiv>\\<^sub>e Q'''\n  \\<not> P''' \\<equiv>\\<^sub>e P'", "have \"\\<not>(Q''' \\<equiv>\\<^sub>e Q')\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e Q'\n  P''' \\<equiv>\\<^sub>e Q'''\n  \\<not> P''' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. \\<not> Q''' \\<equiv>\\<^sub>e Q'", "by(blast intro: Trans Sym)"], ["proof (state)\nthis:\n  \\<not> Q''' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. Q''' \\<in> summands Q''", "with Q''Summ Q'''Summ"], ["proof (chain)\npicking this:\n  summands Q'' =\n  summands Q -\n  {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}\n  Q''' \\<in> summands Q\n  \\<not> Q''' \\<equiv>\\<^sub>e Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  summands Q'' =\n  summands Q -\n  {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}\n  Q''' \\<in> summands Q\n  \\<not> Q''' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. Q''' \\<in> summands Q''", "by simp"], ["proof (state)\nthis:\n  Q''' \\<in> summands Q''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q''' \\<in> summands Q''\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P' \\<in> summands P'' \\<Longrightarrow>\n       \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'", "with P'''eqQ'''"], ["proof (chain)\npicking this:\n  P''' \\<equiv>\\<^sub>e Q'''\n  Q''' \\<in> summands Q''", "show \"\\<exists>Q'\\<in>summands Q''. P''' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\nusing this:\n  P''' \\<equiv>\\<^sub>e Q'''\n  Q''' \\<in> summands Q''\n\ngoal (1 subgoal):\n 1. \\<exists>Q'\\<in>summands Q''. P''' \\<equiv>\\<^sub>e Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'\\<in>summands Q''. P''' \\<equiv>\\<^sub>e Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P'\\<in>summands P''.\n     \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "moreover"], ["proof (state)\nthis:\n  \\<forall>P'\\<in>summands P''.\n     \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have \"\\<forall>Q' \\<in> summands Q''. \\<exists>P' \\<in> summands P''. Q' \\<equiv>\\<^sub>e P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>summands Q''.\n       \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "proof(rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q' \\<in> summands Q'' \\<Longrightarrow>\n       \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "fix Q'''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q' \\<in> summands Q'' \\<Longrightarrow>\n       \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "assume Q'''Summ: \"Q''' \\<in> summands Q''\""], ["proof (state)\nthis:\n  Q''' \\<in> summands Q''\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q' \\<in> summands Q'' \\<Longrightarrow>\n       \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "with Q''Summ"], ["proof (chain)\npicking this:\n  summands Q'' =\n  summands Q -\n  {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}\n  Q''' \\<in> summands Q''", "have \"Q''' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  summands Q'' =\n  summands Q -\n  {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}\n  Q''' \\<in> summands Q''\n\ngoal (1 subgoal):\n 1. Q''' \\<in> summands Q", "by simp"], ["proof (state)\nthis:\n  Q''' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q' \\<in> summands Q'' \\<Longrightarrow>\n       \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "with QeqP"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\n  Q''' \\<in> summands Q", "obtain P''' where P'''Summ: \"P''' \\<in> summands P\"\n                              and Q'''eqP''': \"Q''' \\<equiv>\\<^sub>e P'''\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>summands Q.\n     \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\n  Q''' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P''' \\<in> summands P; Q''' \\<equiv>\\<^sub>e P'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P''' \\<in> summands P\n  Q''' \\<equiv>\\<^sub>e P'''\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q' \\<in> summands Q'' \\<Longrightarrow>\n       \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "have \"P''' \\<in> summands P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P''' \\<in> summands P''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P''' \\<in> summands P''", "from Q'''Summ Q''Summ"], ["proof (chain)\npicking this:\n  Q''' \\<in> summands Q''\n  summands Q'' =\n  summands Q -\n  {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}", "have \"\\<not>(Q''' \\<equiv>\\<^sub>e Q')\""], ["proof (prove)\nusing this:\n  Q''' \\<in> summands Q''\n  summands Q'' =\n  summands Q -\n  {Q'' |Q''. Q'' \\<in> summands Q \\<and> Q'' \\<equiv>\\<^sub>e Q'}\n\ngoal (1 subgoal):\n 1. \\<not> Q''' \\<equiv>\\<^sub>e Q'", "by simp"], ["proof (state)\nthis:\n  \\<not> Q''' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. P''' \\<in> summands P''", "with P'eqQ' Q'''eqP'''"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e Q'\n  Q''' \\<equiv>\\<^sub>e P'''\n  \\<not> Q''' \\<equiv>\\<^sub>e Q'", "have \"\\<not>(P''' \\<equiv>\\<^sub>e P')\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e Q'\n  Q''' \\<equiv>\\<^sub>e P'''\n  \\<not> Q''' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<not> P''' \\<equiv>\\<^sub>e P'", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  \\<not> P''' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P''' \\<in> summands P''", "with P''Summ P'''Summ"], ["proof (chain)\npicking this:\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n  P''' \\<in> summands P\n  \\<not> P''' \\<equiv>\\<^sub>e P'", "show ?thesis"], ["proof (prove)\nusing this:\n  summands P'' =\n  summands P -\n  {P'' |P''. P'' \\<in> summands P \\<and> P'' \\<equiv>\\<^sub>e P'}\n  P''' \\<in> summands P\n  \\<not> P''' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P''' \\<in> summands P''", "by simp"], ["proof (state)\nthis:\n  P''' \\<in> summands P''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P''' \\<in> summands P''\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q' \\<in> summands Q'' \\<Longrightarrow>\n       \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "with Q'''eqP'''"], ["proof (chain)\npicking this:\n  Q''' \\<equiv>\\<^sub>e P'''\n  P''' \\<in> summands P''", "show \"\\<exists>P'\\<in>summands P''. Q''' \\<equiv>\\<^sub>e P'\""], ["proof (prove)\nusing this:\n  Q''' \\<equiv>\\<^sub>e P'''\n  P''' \\<in> summands P''\n\ngoal (1 subgoal):\n 1. \\<exists>P'\\<in>summands P''. Q''' \\<equiv>\\<^sub>e P'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'\\<in>summands P''. Q''' \\<equiv>\\<^sub>e P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>summands Q''.\n     \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "ultimately"], ["proof (chain)\npicking this:\n  F = summands P''\n  \\<forall>P'\\<in>summands P''.\n     \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'\n  \\<forall>Q'\\<in>summands Q''.\n     \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'", "have P''eqQ'': \"P'' \\<equiv>\\<^sub>e Q''\""], ["proof (prove)\nusing this:\n  F = summands P''\n  \\<forall>P'\\<in>summands P''.\n     \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'\n  \\<forall>Q'\\<in>summands Q''.\n     \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "using P''hnf Q''hnf"], ["proof (prove)\nusing this:\n  F = summands P''\n  \\<forall>P'\\<in>summands P''.\n     \\<exists>Q'\\<in>summands Q''. P' \\<equiv>\\<^sub>e Q'\n  \\<forall>Q'\\<in>summands Q''.\n     \\<exists>P'\\<in>summands P''. Q' \\<equiv>\\<^sub>e P'\n  uhnf P''\n  uhnf Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "by(rule_tac IH)"], ["proof (state)\nthis:\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "from P'P''eqP"], ["proof (chain)\npicking this:\n  P' \\<oplus> P'' \\<equiv>\\<^sub>e P", "have \"P \\<equiv>\\<^sub>e P' \\<oplus> P''\""], ["proof (prove)\nusing this:\n  P' \\<oplus> P'' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e P' \\<oplus> P''", "by(rule Sym)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e P' \\<oplus> P''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "moreover"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e P' \\<oplus> P''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "from P'eqQ' P''eqQ''"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''", "have \"P' \\<oplus> P'' \\<equiv>\\<^sub>e Q' \\<oplus> Q''\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P' \\<oplus> P'' \\<equiv>\\<^sub>e Q' \\<oplus> Q''", "by(rule SumPres')"], ["proof (state)\nthis:\n  P' \\<oplus> P'' \\<equiv>\\<^sub>e Q' \\<oplus> Q''\n\ngoal (1 subgoal):\n 1. \\<And>x F P Q.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>P Q.\n           \\<lbrakk>F = summands P; uhnf P; uhnf Q;\n            \\<forall>P'\\<in>summands P.\n               Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n            \\<forall>Q'\\<in>summands Q.\n               Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n           \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        insert x F = summands P; uhnf P; uhnf Q;\n        \\<forall>P'\\<in>summands P.\n           Bex (summands Q) ((\\<equiv>\\<^sub>e) P');\n        \\<forall>Q'\\<in>summands Q.\n           Bex (summands P) ((\\<equiv>\\<^sub>e) Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "ultimately"], ["proof (chain)\npicking this:\n  P \\<equiv>\\<^sub>e P' \\<oplus> P''\n  P' \\<oplus> P'' \\<equiv>\\<^sub>e Q' \\<oplus> Q''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e P' \\<oplus> P''\n  P' \\<oplus> P'' \\<equiv>\\<^sub>e Q' \\<oplus> Q''\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "using Q'Q''eqQ"], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e P' \\<oplus> P''\n  P' \\<oplus> P'' \\<equiv>\\<^sub>e Q' \\<oplus> Q''\n  Q' \\<oplus> Q'' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma validSubst[simp]:\n  fixes P :: pi\n  and   a :: name\n  and   b :: name\n  and   p :: pi\n  \n  shows \"valid(P[a::=b]) = valid P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P[a::=b]) = valid P", "by(nominal_induct P avoiding: a b rule: pi.strong_inducts, auto)"], ["", "lemma validOutputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n\n  assumes \"P \\<longmapsto>a[b] \\<prec> P'\" \n  and     \"valid P\"\n\n  shows \"valid P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a[b] \\<prec> P'\n  valid P\n\ngoal (1 subgoal):\n 1. valid P'", "by(nominal_induct rule: outputInduct, auto)"], ["", "lemma validInputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   x  :: name\n  and   P' :: pi\n\n  assumes PTrans: \"P \\<longmapsto>a<x> \\<prec> P'\" \n  and     validP: \"valid P\"\n\n  shows \"valid P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid P'", "have Goal: \"\\<And>P a x P'. \\<lbrakk>P \\<longmapsto>a<x> \\<prec> P'; x \\<sharp> P; valid P\\<rbrakk> \\<Longrightarrow> valid P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "fix P a x P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "assume \"P \\<longmapsto>a<x> \\<prec> P'\" and \"x \\<sharp> P\" and \"valid P\""], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n  x \\<sharp> P\n  valid P\n\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "thus \"valid P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P'\n  x \\<sharp> P\n  valid P\n\ngoal (1 subgoal):\n 1. valid P'", "by(nominal_induct rule: inputInduct, auto)"], ["proof (state)\nthis:\n  valid P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<longmapsto> ?a<?x> \\<prec> ?P'; ?x \\<sharp> ?P;\n   valid ?P\\<rbrakk>\n  \\<Longrightarrow> valid ?P'\n\ngoal (1 subgoal):\n 1. valid P'", "obtain y::name where yFreshP: \"y \\<sharp> P\" and yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P; y \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac name_exists_fresh[of \"(P, P')\"], auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. valid P'", "from yFreshP' PTrans"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<x> \\<prec> P'", "have \"P \\<longmapsto>a<y> \\<prec> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. valid P'", "hence \"valid ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. valid ([(x, y)] \\<bullet> P')", "using yFreshP validP"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P\n  valid P\n\ngoal (1 subgoal):\n 1. valid ([(x, y)] \\<bullet> P')", "by(rule Goal)"], ["proof (state)\nthis:\n  valid ([(x, y)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. valid P'", "thus \"valid P'\""], ["proof (prove)\nusing this:\n  valid ([(x, y)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. valid P'", "by simp"], ["proof (state)\nthis:\n  valid P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma validBoundOutputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   x  :: name\n  and   P' :: pi\n\n  assumes PTrans: \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\" \n  and     validP: \"valid P\"\n\n  shows \"valid P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid P'", "have Goal: \"\\<And>P a x P'. \\<lbrakk>P \\<longmapsto>a<\\<nu>x> \\<prec> P'; x \\<sharp> P; valid P\\<rbrakk> \\<Longrightarrow> valid P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "fix P a x P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "assume \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and \"x \\<sharp> P\" and \"valid P\""], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> P\n  valid P\n\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "thus \"valid P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> P\n  valid P\n\ngoal (1 subgoal):\n 1. valid P'", "apply(nominal_induct rule: boundOutputInduct, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a[x] \\<prec> P'; a \\<noteq> x; valid P;\n        P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P; valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a[x] \\<prec> P'; a \\<noteq> x; valid P;\n        P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P; valid P\\<rbrakk>\n       \\<Longrightarrow> valid P'", "fix P a x P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a[x] \\<prec> P'; a \\<noteq> x; valid P;\n        Pa__ \\<longmapsto> aa__<\\<nu>xa__> \\<prec> P'a__;\n        xa__ \\<sharp> Pa__; valid Pa__\\<rbrakk>\n       \\<Longrightarrow> valid P'", "assume \"P \\<longmapsto>(a::name)[x] \\<prec> P'\" and \"valid P\""], ["proof (state)\nthis:\n  P \\<longmapsto> a[x] \\<prec> P'\n  valid P\n\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a[x] \\<prec> P'; a \\<noteq> x; valid P;\n        Pa__ \\<longmapsto> aa__<\\<nu>xa__> \\<prec> P'a__;\n        xa__ \\<sharp> Pa__; valid Pa__\\<rbrakk>\n       \\<Longrightarrow> valid P'", "thus \"valid P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a[x] \\<prec> P'\n  valid P\n\ngoal (1 subgoal):\n 1. valid P'", "by(nominal_induct rule: outputInduct, auto)"], ["proof (state)\nthis:\n  valid P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  valid P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<longmapsto> ?a<\\<nu>?x> \\<prec> ?P'; ?x \\<sharp> ?P;\n   valid ?P\\<rbrakk>\n  \\<Longrightarrow> valid ?P'\n\ngoal (1 subgoal):\n 1. valid P'", "obtain y::name where yFreshP: \"y \\<sharp> P\" and yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P; y \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac name_exists_fresh[of \"(P, P')\"], auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. valid P'", "from yFreshP' PTrans"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have \"P \\<longmapsto>a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. valid P'", "hence \"valid ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. valid ([(x, y)] \\<bullet> P')", "using yFreshP validP"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P\n  valid P\n\ngoal (1 subgoal):\n 1. valid ([(x, y)] \\<bullet> P')", "by(rule Goal)"], ["proof (state)\nthis:\n  valid ([(x, y)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. valid P'", "thus \"valid P'\""], ["proof (prove)\nusing this:\n  valid ([(x, y)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. valid P'", "by simp"], ["proof (state)\nthis:\n  valid P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma validTauTransition:\n  fixes P  :: pi\n  and   P' :: pi\n\n  assumes PTrans: \"P \\<longmapsto>\\<tau> \\<prec> P'\"\n  and     validP: \"valid P\"\n\n  shows \"valid P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<tau> \\<prec> P'\n  valid P\n\ngoal (1 subgoal):\n 1. valid P'", "by(nominal_induct rule: tauInduct, auto dest: validOutputTransition validInputTransition validBoundOutputTransition)"], ["", "lemmas validTransition = validInputTransition validOutputTransition validTauTransition validBoundOutputTransition"], ["", "lemma validSummand:\n  fixes P  :: pi\n  and   P' :: pi\n  and   a  :: name\n  and   b  :: name\n  and   x  :: name\n\n  assumes \"valid P\"\n  and     \"hnf P\"\n\n  shows \"\\<tau>.(P') \\<in> summands P \\<Longrightarrow> valid P'\"\n  and   \"a{b}.P' \\<in> summands P \\<Longrightarrow> valid P'\"\n  and   \"a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\"\n  and   \"\\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk> \\<Longrightarrow> valid P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<tau>.P' \\<in> summands P \\<Longrightarrow> valid P') &&&\n     (a{b}.P' \\<in> summands P \\<Longrightarrow> valid P')) &&&\n    (a<x>.P' \\<in> summands P \\<Longrightarrow> valid P') &&&\n    (\\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n     \\<Longrightarrow> valid P')", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<tau>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. a{b}.P' \\<in> summands P \\<Longrightarrow> valid P'\n 3. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 4. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "assume \"\\<tau>.(P') \\<in> summands P\""], ["proof (state)\nthis:\n  \\<tau>.P' \\<in> summands P\n\ngoal (4 subgoals):\n 1. \\<tau>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. a{b}.P' \\<in> summands P \\<Longrightarrow> valid P'\n 3. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 4. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "with assms"], ["proof (chain)\npicking this:\n  valid P\n  hnf P\n  \\<tau>.P' \\<in> summands P", "show \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  hnf P\n  \\<tau>.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. valid P'", "by(force intro: validTauTransition simp add: summandTransition)"], ["proof (state)\nthis:\n  valid P'\n\ngoal (3 subgoals):\n 1. a{b}.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 3. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. a{b}.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 3. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "assume \"a{b}.P' \\<in> summands P\""], ["proof (state)\nthis:\n  a{b}.P' \\<in> summands P\n\ngoal (3 subgoals):\n 1. a{b}.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 3. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "with assms"], ["proof (chain)\npicking this:\n  valid P\n  hnf P\n  a{b}.P' \\<in> summands P", "show \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  hnf P\n  a{b}.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. valid P'", "by(force intro: validOutputTransition simp add: summandTransition)"], ["proof (state)\nthis:\n  valid P'\n\ngoal (2 subgoals):\n 1. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "assume \"a<x>.P' \\<in> summands P\""], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. a<x>.P' \\<in> summands P \\<Longrightarrow> valid P'\n 2. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "with assms"], ["proof (chain)\npicking this:\n  valid P\n  hnf P\n  a<x>.P' \\<in> summands P", "show \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  hnf P\n  a<x>.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. valid P'", "by(force intro: validInputTransition simp add: summandTransition)"], ["proof (state)\nthis:\n  valid P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "assume \"<\\<nu>x>a{x}.P' \\<in> summands P\" and \"a \\<noteq> x\""], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> x; <\\<nu>x>a{x}.P' \\<in> summands P\\<rbrakk>\n    \\<Longrightarrow> valid P'", "with assms"], ["proof (chain)\npicking this:\n  valid P\n  hnf P\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  a \\<noteq> x", "show \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  hnf P\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. valid P'", "by(force intro: validBoundOutputTransition simp add: summandTransition[THEN sym])"], ["proof (state)\nthis:\n  valid P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma validExpand:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"valid P\"\n  and     \"valid Q\"\n  and     \"uhnf P\"\n  and     \"uhnf Q\"\n\n  shows \"\\<forall>R \\<in> (expandSet P Q). uhnf R \\<and> valid R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>expandSet P Q. uhnf R \\<and> valid R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>expandSet P Q. uhnf R \\<and> valid R", "from assms"], ["proof (chain)\npicking this:\n  valid P\n  valid Q\n  uhnf P\n  uhnf Q", "have \"hnf P\" and \"hnf Q\""], ["proof (prove)\nusing this:\n  valid P\n  valid Q\n  uhnf P\n  uhnf Q\n\ngoal (1 subgoal):\n 1. hnf P &&& hnf Q", "by(simp add: uhnf_def)+"], ["proof (state)\nthis:\n  hnf P\n  hnf Q\n\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>expandSet P Q. uhnf R \\<and> valid R", "with assms"], ["proof (chain)\npicking this:\n  valid P\n  valid Q\n  uhnf P\n  uhnf Q\n  hnf P\n  hnf Q", "show ?thesis"], ["proof (prove)\nusing this:\n  valid P\n  valid Q\n  uhnf P\n  uhnf Q\n  hnf P\n  hnf Q\n\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>expandSet P Q. uhnf R \\<and> valid R", "apply(auto simp add: expandSet_def)"], ["proof (prove)\ngoal (28 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q))\n 2. \\<And>P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P \\<parallel> Q'))\n 4. \\<And>Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P' \\<parallel> Q))\n 6. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P \\<parallel> Q'))\n 8. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 10. \\<And>a x P'.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 28 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (27 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P \\<parallel> Q'))\n 3. \\<And>Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P' \\<parallel> Q))\n 5. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P \\<parallel> Q'))\n 7. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 9. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>a x Q'.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\nA total of 27 subgoals...", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (26 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P \\<parallel> Q'))\n 2. \\<And>Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P' \\<parallel> Q))\n 4. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P \\<parallel> Q'))\n 6. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 8. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 10. \\<And>a x Q'.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 26 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (25 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        \\<tau>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P' \\<parallel> Q))\n 3. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P \\<parallel> Q'))\n 5. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 7. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 9. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>a x P'.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\nA total of 25 subgoals...", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (24 subgoals):\n 1. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P' \\<parallel> Q))\n 2. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P \\<parallel> Q'))\n 4. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 6. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 8. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 10. \\<And>a x P'.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 24 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (23 subgoals):\n 1. \\<And>a b P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P \\<parallel> Q'))\n 3. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 5. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 7. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 9. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>a x Q'.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\nA total of 23 subgoals...", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (22 subgoals):\n 1. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a{b}.(P \\<parallel> Q'))\n 2. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 4. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 6. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 8. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 10. \\<And>a x Q'.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 22 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (21 subgoals):\n 1. \\<And>a b Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 3. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 5. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 7. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 9. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>x P' b Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\nA total of 21 subgoals...", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (20 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P' \\<parallel> Q))\n 2. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 6. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 8. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 10. \\<And>x P' b Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 20 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (19 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 5. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 7. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 9. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>x P' b Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 19 subgoals...", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (a<x>.(P \\<parallel> Q'))\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 4. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 6. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 8. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\nA total of 18 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 3. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 5. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 17 subgoals...", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 2. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 16 subgoals...", "apply(subgoal_tac \"a\\<noteq>x\")"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P' \\<parallel> Q))\n 2. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 5. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 17 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 2. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 16 subgoals...", "apply blast"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\nA total of 15 subgoals...", "apply(subgoal_tac \"a\\<noteq>x\")"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 16 subgoals...", "apply(drule_tac validSummand(4))"], ["proof (prove)\ngoal (19 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> hnf P\n 2. \\<And>a x P'.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ?a186 a x P' \\<noteq> ?x186 a x P'\n 3. \\<And>a x P'.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>?x186 a x\n                                P'>?a186 a x P'{?x186 a x P'}.?P'186 a x P'\n                         \\<in> summands P\n 4. \\<And>a x P'.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q; a \\<noteq> x;\n        valid (?P'186 a x P')\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 6. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 7. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 9. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>x P' b Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 19 subgoals...", "apply assumption+"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\nA total of 15 subgoals...", "apply blast"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 14 subgoals...", "apply(subgoal_tac \"a\\<noteq>x\")"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\nA total of 15 subgoals...", "apply(drule_tac validSummand(4)[where P=Q])"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> hnf Q\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ?a209 a x Q' \\<noteq> ?x209 a x Q'\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>?x209 a x\n                                Q'>?a209 a x Q'{?x209 a x Q'}.?P'209 a x Q'\n                         \\<in> summands Q\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P; a \\<noteq> x;\n        valid (?P'209 a x Q')\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 5. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 6. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 8. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\nA total of 18 subgoals...", "apply assumption+"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P; a \\<noteq> x;\n        valid Q'\\<rbrakk>\n       \\<Longrightarrow> uhnf (<\\<nu>x>a{x}.(P \\<parallel> Q'))\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\nA total of 15 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 14 subgoals...", "apply blast"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 6. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 9. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 13 subgoals...", "apply(subgoal_tac \"a\\<noteq>x\")"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 14 subgoals...", "apply(drule_tac validSummand(4)[where P=Q])"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> hnf Q\n 2. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ?a245 a x Q' \\<noteq> ?x245 a x Q'\n 3. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>?x245 a x\n                                Q'>?a245 a x Q'{?x245 a x Q'}.?P'245 a x Q'\n                         \\<in> summands Q\n 4. \\<And>a x Q'.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P; a \\<noteq> x;\n        valid (?P'245 a x Q')\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 6. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 7. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 10. \\<And>b P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 17 subgoals...", "apply assumption+"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 2. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 6. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 9. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>x P' y Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n         y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> valid Q'\nA total of 13 subgoals...", "apply blast"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P'[x::=b] \\<parallel> Q'))\n 2. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 5. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 8. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 10. \\<And>y P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n         y \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\nA total of 12 subgoals...", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 4. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 7. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 9. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 10. \\<And>y P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n         y \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> valid P'\nA total of 11 subgoals...", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x P' b Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 3. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 6. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 8. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 9. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 10. \\<And>y P' x Q' a.\n        \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n         <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n         y \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> valid Q'", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(P' \\<parallel> Q'[x::=b]))\n 2. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 7. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 8. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 9. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(force simp add: uhnf_def)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 4. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 7. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>b P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a{b}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 3. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 7. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')))\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 4. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 5. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(force simp add: uhnf_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 4. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(force dest: validSummand)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(subgoal_tac \"a\\<noteq>y\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 4. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(drule_tac validSummand(4)[where P=Q])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> hnf Q\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> ?a291 x P' y Q' a \\<noteq> ?x291 x P' y Q' a\n 3. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>?x291 x P' y Q'\n                                a>?a291 x P' y Q'\n                                   a{?x291 x P' y Q' a}.?P'291 x P' y Q' a\n                         \\<in> summands Q\n 4. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P; a \\<noteq> y; valid (?P'291 x P' y Q' a)\\<rbrakk>\n       \\<Longrightarrow> valid Q'\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 7. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 8. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply assumption+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        a<x>.P' \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 4. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> uhnf (\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])))\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(force dest: validSummand simp add: uhnf_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(subgoal_tac \"a\\<noteq>y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply(drule_tac validSummand(4))"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> hnf P\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> ?a322 y P' x Q' a \\<noteq> ?x322 y P' x Q' a\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>?x322 y P' x Q'\n                                a>?a322 y P' x Q'\n                                   a{?x322 y P' x Q' a}.?P'322 y P' x Q' a\n                         \\<in> summands P\n 4. \\<And>y P' x Q' a.\n       \\<lbrakk>valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q; a \\<noteq> y; valid (?P'322 y P' x Q' a)\\<rbrakk>\n       \\<Longrightarrow> valid P'\n 5. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply assumption+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>valid P; valid Q; uhnf P; uhnf Q; hnf P; hnf Q;\n        <\\<nu>y>a{y}.P' \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> valid Q'", "by(force dest: validSummand)"], ["proof (state)\nthis:\n  \\<forall>R\\<in>expandSet P Q. uhnf R \\<and> valid R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandComplete:\n  fixes F :: \"pi set\"\n\n  assumes \"finite F\"\n\n  shows \"\\<exists>P. (P, F) \\<in> sumComposeSet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P. (P, F) \\<in> sumComposeSet", "using assms"], ["proof (prove)\nusing this:\n  finite F\n\ngoal (1 subgoal):\n 1. \\<exists>P. (P, F) \\<in> sumComposeSet", "proof(induct F rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P. (P, {}) \\<in> sumComposeSet\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>P. (P, {}) \\<in> sumComposeSet\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "have \"(\\<zero>, {}) \\<in> sumComposeSet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<zero>, {}) \\<in> sumComposeSet", "by(rule sumComposeSet.empty)"], ["proof (state)\nthis:\n  (\\<zero>, {}) \\<in> sumComposeSet\n\ngoal (2 subgoals):\n 1. \\<exists>P. (P, {}) \\<in> sumComposeSet\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<zero>, {}) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<exists>P. (P, {}) \\<in> sumComposeSet", "by blast"], ["proof (state)\nthis:\n  \\<exists>P. (P, {}) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "case(insert Q F)"], ["proof (state)\nthis:\n  finite F\n  Q \\<notin> F\n  \\<exists>P. (P, F) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "have \"\\<exists>P. (P, F) \\<in> sumComposeSet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P. (P, F) \\<in> sumComposeSet", "by fact"], ["proof (state)\nthis:\n  \\<exists>P. (P, F) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "then"], ["proof (chain)\npicking this:\n  \\<exists>P. (P, F) \\<in> sumComposeSet", "obtain P where \"(P, F) \\<in> sumComposeSet\""], ["proof (prove)\nusing this:\n  \\<exists>P. (P, F) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        (P, F) \\<in> sumComposeSet \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (P, F) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "moreover"], ["proof (state)\nthis:\n  (P, F) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "have \"Q \\<in> insert Q F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> insert Q F", "by simp"], ["proof (state)\nthis:\n  Q \\<in> insert Q F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "moreover"], ["proof (state)\nthis:\n  Q \\<in> insert Q F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "have \"Q \\<notin> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<notin> F", "by fact"], ["proof (state)\nthis:\n  Q \\<notin> F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "ultimately"], ["proof (chain)\npicking this:\n  (P, F) \\<in> sumComposeSet\n  Q \\<in> insert Q F\n  Q \\<notin> F", "have \"(P \\<oplus> Q, insert Q F) \\<in> sumComposeSet\""], ["proof (prove)\nusing this:\n  (P, F) \\<in> sumComposeSet\n  Q \\<in> insert Q F\n  Q \\<notin> F\n\ngoal (1 subgoal):\n 1. (P \\<oplus> Q, insert Q F) \\<in> sumComposeSet", "by(force intro: sumComposeSet.insert)"], ["proof (state)\nthis:\n  (P \\<oplus> Q, insert Q F) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<exists>P. (P, F) \\<in> sumComposeSet\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P. (P, insert x F) \\<in> sumComposeSet", "thus ?case"], ["proof (prove)\nusing this:\n  (P \\<oplus> Q, insert Q F) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<exists>P. (P, insert Q F) \\<in> sumComposeSet", "by blast"], ["proof (state)\nthis:\n  \\<exists>P. (P, insert Q F) \\<in> sumComposeSet\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandDepth:\n  fixes F :: \"pi set\"\n  and   P :: pi\n  and   Q :: pi\n\n  assumes \"(P, F) \\<in> sumComposeSet\"\n  and     \"F \\<noteq> {}\"\n\n  shows \"\\<exists>Q \\<in> F. depth P \\<le> depth Q \\<and> (\\<forall>R \\<in> F. depth R \\<le> depth Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>F.\n       depth P \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>F. depth R \\<le> depth Q)", "using assms"], ["proof (prove)\nusing this:\n  (P, F) \\<in> sumComposeSet\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>F.\n       depth P \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>F. depth R \\<le> depth Q)", "proof(induct arbitrary: Q rule: sumComposeSet.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>{}.\n       depth \\<zero> \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>{}. depth R \\<le> depth Q)\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "case empty"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>{}.\n       depth \\<zero> \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>{}. depth R \\<le> depth Q)\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "have \"({}::pi set) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<noteq> {}", "by fact"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>{}.\n       depth \\<zero> \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>{}. depth R \\<le> depth Q)\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "hence False"], ["proof (prove)\nusing this:\n  {} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>{}.\n       depth \\<zero> \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>{}. depth R \\<le> depth Q)\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>{}.\n       depth \\<zero> \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>{}. depth R \\<le> depth Q)", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>{}.\n     depth \\<zero> \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>{}. depth R \\<le> depth Q)\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "case(insert Q S P)"], ["proof (state)\nthis:\n  Q \\<in> S\n  (P, S - {Q}) \\<in> sumComposeSet\n  S - {Q} \\<noteq> {} \\<Longrightarrow>\n  \\<exists>Q\\<in>S - {Q}.\n     depth P \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q)\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "have QinS: \"Q \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> S", "by fact"], ["proof (state)\nthis:\n  Q \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        S - {Q} \\<noteq> {} \\<Longrightarrow>\n        \\<exists>Qa\\<in>S - {Q}.\n           depth P \\<le> depth Qa \\<and>\n           (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Qa);\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Qa\\<in>S.\n                            depth (P \\<oplus> Q) \\<le> depth Qa \\<and>\n                            (\\<forall>R\\<in>S. depth R \\<le> depth Qa)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "proof(case_tac \"(S - {Q}) = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S - {Q} = {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "assume \"(S - {Q}) = {}\""], ["proof (state)\nthis:\n  S - {Q} = {}\n\ngoal (2 subgoals):\n 1. S - {Q} = {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "with QinS"], ["proof (chain)\npicking this:\n  Q \\<in> S\n  S - {Q} = {}", "have SeqQ: \"S = {Q}\""], ["proof (prove)\nusing this:\n  Q \\<in> S\n  S - {Q} = {}\n\ngoal (1 subgoal):\n 1. S = {Q}", "by auto"], ["proof (state)\nthis:\n  S = {Q}\n\ngoal (2 subgoals):\n 1. S - {Q} = {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "have \"(P, S - {Q}) \\<in> sumComposeSet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, S - {Q}) \\<in> sumComposeSet", "by fact"], ["proof (state)\nthis:\n  (P, S - {Q}) \\<in> sumComposeSet\n\ngoal (2 subgoals):\n 1. S - {Q} = {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "with SeqQ"], ["proof (chain)\npicking this:\n  S = {Q}\n  (P, S - {Q}) \\<in> sumComposeSet", "have \"(P, {}) \\<in> sumComposeSet\""], ["proof (prove)\nusing this:\n  S = {Q}\n  (P, S - {Q}) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. (P, {}) \\<in> sumComposeSet", "by simp"], ["proof (state)\nthis:\n  (P, {}) \\<in> sumComposeSet\n\ngoal (2 subgoals):\n 1. S - {Q} = {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "hence \"P = \\<zero>\""], ["proof (prove)\nusing this:\n  (P, {}) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. P = \\<zero>", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, {}) \\<in> sumComposeSet \\<Longrightarrow> P = \\<zero>", "by(ind_cases \"(P, {}) \\<in> sumComposeSet\", auto)"], ["proof (state)\nthis:\n  P = \\<zero>\n\ngoal (2 subgoals):\n 1. S - {Q} = {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "with QinS SeqQ"], ["proof (chain)\npicking this:\n  Q \\<in> S\n  S = {Q}\n  P = \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<in> S\n  S = {Q}\n  P = \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>S.\n     depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n\ngoal (1 subgoal):\n 1. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "assume \"(S - {Q}) \\<noteq> {}\""], ["proof (state)\nthis:\n  S - {Q} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "moreover"], ["proof (state)\nthis:\n  S - {Q} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "have \"(S - {Q}) \\<noteq> {} \\<Longrightarrow> \\<exists>Q' \\<in> (S - {Q}). depth P \\<le> depth Q' \\<and> (\\<forall>R \\<in> (S - {Q}). depth R \\<le> depth Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q'\\<in>S - {Q}.\n       depth P \\<le> depth Q' \\<and>\n       (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q')", "by fact"], ["proof (state)\nthis:\n  S - {Q} \\<noteq> {} \\<Longrightarrow>\n  \\<exists>Q'\\<in>S - {Q}.\n     depth P \\<le> depth Q' \\<and>\n     (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q')\n\ngoal (1 subgoal):\n 1. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "ultimately"], ["proof (chain)\npicking this:\n  S - {Q} \\<noteq> {}\n  S - {Q} \\<noteq> {} \\<Longrightarrow>\n  \\<exists>Q'\\<in>S - {Q}.\n     depth P \\<le> depth Q' \\<and>\n     (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q')", "obtain Q' where Q'inS: \"Q' \\<in> S - {Q}\" and PQ'depth: \"depth P \\<le> depth Q'\" and All: \"\\<forall>R \\<in> (S - {Q}). depth R \\<le> depth Q'\""], ["proof (prove)\nusing this:\n  S - {Q} \\<noteq> {}\n  S - {Q} \\<noteq> {} \\<Longrightarrow>\n  \\<exists>Q'\\<in>S - {Q}.\n     depth P \\<le> depth Q' \\<and>\n     (\\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q')\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> S - {Q}; depth P \\<le> depth Q';\n         \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Q' \\<in> S - {Q}\n  depth P \\<le> depth Q'\n  \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. S - {Q} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "proof(case_tac \"Q = Q'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q = Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. Q \\<noteq> Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "assume \"Q = Q'\""], ["proof (state)\nthis:\n  Q = Q'\n\ngoal (2 subgoals):\n 1. Q = Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. Q \\<noteq> Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "with PQ'depth All QinS"], ["proof (chain)\npicking this:\n  depth P \\<le> depth Q'\n  \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\n  Q \\<in> S\n  Q = Q'", "show ?case"], ["proof (prove)\nusing this:\n  depth P \\<le> depth Q'\n  \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\n  Q \\<in> S\n  Q = Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "by auto"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>S.\n     depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "assume QineqQ': \"Q \\<noteq> Q'\""], ["proof (state)\nthis:\n  Q \\<noteq> Q'\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "proof(case_tac \"depth Q \\<le> depth Q'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. depth Q \\<le> depth Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. \\<not> depth Q \\<le> depth Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "assume \"depth Q \\<le> depth Q'\""], ["proof (state)\nthis:\n  depth Q \\<le> depth Q'\n\ngoal (2 subgoals):\n 1. depth Q \\<le> depth Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. \\<not> depth Q \\<le> depth Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "with QineqQ' PQ'depth All Q'inS"], ["proof (chain)\npicking this:\n  Q \\<noteq> Q'\n  depth P \\<le> depth Q'\n  \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\n  Q' \\<in> S - {Q}\n  depth Q \\<le> depth Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<noteq> Q'\n  depth P \\<le> depth Q'\n  \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\n  Q' \\<in> S - {Q}\n  depth Q \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "by force"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>S.\n     depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n\ngoal (1 subgoal):\n 1. \\<not> depth Q \\<le> depth Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> depth Q \\<le> depth Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "assume \"\\<not> depth Q \\<le> depth Q'\""], ["proof (state)\nthis:\n  \\<not> depth Q \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. \\<not> depth Q \\<le> depth Q' \\<Longrightarrow>\n    \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "with QineqQ' PQ'depth All Q'inS QinS"], ["proof (chain)\npicking this:\n  Q \\<noteq> Q'\n  depth P \\<le> depth Q'\n  \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\n  Q' \\<in> S - {Q}\n  Q \\<in> S\n  \\<not> depth Q \\<le> depth Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<noteq> Q'\n  depth P \\<le> depth Q'\n  \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'\n  Q' \\<in> S - {Q}\n  Q \\<in> S\n  \\<not> depth Q \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q\\<in>S.\n       depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n       (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q';\n     \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'; Q' \\<in> S; Q \\<in> S;\n     \\<not> depth Q \\<le> depth Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q\\<in>S.\n                         depth P \\<le> depth Q \\<and>\n                         depth Q \\<le> depth Q \\<and>\n                         (\\<forall>R\\<in>S. depth R \\<le> depth Q)", "apply(rule_tac x=Q in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q';\n     \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'; Q' \\<in> S; Q \\<in> S;\n     \\<not> depth Q \\<le> depth Q'\\<rbrakk>\n    \\<Longrightarrow> depth P \\<le> depth Q \\<and>\n                      depth Q \\<le> depth Q \\<and>\n                      (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n 2. \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q';\n     \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'; Q' \\<in> S; Q \\<in> S;\n     \\<not> depth Q \\<le> depth Q'\\<rbrakk>\n    \\<Longrightarrow> Q \\<in> S", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q';\n        \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'; Q' \\<in> S;\n        Q \\<in> S; \\<not> depth Q \\<le> depth Q'; R \\<in> S\\<rbrakk>\n       \\<Longrightarrow> depth R \\<le> depth Q", "apply(case_tac \"R=Q\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q';\n        \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'; Q' \\<in> S;\n        Q \\<in> S; \\<not> depth Q \\<le> depth Q'; R \\<in> S; R = Q\\<rbrakk>\n       \\<Longrightarrow> depth R \\<le> depth Q\n 2. \\<And>R.\n       \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q';\n        \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'; Q' \\<in> S;\n        Q \\<in> S; \\<not> depth Q \\<le> depth Q'; R \\<in> S;\n        R \\<noteq> Q\\<rbrakk>\n       \\<Longrightarrow> depth R \\<le> depth Q", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q';\n        \\<forall>R\\<in>S - {Q}. depth R \\<le> depth Q'; Q' \\<in> S;\n        Q \\<in> S; \\<not> depth Q \\<le> depth Q'; R \\<in> S;\n        R \\<noteq> Q\\<rbrakk>\n       \\<Longrightarrow> depth R \\<le> depth Q", "apply(erule_tac x=R in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q'; Q' \\<in> S;\n        Q \\<in> S; \\<not> depth Q \\<le> depth Q'; R \\<in> S; R \\<noteq> Q;\n        depth R \\<le> depth Q'\\<rbrakk>\n       \\<Longrightarrow> depth R \\<le> depth Q\n 2. \\<And>R.\n       \\<lbrakk>Q \\<noteq> Q'; depth P \\<le> depth Q'; Q' \\<in> S;\n        Q \\<in> S; \\<not> depth Q \\<le> depth Q'; R \\<in> S; R \\<noteq> Q;\n        R \\<notin> S - {Q}\\<rbrakk>\n       \\<Longrightarrow> depth R \\<le> depth Q", "by auto"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>S.\n     depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>S.\n     depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>S.\n     depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q\\<in>S.\n     depth (P \\<oplus> Q) \\<le> depth Q \\<and>\n     (\\<forall>R\\<in>S. depth R \\<le> depth Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma depthSubst[simp]:\n  fixes P :: pi\n  and   a :: name\n  and   b :: name\n\n  shows \"depth(P[a::=b]) = depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (P[a::=b]) = depth P", "by(nominal_induct P avoiding: a b rule: pi.strong_inducts, auto)"], ["", "lemma depthTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n\n  assumes Phnf: \"hnf P\"\n\n  shows \"P \\<longmapsto>a[b] \\<prec> P' \\<Longrightarrow> depth P' < depth P\"\n  and   \"P \\<longmapsto>a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\"\n  and   \"P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\"\n  and   \"P \\<longmapsto>a<\\<nu>x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n      depth P' < depth P) &&&\n     (P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n      depth P' < depth P)) &&&\n    (P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n     depth P' < depth P) &&&\n    (P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n     depth P' < depth P)", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 4. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "assume \"P \\<longmapsto>a[b] \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (4 subgoals):\n 1. P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 4. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "thus \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "using assms"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a[b] \\<prec> P'\n  hnf P\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(nominal_induct rule: outputInduct, auto)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "assume Trans: \"P \\<longmapsto>a<x> \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "have Goal: \"\\<And>P a x P'. \\<lbrakk>P \\<longmapsto>a<x> \\<prec> P'; x \\<sharp> P; hnf P\\<rbrakk> \\<Longrightarrow> depth P' < depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "fix P a x P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "assume \"P \\<longmapsto>a<x> \\<prec> P'\" and \"x \\<sharp> P\" and \"hnf P\""], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n  x \\<sharp> P\n  hnf P\n\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "thus \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P'\n  x \\<sharp> P\n  hnf P\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(nominal_induct rule: inputInduct, auto)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<longmapsto> ?a<?x> \\<prec> ?P'; ?x \\<sharp> ?P;\n   hnf ?P\\<rbrakk>\n  \\<Longrightarrow> depth ?P' < depth ?P\n\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "obtain y::name where yFreshP: \"y \\<sharp> P\" and yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P; y \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac name_exists_fresh[of \"(P, P')\"], auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> P'\n\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "from yFreshP' Trans"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<x> \\<prec> P'", "have \"P \\<longmapsto>a<y> \\<prec> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "hence \"depth ([(x, y)] \\<bullet> P') < depth P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. depth ([(x, y)] \\<bullet> P') < depth P", "using yFreshP Phnf"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P\n  hnf P\n\ngoal (1 subgoal):\n 1. depth ([(x, y)] \\<bullet> P') < depth P", "by(rule Goal)"], ["proof (state)\nthis:\n  depth ([(x, y)] \\<bullet> P') < depth P\n\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 3. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "thus \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  depth ([(x, y)] \\<bullet> P') < depth P\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by simp"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (2 subgoals):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "assume \"P \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow> depth P' < depth P\n 2. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "thus \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "using assms"], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<tau> \\<prec> P'\n  hnf P\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(nominal_induct rule: tauInduct, auto simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "assume Trans: \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "have Goal: \"\\<And>P a x P'. \\<lbrakk>P \\<longmapsto>a<\\<nu>x> \\<prec> P'; x \\<sharp> P; hnf P\\<rbrakk> \\<Longrightarrow> depth P' < depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "fix P a x P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "assume \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and \"x \\<sharp> P\" and \"hnf P\""], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> P\n  hnf P\n\ngoal (1 subgoal):\n 1. \\<And>P a x P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> P;\n        hnf P\\<rbrakk>\n       \\<Longrightarrow> depth P' < depth P", "thus \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> P\n  hnf P\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(nominal_induct rule: boundOutputInduct,\n         auto elim: outputCases simp add: residual.inject)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<longmapsto> ?a<\\<nu>?x> \\<prec> ?P'; ?x \\<sharp> ?P;\n   hnf ?P\\<rbrakk>\n  \\<Longrightarrow> depth ?P' < depth ?P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "obtain y::name where yFreshP: \"y \\<sharp> P\" and yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P; y \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule_tac name_exists_fresh[of \"(P, P')\"], auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "from yFreshP' Trans"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have \"P \\<longmapsto>a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "hence \"depth ([(x, y)] \\<bullet> P') < depth P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. depth ([(x, y)] \\<bullet> P') < depth P", "using yFreshP Phnf"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P\n  hnf P\n\ngoal (1 subgoal):\n 1. depth ([(x, y)] \\<bullet> P') < depth P", "by(rule Goal)"], ["proof (state)\nthis:\n  depth ([(x, y)] \\<bullet> P') < depth P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    depth P' < depth P", "thus \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  depth ([(x, y)] \\<bullet> P') < depth P\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by simp"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maxExpandDepth:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  \n  assumes \"R \\<in> expandSet P Q\"\n  and     \"hnf P\"\n  and     \"hnf Q\"\n\n  shows \"depth R \\<le> depth(P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth R \\<le> depth (P \\<parallel> Q)", "using assms"], ["proof (prove)\nusing this:\n  R \\<in> expandSet P Q\n  hnf P\n  hnf Q\n\ngoal (1 subgoal):\n 1. depth R \\<le> depth (P \\<parallel> Q)", "apply(auto simp add: expandSet_def summandTransition[THEN sym] dest: depthTransition)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P') \\<le> depth P\n 2. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth Q') \\<le> depth Q\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 4. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(subgoal_tac \"a \\<noteq> x\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P') \\<le> depth P\n 2. \\<And>a x P'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth Q') \\<le> depth Q\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 6. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 7. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(simp add: summandTransition[THEN sym])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        P \\<longmapsto> a<\\<nu>x> \\<prec> P'; x \\<sharp> Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P') \\<le> depth P\n 2. \\<And>a x P'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth Q') \\<le> depth Q\n 4. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 6. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 7. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(force dest: depthTransition)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 2. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth Q') \\<le> depth Q\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 4. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth Q') \\<le> depth Q\n 2. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 3. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 4. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(subgoal_tac \"a \\<noteq> x\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> Suc (depth Q') \\<le> depth Q\n 2. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 4. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(simp add: summandTransition[THEN sym])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> Suc (depth Q') \\<le> depth Q\n 2. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 3. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 4. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 6. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(force dest: depthTransition)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>hnf P; hnf Q; R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> x\n 2. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 3. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 4. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 5. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x P' b Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P'[x::=b] \\<parallel> Q');\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 2. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 3. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 4. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(force dest: depthTransition)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q; R = \\<tau>.(P' \\<parallel> Q'[x::=b]);\n        P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(force dest: depthTransition)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(subgoal_tac \"a \\<noteq> y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(simp add: summandTransition[THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 2. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 3. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(force dest: depthTransition)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x P' y Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q'));\n        P \\<longmapsto> a<x> \\<prec> P'; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q", "apply(subgoal_tac \"a \\<noteq> y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y", "apply(simp add: summandTransition[THEN sym])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; y \\<sharp> Q; a \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> Suc (depth P' + depth Q') \\<le> depth P + depth Q\n 2. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y", "apply(force dest: depthTransition)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y P' x Q' a.\n       \\<lbrakk>hnf P; hnf Q;\n        R = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P' \\<in> summands P; Q \\<longmapsto> a<x> \\<prec> Q';\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> y", "by blast"], ["", "lemma expandDepth':\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n\n  shows \"\\<exists>R. (R, expandSet P Q) \\<in> sumComposeSet \\<and> depth R \\<le> depth(P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "proof(case_tac \"expandSet P Q = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. expandSet P Q = {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)\n 2. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "assume \"expandSet P Q = {}\""], ["proof (state)\nthis:\n  expandSet P Q = {}\n\ngoal (2 subgoals):\n 1. expandSet P Q = {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)\n 2. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "with Phnf Qhnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf Q\n  expandSet P Q = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf P\n  hnf Q\n  expandSet P Q = {}\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "by(auto intro: sumComposeSet.empty)"], ["proof (state)\nthis:\n  \\<exists>R.\n     (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n     depth R \\<le> depth (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "assume \"expandSet P Q \\<noteq> {}\""], ["proof (state)\nthis:\n  expandSet P Q \\<noteq> {}\n\ngoal (1 subgoal):\n 1. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "moreover"], ["proof (state)\nthis:\n  expandSet P Q \\<noteq> {}\n\ngoal (1 subgoal):\n 1. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "from Phnf Qhnf finiteExpand"], ["proof (chain)\npicking this:\n  hnf P\n  hnf Q\n  finite (expandSet ?P ?Q)", "obtain R where TSC: \"(R, expandSet P Q) \\<in> sumComposeSet\""], ["proof (prove)\nusing this:\n  hnf P\n  hnf Q\n  finite (expandSet ?P ?Q)\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        (R, expandSet P Q) \\<in> sumComposeSet \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: expandComplete)"], ["proof (state)\nthis:\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "ultimately"], ["proof (chain)\npicking this:\n  expandSet P Q \\<noteq> {}\n  (R, expandSet P Q) \\<in> sumComposeSet", "obtain T where \"T \\<in> expandSet P Q\"\n                        and \"depth R \\<le> depth T\""], ["proof (prove)\nusing this:\n  expandSet P Q \\<noteq> {}\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>T \\<in> expandSet P Q; depth R \\<le> depth T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: expandDepth)"], ["proof (state)\nthis:\n  T \\<in> expandSet P Q\n  depth R \\<le> depth T\n\ngoal (1 subgoal):\n 1. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "with Phnf Qhnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf Q\n  T \\<in> expandSet P Q\n  depth R \\<le> depth T", "have \"depth R \\<le> depth(P \\<parallel> Q)\""], ["proof (prove)\nusing this:\n  hnf P\n  hnf Q\n  T \\<in> expandSet P Q\n  depth R \\<le> depth T\n\ngoal (1 subgoal):\n 1. depth R \\<le> depth (P \\<parallel> Q)", "by(force dest: maxExpandDepth)"], ["proof (state)\nthis:\n  depth R \\<le> depth (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. expandSet P Q \\<noteq> {} \\<Longrightarrow>\n    \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "with TSC"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  depth R \\<le> depth (P \\<parallel> Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  depth R \\<le> depth (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n       depth R \\<le> depth (P \\<parallel> Q)", "by blast"], ["proof (state)\nthis:\n  \\<exists>R.\n     (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n     depth R \\<le> depth (P \\<parallel> Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma validToHnf:\n  fixes P :: pi\n\n  assumes \"valid P\"\n\n  shows \"\\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> (depth Q) \\<le> (depth P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "have MatchGoal: \"\\<And>a b P Q. \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P; depth Q \\<le> depth P\\<rbrakk> \\<Longrightarrow>\n                               \\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and> depth Q \\<le> depth ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b P Q.\n       \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P;\n        depth Q \\<le> depth P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n                            depth Q \\<le> depth ([a\\<frown>b]P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b P Q.\n       \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P;\n        depth Q \\<le> depth P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n                            depth Q \\<le> depth ([a\\<frown>b]P)", "fix a b P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b P Q.\n       \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P;\n        depth Q \\<le> depth P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n                            depth Q \\<le> depth ([a\\<frown>b]P)", "assume Qhnf: \"uhnf Q\" and validQ: \"valid Q\" and QeqP: \"Q \\<equiv>\\<^sub>e P\"\n       and QPdepth: \"depth Q \\<le> depth P\""], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e P\n  depth Q \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<And>a b P Q.\n       \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P;\n        depth Q \\<le> depth P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n                            depth Q \\<le> depth ([a\\<frown>b]P)", "show \"\\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and> depth Q \\<le> depth ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "proof(case_tac \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "assume \"a = b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "with QeqP"], ["proof (chain)\npicking this:\n  Q \\<equiv>\\<^sub>e P\n  a = b", "have \"Q \\<equiv>\\<^sub>e [a\\<frown>b]P\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e P\n  a = b\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e [a\\<frown>b]P", "by(blast intro: Sym Trans equiv.Match)"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e [a\\<frown>b]P\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "with Qhnf validQ QPdepth"], ["proof (chain)\npicking this:\n  uhnf Q\n  valid Q\n  depth Q \\<le> depth P\n  Q \\<equiv>\\<^sub>e [a\\<frown>b]P", "show ?thesis"], ["proof (prove)\nusing this:\n  uhnf Q\n  valid Q\n  depth Q \\<le> depth P\n  Q \\<equiv>\\<^sub>e [a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "by force"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n     depth Q \\<le> depth ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "hence \"\\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P", "by(blast intro: Sym Match')"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "ultimately"], ["proof (chain)\npicking this:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\n  uhnf \\<zero>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "by force"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n     depth Q \\<le> depth ([a\\<frown>b]P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n     depth Q \\<le> depth ([a\\<frown>b]P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>uhnf ?Q; valid ?Q; ?Q \\<equiv>\\<^sub>e ?P;\n   depth ?Q \\<le> depth ?P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e [?a\\<frown>?b]?P \\<and>\n                       depth Q \\<le> depth ([?a\\<frown>?b]?P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "from assms"], ["proof (chain)\npicking this:\n  valid P", "show ?thesis"], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "proof(nominal_induct P rule: pi.strong_inducts)"], ["proof (state)\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "case PiNil"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "have \"\\<zero> \\<equiv>\\<^sub>e \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e \\<zero>", "by(rule Refl)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "have \"(depth \\<zero>) \\<le> (depth \\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth \\<zero>", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth \\<zero>\n\ngoal (10 subgoals):\n 1. valid \\<zero> \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 9. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 10. \\<And>pi.\n        \\<lbrakk>valid pi \\<Longrightarrow>\n                 \\<exists>Q.\n                    uhnf Q \\<and>\n                    valid Q \\<and>\n                    Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e !pi \\<and>\n                             depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e \\<zero>\n  depth \\<zero> \\<le> depth \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e \\<zero> \\<and> depth Q \\<le> depth \\<zero>\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Output a b P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"uhnf (a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a{b}.P)", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid(a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a{b}.P)", "by fact"], ["proof (state)\nthis:\n  valid (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  valid (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"a{b}.P \\<equiv>\\<^sub>e a{b}.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<equiv>\\<^sub>e a{b}.P", "by(rule Refl)"], ["proof (state)\nthis:\n  a{b}.P \\<equiv>\\<^sub>e a{b}.P\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  a{b}.P \\<equiv>\\<^sub>e a{b}.P\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"(depth (a{b}.P)) \\<le> (depth (a{b}.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a{b}.P) \\<le> depth (a{b}.P)", "by simp"], ["proof (state)\nthis:\n  depth (a{b}.P) \\<le> depth (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (name1{name2}.pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 8. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 9. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a{b}.P)\n  valid (a{b}.P)\n  a{b}.P \\<equiv>\\<^sub>e a{b}.P\n  depth (a{b}.P) \\<le> depth (a{b}.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a{b}.P)\n  valid (a{b}.P)\n  a{b}.P \\<equiv>\\<^sub>e a{b}.P\n  depth (a{b}.P) \\<le> depth (a{b}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e a{b}.P \\<and> depth Q \\<le> depth (a{b}.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e a{b}.P \\<and> depth Q \\<le> depth (a{b}.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Tau P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"uhnf (\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (\\<tau>.P)", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid (\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (\\<tau>.P)", "by fact"], ["proof (state)\nthis:\n  valid (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  valid (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"\\<tau>.(P) \\<equiv>\\<^sub>e \\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<equiv>\\<^sub>e \\<tau>.P", "by(rule Refl)"], ["proof (state)\nthis:\n  \\<tau>.P \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  \\<tau>.P \\<equiv>\\<^sub>e \\<tau>.P\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"(depth (\\<tau>.(P))) \\<le> (depth (\\<tau>.(P)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (\\<tau>.P) \\<le> depth (\\<tau>.P)", "by simp"], ["proof (state)\nthis:\n  depth (\\<tau>.P) \\<le> depth (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e \\<tau>.pi \\<and>\n                            depth Q \\<le> depth (\\<tau>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 7. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 8. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (\\<tau>.P)\n  valid (\\<tau>.P)\n  \\<tau>.P \\<equiv>\\<^sub>e \\<tau>.P\n  depth (\\<tau>.P) \\<le> depth (\\<tau>.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (\\<tau>.P)\n  valid (\\<tau>.P)\n  \\<tau>.P \\<equiv>\\<^sub>e \\<tau>.P\n  depth (\\<tau>.P) \\<le> depth (\\<tau>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e \\<tau>.P \\<and> depth Q \\<le> depth (\\<tau>.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e \\<tau>.P \\<and> depth Q \\<le> depth (\\<tau>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Input a x P)"], ["proof (state)\nthis:\n  x \\<sharp> a\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid (a<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"uhnf (a<x>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a<x>.P)", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf (a<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid (a<x>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a<x>.P)", "by fact"], ["proof (state)\nthis:\n  valid (a<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  valid (a<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"a<x>.P \\<equiv>\\<^sub>e a<x>.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<equiv>\\<^sub>e a<x>.P", "by(rule Refl)"], ["proof (state)\nthis:\n  a<x>.P \\<equiv>\\<^sub>e a<x>.P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  a<x>.P \\<equiv>\\<^sub>e a<x>.P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"(depth (a<x>.P)) \\<le> (depth (a<x>.P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a<x>.P) \\<le> depth (a<x>.P)", "by simp"], ["proof (state)\nthis:\n  depth (a<x>.P) \\<le> depth (a<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>name2 \\<sharp> name1;\n        valid pi \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (name1<name2>.pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 6. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 7. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a<x>.P)\n  valid (a<x>.P)\n  a<x>.P \\<equiv>\\<^sub>e a<x>.P\n  depth (a<x>.P) \\<le> depth (a<x>.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a<x>.P)\n  valid (a<x>.P)\n  a<x>.P \\<equiv>\\<^sub>e a<x>.P\n  depth (a<x>.P) \\<le> depth (a<x>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e a<x>.P \\<and> depth Q \\<le> depth (a<x>.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e a<x>.P \\<and> depth Q \\<le> depth (a<x>.P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Match a b P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  valid ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "hence \"valid P\""], ["proof (prove)\nusing this:\n  valid ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  valid P\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid P \\<Longrightarrow> \\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "obtain Q where Qhnf: \"uhnf Q\" and validQ: \"valid Q\" and QeqP: \"Q \\<equiv>\\<^sub>e P\" \n                          and QPdepth: \"depth Q \\<le> depth P\""], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P;\n         depth Q \\<le> depth P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e P\n  depth Q \\<le> depth P\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<frown>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 5. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 6. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "thus ?case"], ["proof (prove)\nusing this:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e P\n  depth Q \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n       depth Q \\<le> depth ([a\\<frown>b]P)", "by(rule MatchGoal)"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e [a\\<frown>b]P \\<and>\n     depth Q \\<le> depth ([a\\<frown>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Mismatch a b P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid ([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  valid ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "hence \"valid P\""], ["proof (prove)\nusing this:\n  valid ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  valid P\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid P \\<Longrightarrow> \\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "obtain Q where Qhnf: \"uhnf Q\" and validQ: \"valid Q\" and QeqP: \"Q \\<equiv>\\<^sub>e P\" \n                          and QPdepth: \"depth Q \\<le> depth P\""], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P;\n         depth Q \\<le> depth P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e P\n  depth Q \\<le> depth P\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e [name1\\<noteq>name2]pi \\<and>\n                            depth Q \\<le> depth ([name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 4. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 5. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "proof(case_tac \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "assume \"a = b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "hence \"\\<zero> \\<equiv>\\<^sub>e [a\\<noteq>b]P\""], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>b]P", "by(blast intro: Sym Mismatch')"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>b]P\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>b]P\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "ultimately"], ["proof (chain)\npicking this:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>b]P\n  uhnf \\<zero>", "show ?case"], ["proof (prove)\nusing this:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>b]P\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "by force"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n     depth Q \\<le> depth ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "with QeqP"], ["proof (chain)\npicking this:\n  Q \\<equiv>\\<^sub>e P\n  a \\<noteq> b", "have \"Q \\<equiv>\\<^sub>e [a\\<noteq>b]P\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e P\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e [a\\<noteq>b]P", "by(blast intro: Sym Trans equiv.Mismatch)"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e [a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "with Qhnf validQ QPdepth"], ["proof (chain)\npicking this:\n  uhnf Q\n  valid Q\n  depth Q \\<le> depth P\n  Q \\<equiv>\\<^sub>e [a\\<noteq>b]P", "show ?case"], ["proof (prove)\nusing this:\n  uhnf Q\n  valid Q\n  depth Q \\<le> depth P\n  Q \\<equiv>\\<^sub>e [a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth ([a\\<noteq>b]P)", "by force"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n     depth Q \\<le> depth ([a\\<noteq>b]P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e [a\\<noteq>b]P \\<and>\n     depth Q \\<le> depth ([a\\<noteq>b]P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Sum P Q)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid Q \\<Longrightarrow>\n  \\<exists>Qa.\n     uhnf Qa \\<and>\n     valid Qa \\<and> Qa \\<equiv>\\<^sub>e Q \\<and> depth Qa \\<le> depth Q\n  valid (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid(P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  valid (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "hence validP: \"valid P\" and validQ: \"valid Q\""], ["proof (prove)\nusing this:\n  valid (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. valid P &&& valid Q", "by simp+"], ["proof (state)\nthis:\n  valid P\n  valid Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> (depth P') \\<le> (depth P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "have \"valid P \\<Longrightarrow> \\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> (depth P') \\<le> (depth P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "with validP"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "show ?thesis"], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "obtain P' where P'hnf: \"uhnf P'\" and P'eqP: \"P' \\<equiv>\\<^sub>e P\" and validP': \"valid P'\"\n                     and P'depth: \"(depth P') \\<le> (depth P)\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>uhnf P'; P' \\<equiv>\\<^sub>e P; valid P';\n         depth P' \\<le> depth P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf P'\n  P' \\<equiv>\\<^sub>e P\n  valid P'\n  depth P' \\<le> depth P\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"\\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> (depth Q') \\<le> (depth Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "have \"valid Q \\<Longrightarrow> \\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> (depth Q') \\<le> (depth Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid Q \\<Longrightarrow>\n    \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "by fact"], ["proof (state)\nthis:\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "with validQ"], ["proof (chain)\npicking this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "show ?thesis"], ["proof (prove)\nusing this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "obtain Q' where Q'hnf: \"uhnf Q'\" and Q'eqQ: \"Q' \\<equiv>\\<^sub>e Q\" and validQ': \"valid Q'\"\n                     and Q'depth: \"(depth Q') \\<le> (depth Q)\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>uhnf Q'; Q' \\<equiv>\\<^sub>e Q; valid Q';\n         depth Q' \\<le> depth Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q'\n  Q' \\<equiv>\\<^sub>e Q\n  valid Q'\n  depth Q' \\<le> depth Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from P'hnf Q'hnf validP' validQ'"], ["proof (chain)\npicking this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'", "obtain R where Rhnf: \"uhnf R\" and validR: \"valid R\"\n                                              and P'Q'eqR: \"P' \\<oplus> Q' \\<equiv>\\<^sub>e R\"\n                                              and Rdepth: \"depth R \\<le> depth(P' \\<oplus> Q')\""], ["proof (prove)\nusing this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n         depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac uhnfSum)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> uhnf ?Q6\n 2. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> valid P'\n 3. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> valid ?Q6\n 4. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q';\n     \\<exists>R.\n        uhnf R \\<and>\n        valid R \\<and>\n        P' \\<oplus> ?Q6 \\<equiv>\\<^sub>e R \\<and>\n        depth R \\<le> depth (P' \\<oplus> ?Q6)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q';\n     \\<exists>R.\n        uhnf R \\<and>\n        valid R \\<and>\n        P' \\<oplus> Q' \\<equiv>\\<^sub>e R \\<and>\n        depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  uhnf R\n  valid R\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P' \\<oplus> Q')\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from validP' validQ'"], ["proof (chain)\npicking this:\n  valid P'\n  valid Q'", "have \"valid(P' \\<oplus> Q')\""], ["proof (prove)\nusing this:\n  valid P'\n  valid Q'\n\ngoal (1 subgoal):\n 1. valid (P' \\<oplus> Q')", "by simp"], ["proof (state)\nthis:\n  valid (P' \\<oplus> Q')\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from P'eqP Q'eqQ P'Q'eqR"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R", "have \"P \\<oplus> Q \\<equiv>\\<^sub>e R\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<equiv>\\<^sub>e R", "by(blast intro: Sym SumPres' Trans)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from Rdepth P'depth Q'depth"], ["proof (chain)\npicking this:\n  depth R \\<le> depth (P' \\<oplus> Q')\n  depth P' \\<le> depth P\n  depth Q' \\<le> depth Q", "have \"depth R \\<le> depth(P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  depth R \\<le> depth (P' \\<oplus> Q')\n  depth P' \\<le> depth P\n  depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. depth R \\<le> depth (P \\<oplus> Q)", "by auto"], ["proof (state)\nthis:\n  depth R \\<le> depth (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<oplus> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<oplus> pi2)\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 3. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 4. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P \\<oplus> Q)", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Qa.\n       uhnf Qa \\<and>\n       valid Qa \\<and>\n       Qa \\<equiv>\\<^sub>e P \\<oplus> Q \\<and>\n       depth Qa \\<le> depth (P \\<oplus> Q)", "using validR Rhnf"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P \\<oplus> Q)\n  valid R\n  uhnf R\n\ngoal (1 subgoal):\n 1. \\<exists>Qa.\n       uhnf Qa \\<and>\n       valid Qa \\<and>\n       Qa \\<equiv>\\<^sub>e P \\<oplus> Q \\<and>\n       depth Qa \\<le> depth (P \\<oplus> Q)", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>Qa.\n     uhnf Qa \\<and>\n     valid Qa \\<and>\n     Qa \\<equiv>\\<^sub>e P \\<oplus> Q \\<and>\n     depth Qa \\<le> depth (P \\<oplus> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Par P Q)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid Q \\<Longrightarrow>\n  \\<exists>Qa.\n     uhnf Qa \\<and>\n     valid Qa \\<and> Qa \\<equiv>\\<^sub>e Q \\<and> depth Qa \\<le> depth Q\n  valid (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid(P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  valid (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "hence validP: \"valid P\" and validQ: \"valid Q\""], ["proof (prove)\nusing this:\n  valid (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. valid P &&& valid Q", "by simp+"], ["proof (state)\nthis:\n  valid P\n  valid Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> (depth P') \\<le> (depth P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "have \"valid P \\<Longrightarrow> \\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> (depth P') \\<le> (depth P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "with validP"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "show ?thesis"], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "obtain P' where P'hnf: \"uhnf P'\" and P'eqP: \"P' \\<equiv>\\<^sub>e P\" and validP': \"valid P'\"\n                     and P'depth: \"(depth P') \\<le> (depth P)\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>uhnf P'; P' \\<equiv>\\<^sub>e P; valid P';\n         depth P' \\<le> depth P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf P'\n  P' \\<equiv>\\<^sub>e P\n  valid P'\n  depth P' \\<le> depth P\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"\\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> (depth Q') \\<le> (depth Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "have \"valid Q \\<Longrightarrow> \\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> (depth Q') \\<le> (depth Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid Q \\<Longrightarrow>\n    \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "by fact"], ["proof (state)\nthis:\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "with validQ"], ["proof (chain)\npicking this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "show ?thesis"], ["proof (prove)\nusing this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "obtain Q' where Q'hnf: \"uhnf Q'\" and Q'eqQ: \"Q' \\<equiv>\\<^sub>e Q\" and validQ': \"valid Q'\"\n                     and Q'depth: \"(depth Q') \\<le> (depth Q)\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>uhnf Q'; Q' \\<equiv>\\<^sub>e Q; valid Q';\n         depth Q' \\<le> depth Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q'\n  Q' \\<equiv>\\<^sub>e Q\n  valid Q'\n  depth Q' \\<le> depth Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from P'hnf Q'hnf"], ["proof (chain)\npicking this:\n  uhnf P'\n  uhnf Q'", "obtain R where Exp: \"(R, expandSet P' Q') \\<in> sumComposeSet\" and Rdepth: \"depth R \\<le> depth(P' \\<parallel> Q')\""], ["proof (prove)\nusing this:\n  uhnf P'\n  uhnf Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>(R, expandSet P' Q') \\<in> sumComposeSet;\n         depth R \\<le> depth (P' \\<parallel> Q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: expandDepth' simp add: uhnf_def)"], ["proof (state)\nthis:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  depth R \\<le> depth (P' \\<parallel> Q')\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from Exp P'hnf Q'hnf"], ["proof (chain)\npicking this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  uhnf P'\n  uhnf Q'", "have P'Q'eqR: \"P' \\<parallel> Q' \\<equiv>\\<^sub>e R\""], ["proof (prove)\nusing this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  uhnf P'\n  uhnf Q'\n\ngoal (1 subgoal):\n 1. P' \\<parallel> Q' \\<equiv>\\<^sub>e R", "by(force intro: Expand simp add: uhnf_def)"], ["proof (state)\nthis:\n  P' \\<parallel> Q' \\<equiv>\\<^sub>e R\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from P'hnf Q'hnf validP' validQ'"], ["proof (chain)\npicking this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'", "have \"\\<forall>P \\<in> (expandSet P' Q'). uhnf P \\<and> valid P\""], ["proof (prove)\nusing this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'\n\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P", "by(blast dest: validExpand)"], ["proof (state)\nthis:\n  \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "with Exp"], ["proof (chain)\npicking this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P", "obtain R' where R'hnf: \"uhnf R'\" and validR': \"valid R'\"\n                                              and ReqR': \"R \\<equiv>\\<^sub>e R'\"\n                                              and R'depth: \"depth R' \\<le> depth R\""], ["proof (prove)\nusing this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>uhnf R'; valid R'; R \\<equiv>\\<^sub>e R';\n         depth R' \\<le> depth R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: expandHnf)"], ["proof (state)\nthis:\n  uhnf R'\n  valid R'\n  R \\<equiv>\\<^sub>e R'\n  depth R' \\<le> depth R\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from P'eqP Q'eqQ P'Q'eqR ReqR'"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<parallel> Q' \\<equiv>\\<^sub>e R\n  R \\<equiv>\\<^sub>e R'", "have \"P \\<parallel> Q \\<equiv>\\<^sub>e R'\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<parallel> Q' \\<equiv>\\<^sub>e R\n  R \\<equiv>\\<^sub>e R'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<equiv>\\<^sub>e R'", "by(blast intro: Sym ParPres Trans)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<equiv>\\<^sub>e R'\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<equiv>\\<^sub>e R'\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from Rdepth P'depth Q'depth R'depth"], ["proof (chain)\npicking this:\n  depth R \\<le> depth (P' \\<parallel> Q')\n  depth P' \\<le> depth P\n  depth Q' \\<le> depth Q\n  depth R' \\<le> depth R", "have \"depth R' \\<le> depth(P \\<parallel> Q)\""], ["proof (prove)\nusing this:\n  depth R \\<le> depth (P' \\<parallel> Q')\n  depth P' \\<le> depth P\n  depth Q' \\<le> depth Q\n  depth R' \\<le> depth R\n\ngoal (1 subgoal):\n 1. depth R' \\<le> depth (P \\<parallel> Q)", "by auto"], ["proof (state)\nthis:\n  depth R' \\<le> depth (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>valid pi1 \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi1 \\<and> depth Q \\<le> depth pi1;\n        valid pi2 \\<Longrightarrow>\n        \\<exists>Q.\n           uhnf Q \\<and>\n           valid Q \\<and>\n           Q \\<equiv>\\<^sub>e pi2 \\<and> depth Q \\<le> depth pi2;\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e pi1 \\<parallel> pi2 \\<and>\n                            depth Q \\<le> depth (pi1 \\<parallel> pi2)\n 2. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 3. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<equiv>\\<^sub>e R'\n  depth R' \\<le> depth (P \\<parallel> Q)", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<equiv>\\<^sub>e R'\n  depth R' \\<le> depth (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Qa.\n       uhnf Qa \\<and>\n       valid Qa \\<and>\n       Qa \\<equiv>\\<^sub>e P \\<parallel> Q \\<and>\n       depth Qa \\<le> depth (P \\<parallel> Q)", "using validR' R'hnf"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<equiv>\\<^sub>e R'\n  depth R' \\<le> depth (P \\<parallel> Q)\n  valid R'\n  uhnf R'\n\ngoal (1 subgoal):\n 1. \\<exists>Qa.\n       uhnf Qa \\<and>\n       valid Qa \\<and>\n       Qa \\<equiv>\\<^sub>e P \\<parallel> Q \\<and>\n       depth Qa \\<le> depth (P \\<parallel> Q)", "by(blast dest: Sym)"], ["proof (state)\nthis:\n  \\<exists>Qa.\n     uhnf Qa \\<and>\n     valid Qa \\<and>\n     Qa \\<equiv>\\<^sub>e P \\<parallel> Q \\<and>\n     depth Qa \\<le> depth (P \\<parallel> Q)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Res x P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid (<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  valid (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "moreover"], ["proof (state)\nthis:\n  valid P\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid P \\<Longrightarrow> \\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "ultimately"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P", "obtain Q where Qhnf: \"uhnf Q\" and validQ: \"valid Q\" and QeqP: \"Q \\<equiv>\\<^sub>e P\"\n                          and QPDepth: \"depth Q \\<le> depth P\""], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e P;\n         depth Q \\<le> depth P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e P\n  depth Q \\<le> depth P\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>name>pi)\n 2. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "show ?case"], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth Q \\<le> depth (<\\<nu>x>P)", "proof(nominal_induct P avoiding: x rule: pi.strong_inducts)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "case PiNil"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>", "have \"x \\<sharp> \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<zero>", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> \\<zero>\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> \\<zero>\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>", "by(blast intro: Sym ResFresh)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       valid \\<zero> \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n          depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 6. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 9. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 10. \\<And>pi x.\n        \\<lbrakk>\\<And>b.\n                    valid pi \\<Longrightarrow>\n                    \\<exists>Q.\n                       uhnf Q \\<and>\n                       valid Q \\<and>\n                       Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                       depth Q \\<le> depth (<\\<nu>b>pi);\n         valid (!pi)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Q.\n                             uhnf Q \\<and>\n                             valid Q \\<and>\n                             Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                             depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>\n  depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>\\<zero>\n  depth \\<zero> \\<le> depth (<\\<nu>x>\\<zero>)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n       depth Q \\<le> depth (<\\<nu>x>\\<zero>)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>\\<zero> \\<and>\n     depth Q \\<le> depth (<\\<nu>x>\\<zero>)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Output a b P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid(a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a{b}.P)", "by fact"], ["proof (state)\nthis:\n  valid (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (a{b}.P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1{name2}.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1{name2}.pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 5. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 8. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 9. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "proof(case_tac \"x=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "assume \"x = a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P", "by(blast intro: ResOutput' Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"depth \\<zero> \\<le> depth(<\\<nu>x>x{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "ultimately"], ["proof (chain)\npicking this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)", "show ?case"], ["proof (prove)\nusing this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x{b}.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x{b}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "assume xineqa: \"x \\<noteq> a\""], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "proof(case_tac \"x=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "assume \"x=b\""], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "from xineqa"], ["proof (chain)\npicking this:\n  x \\<noteq> a", "have \"uhnf(<\\<nu>x>a{x}.P)\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. uhnf (<\\<nu>x>a{x}.P)", "by(force simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  uhnf (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(<\\<nu>x>a{x}.P)\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (<\\<nu>x>a{x}.P)", "by simp"], ["proof (state)\nthis:\n  valid (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  valid (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"<\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P", "by(rule Refl)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"depth(<\\<nu>x>a{x}.P) \\<le> depth(<\\<nu>x>a{x}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)", "by simp"], ["proof (state)\nthis:\n  depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n 2. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "ultimately"], ["proof (chain)\npicking this:\n  x = b\n  uhnf (<\\<nu>x>a{x}.P)\n  valid (<\\<nu>x>a{x}.P)\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n  depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)", "show ?case"], ["proof (prove)\nusing this:\n  x = b\n  uhnf (<\\<nu>x>a{x}.P)\n  valid (<\\<nu>x>a{x}.P)\n  <\\<nu>x>a{x}.P \\<equiv>\\<^sub>e <\\<nu>x>a{x}.P\n  depth (<\\<nu>x>a{x}.P) \\<le> depth (<\\<nu>x>a{x}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "assume xineqb: \"x \\<noteq> b\""], ["proof (state)\nthis:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"uhnf(a{b}.(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a{b}.(<\\<nu>x>P))", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  uhnf (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(a{b}.(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (a{b}.(<\\<nu>x>P))", "by simp"], ["proof (state)\nthis:\n  valid (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  valid (a{b}.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "from xineqa xineqb"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  x \\<noteq> b", "have \"a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P", "by(blast intro: ResOutput Sym)"], ["proof (state)\nthis:\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "moreover"], ["proof (state)\nthis:\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "have \"depth(a{b}.(<\\<nu>x>P)) \\<le> depth(<\\<nu>x>a{b}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)", "by simp"], ["proof (state)\nthis:\n  depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a{b}.(<\\<nu>x>P))\n  valid (a{b}.(<\\<nu>x>P))\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n  depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a{b}.(<\\<nu>x>P))\n  valid (a{b}.(<\\<nu>x>P))\n  a{b}.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P\n  depth (a{b}.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a{b}.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a{b}.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a{b}.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Tau P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid(\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (\\<tau>.P)", "by fact"], ["proof (state)\nthis:\n  valid (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (\\<tau>.P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"uhnf(\\<tau>.(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (\\<tau>.(<\\<nu>x>P))", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(\\<tau>.(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (\\<tau>.(<\\<nu>x>P))", "by simp"], ["proof (state)\nthis:\n  valid (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  valid (\\<tau>.(<\\<nu>x>P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.(P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P", "by(blast intro: ResTau Sym)"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"depth(\\<tau>.(<\\<nu>x>P)) \\<le> depth(<\\<nu>x>\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)", "by simp"], ["proof (state)\nthis:\n  depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>\\<tau>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 4. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 7. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 8. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n  valid (\\<tau>.(<\\<nu>x>P))\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n  depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (\\<tau>.(<\\<nu>x>P))\n  valid (\\<tau>.(<\\<nu>x>P))\n  \\<tau>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P\n  depth (\\<tau>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>\\<tau>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>\\<tau>.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>\\<tau>.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>\\<tau>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Input a y P)"], ["proof (state)\nthis:\n  y \\<sharp> x\n  y \\<sharp> a\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid (a<y>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid(a<y>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (a<y>.P)", "by fact"], ["proof (state)\nthis:\n  valid (a<y>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\""], ["proof (prove)\nusing this:\n  valid (a<y>.P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"y \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> x", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> x\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence yineqx: \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  y \\<sharp> x\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by simp"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> name1;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>name1<name2>.pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>name1<name2>.pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 3. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 6. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 7. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "proof(case_tac \"x=a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "assume \"x = a\""], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "have \"\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P", "by(blast intro: ResInput' Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "have \"depth \\<zero> \\<le> depth(<\\<nu>x>x<y>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "ultimately"], ["proof (chain)\npicking this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)", "show ?case"], ["proof (prove)\nusing this:\n  x = a\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>x<y>.P\n  depth \\<zero> \\<le> depth (<\\<nu>x>x<y>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "assume xineqa: \"x \\<noteq> a\""], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "have \"uhnf(a<y>.(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf (a<y>.(<\\<nu>x>P))", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  uhnf (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "from validP"], ["proof (chain)\npicking this:\n  valid P", "have \"valid(a<y>.(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. valid (a<y>.(<\\<nu>x>P))", "by simp"], ["proof (state)\nthis:\n  valid (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  valid (a<y>.(<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "from xineqa yineqx"], ["proof (chain)\npicking this:\n  x \\<noteq> a\n  y \\<noteq> x", "have \"a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P", "by(blast intro: ResInput Sym)"], ["proof (state)\nthis:\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "moreover"], ["proof (state)\nthis:\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "have \"depth(a<y>.(<\\<nu>x>P)) \\<le> depth(<\\<nu>x>a<y>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)", "by simp"], ["proof (state)\nthis:\n  depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf (a<y>.(<\\<nu>x>P))\n  valid (a<y>.(<\\<nu>x>P))\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n  depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf (a<y>.(<\\<nu>x>P))\n  valid (a<y>.(<\\<nu>x>P))\n  a<y>.(<\\<nu>x>P) \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P\n  depth (a<y>.(<\\<nu>x>P)) \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>a<y>.P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>a<y>.P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>a<y>.P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Match a b P x)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  valid ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence \"valid P\""], ["proof (prove)\nusing this:\n  valid ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  valid P\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<And>x. valid P \\<Longrightarrow> \\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> \n                                           depth Q \\<le> depth(<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       valid P \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and>\n          depth Q \\<le> depth (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)", "obtain Q where Qhnf: \"uhnf Q\" and validQ: \"valid Q\"\n                            and QeqP: \"Q \\<equiv>\\<^sub>e (<\\<nu>x>P)\" \n                            and QPdepth: \"depth Q \\<le> depth(<\\<nu>x>P)\""], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e <\\<nu>x>P;\n         depth Q \\<le> depth (<\\<nu>x>P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth Q \\<le> depth (<\\<nu>x>P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<frown>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<frown>name2]pi)\n 2. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 5. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 6. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "proof(case_tac \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "assume \"a=b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "moreover"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "have \"Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P", "have \"P \\<equiv>\\<^sub>e [a\\<frown>a]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e [a\\<frown>a]P", "by(blast intro: equiv.Match Sym)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e [a\\<frown>a]P\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P", "hence \"<\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e [a\\<frown>a]P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P", "by(rule ResPres)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P", "with QeqP"], ["proof (chain)\npicking this:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>P\n  <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>P\n  <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "moreover"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "from QPdepth"], ["proof (chain)\npicking this:\n  depth Q \\<le> depth (<\\<nu>x>P)", "have \"depth Q \\<le> depth(<\\<nu>x>[a\\<frown>a]P)\""], ["proof (prove)\nusing this:\n  depth Q \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. depth Q \\<le> depth (<\\<nu>x>[a\\<frown>a]P)", "by simp"], ["proof (state)\nthis:\n  depth Q \\<le> depth (<\\<nu>x>[a\\<frown>a]P)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "ultimately"], ["proof (chain)\npicking this:\n  a = b\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n  depth Q \\<le> depth (<\\<nu>x>[a\\<frown>a]P)", "show ?case"], ["proof (prove)\nusing this:\n  a = b\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n  depth Q \\<le> depth (<\\<nu>x>[a\\<frown>a]P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "using Qhnf validQ"], ["proof (prove)\nusing this:\n  a = b\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>a]P\n  depth Q \\<le> depth (<\\<nu>x>[a\\<frown>a]P)\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "assume aineqb: \"a\\<noteq>b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "have \"\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P", "from aineqb"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "have \"\\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P", "by(blast intro: Match' Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P", "hence \"<\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\""], ["proof (prove)\nusing this:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P", "by(rule ResPres)"], ["proof (state)\nthis:\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P", "thus ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P", "by(blast intro: ResNil Trans Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "have \"depth \\<zero> \\<le> depth(<\\<nu>x>[a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "ultimately"], ["proof (chain)\npicking this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\n  depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "show ?case"], ["proof (prove)\nusing this:\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P\n  depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<frown>b]P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>[a\\<frown>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Mismatch a b P x)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  valid ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence \"valid P\""], ["proof (prove)\nusing this:\n  valid ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  valid P\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<And>x. valid P \\<Longrightarrow> \\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> \n                                           depth Q \\<le> depth(<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       valid P \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and>\n          depth Q \\<le> depth (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)", "obtain Q where Qhnf: \"uhnf Q\" and validQ: \"valid Q\"\n                            and QeqP: \"Q \\<equiv>\\<^sub>e (<\\<nu>x>P)\" \n                            and QPdepth: \"depth Q \\<le> depth(<\\<nu>x>P)\""], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e <\\<nu>x>P;\n         depth Q \\<le> depth (<\\<nu>x>P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth Q \\<le> depth (<\\<nu>x>P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>[name1\\<noteq>name2]pi \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>[name1\\<noteq>name2]pi)\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 4. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 5. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "proof(case_tac \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "assume \"a=b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "moreover"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "have \"uhnf \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf \\<zero>", "by(simp add: uhnf_def)"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "moreover"], ["proof (state)\nthis:\n  uhnf \\<zero>\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "have \"valid \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid \\<zero>", "by simp"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "moreover"], ["proof (state)\nthis:\n  valid \\<zero>\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "have \"\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P", "have \"\\<zero> \\<equiv>\\<^sub>e [a\\<noteq>a]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>a]P", "by(blast intro: Mismatch' Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>a]P\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P", "hence \"<\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\""], ["proof (prove)\nusing this:\n  \\<zero> \\<equiv>\\<^sub>e [a\\<noteq>a]P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P", "by(rule ResPres)"], ["proof (state)\nthis:\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P", "thus ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>x>\\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\n\ngoal (1 subgoal):\n 1. \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P", "by(blast intro: ResNil Trans Sym)"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "moreover"], ["proof (state)\nthis:\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "have \"depth \\<zero> \\<le> depth(<\\<nu>x>[a\\<noteq>a]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<noteq>a]P)", "by simp"], ["proof (state)\nthis:\n  depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<noteq>a]P)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n 2. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "ultimately"], ["proof (chain)\npicking this:\n  a = b\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\n  depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<noteq>a]P)", "show ?case"], ["proof (prove)\nusing this:\n  a = b\n  uhnf \\<zero>\n  valid \\<zero>\n  \\<zero> \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>a]P\n  depth \\<zero> \\<le> depth (<\\<nu>x>[a\\<noteq>a]P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "assume aineqb: \"a\\<noteq>b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "have \"Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P", "from aineqb"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "have \"P \\<equiv>\\<^sub>e [a\\<noteq>b]P\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e [a\\<noteq>b]P", "by(blast intro: equiv.Mismatch Sym)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e [a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P", "hence \"<\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<^sub>e [a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P", "by(rule ResPres)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P", "with QeqP"], ["proof (chain)\npicking this:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>P\n  <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>P\n  <\\<nu>x>P \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P", "by(blast intro: Trans)"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "moreover"], ["proof (state)\nthis:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "from QPdepth"], ["proof (chain)\npicking this:\n  depth Q \\<le> depth (<\\<nu>x>P)", "have \"depth Q \\<le> depth(<\\<nu>x>[a\\<noteq>b]P)\""], ["proof (prove)\nusing this:\n  depth Q \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "by simp"], ["proof (state)\nthis:\n  depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n  depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n  depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "using Qhnf validQ"], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P\n  depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n       depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>[a\\<noteq>b]P \\<and>\n     depth Q \\<le> depth (<\\<nu>x>[a\\<noteq>b]P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Sum P Q x)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid Q \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>Q \\<and> depth Q \\<le> depth (<\\<nu>?b>Q)\n  valid (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid(P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  valid (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\" and validQ: \"valid Q\""], ["proof (prove)\nusing this:\n  valid (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. valid P &&& valid Q", "by simp+"], ["proof (state)\nthis:\n  valid P\n  valid Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> (depth P') \\<le> (depth(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "have \"valid P \\<Longrightarrow> \\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> (depth P') \\<le> (depth (<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P \\<Longrightarrow>\n    \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "with validP"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "show ?thesis"], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and>\n       P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)", "obtain P' where P'hnf: \"uhnf P'\" and P'eqP: \"P' \\<equiv>\\<^sub>e <\\<nu>x>P\" and validP': \"valid P'\"\n                       and P'depth: \"(depth P') \\<le> (depth(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>uhnf P'; P' \\<equiv>\\<^sub>e <\\<nu>x>P; valid P';\n         depth P' \\<le> depth (<\\<nu>x>P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf P'\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  valid P'\n  depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> (depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "have \"valid Q \\<Longrightarrow> \\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> (depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid Q \\<Longrightarrow>\n    \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "by fact"], ["proof (state)\nthis:\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "with validQ"], ["proof (chain)\npicking this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and>\n       Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)", "obtain Q' where Q'hnf: \"uhnf Q'\" and Q'eqQ: \"Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\" and validQ': \"valid Q'\"\n                       and Q'depth: \"(depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and> depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>uhnf Q'; Q' \\<equiv>\\<^sub>e <\\<nu>x>Q; valid Q';\n         depth Q' \\<le> depth (<\\<nu>x>Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q'\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  valid Q'\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from P'hnf Q'hnf validP' validQ'"], ["proof (chain)\npicking this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'", "obtain R where Rhnf: \"uhnf R\" and validR: \"valid R\"\n                                                and P'Q'eqR: \"P' \\<oplus> Q' \\<equiv>\\<^sub>e R\"\n                                                and Rdepth: \"depth R \\<le> depth(P' \\<oplus> Q')\""], ["proof (prove)\nusing this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n         depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac uhnfSum)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> uhnf ?Q6\n 2. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> valid P'\n 3. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q'\\<rbrakk>\n    \\<Longrightarrow> valid ?Q6\n 4. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q';\n     \\<exists>R.\n        uhnf R \\<and>\n        valid R \\<and>\n        P' \\<oplus> ?Q6 \\<equiv>\\<^sub>e R \\<and>\n        depth R \\<le> depth (P' \\<oplus> ?Q6)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>R.\n                \\<lbrakk>uhnf R; valid R; P' \\<oplus> Q' \\<equiv>\\<^sub>e R;\n                 depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     uhnf Q'; valid P'; valid Q';\n     \\<exists>R.\n        uhnf R \\<and>\n        valid R \\<and>\n        P' \\<oplus> Q' \\<equiv>\\<^sub>e R \\<and>\n        depth R \\<le> depth (P' \\<oplus> Q')\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  uhnf R\n  valid R\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (P' \\<oplus> Q')\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from P'eqP Q'eqQ P'Q'eqR"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R", "have \"<\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  P' \\<oplus> Q' \\<equiv>\\<^sub>e R\n\ngoal (1 subgoal):\n 1. <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R", "by(blast intro: Sym SumPres' SumRes Trans)"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from Rdepth P'depth Q'depth"], ["proof (chain)\npicking this:\n  depth R \\<le> depth (P' \\<oplus> Q')\n  depth P' \\<le> depth (<\\<nu>x>P)\n  depth Q' \\<le> depth (<\\<nu>x>Q)", "have \"depth R \\<le> depth(<\\<nu>x>(P \\<oplus> Q))\""], ["proof (prove)\nusing this:\n  depth R \\<le> depth (P' \\<oplus> Q')\n  depth P' \\<le> depth (<\\<nu>x>P)\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "by auto"], ["proof (state)\nthis:\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<oplus> pi2) \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>(pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 3. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 4. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>(P \\<oplus> Q) \\<and>\n       depth Q \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "using validR Rhnf"], ["proof (prove)\nusing this:\n  <\\<nu>x>(P \\<oplus> Q) \\<equiv>\\<^sub>e R\n  depth R \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n  valid R\n  uhnf R\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>(P \\<oplus> Q) \\<and>\n       depth Q \\<le> depth (<\\<nu>x>(P \\<oplus> Q))", "by(blast intro: Sym)"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>(P \\<oplus> Q) \\<and>\n     depth Q \\<le> depth (<\\<nu>x>(P \\<oplus> Q))\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Par P Q x)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid Q \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>Q \\<and> depth Q \\<le> depth (<\\<nu>?b>Q)\n  valid (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid(P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  valid (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence validP: \"valid P\" and validQ: \"valid Q\""], ["proof (prove)\nusing this:\n  valid (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. valid P &&& valid Q", "by simp+"], ["proof (state)\nthis:\n  valid P\n  valid Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> (depth P') \\<le> (depth P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "obtain x::name where xFreshP: \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<sharp> P \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule name_exists_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "moreover"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "have \"\\<And>x. valid P \\<Longrightarrow> \\<exists>P'. uhnf P' \\<and> valid P' \\<and> P' \\<equiv>\\<^sub>e (<\\<nu>x>P) \\<and> (depth P') \\<le> (depth(<\\<nu>x>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       valid P \\<Longrightarrow>\n       \\<exists>P'.\n          uhnf P' \\<and>\n          valid P' \\<and>\n          P' \\<equiv>\\<^sub>e <\\<nu>x>P \\<and>\n          depth P' \\<le> depth (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth P' \\<le> depth (<\\<nu>?x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "with validP"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth P' \\<le> depth (<\\<nu>?x>P)", "obtain P' where \"uhnf P'\" and \"valid P'\" and P'eqP: \"P' \\<equiv>\\<^sub>e (<\\<nu>x>P)\" and P'depth: \"(depth P') \\<le> (depth(<\\<nu>x>P))\""], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and>\n     P' \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth P' \\<le> depth (<\\<nu>?x>P)\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>uhnf P'; valid P'; P' \\<equiv>\\<^sub>e <\\<nu>x>P;\n         depth P' \\<le> depth (<\\<nu>x>P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf P'\n  valid P'\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "moreover"], ["proof (state)\nthis:\n  uhnf P'\n  valid P'\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth P' \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "from xFreshP P'eqP"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P", "have \"P' \\<equiv>\\<^sub>e P\""], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e P", "by(blast intro: Trans ResFresh)"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "moreover"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "with P'depth"], ["proof (chain)\npicking this:\n  depth P' \\<le> depth (<\\<nu>x>P)\n  P' \\<equiv>\\<^sub>e P", "have \"depth P' \\<le> depth P\""], ["proof (prove)\nusing this:\n  depth P' \\<le> depth (<\\<nu>x>P)\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. depth P' \\<le> depth P", "by simp"], ["proof (state)\nthis:\n  depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "ultimately"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  uhnf P'\n  valid P'\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth P' \\<le> depth (<\\<nu>x>P)\n  P' \\<equiv>\\<^sub>e P\n  depth P' \\<le> depth P", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  uhnf P'\n  valid P'\n  P' \\<equiv>\\<^sub>e <\\<nu>x>P\n  depth P' \\<le> depth (<\\<nu>x>P)\n  P' \\<equiv>\\<^sub>e P\n  depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       uhnf P' \\<and>\n       valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P", "obtain P' where P'hnf: \"uhnf P'\" and P'eqP: \"P' \\<equiv>\\<^sub>e P\" and validP': \"valid P'\"\n                       and P'depth: \"(depth P') \\<le> (depth P)\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     uhnf P' \\<and>\n     valid P' \\<and> P' \\<equiv>\\<^sub>e P \\<and> depth P' \\<le> depth P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>uhnf P'; P' \\<equiv>\\<^sub>e P; valid P';\n         depth P' \\<le> depth P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf P'\n  P' \\<equiv>\\<^sub>e P\n  valid P'\n  depth P' \\<le> depth P\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> (depth Q') \\<le> (depth Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "obtain x::name where xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<sharp> Q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule name_exists_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "moreover"], ["proof (state)\nthis:\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "have \"\\<And>x. valid Q \\<Longrightarrow> \\<exists>Q'. uhnf Q' \\<and> valid Q' \\<and> Q' \\<equiv>\\<^sub>e (<\\<nu>x>Q) \\<and> (depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       valid Q \\<Longrightarrow>\n       \\<exists>Q'.\n          uhnf Q' \\<and>\n          valid Q' \\<and>\n          Q' \\<equiv>\\<^sub>e <\\<nu>x>Q \\<and>\n          depth Q' \\<le> depth (<\\<nu>x>Q)", "by fact"], ["proof (state)\nthis:\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>?x>Q \\<and> depth Q' \\<le> depth (<\\<nu>?x>Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "with validQ"], ["proof (chain)\npicking this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>?x>Q \\<and> depth Q' \\<le> depth (<\\<nu>?x>Q)", "obtain Q' where \"uhnf Q'\" and \"valid Q'\" and Q'eqQ: \"Q' \\<equiv>\\<^sub>e (<\\<nu>x>Q)\" and Q'depth: \"(depth Q') \\<le> (depth(<\\<nu>x>Q))\""], ["proof (prove)\nusing this:\n  valid Q\n  valid Q \\<Longrightarrow>\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and>\n     Q' \\<equiv>\\<^sub>e <\\<nu>?x>Q \\<and> depth Q' \\<le> depth (<\\<nu>?x>Q)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>uhnf Q'; valid Q'; Q' \\<equiv>\\<^sub>e <\\<nu>x>Q;\n         depth Q' \\<le> depth (<\\<nu>x>Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q'\n  valid Q'\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "moreover"], ["proof (state)\nthis:\n  uhnf Q'\n  valid Q'\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "from xFreshQ Q'eqQ"], ["proof (chain)\npicking this:\n  x \\<sharp> Q\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q", "have \"Q' \\<equiv>\\<^sub>e Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> Q\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n\ngoal (1 subgoal):\n 1. Q' \\<equiv>\\<^sub>e Q", "by(blast intro: Trans ResFresh)"], ["proof (state)\nthis:\n  Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "moreover"], ["proof (state)\nthis:\n  Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "with Q'depth"], ["proof (chain)\npicking this:\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n  Q' \\<equiv>\\<^sub>e Q", "have \"depth Q' \\<le> depth Q\""], ["proof (prove)\nusing this:\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n  Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. depth Q' \\<le> depth Q", "by simp"], ["proof (state)\nthis:\n  depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "ultimately"], ["proof (chain)\npicking this:\n  x \\<sharp> Q\n  uhnf Q'\n  valid Q'\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n  Q' \\<equiv>\\<^sub>e Q\n  depth Q' \\<le> depth Q", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> Q\n  uhnf Q'\n  valid Q'\n  Q' \\<equiv>\\<^sub>e <\\<nu>x>Q\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n  Q' \\<equiv>\\<^sub>e Q\n  depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       uhnf Q' \\<and>\n       valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q", "obtain Q' where Q'hnf: \"uhnf Q'\" and Q'eqQ: \"Q' \\<equiv>\\<^sub>e Q\" and validQ': \"valid Q'\"\n                       and Q'depth: \"(depth Q') \\<le> (depth Q)\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     uhnf Q' \\<and>\n     valid Q' \\<and> Q' \\<equiv>\\<^sub>e Q \\<and> depth Q' \\<le> depth Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>uhnf Q'; Q' \\<equiv>\\<^sub>e Q; valid Q';\n         depth Q' \\<le> depth Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q'\n  Q' \\<equiv>\\<^sub>e Q\n  valid Q'\n  depth Q' \\<le> depth Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from P'hnf Q'hnf"], ["proof (chain)\npicking this:\n  uhnf P'\n  uhnf Q'", "obtain R where Exp: \"(R, expandSet P' Q') \\<in> sumComposeSet\" and Rdepth: \"depth R \\<le> depth(P' \\<parallel> Q')\""], ["proof (prove)\nusing this:\n  uhnf P'\n  uhnf Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>(R, expandSet P' Q') \\<in> sumComposeSet;\n         depth R \\<le> depth (P' \\<parallel> Q')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: expandDepth' simp add: uhnf_def)"], ["proof (state)\nthis:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  depth R \\<le> depth (P' \\<parallel> Q')\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from Exp P'hnf Q'hnf"], ["proof (chain)\npicking this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  uhnf P'\n  uhnf Q'", "have P'Q'eqR: \"P' \\<parallel> Q' \\<equiv>\\<^sub>e R\""], ["proof (prove)\nusing this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  uhnf P'\n  uhnf Q'\n\ngoal (1 subgoal):\n 1. P' \\<parallel> Q' \\<equiv>\\<^sub>e R", "by(force intro: Expand simp add: uhnf_def)"], ["proof (state)\nthis:\n  P' \\<parallel> Q' \\<equiv>\\<^sub>e R\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from P'hnf Q'hnf validP' validQ'"], ["proof (chain)\npicking this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'", "have \"\\<forall>P \\<in> (expandSet P' Q'). uhnf P \\<and> valid P\""], ["proof (prove)\nusing this:\n  uhnf P'\n  uhnf Q'\n  valid P'\n  valid Q'\n\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P", "by(blast dest: validExpand)"], ["proof (state)\nthis:\n  \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "with Exp"], ["proof (chain)\npicking this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P", "obtain R' where R'hnf: \"uhnf R'\" and validR': \"valid R'\"\n                                                and ReqR': \"R \\<equiv>\\<^sub>e R'\"\n                                                and R'depth: \"depth R' \\<le> depth R\""], ["proof (prove)\nusing this:\n  (R, expandSet P' Q') \\<in> sumComposeSet\n  \\<forall>P\\<in>expandSet P' Q'. uhnf P \\<and> valid P\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>uhnf R'; valid R'; R \\<equiv>\\<^sub>e R';\n         depth R' \\<le> depth R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: expandHnf)"], ["proof (state)\nthis:\n  uhnf R'\n  valid R'\n  R \\<equiv>\\<^sub>e R'\n  depth R' \\<le> depth R\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from P'eqP Q'eqQ P'Q'eqR ReqR'"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<parallel> Q' \\<equiv>\\<^sub>e R\n  R \\<equiv>\\<^sub>e R'", "have \"P \\<parallel> Q \\<equiv>\\<^sub>e R'\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<parallel> Q' \\<equiv>\\<^sub>e R\n  R \\<equiv>\\<^sub>e R'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<equiv>\\<^sub>e R'", "by(blast intro: Sym ParPres Trans)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<equiv>\\<^sub>e R'\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence ResTrans: \"<\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e <\\<nu>x>R'\""], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<equiv>\\<^sub>e R'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e <\\<nu>x>R'", "by(rule ResPres)"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e <\\<nu>x>R'\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from validR' R'hnf"], ["proof (chain)\npicking this:\n  valid R'\n  uhnf R'", "obtain R'' where R''hnf: \"uhnf R''\" and validR'': \"valid R''\" and R'eqR'': \"<\\<nu>x>R' \\<equiv>\\<^sub>e R''\" and R''depth: \"depth R'' \\<le> depth(<\\<nu>x>R')\""], ["proof (prove)\nusing this:\n  valid R'\n  uhnf R'\n\ngoal (1 subgoal):\n 1. (\\<And>R''.\n        \\<lbrakk>uhnf R''; valid R''; <\\<nu>x>R' \\<equiv>\\<^sub>e R'';\n         depth R'' \\<le> depth (<\\<nu>x>R')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: uhnfRes)"], ["proof (state)\nthis:\n  uhnf R''\n  valid R''\n  <\\<nu>x>R' \\<equiv>\\<^sub>e R''\n  depth R'' \\<le> depth (<\\<nu>x>R')\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from ResTrans R'eqR''"], ["proof (chain)\npicking this:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e <\\<nu>x>R'\n  <\\<nu>x>R' \\<equiv>\\<^sub>e R''", "have \"<\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e R''\""], ["proof (prove)\nusing this:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e <\\<nu>x>R'\n  <\\<nu>x>R' \\<equiv>\\<^sub>e R''\n\ngoal (1 subgoal):\n 1. <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e R''", "by(rule Trans)"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e R''\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e R''\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from Rdepth P'depth Q'depth R'depth R''depth"], ["proof (chain)\npicking this:\n  depth R \\<le> depth (P' \\<parallel> Q')\n  depth P' \\<le> depth P\n  depth Q' \\<le> depth Q\n  depth R' \\<le> depth R\n  depth R'' \\<le> depth (<\\<nu>x>R')", "have \"depth R'' \\<le> depth(<\\<nu>x>(P \\<parallel> Q))\""], ["proof (prove)\nusing this:\n  depth R \\<le> depth (P' \\<parallel> Q')\n  depth P' \\<le> depth P\n  depth Q' \\<le> depth Q\n  depth R' \\<le> depth R\n  depth R'' \\<le> depth (<\\<nu>x>R')\n\ngoal (1 subgoal):\n 1. depth R'' \\<le> depth (<\\<nu>x>(P \\<parallel> Q))", "by auto"], ["proof (state)\nthis:\n  depth R'' \\<le> depth (<\\<nu>x>(P \\<parallel> Q))\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x.\n       \\<lbrakk>\\<And>b.\n                   valid pi1 \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi1 \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi1);\n        \\<And>b.\n           valid pi2 \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi2 \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi2);\n        valid (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e\n                            <\\<nu>x>(pi1 \\<parallel> pi2) \\<and>\n                            depth Q\n                            \\<le> depth (<\\<nu>x>(pi1 \\<parallel> pi2))\n 2. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 3. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e R''\n  depth R'' \\<le> depth (<\\<nu>x>(P \\<parallel> Q))", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e R''\n  depth R'' \\<le> depth (<\\<nu>x>(P \\<parallel> Q))\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>(P \\<parallel> Q) \\<and>\n       depth Q \\<le> depth (<\\<nu>x>(P \\<parallel> Q))", "using validR'' R''hnf"], ["proof (prove)\nusing this:\n  <\\<nu>x>(P \\<parallel> Q) \\<equiv>\\<^sub>e R''\n  depth R'' \\<le> depth (<\\<nu>x>(P \\<parallel> Q))\n  valid R''\n  uhnf R''\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>(P \\<parallel> Q) \\<and>\n       depth Q \\<le> depth (<\\<nu>x>(P \\<parallel> Q))", "by(blast dest: Sym)"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>(P \\<parallel> Q) \\<and>\n     depth Q \\<le> depth (<\\<nu>x>(P \\<parallel> Q))\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Res y P x)"], ["proof (state)\nthis:\n  y \\<sharp> x\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid(<\\<nu>y>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (<\\<nu>y>P)", "by fact"], ["proof (state)\nthis:\n  valid (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence \"valid P\""], ["proof (prove)\nusing this:\n  valid (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. valid P", "by simp"], ["proof (state)\nthis:\n  valid P\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  valid P\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"\\<And>x. valid P \\<Longrightarrow> \\<exists>Q. uhnf Q \\<and> valid Q \\<and> Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth Q \\<le> depth(<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       valid P \\<Longrightarrow>\n       \\<exists>Q.\n          uhnf Q \\<and>\n          valid Q \\<and>\n          Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and>\n          depth Q \\<le> depth (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)", "obtain Q where Qhnf: \"uhnf Q\" and validQ: \"valid Q\" and QeqP: \"Q \\<equiv>\\<^sub>e <\\<nu>y>P\"\n                            and QPdepth: \"depth Q \\<le> depth(<\\<nu>y>P)\""], ["proof (prove)\nusing this:\n  valid P\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?x>P \\<and> depth Q \\<le> depth (<\\<nu>?x>P)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>uhnf Q; valid Q; Q \\<equiv>\\<^sub>e <\\<nu>y>P;\n         depth Q \\<le> depth (<\\<nu>y>P)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uhnf Q\n  valid Q\n  Q \\<equiv>\\<^sub>e <\\<nu>y>P\n  depth Q \\<le> depth (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from Qhnf validQ"], ["proof (chain)\npicking this:\n  uhnf Q\n  valid Q", "obtain Q' where Q'hnf: \"uhnf Q'\" and validQ': \"valid Q'\" and QeqQ': \"<\\<nu>x>Q \\<equiv>\\<^sub>e Q'\"\n                                   and Q'Qdepth: \"depth Q' \\<le> depth(<\\<nu>x>Q)\""], ["proof (prove)\nusing this:\n  uhnf Q\n  valid Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>uhnf Q'; valid Q'; <\\<nu>x>Q \\<equiv>\\<^sub>e Q';\n         depth Q' \\<le> depth (<\\<nu>x>Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: uhnfRes)"], ["proof (state)\nthis:\n  uhnf Q'\n  valid Q'\n  <\\<nu>x>Q \\<equiv>\\<^sub>e Q'\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from QeqP"], ["proof (chain)\npicking this:\n  Q \\<equiv>\\<^sub>e <\\<nu>y>P", "have \"<\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\""], ["proof (prove)\nusing this:\n  Q \\<equiv>\\<^sub>e <\\<nu>y>P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P", "by(rule ResPres)"], ["proof (state)\nthis:\n  <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "with QeqQ'"], ["proof (chain)\npicking this:\n  <\\<nu>x>Q \\<equiv>\\<^sub>e Q'\n  <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P", "have \"Q' \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\""], ["proof (prove)\nusing this:\n  <\\<nu>x>Q \\<equiv>\\<^sub>e Q'\n  <\\<nu>x>Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\n\ngoal (1 subgoal):\n 1. Q' \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P", "by(blast intro: Trans Sym)"], ["proof (state)\nthis:\n  Q' \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "moreover"], ["proof (state)\nthis:\n  Q' \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "from Q'Qdepth QPdepth"], ["proof (chain)\npicking this:\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n  depth Q \\<le> depth (<\\<nu>y>P)", "have \"depth Q' \\<le> depth(<\\<nu>x><\\<nu>y>P)\""], ["proof (prove)\nusing this:\n  depth Q' \\<le> depth (<\\<nu>x>Q)\n  depth Q \\<le> depth (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. depth Q' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "by simp"], ["proof (state)\nthis:\n  depth Q' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x.\n       \\<lbrakk>name \\<sharp> x;\n        \\<And>b.\n           valid pi \\<Longrightarrow>\n           \\<exists>Q.\n              uhnf Q \\<and>\n              valid Q \\<and>\n              Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n              depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>name>pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x><\\<nu>name>pi)\n 2. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "ultimately"], ["proof (chain)\npicking this:\n  Q' \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\n  depth Q' \\<le> depth (<\\<nu>x><\\<nu>y>P)", "show ?case"], ["proof (prove)\nusing this:\n  Q' \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\n  depth Q' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P \\<and>\n       depth Q \\<le> depth (<\\<nu>x><\\<nu>y>P)", "using Q'hnf validQ'"], ["proof (prove)\nusing this:\n  Q' \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P\n  depth Q' \\<le> depth (<\\<nu>x><\\<nu>y>P)\n  uhnf Q'\n  valid Q'\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P \\<and>\n       depth Q \\<le> depth (<\\<nu>x><\\<nu>y>P)", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x><\\<nu>y>P \\<and>\n     depth Q \\<le> depth (<\\<nu>x><\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "case(Bang P x)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>?b>P \\<and> depth Q \\<le> depth (<\\<nu>?b>P)\n  valid (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "have \"valid(!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (!P)", "by fact"], ["proof (state)\nthis:\n  valid (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "hence False"], ["proof (prove)\nusing this:\n  valid (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi x.\n       \\<lbrakk>\\<And>b.\n                   valid pi \\<Longrightarrow>\n                   \\<exists>Q.\n                      uhnf Q \\<and>\n                      valid Q \\<and>\n                      Q \\<equiv>\\<^sub>e <\\<nu>b>pi \\<and>\n                      depth Q \\<le> depth (<\\<nu>b>pi);\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e <\\<nu>x>!pi \\<and>\n                            depth Q \\<le> depth (<\\<nu>x>!pi)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and>\n       Q \\<equiv>\\<^sub>e <\\<nu>x>!P \\<and> depth Q \\<le> depth (<\\<nu>x>!P)", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>!P \\<and> depth Q \\<le> depth (<\\<nu>x>!P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and>\n     Q \\<equiv>\\<^sub>e <\\<nu>x>P \\<and> depth Q \\<le> depth (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "case(Bang P)"], ["proof (state)\nthis:\n  valid P \\<Longrightarrow>\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n  valid (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "have \"valid(!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (!P)", "by fact"], ["proof (state)\nthis:\n  valid (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "hence False"], ["proof (prove)\nusing this:\n  valid (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>valid pi \\<Longrightarrow>\n                \\<exists>Q.\n                   uhnf Q \\<and>\n                   valid Q \\<and>\n                   Q \\<equiv>\\<^sub>e pi \\<and> depth Q \\<le> depth pi;\n        valid (!pi)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q.\n                            uhnf Q \\<and>\n                            valid Q \\<and>\n                            Q \\<equiv>\\<^sub>e !pi \\<and>\n                            depth Q \\<le> depth (!pi)", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q.\n       uhnf Q \\<and>\n       valid Q \\<and> Q \\<equiv>\\<^sub>e !P \\<and> depth Q \\<le> depth (!P)", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e !P \\<and> depth Q \\<le> depth (!P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q.\n     uhnf Q \\<and>\n     valid Q \\<and> Q \\<equiv>\\<^sub>e P \\<and> depth Q \\<le> depth P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma depthZero:\n  fixes P :: pi\n  \n  assumes \"depth P = 0\"\n  and     \"uhnf P\"\n\n  shows \"P = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = \\<zero>", "using assms"], ["proof (prove)\nusing this:\n  depth P = 0\n  uhnf P\n\ngoal (1 subgoal):\n 1. P = \\<zero>", "apply(nominal_induct P rule: pi.strong_inducts, auto simp add: uhnf_def max_def if_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>depth pi1 = 0 \\<Longrightarrow> False;\n        depth pi2 = 0 \\<Longrightarrow> False;\n        (if depth pi1 \\<le> depth pi2 then depth pi2 else depth pi1) = 0;\n        depth P = 0; hnf pi1; hnf P;\n        \\<forall>R\\<in>summands P.\n           \\<forall>R'\\<in>summands P.\n              R \\<noteq> R' \\<longrightarrow> \\<not> R \\<equiv>\\<^sub>e R';\n        hnf pi2; pi1 \\<noteq> \\<zero>; pi2 \\<noteq> \\<zero>;\n        \\<forall>R\\<in>summands pi1 \\<union> summands pi2.\n           \\<forall>R'\\<in>summands pi1 \\<union> summands pi2.\n              R \\<noteq> R' \\<longrightarrow>\n              \\<not> R \\<equiv>\\<^sub>e R'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac \"depth pi1 \\<le> depth pi2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>depth pi1 = 0 \\<Longrightarrow> False;\n        depth pi2 = 0 \\<Longrightarrow> False;\n        (if depth pi1 \\<le> depth pi2 then depth pi2 else depth pi1) = 0;\n        depth P = 0; hnf pi1; hnf P;\n        \\<forall>R\\<in>summands P.\n           \\<forall>R'\\<in>summands P.\n              R \\<noteq> R' \\<longrightarrow> \\<not> R \\<equiv>\\<^sub>e R';\n        hnf pi2; pi1 \\<noteq> \\<zero>; pi2 \\<noteq> \\<zero>;\n        \\<forall>R\\<in>summands pi1 \\<union> summands pi2.\n           \\<forall>R'\\<in>summands pi1 \\<union> summands pi2.\n              R \\<noteq> R' \\<longrightarrow> \\<not> R \\<equiv>\\<^sub>e R';\n        depth pi1 \\<le> depth pi2\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>depth pi1 = 0 \\<Longrightarrow> False;\n        depth pi2 = 0 \\<Longrightarrow> False;\n        (if depth pi1 \\<le> depth pi2 then depth pi2 else depth pi1) = 0;\n        depth P = 0; hnf pi1; hnf P;\n        \\<forall>R\\<in>summands P.\n           \\<forall>R'\\<in>summands P.\n              R \\<noteq> R' \\<longrightarrow> \\<not> R \\<equiv>\\<^sub>e R';\n        hnf pi2; pi1 \\<noteq> \\<zero>; pi2 \\<noteq> \\<zero>;\n        \\<forall>R\\<in>summands pi1 \\<union> summands pi2.\n           \\<forall>R'\\<in>summands pi1 \\<union> summands pi2.\n              R \\<noteq> R' \\<longrightarrow> \\<not> R \\<equiv>\\<^sub>e R';\n        \\<not> depth pi1 \\<le> depth pi2\\<rbrakk>\n       \\<Longrightarrow> False", "by auto"], ["", "lemma completeAux:\n  fixes n :: nat\n  and   P :: pi\n  and   Q :: pi\n\n  assumes \"depth P + depth Q \\<le> n\"\n  and     \"valid P\"\n  and     \"valid Q\"\n  and     \"uhnf P\"\n  and     \"uhnf Q\"\n  and     \"P \\<sim> Q\"\n\n  shows \"P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "using assms"], ["proof (prove)\nusing this:\n  depth P + depth Q \\<le> n\n  valid P\n  valid Q\n  uhnf P\n  uhnf Q\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "proof(induct n arbitrary: P Q rule: nat.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> 0; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "case(zero P Q)"], ["proof (state)\nthis:\n  depth P + depth Q \\<le> 0\n  valid P\n  valid Q\n  uhnf P\n  uhnf Q\n  P \\<sim> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> 0; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have \"depth P + depth Q \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P + depth Q \\<le> 0", "by fact"], ["proof (state)\nthis:\n  depth P + depth Q \\<le> 0\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> 0; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "hence Pdepth: \"depth P = 0\" and Qdepth: \"depth Q = 0\""], ["proof (prove)\nusing this:\n  depth P + depth Q \\<le> 0\n\ngoal (1 subgoal):\n 1. depth P = 0 &&& depth Q = 0", "by auto"], ["proof (state)\nthis:\n  depth P = 0\n  depth Q = 0\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> 0; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "moreover"], ["proof (state)\nthis:\n  depth P = 0\n  depth Q = 0\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> 0; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have  \"uhnf P\" and \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf P &&& uhnf Q", "by fact+"], ["proof (state)\nthis:\n  uhnf P\n  uhnf Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> 0; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "ultimately"], ["proof (chain)\npicking this:\n  depth P = 0\n  depth Q = 0\n  uhnf P\n  uhnf Q", "have \"P = \\<zero>\" and \"Q = \\<zero>\""], ["proof (prove)\nusing this:\n  depth P = 0\n  depth Q = 0\n  uhnf P\n  uhnf Q\n\ngoal (1 subgoal):\n 1. P = \\<zero> &&& Q = \\<zero>", "by(blast intro: depthZero)+"], ["proof (state)\nthis:\n  P = \\<zero>\n  Q = \\<zero>\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> 0; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\n 2. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "thus ?case"], ["proof (prove)\nusing this:\n  P = \\<zero>\n  Q = \\<zero>\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "by(blast intro: Refl)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "case(Suc n P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?P + depth ?Q \\<le> n; valid ?P; valid ?Q; uhnf ?P;\n   uhnf ?Q; ?P \\<sim> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?P \\<equiv>\\<^sub>e ?Q\n  depth P + depth Q \\<le> Suc n\n  valid P\n  valid Q\n  uhnf P\n  uhnf Q\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have validP: \"valid P\" and validQ: \"valid Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P &&& valid Q", "by fact+"], ["proof (state)\nthis:\n  valid P\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have Phnf: \"uhnf P\" and Qhnf: \"uhnf Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uhnf P &&& uhnf Q", "by fact+"], ["proof (state)\nthis:\n  uhnf P\n  uhnf Q\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have PBisimQ: \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by fact"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have IH: \"\\<And>P Q. \\<lbrakk>depth P + depth Q \\<le> n; valid P; valid Q; uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk> \\<Longrightarrow> P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>depth P + depth Q \\<le> n; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?P + depth ?Q \\<le> n; valid ?P; valid ?Q; uhnf ?P;\n   uhnf ?Q; ?P \\<sim> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?P \\<equiv>\\<^sub>e ?Q\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have PQdepth: \"depth P + depth Q \\<le> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P + depth Q \\<le> Suc n", "by fact"], ["proof (state)\nthis:\n  depth P + depth Q \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "have Goal: \"\\<And>P Q Q'. \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P; uhnf Q; \n                        P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk> \\<Longrightarrow> \\<exists>P' \\<in> summands P. Q' \\<equiv>\\<^sub>e P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "assume PQdepth: \"depth P + depth Q \\<le> Suc n\""], ["proof (state)\nthis:\n  depth P + depth Q \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "assume validP: \"valid P\" and validQ: \"valid Q\""], ["proof (state)\nthis:\n  valid P\n  valid Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "assume Phnf: \"uhnf P\" and Qhnf: \"uhnf Q\""], ["proof (state)\nthis:\n  uhnf P\n  uhnf Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "assume PSimQ: \"P \\<leadsto>[bisim] Q\""], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "assume Q'inQ: \"Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       \\<lbrakk>depth P + depth Q \\<le> Suc n; valid P; valid Q; uhnf P;\n        uhnf Q; P \\<leadsto>[bisim] Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "thus \"\\<exists>P' \\<in> summands P. Q' \\<equiv>\\<^sub>e P'\""], ["proof (prove)\nusing this:\n  Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "using PSimQ Phnf validP PQdepth"], ["proof (prove)\nusing this:\n  Q' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'", "proof(nominal_induct Q' avoiding: P rule: pi.strong_inducts)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<zero> \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) \\<zero>)\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 9. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                     uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                    \\<Longrightarrow> Bex (summands b)\n ((\\<equiv>\\<^sub>e) pi);\n         !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n         depth P + depth Q \\<le> Suc n\\<rbrakk>\n        \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case PiNil"], ["proof (state)\nthis:\n  \\<zero> \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<zero> \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) \\<zero>)\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 9. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                     uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                    \\<Longrightarrow> Bex (summands b)\n ((\\<equiv>\\<^sub>e) pi);\n         !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n         depth P + depth Q \\<le> Suc n\\<rbrakk>\n        \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"\\<zero> \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  \\<zero> \\<in> summands Q\n\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<zero> \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) \\<zero>)\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 9. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                     uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                    \\<Longrightarrow> Bex (summands b)\n ((\\<equiv>\\<^sub>e) pi);\n         !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n         depth P + depth Q \\<le> Suc n\\<rbrakk>\n        \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "hence False"], ["proof (prove)\nusing this:\n  \\<zero> \\<in> summands Q\n\ngoal (1 subgoal):\n 1. False", "by(nominal_induct Q rule: pi.strong_inducts, auto simp add: if_split)"], ["proof (state)\nthis:\n  False\n\ngoal (10 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<zero> \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) \\<zero>)\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 9. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 10. \\<And>pi P.\n        \\<lbrakk>\\<And>b.\n                    \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                     uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                    \\<Longrightarrow> Bex (summands b)\n ((\\<equiv>\\<^sub>e) pi);\n         !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n         depth P + depth Q \\<le> Suc n\\<rbrakk>\n        \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>summands P. \\<zero> \\<equiv>\\<^sub>e a", "by simp"], ["proof (state)\nthis:\n  \\<exists>a\\<in>summands P. \\<zero> \\<equiv>\\<^sub>e a\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Output a b Q' P)"], ["proof (state)\nthis:\n  \\<lbrakk>Q' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. Q' \\<equiv>\\<^sub>e a\n  a{b}.Q' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have validP: \"valid P\" and Phnf: \"uhnf P\" and PSimQ: \"P \\<leadsto>[bisim] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P &&& uhnf P &&& P \\<leadsto>[bisim] Q", "by fact+"], ["proof (state)\nthis:\n  valid P\n  uhnf P\n  P \\<leadsto>[bisim] Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have PQdepth: \"depth P + depth Q \\<le> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P + depth Q \\<le> Suc n", "by fact"], ["proof (state)\nthis:\n  depth P + depth Q \\<le> Suc n\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"a{b}.Q' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.Q' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  a{b}.Q' \\<in> summands Q\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with Qhnf"], ["proof (chain)\npicking this:\n  uhnf Q\n  a{b}.Q' \\<in> summands Q", "have QTrans: \"Q \\<longmapsto>a[b] \\<prec> Q'\""], ["proof (prove)\nusing this:\n  uhnf Q\n  a{b}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> Q'", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  Q \\<longmapsto> a[b] \\<prec> Q'", "obtain P' where PTrans: \"P \\<longmapsto>a[b] \\<prec> P'\" and P'BisimQ': \"P' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P'; P' \\<sim> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P'\n  P' \\<sim> Q'\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "from Phnf PTrans"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> a[b] \\<prec> P'", "have \"a{b}.P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. a{b}.P' \\<in> summands P", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  a{b}.P' \\<in> summands P\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "moreover"], ["proof (state)\nthis:\n  a{b}.P' \\<in> summands P\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"P' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validP PTrans"], ["proof (chain)\npicking this:\n  valid P\n  P \\<longmapsto> a[b] \\<prec> P'", "have validP': \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. valid P'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid P'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validQ QTrans"], ["proof (chain)\npicking this:\n  valid Q\n  Q \\<longmapsto> a[b] \\<prec> Q'", "have validQ': \"valid Q'\""], ["proof (prove)\nusing this:\n  valid Q\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. valid Q'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validP'"], ["proof (chain)\npicking this:\n  valid P'", "obtain P'' where P''hnf: \"uhnf P''\" and validP'': \"valid P''\"\n                                  and P''eqP': \"P'' \\<equiv>\\<^sub>e P'\" and P''depth: \"depth P'' \\<le> depth P'\""], ["proof (prove)\nusing this:\n  valid P'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>uhnf P''; valid P''; P'' \\<equiv>\\<^sub>e P';\n         depth P'' \\<le> depth P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf P''\n  valid P''\n  P'' \\<equiv>\\<^sub>e P'\n  depth P'' \\<le> depth P'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validQ'"], ["proof (chain)\npicking this:\n  valid Q'", "obtain Q'' where Q''hnf: \"uhnf Q''\" and validQ'': \"valid Q''\"\n                                  and Q''eqQ': \"Q'' \\<equiv>\\<^sub>e Q'\" and Q''depth: \"depth Q'' \\<le> depth Q'\""], ["proof (prove)\nusing this:\n  valid Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>uhnf Q''; valid Q''; Q'' \\<equiv>\\<^sub>e Q';\n         depth Q'' \\<le> depth Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf Q''\n  valid Q''\n  Q'' \\<equiv>\\<^sub>e Q'\n  depth Q'' \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "have \"depth P'' + depth Q'' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Phnf PTrans"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> a[b] \\<prec> P'", "have \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "moreover"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Qhnf QTrans"], ["proof (chain)\npicking this:\n  uhnf Q\n  Q \\<longmapsto> a[b] \\<prec> Q'", "have \"depth Q' < depth Q\""], ["proof (prove)\nusing this:\n  uhnf Q\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. depth Q' < depth Q", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "ultimately"], ["proof (chain)\npicking this:\n  depth P' < depth P\n  depth Q' < depth Q", "show ?thesis"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "using PQdepth P''depth Q''depth"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n  depth P + depth Q \\<le> Suc n\n  depth P'' \\<le> depth P'\n  depth Q'' \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "by simp"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "moreover"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "have \"P'' \\<sim> Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from P''eqP'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'", "have \"P'' \\<sim> P'\""], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> P'", "by(rule sound)"], ["proof (state)\nthis:\n  P'' \\<sim> P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "moreover"], ["proof (state)\nthis:\n  P'' \\<sim> P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from Q''eqQ'"], ["proof (chain)\npicking this:\n  Q'' \\<equiv>\\<^sub>e Q'", "have \"Q'' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  Q'' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. Q'' \\<sim> Q'", "by(rule sound)"], ["proof (state)\nthis:\n  Q'' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "ultimately"], ["proof (chain)\npicking this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "using P'BisimQ'"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "by(blast dest: transitive symmetric)"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "ultimately"], ["proof (chain)\npicking this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''", "have \"P'' \\<equiv>\\<^sub>e Q''\""], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "using validP'' validQ'' P''hnf Q''hnf"], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n  valid P''\n  valid Q''\n  uhnf P''\n  uhnf Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "by(rule_tac IH)"], ["proof (state)\nthis:\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "with P''eqP' Q''eqQ'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'\n  Q'' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''", "show ?thesis"], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'\n  Q'' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "by(blast intro: Sym Trans)"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        name1{name2}.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1{name2}.pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 8. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 9. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  a{b}.P' \\<in> summands P\n  P' \\<equiv>\\<^sub>e Q'", "show ?case"], ["proof (prove)\nusing this:\n  a{b}.P' \\<in> summands P\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>summands P. a{b}.Q' \\<equiv>\\<^sub>e c", "by(blast intro: Sym equiv.OutputPres)"], ["proof (state)\nthis:\n  \\<exists>c\\<in>summands P. a{b}.Q' \\<equiv>\\<^sub>e c\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Tau Q' P)"], ["proof (state)\nthis:\n  \\<lbrakk>Q' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. Q' \\<equiv>\\<^sub>e a\n  \\<tau>.Q' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have validP: \"valid P\" and Phnf: \"uhnf P\" and PSimQ: \"P \\<leadsto>[bisim] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P &&& uhnf P &&& P \\<leadsto>[bisim] Q", "by fact+"], ["proof (state)\nthis:\n  valid P\n  uhnf P\n  P \\<leadsto>[bisim] Q\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have PQdepth: \"depth P + depth Q \\<le> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P + depth Q \\<le> Suc n", "by fact"], ["proof (state)\nthis:\n  depth P + depth Q \\<le> Suc n\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"\\<tau>.(Q') \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.Q' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  \\<tau>.Q' \\<in> summands Q\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with Qhnf"], ["proof (chain)\npicking this:\n  uhnf Q\n  \\<tau>.Q' \\<in> summands Q", "have QTrans: \"Q \\<longmapsto>\\<tau> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  uhnf Q\n  \\<tau>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<tau> \\<prec> Q'", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'", "obtain P' where PTrans: \"P \\<longmapsto>\\<tau> \\<prec> P'\" and P'BisimQ': \"P' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> \\<tau> \\<prec> P'; P' \\<sim> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P'\n  P' \\<sim> Q'\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "from Phnf PTrans"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> \\<tau> \\<prec> P'", "have \"\\<tau>.(P') \\<in> summands P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<tau>.P' \\<in> summands P", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  \\<tau>.P' \\<in> summands P\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "moreover"], ["proof (state)\nthis:\n  \\<tau>.P' \\<in> summands P\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"P' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validP PTrans"], ["proof (chain)\npicking this:\n  valid P\n  P \\<longmapsto> \\<tau> \\<prec> P'", "have validP': \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. valid P'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid P'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validQ QTrans"], ["proof (chain)\npicking this:\n  valid Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'", "have validQ': \"valid Q'\""], ["proof (prove)\nusing this:\n  valid Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. valid Q'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validP'"], ["proof (chain)\npicking this:\n  valid P'", "obtain P'' where P''hnf: \"uhnf P''\" and validP'': \"valid P''\"\n                                  and P''eqP': \"P'' \\<equiv>\\<^sub>e P'\" and P''depth: \"depth P'' \\<le> depth P'\""], ["proof (prove)\nusing this:\n  valid P'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>uhnf P''; valid P''; P'' \\<equiv>\\<^sub>e P';\n         depth P'' \\<le> depth P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf P''\n  valid P''\n  P'' \\<equiv>\\<^sub>e P'\n  depth P'' \\<le> depth P'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validQ'"], ["proof (chain)\npicking this:\n  valid Q'", "obtain Q'' where Q''hnf: \"uhnf Q''\" and validQ'': \"valid Q''\"\n                                  and Q''eqQ': \"Q'' \\<equiv>\\<^sub>e Q'\" and Q''depth: \"depth Q'' \\<le> depth Q'\""], ["proof (prove)\nusing this:\n  valid Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>uhnf Q''; valid Q''; Q'' \\<equiv>\\<^sub>e Q';\n         depth Q'' \\<le> depth Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf Q''\n  valid Q''\n  Q'' \\<equiv>\\<^sub>e Q'\n  depth Q'' \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "have \"depth P'' + depth Q'' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Phnf PTrans"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> \\<tau> \\<prec> P'", "have \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "moreover"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Qhnf QTrans"], ["proof (chain)\npicking this:\n  uhnf Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'", "have \"depth Q' < depth Q\""], ["proof (prove)\nusing this:\n  uhnf Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. depth Q' < depth Q", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "ultimately"], ["proof (chain)\npicking this:\n  depth P' < depth P\n  depth Q' < depth Q", "show ?thesis"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "using PQdepth P''depth Q''depth"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n  depth P + depth Q \\<le> Suc n\n  depth P'' \\<le> depth P'\n  depth Q'' \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "by simp"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "moreover"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "have \"P'' \\<sim> Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from P''eqP'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'", "have \"P'' \\<sim> P'\""], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> P'", "by(rule sound)"], ["proof (state)\nthis:\n  P'' \\<sim> P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "moreover"], ["proof (state)\nthis:\n  P'' \\<sim> P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from Q''eqQ'"], ["proof (chain)\npicking this:\n  Q'' \\<equiv>\\<^sub>e Q'", "have \"Q'' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  Q'' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. Q'' \\<sim> Q'", "by(rule sound)"], ["proof (state)\nthis:\n  Q'' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "ultimately"], ["proof (chain)\npicking this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "using P'BisimQ'"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "by(blast dest: transitive symmetric)"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "ultimately"], ["proof (chain)\npicking this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''", "have \"P'' \\<equiv>\\<^sub>e Q''\""], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "using validP'' validQ'' P''hnf Q''hnf"], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n  valid P''\n  valid Q''\n  uhnf P''\n  uhnf Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "by(rule_tac IH)"], ["proof (state)\nthis:\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "with P''eqP' Q''eqQ'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'\n  Q'' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''", "show ?thesis"], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'\n  Q'' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "by(blast intro: Sym Trans)"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (8 subgoals):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        \\<tau>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (\\<tau>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 7. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 8. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.P' \\<in> summands P\n  P' \\<equiv>\\<^sub>e Q'", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.P' \\<in> summands P\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>summands P. \\<tau>.Q' \\<equiv>\\<^sub>e a", "by(blast intro: Sym equiv.TauPres)"], ["proof (state)\nthis:\n  \\<exists>a\\<in>summands P. \\<tau>.Q' \\<equiv>\\<^sub>e a\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Input a x Q' P)"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> a\n  \\<lbrakk>Q' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. Q' \\<equiv>\\<^sub>e a\n  a<x>.Q' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have validP: \"valid P\" and Phnf: \"uhnf P\" and PSimQ: \"P \\<leadsto>[bisim] Q\" and xFreshP: \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (valid P &&& uhnf P) &&& P \\<leadsto>[bisim] Q &&& x \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  valid P\n  uhnf P\n  P \\<leadsto>[bisim] Q\n  x \\<sharp> P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have PQdepth: \"depth P + depth Q \\<le> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P + depth Q \\<le> Suc n", "by fact"], ["proof (state)\nthis:\n  depth P + depth Q \\<le> Suc n\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"a<x>.Q' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.Q' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  a<x>.Q' \\<in> summands Q\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with Qhnf"], ["proof (chain)\npicking this:\n  uhnf Q\n  a<x>.Q' \\<in> summands Q", "have QTrans: \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  uhnf Q\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with PSimQ xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  x \\<sharp> P\n  Q \\<longmapsto> a<x> \\<prec> Q'", "obtain P' where PTrans: \"P \\<longmapsto>a<x> \\<prec> P'\"\n                                     and P'derQ': \"derivative P' Q' (InputS a) x bisim\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  x \\<sharp> P\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n         derivative P' Q' (InputS a) x bisim\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n  derivative P' Q' (InputS a) x bisim\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "from Phnf PTrans"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> a<x> \\<prec> P'", "have \"a<x>.P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. a<x>.P' \\<in> summands P", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "moreover"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands P\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"\\<forall>y \\<in> supp(P', Q', x). P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>supp (P', Q', x). P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "proof(rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "fix y::name"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "assume ysupp: \"y \\<in> supp(P', Q', x)\""], ["proof (state)\nthis:\n  y \\<in> supp (P', Q', x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "have validP': \"valid(P'[x::=y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (P'[x::=y])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid (P'[x::=y])", "from validP PTrans"], ["proof (chain)\npicking this:\n  valid P\n  P \\<longmapsto> a<x> \\<prec> P'", "have validP': \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. valid P'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid P'\n\ngoal (1 subgoal):\n 1. valid (P'[x::=y])", "thus ?thesis"], ["proof (prove)\nusing this:\n  valid P'\n\ngoal (1 subgoal):\n 1. valid (P'[x::=y])", "by simp"], ["proof (state)\nthis:\n  valid (P'[x::=y])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  valid (P'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "have validQ': \"valid(Q'[x::=y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid (Q'[x::=y])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid (Q'[x::=y])", "from validQ QTrans"], ["proof (chain)\npicking this:\n  valid Q\n  Q \\<longmapsto> a<x> \\<prec> Q'", "have validQ': \"valid Q'\""], ["proof (prove)\nusing this:\n  valid Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. valid Q'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid Q'\n\ngoal (1 subgoal):\n 1. valid (Q'[x::=y])", "thus ?thesis"], ["proof (prove)\nusing this:\n  valid Q'\n\ngoal (1 subgoal):\n 1. valid (Q'[x::=y])", "by simp"], ["proof (state)\nthis:\n  valid (Q'[x::=y])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  valid (Q'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "from validP'"], ["proof (chain)\npicking this:\n  valid (P'[x::=y])", "obtain P'' where P''hnf: \"uhnf P''\" and validP'': \"valid P''\"\n                                  and P''eqP': \"P'' \\<equiv>\\<^sub>e P'[x::=y]\" and P''depth: \"depth P'' \\<le> depth(P'[x::=y])\""], ["proof (prove)\nusing this:\n  valid (P'[x::=y])\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>uhnf P''; valid P''; P'' \\<equiv>\\<^sub>e P'[x::=y];\n         depth P'' \\<le> depth (P'[x::=y])\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf P''\n  valid P''\n  P'' \\<equiv>\\<^sub>e P'[x::=y]\n  depth P'' \\<le> depth (P'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "from validQ'"], ["proof (chain)\npicking this:\n  valid (Q'[x::=y])", "obtain Q'' where Q''hnf: \"uhnf Q''\" and validQ'': \"valid Q''\"\n                                  and Q''eqQ': \"Q'' \\<equiv>\\<^sub>e Q'[x::=y]\" and Q''depth: \"depth Q'' \\<le> depth(Q'[x::=y])\""], ["proof (prove)\nusing this:\n  valid (Q'[x::=y])\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>uhnf Q''; valid Q''; Q'' \\<equiv>\\<^sub>e Q'[x::=y];\n         depth Q'' \\<le> depth (Q'[x::=y])\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf Q''\n  valid Q''\n  Q'' \\<equiv>\\<^sub>e Q'[x::=y]\n  depth Q'' \\<le> depth (Q'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "have \"depth P'' + depth Q'' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Phnf PTrans"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> a<x> \\<prec> P'", "have \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "moreover"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Qhnf QTrans"], ["proof (chain)\npicking this:\n  uhnf Q\n  Q \\<longmapsto> a<x> \\<prec> Q'", "have \"depth Q' < depth Q\""], ["proof (prove)\nusing this:\n  uhnf Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. depth Q' < depth Q", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "ultimately"], ["proof (chain)\npicking this:\n  depth P' < depth P\n  depth Q' < depth Q", "show ?thesis"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "using PQdepth P''depth Q''depth"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n  depth P + depth Q \\<le> Suc n\n  depth P'' \\<le> depth (P'[x::=y])\n  depth Q'' \\<le> depth (Q'[x::=y])\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "by simp"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "moreover"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "have \"P'' \\<sim> Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from P'derQ'"], ["proof (chain)\npicking this:\n  derivative P' Q' (InputS a) x bisim", "have P'BisimQ': \"P'[x::=y] \\<sim> Q'[x::=y]\""], ["proof (prove)\nusing this:\n  derivative P' Q' (InputS a) x bisim\n\ngoal (1 subgoal):\n 1. P'[x::=y] \\<sim> Q'[x::=y]", "by(auto simp add: derivative_def)"], ["proof (state)\nthis:\n  P'[x::=y] \\<sim> Q'[x::=y]\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from P''eqP'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'[x::=y]", "have \"P'' \\<sim> P'[x::=y]\""], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'[x::=y]\n\ngoal (1 subgoal):\n 1. P'' \\<sim> P'[x::=y]", "by(rule sound)"], ["proof (state)\nthis:\n  P'' \\<sim> P'[x::=y]\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "moreover"], ["proof (state)\nthis:\n  P'' \\<sim> P'[x::=y]\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from Q''eqQ'"], ["proof (chain)\npicking this:\n  Q'' \\<equiv>\\<^sub>e Q'[x::=y]", "have \"Q'' \\<sim> Q'[x::=y]\""], ["proof (prove)\nusing this:\n  Q'' \\<equiv>\\<^sub>e Q'[x::=y]\n\ngoal (1 subgoal):\n 1. Q'' \\<sim> Q'[x::=y]", "by(rule sound)"], ["proof (state)\nthis:\n  Q'' \\<sim> Q'[x::=y]\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "ultimately"], ["proof (chain)\npicking this:\n  P'' \\<sim> P'[x::=y]\n  Q'' \\<sim> Q'[x::=y]", "show ?thesis"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'[x::=y]\n  Q'' \\<sim> Q'[x::=y]\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "using P'BisimQ'"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'[x::=y]\n  Q'' \\<sim> Q'[x::=y]\n  P'[x::=y] \\<sim> Q'[x::=y]\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "by(blast dest: transitive symmetric)"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "ultimately"], ["proof (chain)\npicking this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''", "have \"P'' \\<equiv>\\<^sub>e Q''\""], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "using validP'' validQ'' P''hnf Q''hnf"], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n  valid P''\n  valid Q''\n  uhnf P''\n  uhnf Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "by(rule_tac IH)"], ["proof (state)\nthis:\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> supp (P', Q', x) \\<Longrightarrow>\n       P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "with P''eqP' Q''eqQ'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'[x::=y]\n  Q'' \\<equiv>\\<^sub>e Q'[x::=y]\n  P'' \\<equiv>\\<^sub>e Q''", "show \"P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\""], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'[x::=y]\n  Q'' \\<equiv>\\<^sub>e Q'[x::=y]\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "by(blast intro: Sym Trans)"], ["proof (state)\nthis:\n  P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>supp (P', Q', x). P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>name2 \\<sharp> P; name2 \\<sharp> name1;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        name1<name2>.pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (name1<name2>.pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 6. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 7. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.P' \\<in> summands P\n  \\<forall>y\\<in>supp (P', Q', x). P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]", "show ?case"], ["proof (prove)\nusing this:\n  a<x>.P' \\<in> summands P\n  \\<forall>y\\<in>supp (P', Q', x). P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>summands P. a<x>.Q' \\<equiv>\\<^sub>e b", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b\\<in>summands P. a<x>.Q' \\<equiv>\\<^sub>e b", "apply(rule_tac x=\"a<x>.P'\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> a<x>.Q' \\<equiv>\\<^sub>e a<x>.P'\n 2. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> a<x>.P' \\<in> summands P", "apply(rule equiv.InputPres)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y\\<in>supp (Q', P', x).\n                         Q'[x::=y] \\<equiv>\\<^sub>e P'[x::=y]\n 2. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> a<x>.P' \\<in> summands P", "apply(rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>a<x>.P' \\<in> summands P;\n        \\<forall>y\\<in>supp (P', Q', x).\n           P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y];\n        y \\<in> supp (Q', P', x)\\<rbrakk>\n       \\<Longrightarrow> Q'[x::=y] \\<equiv>\\<^sub>e P'[x::=y]\n 2. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> a<x>.P' \\<in> summands P", "apply(erule_tac x=y in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>a<x>.P' \\<in> summands P; y \\<in> supp (Q', P', x);\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n       \\<Longrightarrow> Q'[x::=y] \\<equiv>\\<^sub>e P'[x::=y]\n 2. \\<And>y.\n       \\<lbrakk>a<x>.P' \\<in> summands P; y \\<in> supp (Q', P', x);\n        y \\<notin> supp (P', Q', x)\\<rbrakk>\n       \\<Longrightarrow> Q'[x::=y] \\<equiv>\\<^sub>e P'[x::=y]\n 3. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> a<x>.P' \\<in> summands P", "apply(blast dest: Sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>a<x>.P' \\<in> summands P; y \\<in> supp (Q', P', x);\n        y \\<notin> supp (P', Q', x)\\<rbrakk>\n       \\<Longrightarrow> Q'[x::=y] \\<equiv>\\<^sub>e P'[x::=y]\n 2. \\<lbrakk>a<x>.P' \\<in> summands P;\n     \\<forall>y\\<in>supp (P', Q', x).\n        P'[x::=y] \\<equiv>\\<^sub>e Q'[x::=y]\\<rbrakk>\n    \\<Longrightarrow> a<x>.P' \\<in> summands P", "by(auto simp add: supp_prod)"], ["proof (state)\nthis:\n  \\<exists>b\\<in>summands P. a<x>.Q' \\<equiv>\\<^sub>e b\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 5. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 5. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Match a b P' P)"], ["proof (state)\nthis:\n  \\<lbrakk>P' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. P' \\<equiv>\\<^sub>e a\n  [a\\<frown>b]P' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 5. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"[a\\<frown>b]P' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<frown>b]P' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  [a\\<frown>b]P' \\<in> summands Q\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 5. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "hence False"], ["proof (prove)\nusing this:\n  [a\\<frown>b]P' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. False", "by(nominal_induct Q rule: pi.strong_inducts, auto simp add: if_split)"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<frown>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 5. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 6. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>summands P. [a\\<frown>b]P' \\<equiv>\\<^sub>e c", "by simp"], ["proof (state)\nthis:\n  \\<exists>c\\<in>summands P. [a\\<frown>b]P' \\<equiv>\\<^sub>e c\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 4. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 4. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Mismatch a b P' P)"], ["proof (state)\nthis:\n  \\<lbrakk>P' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. P' \\<equiv>\\<^sub>e a\n  [a\\<noteq>b]P' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 4. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"[a\\<noteq>b]P' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  [a\\<noteq>b]P' \\<in> summands Q\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 4. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "hence False"], ["proof (prove)\nusing this:\n  [a\\<noteq>b]P' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. False", "by(nominal_induct Q rule: pi.strong_inducts, auto simp add: if_split)"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        [name1\\<noteq>name2]pi \\<in> summands Q; P \\<leadsto>[bisim] Q;\n        uhnf P; valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 4. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 5. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>summands P. [a\\<noteq>b]P' \\<equiv>\\<^sub>e c", "by simp"], ["proof (state)\nthis:\n  \\<exists>c\\<in>summands P. [a\\<noteq>b]P' \\<equiv>\\<^sub>e c\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 3. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 3. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Sum P' Q' P)"], ["proof (state)\nthis:\n  \\<lbrakk>P' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. P' \\<equiv>\\<^sub>e a\n  \\<lbrakk>Q' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. Q' \\<equiv>\\<^sub>e a\n  P' \\<oplus> Q' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 3. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"P' \\<oplus> Q' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<oplus> Q' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  P' \\<oplus> Q' \\<in> summands Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 3. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "hence False"], ["proof (prove)\nusing this:\n  P' \\<oplus> Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. False", "by(nominal_induct Q rule: pi.strong_inducts, auto simp add: if_split)"], ["proof (state)\nthis:\n  False\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<oplus> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 3. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 4. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>summands P. P' \\<oplus> Q' \\<equiv>\\<^sub>e a", "by simp"], ["proof (state)\nthis:\n  \\<exists>a\\<in>summands P. P' \\<oplus> Q' \\<equiv>\\<^sub>e a\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 2. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 2. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Par P' Q' P)"], ["proof (state)\nthis:\n  \\<lbrakk>P' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. P' \\<equiv>\\<^sub>e a\n  \\<lbrakk>Q' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. Q' \\<equiv>\\<^sub>e a\n  P' \\<parallel> Q' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 2. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"P' \\<parallel> Q' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<parallel> Q' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  P' \\<parallel> Q' \\<in> summands Q\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 2. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "hence False"], ["proof (prove)\nusing this:\n  P' \\<parallel> Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. False", "by(nominal_induct Q rule: pi.strong_inducts, auto simp add: if_split)"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi1 \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi1);\n        \\<And>b.\n           \\<lbrakk>pi2 \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi2);\n        pi1 \\<parallel> pi2 \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (pi1 \\<parallel> pi2))\n 2. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 3. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>summands P. P' \\<parallel> Q' \\<equiv>\\<^sub>e a", "by simp"], ["proof (state)\nthis:\n  \\<exists>a\\<in>summands P. P' \\<parallel> Q' \\<equiv>\\<^sub>e a\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Res x Q'' P)"], ["proof (state)\nthis:\n  x \\<sharp> P\n  \\<lbrakk>Q'' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. Q'' \\<equiv>\\<^sub>e a\n  <\\<nu>x>Q'' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have xFreshP: \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have validP: \"valid P\" and Phnf: \"uhnf P\" and PSimQ: \"P \\<leadsto>[bisim] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid P &&& uhnf P &&& P \\<leadsto>[bisim] Q", "by fact+"], ["proof (state)\nthis:\n  valid P\n  uhnf P\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have PQdepth: \"depth P + depth Q \\<le> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P + depth Q \\<le> Suc n", "by fact"], ["proof (state)\nthis:\n  depth P + depth Q \\<le> Suc n\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have Q''summQ: \"<\\<nu>x>Q'' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>Q'' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  <\\<nu>x>Q'' \\<in> summands Q\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "hence \"\\<exists>a Q'. a \\<noteq> x \\<and> Q'' = a{x}.Q'\""], ["proof (prove)\nusing this:\n  <\\<nu>x>Q'' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<exists>a Q'. a \\<noteq> x \\<and> Q'' = a{x}.Q'", "by(nominal_induct Q rule: pi.strong_inducts, auto simp add: if_split pi.inject name_abs_eq name_calc)"], ["proof (state)\nthis:\n  \\<exists>a Q'. a \\<noteq> x \\<and> Q'' = a{x}.Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "then"], ["proof (chain)\npicking this:\n  \\<exists>a Q'. a \\<noteq> x \\<and> Q'' = a{x}.Q'", "obtain a Q' where aineqx: \"a \\<noteq> x\" and Q'eqQ'': \"Q'' = a{x}.Q'\""], ["proof (prove)\nusing this:\n  \\<exists>a Q'. a \\<noteq> x \\<and> Q'' = a{x}.Q'\n\ngoal (1 subgoal):\n 1. (\\<And>a Q'.\n        \\<lbrakk>a \\<noteq> x; Q'' = a{x}.Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<noteq> x\n  Q'' = a{x}.Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with Qhnf  Q''summQ"], ["proof (chain)\npicking this:\n  uhnf Q\n  <\\<nu>x>Q'' \\<in> summands Q\n  a \\<noteq> x\n  Q'' = a{x}.Q'", "have QTrans: \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  uhnf Q\n  <\\<nu>x>Q'' \\<in> summands Q\n  a \\<noteq> x\n  Q'' = a{x}.Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "with PSimQ xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  x \\<sharp> P\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "obtain P' where PTrans: \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and P'BisimQ': \"P' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  x \\<sharp> P\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; P' \\<sim> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: simE simp add: derivative_def)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  P' \\<sim> Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "from Phnf PTrans aineqx"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  a \\<noteq> x", "have \"(<\\<nu>x>a{x}.P') \\<in> summands P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands P", "by(simp add: summandTransition uhnf_def)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'", "have \"P' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validP PTrans"], ["proof (chain)\npicking this:\n  valid P\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have validP': \"valid P'\""], ["proof (prove)\nusing this:\n  valid P\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. valid P'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid P'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validQ QTrans"], ["proof (chain)\npicking this:\n  valid Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "have validQ': \"valid Q'\""], ["proof (prove)\nusing this:\n  valid Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. valid Q'", "by(blast intro: validTransition)"], ["proof (state)\nthis:\n  valid Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validP'"], ["proof (chain)\npicking this:\n  valid P'", "obtain P'' where P''hnf: \"uhnf P''\" and validP'': \"valid P''\"\n                                    and P''eqP': \"P'' \\<equiv>\\<^sub>e P'\" and P''depth: \"depth P'' \\<le> depth P'\""], ["proof (prove)\nusing this:\n  valid P'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>uhnf P''; valid P''; P'' \\<equiv>\\<^sub>e P';\n         depth P'' \\<le> depth P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf P''\n  valid P''\n  P'' \\<equiv>\\<^sub>e P'\n  depth P'' \\<le> depth P'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "from validQ'"], ["proof (chain)\npicking this:\n  valid Q'", "obtain Q'' where Q''hnf: \"uhnf Q''\" and validQ'': \"valid Q''\"\n                                    and Q''eqQ': \"Q'' \\<equiv>\\<^sub>e Q'\" and Q'''depth: \"depth Q'' \\<le> depth Q'\""], ["proof (prove)\nusing this:\n  valid Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>uhnf Q''; valid Q''; Q'' \\<equiv>\\<^sub>e Q';\n         depth Q'' \\<le> depth Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  uhnf Q''\n  valid Q''\n  Q'' \\<equiv>\\<^sub>e Q'\n  depth Q'' \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "have \"depth P'' + depth Q'' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Phnf PTrans"], ["proof (chain)\npicking this:\n  uhnf P\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have \"depth P' < depth P\""], ["proof (prove)\nusing this:\n  uhnf P\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. depth P' < depth P", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "moreover"], ["proof (state)\nthis:\n  depth P' < depth P\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "from Qhnf QTrans"], ["proof (chain)\npicking this:\n  uhnf Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "have \"depth Q' < depth Q\""], ["proof (prove)\nusing this:\n  uhnf Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. depth Q' < depth Q", "by(force intro: depthTransition simp add: uhnf_def)"], ["proof (state)\nthis:\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "ultimately"], ["proof (chain)\npicking this:\n  depth P' < depth P\n  depth Q' < depth Q", "show ?thesis"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "using PQdepth P''depth Q'''depth"], ["proof (prove)\nusing this:\n  depth P' < depth P\n  depth Q' < depth Q\n  depth P + depth Q \\<le> Suc n\n  depth P'' \\<le> depth P'\n  depth Q'' \\<le> depth Q'\n\ngoal (1 subgoal):\n 1. depth P'' + depth Q'' \\<le> n", "by simp"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "moreover"], ["proof (state)\nthis:\n  depth P'' + depth Q'' \\<le> n\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "have \"P'' \\<sim> Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from P''eqP'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'", "have \"P'' \\<sim> P'\""], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> P'", "by(rule sound)"], ["proof (state)\nthis:\n  P'' \\<sim> P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "moreover"], ["proof (state)\nthis:\n  P'' \\<sim> P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "from Q''eqQ'"], ["proof (chain)\npicking this:\n  Q'' \\<equiv>\\<^sub>e Q'", "have \"Q'' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  Q'' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. Q'' \\<sim> Q'", "by(rule sound)"], ["proof (state)\nthis:\n  Q'' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "ultimately"], ["proof (chain)\npicking this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "using P'BisimQ'"], ["proof (prove)\nusing this:\n  P'' \\<sim> P'\n  Q'' \\<sim> Q'\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> Q''", "by(blast dest: transitive symmetric)"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "ultimately"], ["proof (chain)\npicking this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''", "have \"P'' \\<equiv>\\<^sub>e Q''\""], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "using validP'' validQ'' P''hnf Q''hnf"], ["proof (prove)\nusing this:\n  depth P'' + depth Q'' \\<le> n\n  P'' \\<sim> Q''\n  valid P''\n  valid Q''\n  uhnf P''\n  uhnf Q''\n\ngoal (1 subgoal):\n 1. P'' \\<equiv>\\<^sub>e Q''", "by(rule_tac IH)"], ["proof (state)\nthis:\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "with P''eqP' Q''eqQ'"], ["proof (chain)\npicking this:\n  P'' \\<equiv>\\<^sub>e P'\n  Q'' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''", "show ?thesis"], ["proof (prove)\nusing this:\n  P'' \\<equiv>\\<^sub>e P'\n  Q'' \\<equiv>\\<^sub>e Q'\n  P'' \\<equiv>\\<^sub>e Q''\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "by(blast intro: Sym Trans)"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'", "thus ?thesis"], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'", "by(rule OutputPres)"], ["proof (state)\nthis:\n  a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'\n\ngoal (2 subgoals):\n 1. \\<And>name pi P.\n       \\<lbrakk>name \\<sharp> P;\n        \\<And>b.\n           \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q; uhnf b;\n            valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n           \\<Longrightarrow> Bex (summands b) ((\\<equiv>\\<^sub>e) pi);\n        <\\<nu>name>pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P;\n        valid P; depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P)\n                          ((\\<equiv>\\<^sub>e) (<\\<nu>name>pi))\n 2. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>summands P. <\\<nu>x>Q'' \\<equiv>\\<^sub>e a", "using Q'eqQ''"], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  a{x}.P' \\<equiv>\\<^sub>e a{x}.Q'\n  Q'' = a{x}.Q'\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>summands P. <\\<nu>x>Q'' \\<equiv>\\<^sub>e a", "by(blast intro: Sym equiv.ResPres)"], ["proof (state)\nthis:\n  \\<exists>a\\<in>summands P. <\\<nu>x>Q'' \\<equiv>\\<^sub>e a\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "case(Bang P' P)"], ["proof (state)\nthis:\n  \\<lbrakk>P' \\<in> summands Q; ?b \\<leadsto>[bisim] Q; uhnf ?b; valid ?b;\n   depth ?b + depth Q \\<le> Suc n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>summands ?b. P' \\<equiv>\\<^sub>e a\n  !P' \\<in> summands Q\n  P \\<leadsto>[bisim] Q\n  uhnf P\n  valid P\n  depth P + depth Q \\<le> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "have \"!P' \\<in> summands Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !P' \\<in> summands Q", "by fact"], ["proof (state)\nthis:\n  !P' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "hence False"], ["proof (prove)\nusing this:\n  !P' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. False", "by(nominal_induct Q rule: pi.strong_inducts, auto simp add: if_split)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi P.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>pi \\<in> summands Q; b \\<leadsto>[bisim] Q;\n                    uhnf b; valid b; depth b + depth Q \\<le> Suc n\\<rbrakk>\n                   \\<Longrightarrow> Bex (summands b)\n((\\<equiv>\\<^sub>e) pi);\n        !pi \\<in> summands Q; P \\<leadsto>[bisim] Q; uhnf P; valid P;\n        depth P + depth Q \\<le> Suc n\\<rbrakk>\n       \\<Longrightarrow> Bex (summands P) ((\\<equiv>\\<^sub>e) (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>summands P. !P' \\<equiv>\\<^sub>e a", "by simp"], ["proof (state)\nthis:\n  \\<exists>a\\<in>summands P. !P' \\<equiv>\\<^sub>e a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'\\<in>summands P. Q' \\<equiv>\\<^sub>e P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?P + depth ?Q \\<le> Suc n; valid ?P; valid ?Q; uhnf ?P;\n   uhnf ?Q; ?P \\<leadsto>[bisim] ?Q; ?Q' \\<in> summands ?Q\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'\\<in>summands ?P. ?Q' \\<equiv>\\<^sub>e P'\n\ngoal (1 subgoal):\n 1. \\<And>nat P Q.\n       \\<lbrakk>\\<And>P Q.\n                   \\<lbrakk>depth P + depth Q \\<le> nat; valid P; valid Q;\n                    uhnf P; uhnf Q; P \\<sim> Q\\<rbrakk>\n                   \\<Longrightarrow> P \\<equiv>\\<^sub>e Q;\n        depth P + depth Q \\<le> Suc nat; valid P; valid Q; uhnf P; uhnf Q;\n        P \\<sim> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<equiv>\\<^sub>e Q", "from Phnf Qhnf PQdepth validP validQ PBisimQ"], ["proof (chain)\npicking this:\n  uhnf P\n  uhnf Q\n  depth P + depth Q \\<le> Suc n\n  valid P\n  valid Q\n  P \\<sim> Q", "show ?case"], ["proof (prove)\nusing this:\n  uhnf P\n  uhnf Q\n  depth P + depth Q \\<le> Suc n\n  valid P\n  valid Q\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "apply(rule_tac summandEquiv, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>summands Q. P' \\<equiv>\\<^sub>e x\n 2. \\<And>Q'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>summands P. Q' \\<equiv>\\<^sub>e x", "apply(rule Goal)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> depth Q + depth (?Q33 P') \\<le> Suc n\n 2. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid Q\n 3. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> valid (?Q33 P')\n 4. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf Q\n 5. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> uhnf (?Q33 P')\n 6. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> Q \\<leadsto>[bisim] ?Q33 P'\n 7. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> P' \\<in> summands (?Q33 P')\n 8. \\<And>Q'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>summands P. Q' \\<equiv>\\<^sub>e x", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; P' \\<in> summands P\\<rbrakk>\n       \\<Longrightarrow> Q \\<leadsto>[bisim] P\n 2. \\<And>Q'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>summands P. Q' \\<equiv>\\<^sub>e x", "apply(blast dest: bisimE symmetric)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>uhnf P; uhnf Q; depth P + depth Q \\<le> Suc n; valid P;\n        valid Q; P \\<sim> Q; Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>summands P. Q' \\<equiv>\\<^sub>e x", "by(blast intro: Goal dest: bisimE)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complete: \n  fixes P :: pi\n  and   Q :: pi\n\n  assumes validP: \"valid P\"\n  and     validQ: \"valid Q\"\n  and     PBisimQ: \"P \\<sim> Q\"\n\n  shows \"P \\<equiv>\\<^sub>e Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "from validP"], ["proof (chain)\npicking this:\n  valid P", "obtain P' where validP': \"valid P'\" and P'hnf: \"uhnf P'\" and P'eqP: \"P' \\<equiv>\\<^sub>e P\""], ["proof (prove)\nusing this:\n  valid P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>valid P'; uhnf P'; P' \\<equiv>\\<^sub>e P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  valid P'\n  uhnf P'\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "from validQ"], ["proof (chain)\npicking this:\n  valid Q", "obtain Q' where validQ': \"valid Q'\" and Q'hnf: \"uhnf Q'\" and Q'eqQ: \"Q' \\<equiv>\\<^sub>e Q\""], ["proof (prove)\nusing this:\n  valid Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>valid Q'; uhnf Q'; Q' \\<equiv>\\<^sub>e Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: validToHnf)"], ["proof (state)\nthis:\n  valid Q'\n  uhnf Q'\n  Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "have \"\\<exists>n. depth P' + depth Q' \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. depth P' + depth Q' \\<le> n", "by auto"], ["proof (state)\nthis:\n  \\<exists>n. depth P' + depth Q' \\<le> n\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. depth P' + depth Q' \\<le> n", "obtain n where \"depth P' + depth Q' \\<le> n\""], ["proof (prove)\nusing this:\n  \\<exists>n. depth P' + depth Q' \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        depth P' + depth Q' \\<le> n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  depth P' + depth Q' \\<le> n\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "moreover"], ["proof (state)\nthis:\n  depth P' + depth Q' \\<le> n\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "have \"P' \\<sim> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "from P'eqP"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e P", "have \"P' \\<sim> P\""], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e P\n\ngoal (1 subgoal):\n 1. P' \\<sim> P", "by(rule sound)"], ["proof (state)\nthis:\n  P' \\<sim> P\n\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "moreover"], ["proof (state)\nthis:\n  P' \\<sim> P\n\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "from Q'eqQ"], ["proof (chain)\npicking this:\n  Q' \\<equiv>\\<^sub>e Q", "have \"Q' \\<sim> Q\""], ["proof (prove)\nusing this:\n  Q' \\<equiv>\\<^sub>e Q\n\ngoal (1 subgoal):\n 1. Q' \\<sim> Q", "by(rule sound)"], ["proof (state)\nthis:\n  Q' \\<sim> Q\n\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "ultimately"], ["proof (chain)\npicking this:\n  P' \\<sim> P\n  Q' \\<sim> Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P' \\<sim> P\n  Q' \\<sim> Q\n\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "using PBisimQ"], ["proof (prove)\nusing this:\n  P' \\<sim> P\n  Q' \\<sim> Q\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "by(blast intro: symmetric transitive)"], ["proof (state)\nthis:\n  P' \\<sim> Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "ultimately"], ["proof (chain)\npicking this:\n  depth P' + depth Q' \\<le> n\n  P' \\<sim> Q'", "have \"P' \\<equiv>\\<^sub>e Q'\""], ["proof (prove)\nusing this:\n  depth P' + depth Q' \\<le> n\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "using validP' validQ' P'hnf Q'hnf"], ["proof (prove)\nusing this:\n  depth P' + depth Q' \\<le> n\n  P' \\<sim> Q'\n  valid P'\n  valid Q'\n  uhnf P'\n  uhnf Q'\n\ngoal (1 subgoal):\n 1. P' \\<equiv>\\<^sub>e Q'", "by(rule_tac completeAux)"], ["proof (state)\nthis:\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "with P'eqP Q'eqQ"], ["proof (chain)\npicking this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<equiv>\\<^sub>e Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P' \\<equiv>\\<^sub>e P\n  Q' \\<equiv>\\<^sub>e Q\n  P' \\<equiv>\\<^sub>e Q'\n\ngoal (1 subgoal):\n 1. P \\<equiv>\\<^sub>e Q", "by(blast intro: Sym Trans)"], ["proof (state)\nthis:\n  P \\<equiv>\\<^sub>e Q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}