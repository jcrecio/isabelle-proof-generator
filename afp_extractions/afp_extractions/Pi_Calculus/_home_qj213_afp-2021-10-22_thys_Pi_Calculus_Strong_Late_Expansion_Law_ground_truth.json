{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Strong_Late_Expansion_Law.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma summandsInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"summands (a<x>.P) = {a<x>.P}\"", "lemma finiteSummands:\n  fixes P :: pi\n  \n  shows \"finite(summands P)\"", "lemma boundSummandDest[dest]:\n  fixes x  :: name\n  and   y  :: name\n  and   P' :: pi\n  and   P  :: pi\n\n  assumes \"<\\<nu>x>x{y}.P' \\<in> summands P\"\n  \n  shows False", "lemma summandFresh:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n\n  assumes \"P \\<in> summands Q\"\n  and     \"x \\<sharp> Q\"\n  \n  shows \"x \\<sharp> P\"", "lemma hnfInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"hnf (a<x>.P)\"", "lemma summandTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   x  :: name\n  and   b  :: name\n  and   P' :: pi\n\n  assumes \"hnf P\"\n\n  shows \"P \\<longmapsto>\\<tau> \\<prec> P' = (\\<tau>.(P') \\<in> summands P)\"\n  and   \"P \\<longmapsto>a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\"\n  and   \"P \\<longmapsto>a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\"\n  and   \"a \\<noteq> x \\<Longrightarrow> P \\<longmapsto>a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\"", "lemma finiteExpand:\n  fixes P :: pi\n  and   Q :: pi\n\n  shows \"finite(expandSet P Q)\"", "lemma expandHnf:\n  fixes P :: pi\n  and   Q :: pi\n\n  shows \"\\<forall>R \\<in> (expandSet P Q). hnf R\"", "lemma expandAction:\n  fixes P :: pi\n  and   Q :: pi\n  and   S :: \"pi set\"\n\n  assumes \"(P, S) \\<in> sumComposeSet\"\n  and     \"Q \\<in> S\"\n  and     \"Q \\<longmapsto> Rs\"\n\n  shows \"P \\<longmapsto> Rs\"", "lemma expandAction':\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"(R, S) \\<in> sumComposeSet\"\n  and     \"R \\<longmapsto> Rs\"\n\n  shows \"\\<exists>P \\<in> S. P \\<longmapsto> Rs\"", "lemma expandTrans:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  and   a :: name\n  and   b :: name\n  and   x :: name\n\n  assumes Exp: \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n\n  shows \"(P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P') = (R \\<longmapsto>\\<tau> \\<prec> P')\"\n  and   \"(P \\<parallel> Q \\<longmapsto>a[b] \\<prec> P') = (R \\<longmapsto>a[b] \\<prec> P')\"\n  and   \"(P \\<parallel> Q \\<longmapsto>a<x> \\<prec> P') = (R \\<longmapsto>a<x> \\<prec> P')\"\n  and   \"(P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P') = (R \\<longmapsto>a<\\<nu>x> \\<prec> P')\"", "lemma expandLeft:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   R   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes Exp: \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n  and     Id: \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<parallel> Q \\<leadsto>[Rel] R\"", "lemma expandRight:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   R   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes Exp: \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n  and     Id: \"Id \\<subseteq> Rel\"\n\n  shows \"R \\<leadsto>[Rel] P \\<parallel> Q\"", "lemma expandSC: \n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  \n  assumes \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     \"hnf P\"\n  and     \"hnf Q\"\n\n  shows \"P \\<parallel> Q \\<sim> R\""], "translations": [["", "lemma summandsInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"summands (a<x>.P) = {a<x>.P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summands (a<x>.P) = {a<x>.P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summands (a<x>.P) = {a<x>.P}", "obtain y where yineqa: \"y \\<noteq> a\" and yFreshP: \"y \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<noteq> a; y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force intro: name_exists_fresh[of \"(a, P)\"] simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<noteq> a\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. summands (a<x>.P) = {a<x>.P}", "from yFreshP"], ["proof (chain)\npicking this:\n  y \\<sharp> P", "have \"a<x>.P = a<y>.([(x, y)] \\<bullet> P)\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "by(simp add: alphaInput)"], ["proof (state)\nthis:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. summands (a<x>.P) = {a<x>.P}", "with yineqa"], ["proof (chain)\npicking this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. summands (a<x>.P) = {a<x>.P}", "by simp"], ["proof (state)\nthis:\n  summands (a<x>.P) = {a<x>.P}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finiteSummands:\n  fixes P :: pi\n  \n  shows \"finite(summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (summands P)", "by(induct P rule: pi.induct) auto"], ["", "lemma boundSummandDest[dest]:\n  fixes x  :: name\n  and   y  :: name\n  and   P' :: pi\n  and   P  :: pi\n\n  assumes \"<\\<nu>x>x{y}.P' \\<in> summands P\"\n  \n  shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  <\\<nu>x>x{y}.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. False", "by(induct P rule: pi.induct, auto simp add: if_split pi.inject name_abs_eq name_calc)"], ["", "lemma summandFresh:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n\n  assumes \"P \\<in> summands Q\"\n  and     \"x \\<sharp> Q\"\n  \n  shows \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P", "using assms"], ["proof (prove)\nusing this:\n  P \\<in> summands Q\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by(nominal_induct Q avoiding: P rule: pi.strong_induct, auto simp add: if_split)"], ["", "nominal_primrec hnf :: \"pi \\<Rightarrow> bool\" where\n  \"hnf \\<zero> = True\"\n| \"hnf (\\<tau>.(P)) = True\"\n| \"x \\<sharp> a \\<Longrightarrow> hnf (a<x>.P) = True\"\n| \"hnf (a{b}.P) = True\"\n| \"hnf ([a\\<frown>b]P) = False\"\n| \"hnf ([a\\<noteq>b]P) = False\"\n| \"hnf (P \\<oplus> Q) = ((hnf P) \\<and> (hnf Q) \\<and> P \\<noteq> \\<zero> \\<and> Q \\<noteq> \\<zero>)\"\n| \"hnf (P \\<parallel> Q) = False\"\n| \"hnf (<\\<nu>x>P) = (\\<exists>a P'. a \\<noteq> x \\<and> P = a{x}.P')\"\n| \"hnf (!P) = False\""], ["proof (prove)\ngoal (44 subgoals):\n 1. finite (supp True)\n 2. finite (supp (\\<lambda>a b P Pa. True))\n 3. finite (supp (\\<lambda>P Pa. True))\n 4. finite (supp (\\<lambda>a x P Pa. True))\n 5. finite (supp (\\<lambda>a b P Pa. False))\n 6. finite (supp (\\<lambda>a b P Pa. False))\n 7. finite\n     (supp\n       (\\<lambda>P Q Pa Qa.\n           Pa \\<and>\n           Qa \\<and> P \\<noteq> \\<zero> \\<and> Q \\<noteq> \\<zero>))\n 8. finite (supp (\\<lambda>P Q Pa Qa. False))\n 9. finite\n     (supp\n       (\\<lambda>x P Pa. \\<exists>a P'. a \\<noteq> x \\<and> P = a{x}.P'))\n 10. finite (supp (\\<lambda>P Pa. False))\nA total of 44 subgoals...", "apply(auto simp add: fresh_bool)"], ["proof (prove)\ngoal (29 subgoals):\n 1. finite (supp True)\n 2. finite (supp (\\<lambda>a b P Pa. True))\n 3. finite (supp (\\<lambda>P Pa. True))\n 4. finite (supp (\\<lambda>a x P Pa. True))\n 5. finite (supp (\\<lambda>a b P Pa. False))\n 6. finite (supp (\\<lambda>a b P Pa. False))\n 7. finite\n     (supp\n       (\\<lambda>P Q Pa Qa.\n           Pa \\<and>\n           Qa \\<and> P \\<noteq> \\<zero> \\<and> Q \\<noteq> \\<zero>))\n 8. finite (supp (\\<lambda>P Q Pa Qa. False))\n 9. finite\n     (supp\n       (\\<lambda>x P Pa.\n           \\<exists>a. a \\<noteq> x \\<and> (\\<exists>P'. P = a{x}.P')))\n 10. finite (supp (\\<lambda>P Pa. False))\nA total of 29 subgoals...", "apply(finite_guess)+"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. True)\n 2. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>P Pa. True)\n 3. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a x P Pa. True)\n 4. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. False)\n 5. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>a b P Pa. False)\n 6. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow>\n       x \\<sharp> (\\<lambda>P Q Pa Qa.\n                      Pa \\<and>\n                      Qa \\<and>\n                      P \\<noteq> \\<zero> \\<and> Q \\<noteq> \\<zero>)\n 7. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>P Q Pa Qa. False)\n 8. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow>\n       x \\<sharp> (\\<lambda>x P Pa.\n                      \\<exists>a.\n                         a \\<noteq> x \\<and> (\\<exists>P'. P = a{x}.P'))\n 9. \\<And>a x.\n       x \\<noteq> a \\<Longrightarrow> x \\<sharp> (\\<lambda>P Pa. False)\n 10. \\<And>x. x \\<sharp> (\\<lambda>a b P Pa. True)\nA total of 18 subgoals...", "by(fresh_guess)+"], ["", "lemma hnfInput[simp]:\n  fixes a :: name\n  and   x :: name\n  and   P :: pi\n\n  shows \"hnf (a<x>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (a<x>.P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hnf (a<x>.P)", "obtain y where yineqa: \"y \\<noteq> a\" and yFreshP: \"y \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<noteq> a; y \\<sharp> P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force intro: name_exists_fresh[of \"(a, P)\"] simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<noteq> a\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. hnf (a<x>.P)", "from yFreshP"], ["proof (chain)\npicking this:\n  y \\<sharp> P", "have \"a<x>.P = a<y>.([(x, y)] \\<bullet> P)\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "by(simp add: alphaInput)"], ["proof (state)\nthis:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. hnf (a<x>.P)", "with yineqa"], ["proof (chain)\npicking this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. hnf (a<x>.P)", "by simp"], ["proof (state)\nthis:\n  hnf (a<x>.P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summandTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   x  :: name\n  and   b  :: name\n  and   P' :: pi\n\n  assumes \"hnf P\"\n\n  shows \"P \\<longmapsto>\\<tau> \\<prec> P' = (\\<tau>.(P') \\<in> summands P)\"\n  and   \"P \\<longmapsto>a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\"\n  and   \"P \\<longmapsto>a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\"\n  and   \"a \\<noteq> x \\<Longrightarrow> P \\<longmapsto>a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P) &&&\n     P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)) &&&\n    P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P) &&&\n    (a \\<noteq> x \\<Longrightarrow>\n     P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n     (<\\<nu>x>a{x}.P' \\<in> summands P))", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n 2. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n 3. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n 4. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "from assms"], ["proof (chain)\npicking this:\n  hnf P", "show \"P \\<longmapsto>\\<tau> \\<prec> P' = (\\<tau>.(P') \\<in> summands P)\""], ["proof (prove)\nusing this:\n  hnf P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)", "proof(induct P rule: pi.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. hnf \\<zero> \\<Longrightarrow>\n    \\<zero> \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi.\n        \\<lbrakk>hnf pi \\<Longrightarrow>\n                 pi \\<longmapsto> \\<tau> \\<prec> P' =\n                 (\\<tau>.P' \\<in> summands pi);\n         hnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                          (\\<tau>.P' \\<in> summands (!pi))", "case PiNil"], ["proof (state)\nthis:\n  hnf \\<zero>\n\ngoal (10 subgoals):\n 1. hnf \\<zero> \\<Longrightarrow>\n    \\<zero> \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi.\n        \\<lbrakk>hnf pi \\<Longrightarrow>\n                 pi \\<longmapsto> \\<tau> \\<prec> P' =\n                 (\\<tau>.P' \\<in> summands pi);\n         hnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                          (\\<tau>.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands \\<zero>)", "by auto"], ["proof (state)\nthis:\n  \\<zero> \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands \\<zero>)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Output a b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf (a{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands (a{b}.P))", "by auto"], ["proof (state)\nthis:\n  a{b}.P \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands (a{b}.P))\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Tau P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have \"\\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> \\<tau>.(P') \\<in> summands (\\<tau>.(P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    \\<tau>.P' \\<in> summands (\\<tau>.P)", "by(auto elim: tauCases simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have \"\\<tau>.(P') \\<in> summands (\\<tau>.(P)) \\<Longrightarrow> \\<tau>.(P) \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P' \\<in> summands (\\<tau>.P) \\<Longrightarrow>\n    \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'", "by(auto simp add: pi.inject intro: transitions.Tau)"], ["proof (state)\nthis:\n  \\<tau>.P' \\<in> summands (\\<tau>.P) \\<Longrightarrow>\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (\\<tau>.P)\n  \\<tau>.P' \\<in> summands (\\<tau>.P) \\<Longrightarrow>\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (\\<tau>.P)\n  \\<tau>.P' \\<in> summands (\\<tau>.P) \\<Longrightarrow>\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands (\\<tau>.P))", "by blast"], ["proof (state)\nthis:\n  \\<tau>.P \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands (\\<tau>.P))\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Input a x P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf (a<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands (a<x>.P))", "by auto"], ["proof (state)\nthis:\n  a<x>.P \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands (a<x>.P))\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Match a b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have \"hnf ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands ([a\\<frown>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<frown>b]P \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands ([a\\<frown>b]P))\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Mismatch a b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have \"hnf ([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands ([a\\<noteq>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands ([a\\<noteq>b]P))\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Sum P Q)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n  hnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have \"hnf (P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "hence Phnf: \"hnf P\" and Qhnf: \"hnf Q\""], ["proof (prove)\nusing this:\n  hnf (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. hnf P &&& hnf Q", "by simp+"], ["proof (state)\nthis:\n  hnf P\n  hnf Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have IHP: \"P \\<longmapsto>\\<tau> \\<prec> P' = (\\<tau>.(P') \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)", "have \"hnf P \\<Longrightarrow> P \\<longmapsto>\\<tau> \\<prec> P' = (\\<tau>.(P') \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf P \\<Longrightarrow>\n    P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)", "by fact"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf P\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)", "by simp"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have IHQ: \"Q \\<longmapsto>\\<tau> \\<prec> P' = (\\<tau>.(P') \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "have \"hnf Q \\<Longrightarrow> Q \\<longmapsto>\\<tau> \\<prec> P' = (\\<tau>.(P') \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf Q \\<Longrightarrow>\n    Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "by fact"], ["proof (state)\nthis:\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf Q\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "by simp"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "have \"P \\<oplus> Q \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> \\<tau>.(P') \\<in> summands (P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    \\<tau>.P' \\<in> summands (P \\<oplus> Q)", "by(erule_tac sumCases, auto)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)", "have \"\\<tau>.(P') \\<in> summands (P \\<oplus> Q) \\<Longrightarrow> P \\<oplus> Q \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. \\<tau>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n    P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P'", "by(auto dest: Sum1 Sum2)"], ["proof (state)\nthis:\n  \\<tau>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (P \\<oplus> Q)\n  \\<tau>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n  \\<tau>.P' \\<in> summands (P \\<oplus> Q)\n  \\<tau>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands (P \\<oplus> Q))", "by blast"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands (P \\<oplus> Q))\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Par P Q)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands Q)\n  hnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have \"hnf (P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n        (\\<tau>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands (P \\<parallel> Q))", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands (P \\<parallel> Q))\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Res x P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<longmapsto> \\<tau> \\<prec> P' =\n    (\\<tau>.P' \\<in> summands (<\\<nu>x>P))", "by(auto elim: resCasesF)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<longmapsto> \\<tau> \\<prec> P' =\n  (\\<tau>.P' \\<in> summands (<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "case(Bang P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "have \"hnf (!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (!P)", "by fact"], ["proof (state)\nthis:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> \\<tau> \\<prec> P' =\n                (\\<tau>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> \\<tau> \\<prec> P' =\n                         (\\<tau>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. !P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands (!P))", "by simp"], ["proof (state)\nthis:\n  !P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands (!P))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P' = (\\<tau>.P' \\<in> summands P)\n\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n 2. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n 3. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n 2. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n 3. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "from assms"], ["proof (chain)\npicking this:\n  hnf P", "show \"P \\<longmapsto>a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\""], ["proof (prove)\nusing this:\n  hnf P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)", "proof(induct P rule: pi.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. hnf \\<zero> \\<Longrightarrow>\n    \\<zero> \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi.\n        \\<lbrakk>hnf pi \\<Longrightarrow>\n                 pi \\<longmapsto> a<x> \\<prec> P' =\n                 (a<x>.P' \\<in> summands pi);\n         hnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                          (a<x>.P' \\<in> summands (!pi))", "case PiNil"], ["proof (state)\nthis:\n  hnf \\<zero>\n\ngoal (10 subgoals):\n 1. hnf \\<zero> \\<Longrightarrow>\n    \\<zero> \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi.\n        \\<lbrakk>hnf pi \\<Longrightarrow>\n                 pi \\<longmapsto> a<x> \\<prec> P' =\n                 (a<x>.P' \\<in> summands pi);\n         hnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                          (a<x>.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands \\<zero>)", "by auto"], ["proof (state)\nthis:\n  \\<zero> \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands \\<zero>)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Output c b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf (c{b}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. c{b}.P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands (c{b}.P))", "by auto"], ["proof (state)\nthis:\n  c{b}.P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands (c{b}.P))\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Tau P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<longmapsto> a<x> \\<prec> P' =\n    (a<x>.P' \\<in> summands (\\<tau>.P))", "by auto"], ["proof (state)\nthis:\n  \\<tau>.P \\<longmapsto> a<x> \\<prec> P' =\n  (a<x>.P' \\<in> summands (\\<tau>.P))\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Input b y P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf (b<y>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"b<y>.P \\<longmapsto>a<x> \\<prec> P' \\<Longrightarrow> a<x>.P' \\<in> summands (b<y>.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b<y>.P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    a<x>.P' \\<in> summands (b<y>.P)", "by(auto elim: inputCases' simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  b<y>.P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (b<y>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  b<y>.P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (b<y>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"a<x>.P' \\<in> summands (b<y>.P) \\<Longrightarrow> b<y>.P \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P' \\<in> summands (b<y>.P) \\<Longrightarrow>\n    b<y>.P \\<longmapsto> a<x> \\<prec> P'", "apply(auto simp add: pi.inject name_abs_eq intro: Late_Semantics.Input)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = b; x \\<noteq> y; x \\<sharp> P;\n     P' = [(x, y)] \\<bullet> P\\<rbrakk>\n    \\<Longrightarrow> b<y>.P \\<longmapsto> b<x> \\<prec> [(x, y)] \\<bullet> P", "apply(subgoal_tac \"b<x> \\<prec> [(x, y)] \\<bullet> P = (b<y> \\<prec> [(x, y)] \\<bullet> [(x, y)] \\<bullet> P)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = b; x \\<noteq> y; x \\<sharp> P; P' = [(x, y)] \\<bullet> P;\n     b<x> \\<prec> [(x, y)] \\<bullet> P =\n     b<y> \\<prec> [(x, y)] \\<bullet> [(x, y)] \\<bullet> P\\<rbrakk>\n    \\<Longrightarrow> b<y>.P \\<longmapsto> b<x> \\<prec> [(x, y)] \\<bullet> P\n 2. \\<lbrakk>a = b; x \\<noteq> y; x \\<sharp> P;\n     P' = [(x, y)] \\<bullet> P\\<rbrakk>\n    \\<Longrightarrow> b<x> \\<prec> [(x, y)] \\<bullet> P =\n                      b<y> \\<prec> [(x, y)] \\<bullet> [(x, y)] \\<bullet> P", "apply(auto intro: Late_Semantics.Input)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = b; x \\<noteq> y; x \\<sharp> P;\n     P' = [(x, y)] \\<bullet> P\\<rbrakk>\n    \\<Longrightarrow> b<x> \\<prec> [(x, y)] \\<bullet> P = b<y> \\<prec> P", "by(simp add: alphaBoundResidual name_swap)"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands (b<y>.P) \\<Longrightarrow>\n  b<y>.P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  b<y>.P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (b<y>.P)\n  a<x>.P' \\<in> summands (b<y>.P) \\<Longrightarrow>\n  b<y>.P \\<longmapsto> a<x> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  b<y>.P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (b<y>.P)\n  a<x>.P' \\<in> summands (b<y>.P) \\<Longrightarrow>\n  b<y>.P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. b<y>.P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands (b<y>.P))", "by blast"], ["proof (state)\nthis:\n  b<y>.P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands (b<y>.P))\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Match a b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"hnf ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<longmapsto> a<x> \\<prec> P' =\n    (a<x>.P' \\<in> summands ([a\\<frown>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<frown>b]P \\<longmapsto> a<x> \\<prec> P' =\n  (a<x>.P' \\<in> summands ([a\\<frown>b]P))\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Mismatch a b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"hnf ([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<longmapsto> a<x> \\<prec> P' =\n    (a<x>.P' \\<in> summands ([a\\<noteq>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<longmapsto> a<x> \\<prec> P' =\n  (a<x>.P' \\<in> summands ([a\\<noteq>b]P))\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Sum P Q)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n  hnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"hnf (P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "hence Phnf: \"hnf P\" and Qhnf: \"hnf Q\""], ["proof (prove)\nusing this:\n  hnf (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. hnf P &&& hnf Q", "by simp+"], ["proof (state)\nthis:\n  hnf P\n  hnf Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have IHP: \"P \\<longmapsto>a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)", "have \"hnf P \\<Longrightarrow> P \\<longmapsto>a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf P \\<Longrightarrow>\n    P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)", "by fact"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf P\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)", "by simp"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have IHQ: \"Q \\<longmapsto>a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "have \"hnf Q \\<Longrightarrow> Q \\<longmapsto>a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf Q \\<Longrightarrow>\n    Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "by fact"], ["proof (state)\nthis:\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf Q\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "by simp"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "have \"P \\<oplus> Q \\<longmapsto>a<x> \\<prec> P' \\<Longrightarrow> a<x>.P' \\<in> summands (P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    a<x>.P' \\<in> summands (P \\<oplus> Q)", "by(erule_tac sumCases, auto)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)", "have \"a<x>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow> P \\<oplus> Q \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. a<x>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n    P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P'", "by(auto dest: Sum1 Sum2)"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (P \\<oplus> Q)\n  a<x>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n  a<x>.P' \\<in> summands (P \\<oplus> Q)\n  a<x>.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P' =\n    (a<x>.P' \\<in> summands (P \\<oplus> Q))", "by blast"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a<x> \\<prec> P' =\n  (a<x>.P' \\<in> summands (P \\<oplus> Q))\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Par P Q)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands Q)\n  hnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"hnf (P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    (a<x>.P' \\<in> summands (P \\<parallel> Q))", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n  (a<x>.P' \\<in> summands (P \\<parallel> Q))\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Res y P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"hnf(<\\<nu>y>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (<\\<nu>y>P)", "by fact"], ["proof (state)\nthis:\n  hnf (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  hnf (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<x> \\<prec> P' =\n    (a<x>.P' \\<in> summands (<\\<nu>y>P))", "by(auto simp add: if_split)"], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<x> \\<prec> P' =\n  (a<x>.P' \\<in> summands (<\\<nu>y>P))\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "case(Bang P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "have \"hnf (!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (!P)", "by fact"], ["proof (state)\nthis:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a<x> \\<prec> P' =\n                (a<x>.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<x> \\<prec> P' =\n                         (a<x>.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. !P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands (!P))", "by simp"], ["proof (state)\nthis:\n  !P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands (!P))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P' = (a<x>.P' \\<in> summands P)\n\ngoal (2 subgoals):\n 1. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n 2. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n 2. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "from assms"], ["proof (chain)\npicking this:\n  hnf P", "show \"P \\<longmapsto>a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\""], ["proof (prove)\nusing this:\n  hnf P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)", "proof(induct P rule: pi.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. hnf \\<zero> \\<Longrightarrow>\n    \\<zero> \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi.\n        \\<lbrakk>hnf pi \\<Longrightarrow>\n                 pi \\<longmapsto> a[b] \\<prec> P' =\n                 (a{b}.P' \\<in> summands pi);\n         hnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                          (a{b}.P' \\<in> summands (!pi))", "case PiNil"], ["proof (state)\nthis:\n  hnf \\<zero>\n\ngoal (10 subgoals):\n 1. hnf \\<zero> \\<Longrightarrow>\n    \\<zero> \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi.\n        \\<lbrakk>hnf pi \\<Longrightarrow>\n                 pi \\<longmapsto> a[b] \\<prec> P' =\n                 (a{b}.P' \\<in> summands pi);\n         hnf (!pi)\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                          (a{b}.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands \\<zero>)", "by auto"], ["proof (state)\nthis:\n  \\<zero> \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands \\<zero>)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Output c d P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf (c{d}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"c{d}.P \\<longmapsto>a[b] \\<prec> P' \\<Longrightarrow> a{b}.P' \\<in> summands (c{d}.P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c{d}.P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    a{b}.P' \\<in> summands (c{d}.P)", "by(auto elim: outputCases simp add: residual.inject pi.inject)"], ["proof (state)\nthis:\n  c{d}.P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (c{d}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  c{d}.P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (c{d}.P)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"a{b}.P' \\<in> summands (c{d}.P) \\<Longrightarrow> c{d}.P \\<longmapsto>a[b] \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P' \\<in> summands (c{d}.P) \\<Longrightarrow>\n    c{d}.P \\<longmapsto> a[b] \\<prec> P'", "by(auto simp add: pi.inject intro: transitions.Output)"], ["proof (state)\nthis:\n  a{b}.P' \\<in> summands (c{d}.P) \\<Longrightarrow>\n  c{d}.P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1{name2}.pi)\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  c{d}.P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (c{d}.P)\n  a{b}.P' \\<in> summands (c{d}.P) \\<Longrightarrow>\n  c{d}.P \\<longmapsto> a[b] \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  c{d}.P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (c{d}.P)\n  a{b}.P' \\<in> summands (c{d}.P) \\<Longrightarrow>\n  c{d}.P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. c{d}.P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands (c{d}.P))", "by blast"], ["proof (state)\nthis:\n  c{d}.P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands (c{d}.P))\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Tau P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf (\\<tau>.P)\n\ngoal (8 subgoals):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (\\<tau>.pi)\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<longmapsto> a[b] \\<prec> P' =\n    (a{b}.P' \\<in> summands (\\<tau>.P))", "by auto"], ["proof (state)\nthis:\n  \\<tau>.P \\<longmapsto> a[b] \\<prec> P' =\n  (a{b}.P' \\<in> summands (\\<tau>.P))\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Input c x P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf (c<x>.P)\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (name1<name2>.pi)\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. c<x>.P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands (c<x>.P))", "by auto"], ["proof (state)\nthis:\n  c<x>.P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands (c<x>.P))\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Match a b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"hnf ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<longmapsto> a[b] \\<prec> P' =\n    (a{b}.P' \\<in> summands ([a\\<frown>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<frown>b]P \\<longmapsto> a[b] \\<prec> P' =\n  (a{b}.P' \\<in> summands ([a\\<frown>b]P))\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Mismatch a b P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"hnf ([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi)\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<longmapsto> a[b] \\<prec> P' =\n    (a{b}.P' \\<in> summands ([a\\<noteq>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<longmapsto> a[b] \\<prec> P' =\n  (a{b}.P' \\<in> summands ([a\\<noteq>b]P))\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Sum P Q)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n  hnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"hnf (P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "hence Phnf: \"hnf P\" and Qhnf: \"hnf Q\""], ["proof (prove)\nusing this:\n  hnf (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. hnf P &&& hnf Q", "by simp+"], ["proof (state)\nthis:\n  hnf P\n  hnf Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have IHP: \"P \\<longmapsto>a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)", "have \"hnf P \\<Longrightarrow> P \\<longmapsto>a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf P \\<Longrightarrow>\n    P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)", "by fact"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf P\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)", "by simp"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have IHQ: \"Q \\<longmapsto>a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "have \"hnf Q \\<Longrightarrow> Q \\<longmapsto>a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf Q \\<Longrightarrow>\n    Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "by fact"], ["proof (state)\nthis:\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf Q\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "by simp"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "have \"P \\<oplus> Q \\<longmapsto>a[b] \\<prec> P' \\<Longrightarrow> a{b}.P' \\<in> summands (P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    a{b}.P' \\<in> summands (P \\<oplus> Q)", "by(erule_tac sumCases, auto)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)", "have \"a{b}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow> P \\<oplus> Q \\<longmapsto>a[b] \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. a{b}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n    P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P'", "by(auto dest: Sum1 Sum2)"], ["proof (state)\nthis:\n  a{b}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (P \\<oplus> Q)\n  a{b}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n  a{b}.P' \\<in> summands (P \\<oplus> Q)\n  a{b}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P' =\n    (a{b}.P' \\<in> summands (P \\<oplus> Q))", "by blast"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a[b] \\<prec> P' =\n  (a{b}.P' \\<in> summands (P \\<oplus> Q))\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Par P Q)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf Q \\<Longrightarrow>\n  Q \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands Q)\n  hnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"hnf (P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2.\n       \\<lbrakk>hnf pi1 \\<Longrightarrow>\n                pi1 \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi1);\n        hnf pi2 \\<Longrightarrow>\n        pi2 \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2)\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel> pi2 \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n    (a{b}.P' \\<in> summands (P \\<parallel> Q))", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n  (a{b}.P' \\<in> summands (P \\<parallel> Q))\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Res x P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"hnf (<\\<nu>x>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (<\\<nu>x>P)", "by fact"], ["proof (state)\nthis:\n  hnf (<\\<nu>x>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (<\\<nu>name>pi)\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  hnf (<\\<nu>x>P)\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<longmapsto> a[b] \\<prec> P' =\n    (a{b}.P' \\<in> summands (<\\<nu>x>P))", "by(force elim: resCasesF outputCases simp add: if_split residual.inject)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<longmapsto> a[b] \\<prec> P' =\n  (a{b}.P' \\<in> summands (<\\<nu>x>P))\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "case(Bang P)"], ["proof (state)\nthis:\n  hnf P \\<Longrightarrow>\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "have \"hnf (!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (!P)", "by fact"], ["proof (state)\nthis:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi.\n       \\<lbrakk>hnf pi \\<Longrightarrow>\n                pi \\<longmapsto> a[b] \\<prec> P' =\n                (a{b}.P' \\<in> summands pi);\n        hnf (!pi)\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a[b] \\<prec> P' =\n                         (a{b}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. !P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands (!P))", "by simp"], ["proof (state)\nthis:\n  !P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands (!P))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P' = (a{b}.P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "assume \"a\\<noteq>x\""], ["proof (state)\nthis:\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. a \\<noteq> x \\<Longrightarrow>\n    P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "with assms"], ["proof (chain)\npicking this:\n  hnf P\n  a \\<noteq> x", "show \"P \\<longmapsto>a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\""], ["proof (prove)\nusing this:\n  hnf P\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "proof(nominal_induct P avoiding: x P' rule: pi.strong_induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x P'.\n       \\<lbrakk>hnf \\<zero>; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1{name2}.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi x P'.\n        \\<lbrakk>\\<And>b ba.\n                    \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                    \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n(<\\<nu>b>a{b}.ba \\<in> summands pi);\n         hnf (!pi); a \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                          (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case PiNil"], ["proof (state)\nthis:\n  hnf \\<zero>\n  a \\<noteq> x\n\ngoal (10 subgoals):\n 1. \\<And>x P'.\n       \\<lbrakk>hnf \\<zero>; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands \\<zero>)\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1{name2}.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1{name2}.pi))\n 3. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 5. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 6. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 7. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 8. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 9. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 10. \\<And>pi x P'.\n        \\<lbrakk>\\<And>b ba.\n                    \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                    \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n(<\\<nu>b>a{b}.ba \\<in> summands pi);\n         hnf (!pi); a \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                          (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands \\<zero>)", "by auto"], ["proof (state)\nthis:\n  \\<zero> \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands \\<zero>)\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1{name2}.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1{name2}.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Output a b P)"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  hnf (a{b}.P)\n  a \\<noteq> x\n\ngoal (9 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1{name2}.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1{name2}.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1{name2}.pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 5. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 6. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 7. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 8. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 9. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands (a{b}.P))", "by auto"], ["proof (state)\nthis:\n  a{b}.P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands (a{b}.P))\n\ngoal (8 subgoals):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Tau P)"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  hnf (\\<tau>.P)\n  a \\<noteq> x\n\ngoal (8 subgoals):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (\\<tau>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<tau>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 4. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 5. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 6. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 7. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 8. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.P))", "by auto"], ["proof (state)\nthis:\n  \\<tau>.P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands (\\<tau>.P))\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Input a x P)"], ["proof (state)\nthis:\n  xa__ \\<sharp> x\n  xa__ \\<sharp> P'\n  xa__ \\<sharp> a\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  hnf (a<xa__>.P)\n  a \\<noteq> x\n\ngoal (7 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>name2 \\<sharp> x; name2 \\<sharp> P'; name2 \\<sharp> name1;\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (name1<name2>.pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> name1<name2>.pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (name1<name2>.pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 3. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 5. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 6. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 7. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a<xa__>.P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands (a<xa__>.P))", "by auto"], ["proof (state)\nthis:\n  a<xa__>.P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands (a<xa__>.P))\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Match a b P)"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  hnf ([a\\<frown>b]P)\n  a \\<noteq> x\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"hnf ([a\\<frown>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<frown>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<frown>b]P)\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<frown>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (6 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<frown>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<frown>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<frown>name2]pi))\n 2. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 4. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 5. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 6. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands ([a\\<frown>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<frown>b]P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands ([a\\<frown>b]P))\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Mismatch a b P)"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  hnf ([a\\<noteq>b]P)\n  a \\<noteq> x\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"hnf ([a\\<noteq>b]P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf ([a\\<noteq>b]P)", "by fact"], ["proof (state)\nthis:\n  hnf ([a\\<noteq>b]P)\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf ([a\\<noteq>b]P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. \\<And>name1 name2 pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf ([name1\\<noteq>name2]pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> [name1\\<noteq>name2]pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands ([name1\\<noteq>name2]pi))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 3. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 4. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 5. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands ([a\\<noteq>b]P))", "by simp"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands ([a\\<noteq>b]P))\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Sum P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  \\<lbrakk>hnf Q; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> Q \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands Q)\n  hnf (P \\<oplus> Q)\n  a \\<noteq> x\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"hnf (P \\<oplus> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<oplus> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "hence Phnf: \"hnf P\" and Qhnf: \"hnf Q\""], ["proof (prove)\nusing this:\n  hnf (P \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. hnf P &&& hnf Q", "by simp+"], ["proof (state)\nthis:\n  hnf P\n  hnf Q\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have aineqx: \"a \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> x", "by fact"], ["proof (state)\nthis:\n  a \\<noteq> x\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have IHP: \"P \\<longmapsto>a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "have \"\\<And>x P'. \\<lbrakk>hnf P; a \\<noteq> x\\<rbrakk> \\<Longrightarrow> P \\<longmapsto>a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk>hnf P; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands P)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?x> \\<prec> ?P' =\n                    (<\\<nu>?x>a{?x}.?P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "with Phnf aineqx"], ["proof (chain)\npicking this:\n  hnf P\n  a \\<noteq> x\n  \\<lbrakk>hnf P; a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?x> \\<prec> ?P' =\n                    (<\\<nu>?x>a{?x}.?P' \\<in> summands P)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf P\n  a \\<noteq> x\n  \\<lbrakk>hnf P; a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?x> \\<prec> ?P' =\n                    (<\\<nu>?x>a{?x}.?P' \\<in> summands P)\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands P)", "by simp"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have IHQ: \"Q \\<longmapsto>a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands Q)", "have \"\\<And>x Q'. \\<lbrakk>hnf Q; a \\<noteq> x\\<rbrakk> \\<Longrightarrow> Q \\<longmapsto>a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Q'.\n       \\<lbrakk>hnf Q; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands Q)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>hnf Q; a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> Q \\<longmapsto> a<\\<nu>?x> \\<prec> P' =\n                    (<\\<nu>?x>a{?x}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands Q)", "with Qhnf aineqx"], ["proof (chain)\npicking this:\n  hnf Q\n  a \\<noteq> x\n  \\<lbrakk>hnf Q; a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> Q \\<longmapsto> a<\\<nu>?x> \\<prec> P' =\n                    (<\\<nu>?x>a{?x}.P' \\<in> summands Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  hnf Q\n  a \\<noteq> x\n  \\<lbrakk>hnf Q; a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> Q \\<longmapsto> a<\\<nu>?x> \\<prec> P' =\n                    (<\\<nu>?x>a{?x}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands Q)", "by simp"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)", "have \"P \\<oplus> Q \\<longmapsto>a<\\<nu>x> \\<prec> P' \\<Longrightarrow> <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q)\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q)", "by(erule_tac sumCases, auto)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q)\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "from IHP IHQ"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)", "have \"<\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow> P \\<oplus> Q \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands Q)\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n    P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by(auto dest: Sum1 Sum2)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (4 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<oplus> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<oplus>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (pi1 \\<oplus> pi2))\n 2. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 3. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 4. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q)\n  <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q)\n  <\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q) \\<Longrightarrow>\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q))", "by blast"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands (P \\<oplus> Q))\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Par P Q)"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  \\<lbrakk>hnf Q; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> Q \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands Q)\n  hnf (P \\<parallel> Q)\n  a \\<noteq> x\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"hnf (P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (P \\<parallel> Q)", "by fact"], ["proof (state)\nthis:\n  hnf (P \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (P \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>pi1 pi2 x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi1; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi1 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi1);\n        \\<And>b ba.\n           \\<lbrakk>hnf pi2; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi2 \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi2);\n        hnf (pi1 \\<parallel> pi2); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> pi1 \\<parallel>\n                         pi2 \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P'\n                          \\<in> summands (pi1 \\<parallel> pi2))\n 2. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 3. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands (P \\<parallel> Q))", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands (P \\<parallel> Q))\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Res y P)"], ["proof (state)\nthis:\n  y \\<sharp> x\n  y \\<sharp> P'\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  hnf (<\\<nu>y>P)\n  a \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have Phnf: \"hnf (<\\<nu>y>P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (<\\<nu>y>P)", "by fact"], ["proof (state)\nthis:\n  hnf (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "then"], ["proof (chain)\npicking this:\n  hnf (<\\<nu>y>P)", "obtain b P'' where bineqy: \"b \\<noteq> y\" and PeqP'': \"P = b{y}.P''\""], ["proof (prove)\nusing this:\n  hnf (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. (\\<And>b P''.\n        \\<lbrakk>b \\<noteq> y; P = b{y}.P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b \\<noteq> y\n  P = b{y}.P''\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"y \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> x", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> x\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "hence xineqy:  \"x \\<noteq> y\""], ["proof (prove)\nusing this:\n  y \\<sharp> x\n\ngoal (1 subgoal):\n 1. x \\<noteq> y", "by simp"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> P'", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> P'\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have aineqx: \"a\\<noteq>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> x", "by fact"], ["proof (state)\nthis:\n  a \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"<\\<nu>y>P \\<longmapsto>a<\\<nu>x> \\<prec> P' \\<Longrightarrow> (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "assume Trans: \"<\\<nu>y>P \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "hence  aeqb: \"a = b\""], ["proof (prove)\nusing this:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. a = b", "using xineqy bineqy PeqP''"], ["proof (prove)\nusing this:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<noteq> y\n  b \\<noteq> y\n  P = b{y}.P''\n\ngoal (1 subgoal):\n 1. a = b", "by(induct rule: resCasesB', auto elim: outputCases simp add: residual.inject alpha' abs_fresh pi.inject)"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "have Goal: \"\\<And>x P'. \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto>b<\\<nu>x> \\<prec> P'; x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk> \\<Longrightarrow>\n                           <\\<nu>x>b{x}.P' \\<in> summands(<\\<nu>y>b{y}.P'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "fix x P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "assume xFreshP'': \"(x::name) \\<sharp> P''\" and xineqb: \"x \\<noteq> b\""], ["proof (state)\nthis:\n  x \\<sharp> P''\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "assume \"<\\<nu>y>b{y}.P'' \\<longmapsto>b<\\<nu>x> \\<prec> P'\" and xineqy: \"x \\<noteq> y\""], ["proof (state)\nthis:\n  <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "from \\<open>x \\<noteq> b\\<close> \\<open>x \\<sharp> P''\\<close> \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> b\n  x \\<sharp> P''\n  x \\<noteq> y", "have \"x \\<sharp> b{y}.P''\""], ["proof (prove)\nusing this:\n  x \\<noteq> b\n  x \\<sharp> P''\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<sharp> b{y}.P''", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> b{y}.P''\n\ngoal (1 subgoal):\n 1. \\<And>x P'.\n       \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        x \\<noteq> y; x \\<noteq> b; x \\<sharp> P''\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'\n  x \\<noteq> y\n  x \\<sharp> b{y}.P''", "show \"<\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\""], ["proof (prove)\nusing this:\n  <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'\n  x \\<noteq> y\n  x \\<sharp> b{y}.P''\n\ngoal (1 subgoal):\n 1. <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "proof(induct rule: resCasesB)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b[y] \\<prec> P'; b \\<noteq> y;\n        BoundOutputS b = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.([(x, y)] \\<bullet> P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')\n 2. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "case(cOpen a P''')"], ["proof (state)\nthis:\n  b{y}.P'' \\<longmapsto> a[y] \\<prec> P'''\n  a \\<noteq> y\n  BoundOutputS b = BoundOutputS a\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b[y] \\<prec> P'; b \\<noteq> y;\n        BoundOutputS b = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.([(x, y)] \\<bullet> P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')\n 2. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "have \"BoundOutputS b = BoundOutputS a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BoundOutputS b = BoundOutputS a", "by fact"], ["proof (state)\nthis:\n  BoundOutputS b = BoundOutputS a\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b[y] \\<prec> P'; b \\<noteq> y;\n        BoundOutputS b = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.([(x, y)] \\<bullet> P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')\n 2. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "hence beqa: \"b = a\""], ["proof (prove)\nusing this:\n  BoundOutputS b = BoundOutputS a\n\ngoal (1 subgoal):\n 1. b = a", "by simp"], ["proof (state)\nthis:\n  b = a\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b[y] \\<prec> P'; b \\<noteq> y;\n        BoundOutputS b = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.([(x, y)] \\<bullet> P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')\n 2. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "have Trans: \"b{y}.P'' \\<longmapsto>a[y] \\<prec> P'''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b{y}.P'' \\<longmapsto> a[y] \\<prec> P'''", "by fact"], ["proof (state)\nthis:\n  b{y}.P'' \\<longmapsto> a[y] \\<prec> P'''\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b[y] \\<prec> P'; b \\<noteq> y;\n        BoundOutputS b = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.([(x, y)] \\<bullet> P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')\n 2. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "with PeqP''"], ["proof (chain)\npicking this:\n  P = b{y}.P''\n  b{y}.P'' \\<longmapsto> a[y] \\<prec> P'''", "have P''eqP''': \"P'' = P'''\""], ["proof (prove)\nusing this:\n  P = b{y}.P''\n  b{y}.P'' \\<longmapsto> a[y] \\<prec> P'''\n\ngoal (1 subgoal):\n 1. P'' = P'''", "by(force elim: outputCases simp add: residual.inject)"], ["proof (state)\nthis:\n  P'' = P'''\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b[y] \\<prec> P'; b \\<noteq> y;\n        BoundOutputS b = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.([(x, y)] \\<bullet> P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')\n 2. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "with bineqy xineqy xFreshP''"], ["proof (chain)\npicking this:\n  b \\<noteq> y\n  x \\<noteq> y\n  x \\<sharp> P''\n  P'' = P'''", "have \"y \\<sharp> b{x}.([(x, y)] \\<bullet> P''')\""], ["proof (prove)\nusing this:\n  b \\<noteq> y\n  x \\<noteq> y\n  x \\<sharp> P''\n  P'' = P'''\n\ngoal (1 subgoal):\n 1. y \\<sharp> b{x}.([(x, y)] \\<bullet> P''')", "by(simp add: name_fresh_abs name_calc name_fresh_left)"], ["proof (state)\nthis:\n  y \\<sharp> b{x}.([(x, y)] \\<bullet> P''')\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b[y] \\<prec> P'; b \\<noteq> y;\n        BoundOutputS b = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.([(x, y)] \\<bullet> P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')\n 2. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "with bineqy Phnf PeqP'' P''eqP''' xineqb"], ["proof (chain)\npicking this:\n  b \\<noteq> y\n  hnf (<\\<nu>y>P)\n  P = b{y}.P''\n  P'' = P'''\n  x \\<noteq> b\n  y \\<sharp> b{x}.([(x, y)] \\<bullet> P''')", "show ?case"], ["proof (prove)\nusing this:\n  b \\<noteq> y\n  hnf (<\\<nu>y>P)\n  P = b{y}.P''\n  P'' = P'''\n  x \\<noteq> b\n  y \\<sharp> b{x}.([(x, y)] \\<bullet> P''')\n\ngoal (1 subgoal):\n 1. <\\<nu>x>b{x}.([(x, y)] \\<bullet> P''') \\<in> summands (<\\<nu>y>b{y}.P'')", "by(simp only: alphaRes, simp add: name_calc)"], ["proof (state)\nthis:\n  <\\<nu>x>b{x}.([(x, y)] \\<bullet> P''') \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "case(cRes P''')"], ["proof (state)\nthis:\n  b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'''\n  y \\<sharp> BoundOutputS b\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "have \"b{y}.P'' \\<longmapsto>b<\\<nu>x> \\<prec> P'''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'''", "by fact"], ["proof (state)\nthis:\n  b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'''\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "hence False"], ["proof (prove)\nusing this:\n  b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P'''\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>b{y}.P'' \\<longmapsto> b<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>x>b{x}.(<\\<nu>y>P')\n                         \\<in> summands (<\\<nu>y>b{y}.P'')", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. <\\<nu>x>b{x}.(<\\<nu>y>P''') \\<in> summands (<\\<nu>y>b{y}.P'')", "by simp"], ["proof (state)\nthis:\n  <\\<nu>x>b{x}.(<\\<nu>y>P''') \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk><\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>?x> \\<prec> ?P';\n   ?x \\<noteq> y; ?x \\<noteq> b; ?x \\<sharp> P''\\<rbrakk>\n  \\<Longrightarrow> <\\<nu>?x>b{?x}.?P' \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "obtain z where zineqx: \"z \\<noteq> x\" and zineqy: \"z \\<noteq> y\" and zFreshP'': \"z \\<sharp> P''\" \n                 and zineqb: \"z \\<noteq> b\" and zFreshP': \"z \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<noteq> x; z \\<noteq> y; z \\<sharp> P''; z \\<noteq> b;\n         z \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force intro: name_exists_fresh[of \"(x, y, b, P'', P')\"] simp add: fresh_prod)"], ["proof (state)\nthis:\n  z \\<noteq> x\n  z \\<noteq> y\n  z \\<sharp> P''\n  z \\<noteq> b\n  z \\<sharp> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "from zFreshP' aeqb PeqP'' Trans"], ["proof (chain)\npicking this:\n  z \\<sharp> P'\n  a = b\n  P = b{y}.P''\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have Trans': \"<\\<nu>y>b{y}.P'' \\<longmapsto>b<\\<nu>z> \\<prec> [(z, x)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  z \\<sharp> P'\n  a = b\n  P = b{y}.P''\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>z> \\<prec> [(z, x)] \\<bullet> P'", "by(simp add: alphaBoundResidual name_swap)"], ["proof (state)\nthis:\n  <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>z> \\<prec> [(z, x)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "hence \"<\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\""], ["proof (prove)\nusing this:\n  <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>z> \\<prec> [(z, x)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')", "using zineqy zineqb zFreshP''"], ["proof (prove)\nusing this:\n  <\\<nu>y>b{y}.P'' \\<longmapsto> b<\\<nu>z> \\<prec> [(z, x)] \\<bullet> P'\n  z \\<noteq> y\n  z \\<noteq> b\n  z \\<sharp> P''\n\ngoal (1 subgoal):\n 1. <\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')", "by(rule Goal)"], ["proof (state)\nthis:\n  <\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "moreover"], ["proof (state)\nthis:\n  <\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "from bineqy zineqx zFreshP' aineqx aeqb"], ["proof (chain)\npicking this:\n  b \\<noteq> y\n  z \\<noteq> x\n  z \\<sharp> P'\n  a \\<noteq> x\n  a = b", "have \"x \\<sharp> b{z}.([(z, x)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  b \\<noteq> y\n  z \\<noteq> x\n  z \\<sharp> P'\n  a \\<noteq> x\n  a = b\n\ngoal (1 subgoal):\n 1. x \\<sharp> b{z}.([(z, x)] \\<bullet> P')", "by(simp add: name_fresh_left name_calc)"], ["proof (state)\nthis:\n  x \\<sharp> b{z}.([(z, x)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\n  x \\<sharp> b{z}.([(z, x)] \\<bullet> P')", "have \"<\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\""], ["proof (prove)\nusing this:\n  <\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\n  x \\<sharp> b{z}.([(z, x)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "using zineqb"], ["proof (prove)\nusing this:\n  <\\<nu>z>b{z}.([(z, x)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\n  x \\<sharp> b{z}.([(z, x)] \\<bullet> P')\n  z \\<noteq> b\n\ngoal (1 subgoal):\n 1. <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "by(simp add: alphaRes name_calc)"], ["proof (state)\nthis:\n  <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "with aeqb PeqP''"], ["proof (chain)\npicking this:\n  a = b\n  P = b{y}.P''\n  <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "show ?thesis"], ["proof (prove)\nusing this:\n  a = b\n  P = b{y}.P''\n  <\\<nu>x>b{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "by blast"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"<\\<nu>x>a{x}.P' \\<in> summands(<\\<nu>y>P) \\<Longrightarrow> <\\<nu>y>P \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume \"<\\<nu>x>a{x}.P' \\<in> summands(<\\<nu>y>P)\""], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with PeqP''"], ["proof (chain)\npicking this:\n  P = b{y}.P''\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)", "have Summ: \"<\\<nu>x>a{x}.P' \\<in> summands(<\\<nu>y>b{y}.P'')\""], ["proof (prove)\nusing this:\n  P = b{y}.P''\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "by simp"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with bineqy xineqy"], ["proof (chain)\npicking this:\n  b \\<noteq> y\n  x \\<noteq> y\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')", "have aeqb: \"a = b\""], ["proof (prove)\nusing this:\n  b \\<noteq> y\n  x \\<noteq> y\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. a = b", "by(auto simp add: if_split pi.inject name_abs_eq name_fresh_fresh)"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "from bineqy xineqy yFreshP'"], ["proof (chain)\npicking this:\n  b \\<noteq> y\n  x \\<noteq> y\n  y \\<sharp> P'", "have \"y \\<sharp> b{x}.P'\""], ["proof (prove)\nusing this:\n  b \\<noteq> y\n  x \\<noteq> y\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. y \\<sharp> b{x}.P'", "by(simp add: name_calc)"], ["proof (state)\nthis:\n  y \\<sharp> b{x}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with Summ aeqb bineqy aineqx"], ["proof (chain)\npicking this:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n  a = b\n  b \\<noteq> y\n  a \\<noteq> x\n  y \\<sharp> b{x}.P'", "have \"<\\<nu>y>b{y}.([(x, y)] \\<bullet> P') \\<in> summands(<\\<nu>y>b{y}.P'')\""], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n  a = b\n  b \\<noteq> y\n  a \\<noteq> x\n  y \\<sharp> b{x}.P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y>b{y}.([(x, y)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')", "by(simp only: alphaRes, simp add: name_calc)"], ["proof (state)\nthis:\n  <\\<nu>y>b{y}.([(x, y)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with aeqb PeqP''"], ["proof (chain)\npicking this:\n  a = b\n  P = b{y}.P''\n  <\\<nu>y>b{y}.([(x, y)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')", "have \"<\\<nu>y>P \\<longmapsto>a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  a = b\n  P = b{y}.P''\n  <\\<nu>y>b{y}.([(x, y)] \\<bullet> P') \\<in> summands (<\\<nu>y>b{y}.P'')\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by(auto intro: Open Output simp add: if_split pi.inject name_abs_eq)"], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "from yFreshP'"], ["proof (chain)\npicking this:\n  y \\<sharp> P'", "have \"x \\<sharp> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. x \\<sharp> [(x, y)] \\<bullet> P'", "by(simp add: name_fresh_left name_calc)"], ["proof (state)\nthis:\n  x \\<sharp> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n    <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  x \\<sharp> [(x, y)] \\<bullet> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>b{y}.P'')\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  x \\<sharp> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by(simp add: alphaBoundResidual name_swap)"], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>name pi x P'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> P';\n        \\<And>b ba.\n           \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n           \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                             (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (<\\<nu>name>pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>name>pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>name>pi))\n 2. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P)\n  <\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P) \\<Longrightarrow>\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P))", "by blast"], ["proof (state)\nthis:\n  <\\<nu>y>P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands (<\\<nu>y>P))\n\ngoal (1 subgoal):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "case(Bang P)"], ["proof (state)\nthis:\n  \\<lbrakk>hnf P; a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> a<\\<nu>?b> \\<prec> ?ba =\n                    (<\\<nu>?b>a{?b}.?ba \\<in> summands P)\n  hnf (!P)\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "have \"hnf (!P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hnf (!P)", "by fact"], ["proof (state)\nthis:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "hence False"], ["proof (prove)\nusing this:\n  hnf (!P)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>pi x P'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>hnf pi; a \\<noteq> b\\<rbrakk>\n                   \\<Longrightarrow> pi \\<longmapsto> a<\\<nu>b> \\<prec> ba =\n                                     (<\\<nu>b>a{b}.ba \\<in> summands pi);\n        hnf (!pi); a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> !pi \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         (<\\<nu>x>a{x}.P' \\<in> summands (!pi))", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. !P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    (<\\<nu>x>a{x}.P' \\<in> summands (!P))", "by simp"], ["proof (state)\nthis:\n  !P \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  (<\\<nu>x>a{x}.P' \\<in> summands (!P))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P' = (<\\<nu>x>a{x}.P' \\<in> summands P)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"expandSet\" :: \"pi \\<Rightarrow> pi \\<Rightarrow> pi set\" where\n          \"expandSet P Q \\<equiv> {\\<tau>.(P' \\<parallel> Q) | P'. \\<tau>.(P') \\<in> summands P} \\<union> \n                           {\\<tau>.(P \\<parallel> Q') | Q'. \\<tau>.(Q') \\<in> summands Q} \\<union> \n                           {a{b}.(P' \\<parallel> Q) | a b P'. a{b}.P' \\<in> summands P} \\<union>\n                           {a{b}.(P \\<parallel> Q') | a b Q'. a{b}.Q' \\<in> summands Q} \\<union>\n                           {a<x>.(P' \\<parallel> Q) | a x P'. a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q} \\<union>\n                           {a<x>.(P \\<parallel> Q') | a x Q'. a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P} \\<union>\n                           {<\\<nu>x>a{x}.(P' \\<parallel> Q) | a x P'. <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q} \\<union> \n                           {<\\<nu>x>a{x}.(P \\<parallel> Q') | a x Q'. <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P} \\<union> \n                           {\\<tau>.(P'[x::=b] \\<parallel> Q') | x P' b Q'. \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q} \\<union> \n                           {\\<tau>.(P' \\<parallel> (Q'[x::=b])) | b P' x Q'. \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q} \\<union> \n                           {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) | x P' y Q'. \\<exists>a. a<x>.P' \\<in> summands P \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P} \\<union>\n                           {\\<tau>.(<\\<nu>y>(P' \\<parallel> (Q'[x::=y]))) | y P' x Q'. \\<exists>a. <\\<nu>y>a{y}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\""], ["", "lemma finiteExpand:\n  fixes P :: pi\n  and   Q :: pi\n\n  shows \"finite(expandSet P Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {\\<tau>.(P' \\<parallel> Q) | P'. \\<tau>.(P') \\<in> summands P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {\\<tau>.(P' \\<parallel> Q) |P'. \\<tau>.P' \\<in> summands P}", "by(induct P rule: pi.induct, auto simp add: pi.inject Collect_ex_eq conj_disj_distribL\n                                                           Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite {\\<tau>.(P' \\<parallel> Q) |P'. \\<tau>.P' \\<in> summands P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite {\\<tau>.(P' \\<parallel> Q) |P'. \\<tau>.P' \\<in> summands P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {\\<tau>.(P \\<parallel> Q') | Q'. \\<tau>.(Q') \\<in> summands Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {\\<tau>.(P \\<parallel> Q') |Q'. \\<tau>.Q' \\<in> summands Q}", "by(induct Q rule: pi.induct, auto simp add: pi.inject Collect_ex_eq conj_disj_distribL\n                                                           Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite {\\<tau>.(P \\<parallel> Q') |Q'. \\<tau>.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite {\\<tau>.(P \\<parallel> Q') |Q'. \\<tau>.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {a{b}.(P' \\<parallel> Q) | a b P'. a{b}.P' \\<in> summands P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {a{b}.(P' \\<parallel> Q) |a b P'. a{b}.P' \\<in> summands P}", "by(induct P rule: pi.induct, auto simp add: pi.inject Collect_ex_eq conj_disj_distribL\n                                                           Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite {a{b}.(P' \\<parallel> Q) |a b P'. a{b}.P' \\<in> summands P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite {a{b}.(P' \\<parallel> Q) |a b P'. a{b}.P' \\<in> summands P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {a{b}.(P \\<parallel> Q') | a b Q'. a{b}.Q' \\<in> summands Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {a{b}.(P \\<parallel> Q') |a b Q'. a{b}.Q' \\<in> summands Q}", "by(induct Q rule: pi.induct, auto simp add: pi.inject Collect_ex_eq conj_disj_distribL\n                                                           Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite {a{b}.(P \\<parallel> Q') |a b Q'. a{b}.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite {a{b}.(P \\<parallel> Q') |a b Q'. a{b}.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {a<x>.(P' \\<parallel> Q) | a x P'. a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P' \\<parallel> Q) |a x P'.\n      a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P' \\<parallel> Q) |a x P'.\n      a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}", "have Aux: \"\\<And>a x P Q. (x::name) \\<sharp> Q \\<Longrightarrow> {a'<x'>.(P' \\<parallel> Q) |a' x' P'. a'<x'>.P' = a<x>.P \\<and> x' \\<sharp> Q} = {a<x>.(P \\<parallel> Q)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P Q.\n       x \\<sharp> Q \\<Longrightarrow>\n       {a'<x'>.(P' \\<parallel> Q) |a' x' P'.\n        a'<x'>.P' = a<x>.P \\<and> x' \\<sharp> Q} =\n       {a<x>.(P \\<parallel> Q)}", "by(auto simp add: pi.inject name_abs_eq name_fresh_fresh)"], ["proof (state)\nthis:\n  ?x \\<sharp> ?Q \\<Longrightarrow>\n  {a'<x'>.(P' \\<parallel> ?Q) |a' x' P'.\n   a'<x'>.P' = ?a<?x>.?P \\<and> x' \\<sharp> ?Q} =\n  {?a<?x>.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P' \\<parallel> Q) |a x P'.\n      a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<sharp> ?Q \\<Longrightarrow>\n  {a'<x'>.(P' \\<parallel> ?Q) |a' x' P'.\n   a'<x'>.P' = ?a<?x>.?P \\<and> x' \\<sharp> ?Q} =\n  {?a<?x>.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P' \\<parallel> Q) |a x P'.\n      a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}", "by(nominal_induct P avoiding: Q rule: pi.strong_induct,\n         auto simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                        Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite\n   {a<x>.(P' \\<parallel> Q) |a x P'.\n    a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {a<x>.(P' \\<parallel> Q) |a x P'.\n    a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite\n   {a<x>.(P' \\<parallel> Q) |a x P'.\n    a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {a<x>.(P \\<parallel> Q') | a x Q'. a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P \\<parallel> Q') |a x Q'.\n      a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P \\<parallel> Q') |a x Q'.\n      a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "have Aux: \"\\<And>a x P Q. (x::name) \\<sharp> P \\<Longrightarrow> {a'<x'>.(P \\<parallel> Q') |a' x' Q'. a'<x'>.Q' = a<x>.Q \\<and> x' \\<sharp> P} = {a<x>.(P \\<parallel> Q)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P Q.\n       x \\<sharp> P \\<Longrightarrow>\n       {a'<x'>.(P \\<parallel> Q') |a' x' Q'.\n        a'<x'>.Q' = a<x>.Q \\<and> x' \\<sharp> P} =\n       {a<x>.(P \\<parallel> Q)}", "by(auto simp add: pi.inject name_abs_eq name_fresh_fresh)"], ["proof (state)\nthis:\n  ?x \\<sharp> ?P \\<Longrightarrow>\n  {a'<x'>.(?P \\<parallel> Q') |a' x' Q'.\n   a'<x'>.Q' = ?a<?x>.?Q \\<and> x' \\<sharp> ?P} =\n  {?a<?x>.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P \\<parallel> Q') |a x Q'.\n      a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<sharp> ?P \\<Longrightarrow>\n  {a'<x'>.(?P \\<parallel> Q') |a' x' Q'.\n   a'<x'>.Q' = ?a<?x>.?Q \\<and> x' \\<sharp> ?P} =\n  {?a<?x>.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {a<x>.(P \\<parallel> Q') |a x Q'.\n      a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "by(nominal_induct Q avoiding: P rule: pi.strong_induct,\n         auto simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                        Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite\n   {a<x>.(P \\<parallel> Q') |a x Q'.\n    a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {a<x>.(P \\<parallel> Q') |a x Q'.\n    a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite\n   {a<x>.(P \\<parallel> Q') |a x Q'.\n    a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {<\\<nu>x>a{x}.(P' \\<parallel> Q) | a x P'. <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n      <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n      <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}", "have Aux: \"\\<And>a x P Q. \\<lbrakk>x \\<sharp> Q; a \\<noteq> x\\<rbrakk> \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(P' \\<parallel> Q) |a' x' P'. <\\<nu>x'>a'{x'}.P' = <\\<nu>x>a{x}.P \\<and> x' \\<sharp> Q} = \n                                             {<\\<nu>x>a{x}.(P \\<parallel> Q)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P Q.\n       \\<lbrakk>x \\<sharp> Q; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(P' \\<parallel> Q) |a' x' P'.\n                          <\\<nu>x'>a'{x'}.P' = <\\<nu>x>a{x}.P \\<and>\n                          x' \\<sharp> Q} =\n                         {<\\<nu>x>a{x}.(P \\<parallel> Q)}", "by(auto simp add: pi.inject name_abs_eq name_fresh_fresh)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<sharp> ?Q; ?a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(P' \\<parallel> ?Q) |a' x' P'.\n                     <\\<nu>x'>a'{x'}.P' = <\\<nu>?x>?a{?x}.?P \\<and>\n                     x' \\<sharp> ?Q} =\n                    {<\\<nu>?x>?a{?x}.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n      <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<sharp> ?Q; ?a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(P' \\<parallel> ?Q) |a' x' P'.\n                     <\\<nu>x'>a'{x'}.P' = <\\<nu>?x>?a{?x}.?P \\<and>\n                     x' \\<sharp> ?Q} =\n                    {<\\<nu>?x>?a{?x}.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n      <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}", "by(nominal_induct P avoiding: Q rule: pi.strong_induct, \n         auto simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                        Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite\n   {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n    <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n    <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite\n   {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n    <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {<\\<nu>x>a{x}.(P \\<parallel> Q') | a x Q'. <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n      <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n      <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "have Aux: \"\\<And>a x P Q. \\<lbrakk>x \\<sharp> P; a \\<noteq> x\\<rbrakk> \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(P \\<parallel> Q') |a' x' Q'. <\\<nu>x'>a'{x'}.Q' = <\\<nu>x>a{x}.Q \\<and> x' \\<sharp> P} = \n                                             {<\\<nu>x>a{x}.(P \\<parallel> Q)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P Q.\n       \\<lbrakk>x \\<sharp> P; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(P \\<parallel> Q') |a' x' Q'.\n                          <\\<nu>x'>a'{x'}.Q' = <\\<nu>x>a{x}.Q \\<and>\n                          x' \\<sharp> P} =\n                         {<\\<nu>x>a{x}.(P \\<parallel> Q)}", "by(auto simp add: pi.inject name_abs_eq name_fresh_fresh)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<sharp> ?P; ?a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(?P \\<parallel> Q') |a' x' Q'.\n                     <\\<nu>x'>a'{x'}.Q' = <\\<nu>?x>?a{?x}.?Q \\<and>\n                     x' \\<sharp> ?P} =\n                    {<\\<nu>?x>?a{?x}.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n      <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<sharp> ?P; ?a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> {<\\<nu>x'>a'{x'}.(?P \\<parallel> Q') |a' x' Q'.\n                     <\\<nu>x'>a'{x'}.Q' = <\\<nu>?x>?a{?x}.?Q \\<and>\n                     x' \\<sharp> ?P} =\n                    {<\\<nu>?x>?a{?x}.(?P \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n      <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}", "by(nominal_induct Q avoiding: P rule: pi.strong_induct, \n         auto simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                        Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite\n   {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n    <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n    <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite\n   {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n    <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {\\<tau>.(P'[x::=b] \\<parallel> Q') | x P' b Q'. \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n      \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n      \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}", "have Aux: \"\\<And>a x P b Q. {\\<tau>.(P'[x'::=b'] \\<parallel> Q') | a' x' P' b' Q'. a'<x'>.P' = a<x>.P \\<and> a'{b'}.Q' = a{b}.Q} = {\\<tau>.(P[x::=b] \\<parallel> Q)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P b Q.\n       {uu_.\n        \\<exists>a' x' P' b' Q'.\n           uu_ = \\<tau>.(P'[x'::=b'] \\<parallel> Q') \\<and>\n           a'<x'>.P' = a<x>.P \\<and> a'{b'}.Q' = a{b}.Q} =\n       {\\<tau>.(P[x::=b] \\<parallel> Q)}", "by(auto simp add: name_abs_eq pi.inject renaming)"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a' x' P' b' Q'.\n      uu_ = \\<tau>.(P'[x'::=b'] \\<parallel> Q') \\<and>\n      a'<x'>.P' = ?a<?x>.?P \\<and> a'{b'}.Q' = ?a{?b}.?Q} =\n  {\\<tau>.(?P[?x::=?b] \\<parallel> ?Q)}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n      \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}", "have \"\\<And>a x P Q b::'a::{}. finite {\\<tau>.(P'[x'::=b] \\<parallel> Q') | a' x' P' b Q'. a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P Q b.\n       finite\n        {uu_.\n         \\<exists>a' x' P' b Q'.\n            uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n            a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands Q}", "apply(induct rule: pi.induct, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a x P name1 name2 pi.\n       finite\n        {uu_.\n         \\<exists>a' x' P' b Q'.\n            uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n            a'<x'>.P' = a<x>.P \\<and>\n            a'{b}.Q' \\<in> summands pi} \\<Longrightarrow>\n       finite\n        {uu_.\n         \\<exists>a' x' P' b Q'.\n            uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n            a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' = name1{name2}.pi}\n 2. \\<And>a x P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' x' P' b Q'.\n                     uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                     a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' x' P' b Q'.\n             uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n             a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' b Q'.\n                              uu_ =\n                              \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              (a'{b}.Q' \\<in> summands pi1 \\<or>\n                               a'{b}.Q' \\<in> summands pi2)}", "apply(case_tac \"a=name1\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a x P name1 name2 pi.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' x' P' b Q'.\n                     uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                     a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi};\n        a = name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' b Q'.\n                              uu_ =\n                              \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              a'{b}.Q' = name1{name2}.pi}\n 2. \\<And>a x P name1 name2 pi.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' x' P' b Q'.\n                     uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                     a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi};\n        a \\<noteq> name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' b Q'.\n                              uu_ =\n                              \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              a'{b}.Q' = name1{name2}.pi}\n 3. \\<And>a x P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' x' P' b Q'.\n                     uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                     a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' x' P' b Q'.\n             uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n             a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' b Q'.\n                              uu_ =\n                              \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              (a'{b}.Q' \\<in> summands pi1 \\<or>\n                               a'{b}.Q' \\<in> summands pi2)}", "apply(simp add: Aux)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a x P name1 name2 pi.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' x' P' b Q'.\n                     uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                     a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi};\n        a \\<noteq> name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' b Q'.\n                              uu_ =\n                              \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              a'{b}.Q' = name1{name2}.pi}\n 2. \\<And>a x P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' x' P' b Q'.\n                     uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                     a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' x' P' b Q'.\n             uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n             a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' b Q'.\n                              uu_ =\n                              \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              (a'{b}.Q' \\<in> summands pi1 \\<or>\n                               a'{b}.Q' \\<in> summands pi2)}", "apply(simp add: pi.inject)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' x' P' b Q'.\n                     uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                     a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' x' P' b Q'.\n             uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n             a'<x'>.P' = a<x>.P \\<and> a'{b}.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' b Q'.\n                              uu_ =\n                              \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              (a'{b}.Q' \\<in> summands pi1 \\<or>\n                               a'{b}.Q' \\<in> summands pi2)}", "by(simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                   Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a' x' P' b Q'.\n       uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n       a'<x'>.P' = ?a<?x>.?P \\<and> a'{b}.Q' \\<in> summands ?Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n      \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}", "hence \"finite {\\<tau>.(P'[x::=b] \\<parallel> Q') | a x P' b Q'. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\""], ["proof (prove)\nusing this:\n  finite\n   {uu_.\n    \\<exists>a' x' P' b Q'.\n       uu_ = \\<tau>.(P'[x'::=b] \\<parallel> Q') \\<and>\n       a'<x'>.P' = ?a<?x>.?P \\<and> a'{b}.Q' \\<in> summands ?Q}\n\ngoal (1 subgoal):\n 1. finite\n     {uu_.\n      \\<exists>a x P' b Q'.\n         uu_ = \\<tau>.(P'[x::=b] \\<parallel> Q') \\<and>\n         a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}", "by(nominal_induct P avoiding: Q rule: pi.strong_induct,\n         auto simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                        Collect_disj_eq UN_Un_distrib name_abs_eq)"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a x P' b Q'.\n       uu_ = \\<tau>.(P'[x::=b] \\<parallel> Q') \\<and>\n       a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n      \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite\n   {uu_.\n    \\<exists>a x P' b Q'.\n       uu_ = \\<tau>.(P'[x::=b] \\<parallel> Q') \\<and>\n       a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n      \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}", "apply(rule_tac finite_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a x P' b Q'.\n         uu_ = \\<tau>.(P'[x::=b] \\<parallel> Q') \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         a{b}.Q' \\<in> summands Q} \\<Longrightarrow>\n    {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n     \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n    \\<subseteq> ?B1\n 2. finite\n     {uu_.\n      \\<exists>a x P' b Q'.\n         uu_ = \\<tau>.(P'[x::=b] \\<parallel> Q') \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         a{b}.Q' \\<in> summands Q} \\<Longrightarrow>\n    finite ?B1", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a x P' b Q'.\n         uu_ = \\<tau>.(P'[x::=b] \\<parallel> Q') \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         a{b}.Q' \\<in> summands Q} \\<Longrightarrow>\n    finite ?B1\n 2. finite\n     {uu_.\n      \\<exists>a x P' b Q'.\n         uu_ = \\<tau>.(P'[x::=b] \\<parallel> Q') \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         a{b}.Q' \\<in> summands Q} \\<Longrightarrow>\n    {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n     \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n    \\<subseteq> ?B1", "by blast+"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n    \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n    \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n    \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {\\<tau>.(P' \\<parallel> (Q'[x::=b])) | b P' x Q'. \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n      \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n      \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}", "have Aux: \"\\<And>a x P b Q. {\\<tau>.(P' \\<parallel> (Q'[x'::=b'])) | a' b' P' x' Q'. a'{b'}.P' = a{b}.P \\<and> a'<x'>.Q' = a<x>.Q} = {\\<tau>.(P \\<parallel> (Q[x::=b]))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P b Q.\n       {uu_.\n        \\<exists>a' b' P' x' Q'.\n           uu_ = \\<tau>.(P' \\<parallel> Q'[x'::=b']) \\<and>\n           a'{b'}.P' = a{b}.P \\<and> a'<x'>.Q' = a<x>.Q} =\n       {\\<tau>.(P \\<parallel> Q[x::=b])}", "by(auto simp add: name_abs_eq pi.inject renaming)"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a' b' P' x' Q'.\n      uu_ = \\<tau>.(P' \\<parallel> Q'[x'::=b']) \\<and>\n      a'{b'}.P' = ?a{?b}.?P \\<and> a'<x'>.Q' = ?a<?x>.?Q} =\n  {\\<tau>.(?P \\<parallel> ?Q[?x::=?b])}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n      \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}", "have \"\\<And>a b P Q x::'a::{}. finite {\\<tau>.(P' \\<parallel> (Q'[x::=b'])) | a' b' P' x Q'. a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b P Q x.\n       finite\n        {uu_.\n         \\<exists>a' b' P' x Q'.\n            uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n            a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands Q}", "apply(induct rule: pi.induct, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b P name1 name2 pi.\n       finite\n        {uu_.\n         \\<exists>a' b' P' x Q'.\n            uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n            a'{b'}.P' = a{b}.P \\<and>\n            a'<x>.Q' \\<in> summands pi} \\<Longrightarrow>\n       finite\n        {uu_.\n         \\<exists>a' b' P' x Q'.\n            uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n            a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' = name1<name2>.pi}\n 2. \\<And>a b P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' b' P' x Q'.\n                     uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                     a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' b' P' x Q'.\n             uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n             a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' b' P' x Q'.\n                              uu_ =\n                              \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                              a'{b'}.P' = a{b}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2)}", "apply(case_tac \"a=name1\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b P name1 name2 pi.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' b' P' x Q'.\n                     uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                     a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi};\n        a = name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' b' P' x Q'.\n                              uu_ =\n                              \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                              a'{b'}.P' = a{b}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi}\n 2. \\<And>a b P name1 name2 pi.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' b' P' x Q'.\n                     uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                     a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi};\n        a \\<noteq> name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' b' P' x Q'.\n                              uu_ =\n                              \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                              a'{b'}.P' = a{b}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi}\n 3. \\<And>a b P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' b' P' x Q'.\n                     uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                     a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' b' P' x Q'.\n             uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n             a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' b' P' x Q'.\n                              uu_ =\n                              \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                              a'{b'}.P' = a{b}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2)}", "apply(simp add: Aux)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b P name1 name2 pi.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' b' P' x Q'.\n                     uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                     a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi};\n        a \\<noteq> name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' b' P' x Q'.\n                              uu_ =\n                              \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                              a'{b'}.P' = a{b}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi}\n 2. \\<And>a b P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' b' P' x Q'.\n                     uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                     a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' b' P' x Q'.\n             uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n             a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' b' P' x Q'.\n                              uu_ =\n                              \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                              a'{b'}.P' = a{b}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2)}", "apply(simp add: pi.inject)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b P pi1 pi2.\n       \\<lbrakk>finite\n                 {uu_.\n                  \\<exists>a' b' P' x Q'.\n                     uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                     a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi1};\n        finite\n         {uu_.\n          \\<exists>a' b' P' x Q'.\n             uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n             a'{b'}.P' = a{b}.P \\<and> a'<x>.Q' \\<in> summands pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' b' P' x Q'.\n                              uu_ =\n                              \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n                              a'{b'}.P' = a{b}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2)}", "by(simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                     Collect_disj_eq UN_Un_distrib)"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a' b' P' x Q'.\n       uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n       a'{b'}.P' = ?a{?b}.?P \\<and> a'<x>.Q' \\<in> summands ?Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n      \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}", "hence \"finite {\\<tau>.(P' \\<parallel> (Q'[x::=b])) | a b P' x Q'. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\""], ["proof (prove)\nusing this:\n  finite\n   {uu_.\n    \\<exists>a' b' P' x Q'.\n       uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b']) \\<and>\n       a'{b'}.P' = ?a{?b}.?P \\<and> a'<x>.Q' \\<in> summands ?Q}\n\ngoal (1 subgoal):\n 1. finite\n     {uu_.\n      \\<exists>a b P' x Q'.\n         uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<and>\n         a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}", "by(nominal_induct P avoiding: Q rule: pi.strong_induct,\n         auto simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                        Collect_disj_eq UN_Un_distrib name_abs_eq)"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a b P' x Q'.\n       uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<and>\n       a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n      \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite\n   {uu_.\n    \\<exists>a b P' x Q'.\n       uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<and>\n       a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n      \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}", "apply(rule_tac finite_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a b P' x Q'.\n         uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<and>\n         a{b}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q} \\<Longrightarrow>\n    {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n     \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n    \\<subseteq> ?B1\n 2. finite\n     {uu_.\n      \\<exists>a b P' x Q'.\n         uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<and>\n         a{b}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q} \\<Longrightarrow>\n    finite ?B1", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a b P' x Q'.\n         uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<and>\n         a{b}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q} \\<Longrightarrow>\n    finite ?B1\n 2. finite\n     {uu_.\n      \\<exists>a b P' x Q'.\n         uu_ = \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<and>\n         a{b}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q} \\<Longrightarrow>\n    {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n     \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n    \\<subseteq> ?B1", "by blast+"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n    \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n    \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n    \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) | x P' y Q'. \\<exists>a. a<x>.P' \\<in> summands P \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "have Aux: \"\\<And>a x P y Q. y \\<sharp> P \\<and> y \\<noteq> a \\<Longrightarrow> {\\<tau>.(<\\<nu>y'>(P'[x'::=y'] \\<parallel> Q')) | a' x' P' y' Q'. a'<x'>.P' = a<x>.P \\<and> <\\<nu>y'>a'{y'}.Q' = <\\<nu>y>a{y}.Q \\<and> y' \\<sharp> a<x>.P} = {\\<tau>.(<\\<nu>y>(P[x::=y] \\<parallel> Q))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P y Q.\n       y \\<sharp> P \\<and> y \\<noteq> a \\<Longrightarrow>\n       {uu_.\n        \\<exists>a' x' P' y' Q'.\n           uu_ = \\<tau>.(<\\<nu>y'>(P'[x'::=y'] \\<parallel> Q')) \\<and>\n           a'<x'>.P' = a<x>.P \\<and>\n           <\\<nu>y'>a'{y'}.Q' = <\\<nu>y>a{y}.Q \\<and> y' \\<sharp> a<x>.P} =\n       {\\<tau>.(<\\<nu>y>(P[x::=y] \\<parallel> Q))}", "apply(auto simp add: pi.inject name_abs_eq name_fresh_abs name_calc fresh_fact2 fresh_fact1 eqvts forget)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>a x P y Q.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x \\<noteq> y; x \\<noteq> a;\n        x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P = ([(x, y)] \\<bullet> P)[y::=x]\n 2. \\<And>a x P y Q x'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x \\<noteq> y; x \\<noteq> a;\n        x \\<sharp> Q; x' \\<noteq> x; x' \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> ([(x, x')] \\<bullet> P)[x'::=x] =\n                         ([(x, y)] \\<bullet> P)[y::=x]\n 3. \\<And>a x P y Q x' y'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; y' \\<noteq> y; y' \\<noteq> a;\n        y' \\<sharp> Q; x' \\<noteq> x; x' \\<sharp> P; y' \\<sharp> P;\n        y \\<noteq> x; y' \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ([(x, x')] \\<bullet> P)[x'::=y'] = P[x::=y']\n 4. \\<And>a x P y x'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> P;\n        ([(x, x')] \\<bullet> P)[x'::=y] \\<noteq> P[x::=y]\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>a x P y Q x'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x \\<noteq> a; x \\<sharp> Q;\n        x' \\<noteq> x; x' \\<sharp> P; y \\<noteq> x;\n        ([(x, x')] \\<bullet> P)[x'::=y] =\n        ([(x, y)] \\<bullet> [(x, x')] \\<bullet> P)[x'::=y];\n        y \\<sharp> ([(x, x')] \\<bullet> P)[x'::=x];\n        y \\<sharp> [(x, y)] \\<bullet> Q; y \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> ([(x, y)] \\<bullet>\n                          [(x, x')] \\<bullet> P)[x'::=y] =\n                         P[x::=y]\n 6. \\<And>a x P Q x' y'.\n       \\<lbrakk>y' \\<noteq> a; y' \\<sharp> Q; x' \\<noteq> x; x' \\<sharp> P;\n        y' \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> ([(x, x')] \\<bullet> P)[x'::=y'] = P[x::=y']\n 7. \\<And>a x P y Q x'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x' \\<noteq> a; x' \\<sharp> Q;\n        x' \\<noteq> x; x' \\<sharp> P;\n        ([(x, x')] \\<bullet> P)[x'::=y] =\n        [(y, x')] \\<bullet> [(x, x')] \\<bullet> P;\n        y \\<sharp> [(x, x')] \\<bullet> P; y \\<sharp> [(y, x')] \\<bullet> Q;\n        y \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> [(y, x')] \\<bullet> [(x, x')] \\<bullet> P =\n                         P[x::=y]\n 8. \\<And>a x P Q x' y'.\n       \\<lbrakk>x' \\<noteq> a; y' \\<noteq> a; y' \\<sharp> Q; x' \\<noteq> x;\n        x' \\<sharp> P; y' \\<sharp> P;\n        [(x, x')] \\<bullet> P =\n        ([(x', y')] \\<bullet> [(x, x')] \\<bullet> P)[y'::=x'];\n        x' \\<sharp> [(x', y')] \\<bullet> Q; y' \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> [(x, x')] \\<bullet> P = P[x::=x']\n 9. \\<And>a x P y Q x' y'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; y' \\<noteq> a; y' \\<sharp> Q;\n        x' \\<noteq> x; x' \\<sharp> P; y' \\<sharp> P; y \\<noteq> y';\n        ([(x, x')] \\<bullet> P)[x'::=y] =\n        ([(y, y')] \\<bullet> [(x, x')] \\<bullet> P)[x'::=y];\n        y \\<sharp> ([(x, x')] \\<bullet> P)[x'::=y'];\n        y \\<sharp> [(y, y')] \\<bullet> Q; y' \\<noteq> x';\n        y \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> ([(y, y')] \\<bullet>\n                          [(x, x')] \\<bullet> P)[x'::=y] =\n                         P[x::=y]", "apply(subst name_swap, simp add: injPermSubst fresh_fact1 fresh_fact2)+"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x P y x'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> P;\n        ([(x, x')] \\<bullet> P)[x'::=y] \\<noteq> P[x::=y]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a x P y Q x'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x \\<noteq> a; x \\<sharp> Q;\n        x' \\<noteq> x; x' \\<sharp> P; y \\<noteq> x;\n        ([(x, x')] \\<bullet> P)[x'::=y] =\n        ([(x, y)] \\<bullet> [(x, x')] \\<bullet> P)[x'::=y];\n        y \\<sharp> ([(x, x')] \\<bullet> P)[x'::=x];\n        y \\<sharp> [(x, y)] \\<bullet> Q; y \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> ([(x, y)] \\<bullet>\n                          [(x, x')] \\<bullet> P)[x'::=y] =\n                         P[x::=y]\n 3. \\<And>a x P Q x' y'.\n       \\<lbrakk>y' \\<noteq> a; y' \\<sharp> Q; x' \\<noteq> x; x' \\<sharp> P;\n        y' \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> ([(x, x')] \\<bullet> P)[x'::=y'] = P[x::=y']\n 4. \\<And>a x P y Q x'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; x' \\<noteq> a; x' \\<sharp> Q;\n        x' \\<noteq> x; x' \\<sharp> P;\n        ([(x, x')] \\<bullet> P)[x'::=y] =\n        [(y, x')] \\<bullet> [(x, x')] \\<bullet> P;\n        y \\<sharp> [(x, x')] \\<bullet> P; y \\<sharp> [(y, x')] \\<bullet> Q;\n        y \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> [(y, x')] \\<bullet> [(x, x')] \\<bullet> P =\n                         P[x::=y]\n 5. \\<And>a x P Q x' y'.\n       \\<lbrakk>x' \\<noteq> a; y' \\<noteq> a; y' \\<sharp> Q; x' \\<noteq> x;\n        x' \\<sharp> P; y' \\<sharp> P;\n        [(x, x')] \\<bullet> P =\n        ([(x', y')] \\<bullet> [(x, x')] \\<bullet> P)[y'::=x'];\n        x' \\<sharp> [(x', y')] \\<bullet> Q; y' \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> [(x, x')] \\<bullet> P = P[x::=x']\n 6. \\<And>a x P y Q x' y'.\n       \\<lbrakk>y \\<sharp> P; y \\<noteq> a; y' \\<noteq> a; y' \\<sharp> Q;\n        x' \\<noteq> x; x' \\<sharp> P; y' \\<sharp> P; y \\<noteq> y';\n        ([(x, x')] \\<bullet> P)[x'::=y] =\n        ([(y, y')] \\<bullet> [(x, x')] \\<bullet> P)[x'::=y];\n        y \\<sharp> ([(x, x')] \\<bullet> P)[x'::=y'];\n        y \\<sharp> [(y, y')] \\<bullet> Q; y' \\<noteq> x';\n        y \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> ([(y, y')] \\<bullet>\n                          [(x, x')] \\<bullet> P)[x'::=y] =\n                         P[x::=y]", "by(simp add: name_swap injPermSubst)+"], ["proof (state)\nthis:\n  ?y \\<sharp> ?P \\<and> ?y \\<noteq> ?a \\<Longrightarrow>\n  {uu_.\n   \\<exists>a' x' P' y' Q'.\n      uu_ = \\<tau>.(<\\<nu>y'>(P'[x'::=y'] \\<parallel> Q')) \\<and>\n      a'<x'>.P' = ?a<?x>.?P \\<and>\n      <\\<nu>y'>a'{y'}.Q' = <\\<nu>?y>?a{?y}.?Q \\<and>\n      y' \\<sharp> ?a<?x>.?P} =\n  {\\<tau>.(<\\<nu>?y>(?P[?x::=?y] \\<parallel> ?Q))}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "have BC: \"\\<And>a x P Q. finite {\\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) | a' x' P' y Q'. a'<x'>.P' = a<x>.P \\<and> <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and> y \\<sharp> a<x>.P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x P Q.\n       finite\n        {uu_.\n         \\<exists>a' x' P' y Q'.\n            uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n            a'<x'>.P' = a<x>.P \\<and>\n            <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and> y \\<sharp> a<x>.P}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a x P Q.\n       finite\n        {uu_.\n         \\<exists>a' x' P' y Q'.\n            uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n            a'<x'>.P' = a<x>.P \\<and>\n            <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and> y \\<sharp> a<x>.P}", "fix a x P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a x P Q.\n       finite\n        {uu_.\n         \\<exists>a' x' P' y Q'.\n            uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n            a'<x'>.P' = a<x>.P \\<and>\n            <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and> y \\<sharp> a<x>.P}", "show \"finite {\\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) | a' x' P' y Q'. a'<x'>.P' = a<x>.P \\<and> <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and> y \\<sharp> a<x>.P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {uu_.\n      \\<exists>a' x' P' y Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n         a'<x'>.P' = a<x>.P \\<and>\n         <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and> y \\<sharp> a<x>.P}", "apply(nominal_induct Q avoiding: a P rule: pi.strong_induct, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pi1 pi2 a P.\n       \\<lbrakk>\\<And>b ba.\n                   finite\n                    {uu_.\n                     \\<exists>a' x' P' y Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                        a'<x'>.P' = b<x>.ba \\<and>\n                        <\\<nu>y>a'{y}.Q' \\<in> summands pi1 \\<and>\n                        y \\<noteq> b \\<and> y \\<sharp> [x].ba};\n        \\<And>b ba.\n           finite\n            {uu_.\n             \\<exists>a' x' P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                a'<x'>.P' = b<x>.ba \\<and>\n                <\\<nu>y>a'{y}.Q' \\<in> summands pi2 \\<and>\n                y \\<noteq> b \\<and> y \\<sharp> [x].ba}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel>\n         Q')) \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              (<\\<nu>y>a'{y}.Q' \\<in> summands pi1 \\<or>\n                               <\\<nu>y>a'{y}.Q' \\<in> summands pi2) \\<and>\n                              y \\<noteq> a \\<and> y \\<sharp> [x].P}\n 2. \\<And>name pi a P.\n       \\<lbrakk>name \\<noteq> a; name \\<sharp> P;\n        \\<And>b ba.\n           finite\n            {uu_.\n             \\<exists>a' x' P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                a'<x'>.P' = b<x>.ba \\<and>\n                <\\<nu>y>a'{y}.Q' \\<in> summands pi \\<and>\n                y \\<noteq> b \\<and> y \\<sharp> [x].ba}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             a \\<noteq> name \\<and>\n                             (\\<exists>P'.\n                                 pi = a{name}.P')) \\<longrightarrow>\n                         finite\n                          {uu_.\n                           \\<exists>a' x' P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel>\n         Q')) \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              <\\<nu>y>a'{y}.Q' = <\\<nu>name>pi \\<and>\n                              y \\<noteq> a \\<and> y \\<sharp> [x].P}", "apply(simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR\n                        Collect_disj_eq UN_Un_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>name pi a P.\n       \\<lbrakk>name \\<noteq> a; name \\<sharp> P;\n        \\<And>b ba.\n           finite\n            {uu_.\n             \\<exists>a' x' P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                a'<x'>.P' = b<x>.ba \\<and>\n                <\\<nu>y>a'{y}.Q' \\<in> summands pi \\<and>\n                y \\<noteq> b \\<and> y \\<sharp> [x].ba}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             a \\<noteq> name \\<and>\n                             (\\<exists>P'.\n                                 pi = a{name}.P')) \\<longrightarrow>\n                         finite\n                          {uu_.\n                           \\<exists>a' x' P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel>\n         Q')) \\<and>\n                              a'<x'>.P' = a<x>.P \\<and>\n                              <\\<nu>y>a'{y}.Q' = <\\<nu>name>pi \\<and>\n                              y \\<noteq> a \\<and> y \\<sharp> [x].P}", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>name a P aa P'.\n       \\<lbrakk>name \\<noteq> a; name \\<sharp> P; aa \\<noteq> name\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P'a y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'a[x'::=y] \\<parallel>\n         Q')) \\<and>\n                              a'<x'>.P'a = a<x>.P \\<and>\n                              <\\<nu>y>a'{y}.Q' =\n                              <\\<nu>name>aa{name}.P' \\<and>\n                              y \\<noteq> a \\<and> y \\<sharp> [x].P}", "apply(case_tac \"a=aa\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>name a P aa P'.\n       \\<lbrakk>name \\<noteq> a; name \\<sharp> P; aa \\<noteq> name;\n        a = aa\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P'a y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'a[x'::=y] \\<parallel>\n         Q')) \\<and>\n                              a'<x'>.P'a = a<x>.P \\<and>\n                              <\\<nu>y>a'{y}.Q' =\n                              <\\<nu>name>aa{name}.P' \\<and>\n                              y \\<noteq> a \\<and> y \\<sharp> [x].P}\n 2. \\<And>name a P aa P'.\n       \\<lbrakk>name \\<noteq> a; name \\<sharp> P; aa \\<noteq> name;\n        a \\<noteq> aa\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P'a y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'a[x'::=y] \\<parallel>\n         Q')) \\<and>\n                              a'<x'>.P'a = a<x>.P \\<and>\n                              <\\<nu>y>a'{y}.Q' =\n                              <\\<nu>name>aa{name}.P' \\<and>\n                              y \\<noteq> a \\<and> y \\<sharp> [x].P}", "apply(insert Aux, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>name a P aa P'.\n       \\<lbrakk>name \\<noteq> a; name \\<sharp> P; aa \\<noteq> name;\n        a \\<noteq> aa;\n        \\<And>y P a x Q.\n           y \\<sharp> P \\<and> y \\<noteq> a \\<Longrightarrow>\n           {uu_.\n            \\<exists>a' x' P' y' Q'.\n               uu_ = \\<tau>.(<\\<nu>y'>(P'[x'::=y'] \\<parallel> Q')) \\<and>\n               a'<x'>.P' = a<x>.P \\<and>\n               <\\<nu>y'>a'{y'}.Q' = <\\<nu>y>a{y}.Q \\<and>\n               y' \\<noteq> a \\<and> y' \\<sharp> [x].P} =\n           {\\<tau>.(<\\<nu>y>(P[x::=y] \\<parallel> Q))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' x' P'a y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'a[x'::=y] \\<parallel>\n         Q')) \\<and>\n                              a'<x'>.P'a = a<x>.P \\<and>\n                              <\\<nu>y>a'{y}.Q' =\n                              <\\<nu>name>aa{name}.P' \\<and>\n                              y \\<noteq> a \\<and> y \\<sharp> [x].P}", "by(simp add: pi.inject name_abs_eq name_calc)"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a' x' P' y Q'.\n       uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n       a'<x'>.P' = a<x>.P \\<and>\n       <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and> y \\<sharp> a<x>.P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a' x' P' y Q'.\n       uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n       a'<x'>.P' = ?a<?x>.?P \\<and>\n       <\\<nu>y>a'{y}.Q' \\<in> summands ?Q \\<and> y \\<sharp> ?a<?x>.?P}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "have IH: \"\\<And>P P' Q. {\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) | a x P'' y Q'. (a<x>.P'' \\<in> summands P \\<or> a<x>.P'' \\<in> summands P') \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P \\<and> y \\<sharp> P'} = {\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) | a x P'' y Q'. a<x>.P'' \\<in> summands P \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P \\<and> y \\<sharp> P'} \\<union> {\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) | a x P'' y Q'. a<x>.P'' \\<in> summands P' \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P \\<and> y \\<sharp> P'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P P' Q.\n       {uu_.\n        \\<exists>a x P'' y Q'.\n           uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n           (a<x>.P'' \\<in> summands P \\<or>\n            a<x>.P'' \\<in> summands P') \\<and>\n           <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n           y \\<sharp> P \\<and> y \\<sharp> P'} =\n       {uu_.\n        \\<exists>a x P'' y Q'.\n           uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n           a<x>.P'' \\<in> summands P \\<and>\n           <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n           y \\<sharp> P \\<and> y \\<sharp> P'} \\<union>\n       {uu_.\n        \\<exists>a x P'' y Q'.\n           uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n           a<x>.P'' \\<in> summands P' \\<and>\n           <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n           y \\<sharp> P \\<and> y \\<sharp> P'}", "by blast"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a x P'' y Q'.\n      uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n      (a<x>.P'' \\<in> summands ?P \\<or> a<x>.P'' \\<in> summands ?P') \\<and>\n      <\\<nu>y>a{y}.Q' \\<in> summands ?Q \\<and>\n      y \\<sharp> ?P \\<and> y \\<sharp> ?P'} =\n  {uu_.\n   \\<exists>a x P'' y Q'.\n      uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n      a<x>.P'' \\<in> summands ?P \\<and>\n      <\\<nu>y>a{y}.Q' \\<in> summands ?Q \\<and>\n      y \\<sharp> ?P \\<and> y \\<sharp> ?P'} \\<union>\n  {uu_.\n   \\<exists>a x P'' y Q'.\n      uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n      a<x>.P'' \\<in> summands ?P' \\<and>\n      <\\<nu>y>a{y}.Q' \\<in> summands ?Q \\<and>\n      y \\<sharp> ?P \\<and> y \\<sharp> ?P'}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "have IH': \"\\<And>P Q P'. {\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) | a x P'' y Q'. a<x>.P'' \\<in> summands P \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P \\<and> y \\<sharp> P'} \\<subseteq> {\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) | a x P'' y Q'. a<x>.P'' \\<in> summands P \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       {uu_.\n        \\<exists>a x P'' y Q'.\n           uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n           a<x>.P'' \\<in> summands P \\<and>\n           <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n           y \\<sharp> P \\<and> y \\<sharp> P'}\n       \\<subseteq> {uu_.\n                    \\<exists>a x P'' y Q'.\n                       uu_ =\n                       \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n                       a<x>.P'' \\<in> summands P \\<and>\n                       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "by blast"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a x P'' y Q'.\n      uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n      a<x>.P'' \\<in> summands ?P \\<and>\n      <\\<nu>y>a{y}.Q' \\<in> summands ?Q \\<and>\n      y \\<sharp> ?P \\<and> y \\<sharp> ?P'}\n  \\<subseteq> {uu_.\n               \\<exists>a x P'' y Q'.\n                  uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n                  a<x>.P'' \\<in> summands ?P \\<and>\n                  <\\<nu>y>a{y}.Q' \\<in> summands ?Q \\<and> y \\<sharp> ?P}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "have IH'': \"\\<And>P Q P'. {\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) | a x P'' y Q'. a<x>.P'' \\<in> summands P' \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P \\<and> y \\<sharp> P'} \\<subseteq> {\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) | a x P'' y Q'. a<x>.P'' \\<in> summands P' \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       {uu_.\n        \\<exists>a x P'' y Q'.\n           uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n           a<x>.P'' \\<in> summands P' \\<and>\n           <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n           y \\<sharp> P \\<and> y \\<sharp> P'}\n       \\<subseteq> {uu_.\n                    \\<exists>a x P'' y Q'.\n                       uu_ =\n                       \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n                       a<x>.P'' \\<in> summands P' \\<and>\n                       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n                       y \\<sharp> P'}", "by blast"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a x P'' y Q'.\n      uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n      a<x>.P'' \\<in> summands ?P'1 \\<and>\n      <\\<nu>y>a{y}.Q' \\<in> summands ?Q1 \\<and>\n      y \\<sharp> ?P1 \\<and> y \\<sharp> ?P'1}\n  \\<subseteq> {uu_.\n               \\<exists>a x P'' y Q'.\n                  uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n                  a<x>.P'' \\<in> summands ?P'1 \\<and>\n                  <\\<nu>y>a{y}.Q' \\<in> summands ?Q1 \\<and> y \\<sharp> ?P'1}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "have \"finite {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) | a x P' y Q'. a<x>.P' \\<in> summands P \\<and> <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {uu_.\n      \\<exists>a x P' y Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "apply(nominal_induct P avoiding: Q rule: pi.strong_induct, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>name1 name2 pi Q.\n       \\<lbrakk>name2 \\<sharp> Q; name2 \\<noteq> name1;\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a x P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                a<x>.P' \\<in> summands pi \\<and>\n                <\\<nu>y>a{y}.Q' \\<in> summands b \\<and>\n                y \\<sharp> pi}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a x P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n         Q')) \\<and>\n                              a<x>.P' = name1<name2>.pi \\<and>\n                              <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n                              y \\<noteq> name1 \\<and> y \\<sharp> [name2].pi}\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>b.\n                   finite\n                    {uu_.\n                     \\<exists>a x P' y Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                        a<x>.P' \\<in> summands pi1 \\<and>\n                        <\\<nu>y>a{y}.Q' \\<in> summands b \\<and>\n                        y \\<sharp> pi1};\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a x P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                a<x>.P' \\<in> summands pi2 \\<and>\n                <\\<nu>y>a{y}.Q' \\<in> summands b \\<and>\n                y \\<sharp> pi2}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a x P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n         Q')) \\<and>\n                              (a<x>.P' \\<in> summands pi1 \\<or>\n                               a<x>.P' \\<in> summands pi2) \\<and>\n                              <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n                              y \\<sharp> pi1 \\<and> y \\<sharp> pi2}", "apply(insert BC, force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>b.\n                   finite\n                    {uu_.\n                     \\<exists>a x P' y Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                        a<x>.P' \\<in> summands pi1 \\<and>\n                        <\\<nu>y>a{y}.Q' \\<in> summands b \\<and>\n                        y \\<sharp> pi1};\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a x P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                a<x>.P' \\<in> summands pi2 \\<and>\n                <\\<nu>y>a{y}.Q' \\<in> summands b \\<and> y \\<sharp> pi2};\n        \\<And>a x P Q.\n           finite\n            {uu_.\n             \\<exists>a' x' P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                a'<x'>.P' = a<x>.P \\<and>\n                <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and>\n                y \\<sharp> a<x>.P}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a x P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n         Q')) \\<and>\n                              (a<x>.P' \\<in> summands pi1 \\<or>\n                               a<x>.P' \\<in> summands pi2) \\<and>\n                              <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n                              y \\<sharp> pi1 \\<and> y \\<sharp> pi2}", "apply(insert IH, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>b.\n                   finite\n                    {uu_.\n                     \\<exists>a x P' y Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                        a<x>.P' \\<in> summands pi1 \\<and>\n                        <\\<nu>y>a{y}.Q' \\<in> summands b \\<and>\n                        y \\<sharp> pi1};\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a x P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                a<x>.P' \\<in> summands pi2 \\<and>\n                <\\<nu>y>a{y}.Q' \\<in> summands b \\<and> y \\<sharp> pi2};\n        \\<And>a x P Q.\n           finite\n            {uu_.\n             \\<exists>a' x' P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                a'<x'>.P' = a<x>.P \\<and>\n                <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and>\n                y \\<noteq> a \\<and> y \\<sharp> [x].P};\n        \\<And>P P' Q.\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               (a<x>.P'' \\<in> summands P \\<or>\n                a<x>.P'' \\<in> summands P') \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'} =\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               a<x>.P'' \\<in> summands P \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'} \\<union>\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               a<x>.P'' \\<in> summands P' \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a x P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n         Q')) \\<and>\n                              a<x>.P' \\<in> summands pi1 \\<and>\n                              <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n                              y \\<sharp> pi1 \\<and> y \\<sharp> pi2}\n 2. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>b.\n                   finite\n                    {uu_.\n                     \\<exists>a x P' y Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                        a<x>.P' \\<in> summands pi1 \\<and>\n                        <\\<nu>y>a{y}.Q' \\<in> summands b \\<and>\n                        y \\<sharp> pi1};\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a x P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                a<x>.P' \\<in> summands pi2 \\<and>\n                <\\<nu>y>a{y}.Q' \\<in> summands b \\<and> y \\<sharp> pi2};\n        \\<And>a x P Q.\n           finite\n            {uu_.\n             \\<exists>a' x' P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                a'<x'>.P' = a<x>.P \\<and>\n                <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and>\n                y \\<noteq> a \\<and> y \\<sharp> [x].P};\n        \\<And>P P' Q.\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               (a<x>.P'' \\<in> summands P \\<or>\n                a<x>.P'' \\<in> summands P') \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'} =\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               a<x>.P'' \\<in> summands P \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'} \\<union>\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               a<x>.P'' \\<in> summands P' \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a x P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n         Q')) \\<and>\n                              a<x>.P' \\<in> summands pi2 \\<and>\n                              <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n                              y \\<sharp> pi1 \\<and> y \\<sharp> pi2}", "apply(blast intro: finite_subset[OF IH'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>b.\n                   finite\n                    {uu_.\n                     \\<exists>a x P' y Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                        a<x>.P' \\<in> summands pi1 \\<and>\n                        <\\<nu>y>a{y}.Q' \\<in> summands b \\<and>\n                        y \\<sharp> pi1};\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a x P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n                a<x>.P' \\<in> summands pi2 \\<and>\n                <\\<nu>y>a{y}.Q' \\<in> summands b \\<and> y \\<sharp> pi2};\n        \\<And>a x P Q.\n           finite\n            {uu_.\n             \\<exists>a' x' P' y Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P'[x'::=y] \\<parallel> Q')) \\<and>\n                a'<x'>.P' = a<x>.P \\<and>\n                <\\<nu>y>a'{y}.Q' \\<in> summands Q \\<and>\n                y \\<noteq> a \\<and> y \\<sharp> [x].P};\n        \\<And>P P' Q.\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               (a<x>.P'' \\<in> summands P \\<or>\n                a<x>.P'' \\<in> summands P') \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'} =\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               a<x>.P'' \\<in> summands P \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'} \\<union>\n           {uu_.\n            \\<exists>a x P'' y Q'.\n               uu_ = \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<and>\n               a<x>.P'' \\<in> summands P' \\<and>\n               <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n               y \\<sharp> P \\<and> y \\<sharp> P'}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a x P' y Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n         Q')) \\<and>\n                              a<x>.P' \\<in> summands pi2 \\<and>\n                              <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n                              y \\<sharp> pi1 \\<and> y \\<sharp> pi2}", "by(blast intro: finite_subset[OF IH''])"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a x P' y Q'.\n       uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n       a<x>.P' \\<in> summands P \\<and>\n       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite\n   {uu_.\n    \\<exists>a x P' y Q'.\n       uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n       a<x>.P' \\<in> summands P \\<and>\n       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n      \\<exists>a.\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}", "apply(rule_tac finite_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a x P' y Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n         y \\<sharp> P} \\<Longrightarrow>\n    {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n     \\<exists>a.\n        a<x>.P' \\<in> summands P \\<and>\n        <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n    \\<subseteq> ?B1\n 2. finite\n     {uu_.\n      \\<exists>a x P' y Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n         y \\<sharp> P} \\<Longrightarrow>\n    finite ?B1", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a x P' y Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n         y \\<sharp> P} \\<Longrightarrow>\n    finite ?B1\n 2. finite\n     {uu_.\n      \\<exists>a x P' y Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<and>\n         a<x>.P' \\<in> summands P \\<and>\n         <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and>\n         y \\<sharp> P} \\<Longrightarrow>\n    {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n     \\<exists>a.\n        a<x>.P' \\<in> summands P \\<and>\n        <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n    \\<subseteq> ?B1", "by(blast)+"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n    \\<exists>a.\n       a<x>.P' \\<in> summands P \\<and>\n       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n    \\<exists>a.\n       a<x>.P' \\<in> summands P \\<and>\n       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "moreover"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n    \\<exists>a.\n       a<x>.P' \\<in> summands P \\<and>\n       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "have \"finite {\\<tau>.(<\\<nu>y>(P' \\<parallel> (Q'[x::=y]))) | y P' x Q'. \\<exists>a. <\\<nu>y>a{y}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "have Aux: \"\\<And>a y P x Q. \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk> \\<Longrightarrow> {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q'[x'::=y']))) | a' y' P' x' Q'. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x'>.Q' = a<x>.Q \\<and> y' \\<sharp> a<x>.Q} = {\\<tau>.(<\\<nu>y>(P \\<parallel> (Q[x::=y])))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a y P x Q.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> {uu_.\n                          \\<exists>a' y' P' x' Q'.\n                             uu_ =\n                             \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n         Q'[x'::=y'])) \\<and>\n                             <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                             a'<x'>.Q' = a<x>.Q \\<and> y' \\<sharp> a<x>.Q} =\n                         {\\<tau>.(<\\<nu>y>(P \\<parallel> Q[x::=y]))}", "apply(auto simp add: pi.inject name_abs_eq name_fresh_abs name_calc fresh_fact2 fresh_fact1 forget eqvts fresh_left renaming[symmetric])"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>a y P x Q x'.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x \\<noteq> y; x \\<noteq> a;\n        x \\<sharp> P; x' \\<noteq> x; x' \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> ([(x, x')] \\<bullet> Q)[x'::=x] = Q\n 2. \\<And>a y P x Q y' x'.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; y' \\<noteq> y; y' \\<noteq> a;\n        y' \\<sharp> P; x' \\<noteq> x; x' \\<sharp> Q; y' \\<sharp> Q;\n        y \\<noteq> x; y' \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ([(x, x')] \\<bullet> Q)[x'::=y'] = Q[x::=y']\n 3. \\<And>a y x Q x'.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=y] \\<noteq> Q[x::=y]\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>a y P x Q x'.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        x \\<noteq> a; x \\<sharp> P; y \\<noteq> x;\n        ([(x, x')] \\<bullet> Q)[x'::=y] = [(y, x)] \\<bullet> Q\\<rbrakk>\n       \\<Longrightarrow> [(y, x)] \\<bullet> Q = Q[x::=y]\n 5. \\<And>a y P x Q x' x'a.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        x \\<noteq> a; x \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q;\n        y \\<noteq> x;\n        ([(x, x')] \\<bullet> Q)[x'::=y] = ([(x, x'a)] \\<bullet> Q)[x'a::=y];\n        y \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> ([(x, x'a)] \\<bullet> Q)[x'a::=y] = Q[x::=y]\n 6. \\<And>a P x Q y' x' x'a.\n       \\<lbrakk>x' \\<noteq> x; x' \\<sharp> Q; y' \\<noteq> a; y' \\<sharp> P;\n        x'a \\<noteq> x; x'a \\<sharp> Q; y' \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=y'] =\n        ([(x, x'a)] \\<bullet> Q)[x'a::=y']\\<rbrakk>\n       \\<Longrightarrow> ([(x, x'a)] \\<bullet> Q)[x'a::=y'] = Q[x::=y']\n 7. \\<And>a y P x Q x' x'a.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        x'a \\<noteq> a; x'a \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=y] =\n        [(y, x'a)] \\<bullet> [(x, x'a)] \\<bullet> Q;\n        (if x = y then x'a else if x'a = y then x else y) \\<sharp> Q;\n        y \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> [(y, x'a)] \\<bullet> [(x, x'a)] \\<bullet> Q =\n                         Q[x::=y]\n 8. \\<And>a P x Q y' x' x'a.\n       \\<lbrakk>x'a \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q; y' \\<noteq> a;\n        y' \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q; y' \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=x'a] = [(x, x'a)] \\<bullet> Q;\n        y' \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> [(x, x'a)] \\<bullet> Q = Q[x::=x'a]\n 9. \\<And>a y P x Q y' x' x'a.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        y' \\<noteq> a; y' \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q;\n        y' \\<sharp> Q; y \\<noteq> y';\n        ([(x, x')] \\<bullet> Q)[x'::=y] = ([(x, x'a)] \\<bullet> Q)[x'a::=y];\n        y' \\<noteq> x'a; y \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> ([(x, x'a)] \\<bullet> Q)[x'a::=y] = Q[x::=y]", "apply(subst name_swap, simp add: injPermSubst fresh_fact1 fresh_fact2)+"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>a y x Q x'.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=y] \\<noteq> Q[x::=y]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a y P x Q x'.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        x \\<noteq> a; x \\<sharp> P; y \\<noteq> x;\n        ([(x, x')] \\<bullet> Q)[x'::=y] = [(y, x)] \\<bullet> Q\\<rbrakk>\n       \\<Longrightarrow> [(y, x)] \\<bullet> Q = Q[x::=y]\n 3. \\<And>a y P x Q x' x'a.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        x \\<noteq> a; x \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q;\n        y \\<noteq> x;\n        ([(x, x')] \\<bullet> Q)[x'::=y] = ([(x, x'a)] \\<bullet> Q)[x'a::=y];\n        y \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> ([(x, x'a)] \\<bullet> Q)[x'a::=y] = Q[x::=y]\n 4. \\<And>a P x Q y' x' x'a.\n       \\<lbrakk>x' \\<noteq> x; x' \\<sharp> Q; y' \\<noteq> a; y' \\<sharp> P;\n        x'a \\<noteq> x; x'a \\<sharp> Q; y' \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=y'] =\n        ([(x, x'a)] \\<bullet> Q)[x'a::=y']\\<rbrakk>\n       \\<Longrightarrow> ([(x, x'a)] \\<bullet> Q)[x'a::=y'] = Q[x::=y']\n 5. \\<And>a y P x Q x' x'a.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        x'a \\<noteq> a; x'a \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=y] =\n        [(y, x'a)] \\<bullet> [(x, x'a)] \\<bullet> Q;\n        (if x = y then x'a else if x'a = y then x else y) \\<sharp> Q;\n        y \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> [(y, x'a)] \\<bullet> [(x, x'a)] \\<bullet> Q =\n                         Q[x::=y]\n 6. \\<And>a P x Q y' x' x'a.\n       \\<lbrakk>x'a \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q; y' \\<noteq> a;\n        y' \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q; y' \\<sharp> Q;\n        ([(x, x')] \\<bullet> Q)[x'::=x'a] = [(x, x'a)] \\<bullet> Q;\n        y' \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> [(x, x'a)] \\<bullet> Q = Q[x::=x'a]\n 7. \\<And>a y P x Q y' x' x'a.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a; x' \\<noteq> x; x' \\<sharp> Q;\n        y' \\<noteq> a; y' \\<sharp> P; x'a \\<noteq> x; x'a \\<sharp> Q;\n        y' \\<sharp> Q; y \\<noteq> y';\n        ([(x, x')] \\<bullet> Q)[x'::=y] = ([(x, x'a)] \\<bullet> Q)[x'a::=y];\n        y' \\<noteq> x'a; y \\<noteq> x'a\\<rbrakk>\n       \\<Longrightarrow> ([(x, x'a)] \\<bullet> Q)[x'a::=y] = Q[x::=y]", "by(simp add: name_swap injPermSubst)+"], ["proof (state)\nthis:\n  \\<lbrakk>?y \\<sharp> ?Q; ?y \\<noteq> ?a\\<rbrakk>\n  \\<Longrightarrow> {uu_.\n                     \\<exists>a' y' P' x' Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n    Q'[x'::=y'])) \\<and>\n                        <\\<nu>y'>a'{y'}.P' = <\\<nu>?y>?a{?y}.?P \\<and>\n                        a'<x'>.Q' = ?a<?x>.?Q \\<and>\n                        y' \\<sharp> ?a<?x>.?Q} =\n                    {\\<tau>.(<\\<nu>?y>(?P \\<parallel> ?Q[?x::=?y]))}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "have IH: \"\\<And>P y a Q Q'. {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q''[x::=y']))) | a' y' P' x Q''. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> (a'<x>.Q'' \\<in> summands Q \\<or> a'<x>.Q'' \\<in> summands Q') \\<and> y' \\<sharp> Q \\<and> y' \\<sharp> Q'} = {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q''[x::=y']))) | a' y' P' x Q''. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q'' \\<in> summands Q \\<and> y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<union> {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q''[x::=y']))) | a' y' P' x Q''. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q'' \\<in> summands Q' \\<and> y' \\<sharp> Q \\<and> y' \\<sharp> Q'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P y a Q Q'.\n       {uu_.\n        \\<exists>a' y' P' x Q''.\n           uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n           <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n           (a'<x>.Q'' \\<in> summands Q \\<or>\n            a'<x>.Q'' \\<in> summands Q') \\<and>\n           y' \\<sharp> Q \\<and> y' \\<sharp> Q'} =\n       {uu_.\n        \\<exists>a' y' P' x Q''.\n           uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n           <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n           a'<x>.Q'' \\<in> summands Q \\<and>\n           y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<union>\n       {uu_.\n        \\<exists>a' y' P' x Q''.\n           uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n           <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n           a'<x>.Q'' \\<in> summands Q' \\<and>\n           y' \\<sharp> Q \\<and> y' \\<sharp> Q'}", "by blast"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a' y' P' x Q''.\n      uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n      <\\<nu>y'>a'{y'}.P' = <\\<nu>?y>?a{?y}.?P \\<and>\n      (a'<x>.Q'' \\<in> summands ?Q \\<or>\n       a'<x>.Q'' \\<in> summands ?Q') \\<and>\n      y' \\<sharp> ?Q \\<and> y' \\<sharp> ?Q'} =\n  {uu_.\n   \\<exists>a' y' P' x Q''.\n      uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n      <\\<nu>y'>a'{y'}.P' = <\\<nu>?y>?a{?y}.?P \\<and>\n      a'<x>.Q'' \\<in> summands ?Q \\<and>\n      y' \\<sharp> ?Q \\<and> y' \\<sharp> ?Q'} \\<union>\n  {uu_.\n   \\<exists>a' y' P' x Q''.\n      uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n      <\\<nu>y'>a'{y'}.P' = <\\<nu>?y>?a{?y}.?P \\<and>\n      a'<x>.Q'' \\<in> summands ?Q' \\<and>\n      y' \\<sharp> ?Q \\<and> y' \\<sharp> ?Q'}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "have IH': \"\\<And>a y P Q Q'. {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q''[x::=y']))) | a' y' P' x Q''. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q'' \\<in> summands Q \\<and> y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<subseteq> {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q''[x::=y']))) | a' y' P' x Q''. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q'' \\<in> summands Q \\<and> y' \\<sharp> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a y P Q Q'.\n       {uu_.\n        \\<exists>a' y' P' x Q''.\n           uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n           <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n           a'<x>.Q'' \\<in> summands Q \\<and>\n           y' \\<sharp> Q \\<and> y' \\<sharp> Q'}\n       \\<subseteq> {uu_.\n                    \\<exists>a' y' P' x Q''.\n                       uu_ =\n                       \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n                       <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                       a'<x>.Q'' \\<in> summands Q \\<and> y' \\<sharp> Q}", "by blast"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a' y' P' x Q''.\n      uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n      <\\<nu>y'>a'{y'}.P' = <\\<nu>?y>?a{?y}.?P \\<and>\n      a'<x>.Q'' \\<in> summands ?Q \\<and>\n      y' \\<sharp> ?Q \\<and> y' \\<sharp> ?Q'}\n  \\<subseteq> {uu_.\n               \\<exists>a' y' P' x Q''.\n                  uu_ =\n                  \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n                  <\\<nu>y'>a'{y'}.P' = <\\<nu>?y>?a{?y}.?P \\<and>\n                  a'<x>.Q'' \\<in> summands ?Q \\<and> y' \\<sharp> ?Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "have IH'': \"\\<And>a y P Q Q'. {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q''[x::=y']))) | a' y' P' x Q''. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q'' \\<in> summands Q' \\<and> y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<subseteq> {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q''[x::=y']))) | a' y' P' x Q''. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q'' \\<in> summands Q' \\<and> y' \\<sharp> Q'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a y P Q Q'.\n       {uu_.\n        \\<exists>a' y' P' x Q''.\n           uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n           <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n           a'<x>.Q'' \\<in> summands Q' \\<and>\n           y' \\<sharp> Q \\<and> y' \\<sharp> Q'}\n       \\<subseteq> {uu_.\n                    \\<exists>a' y' P' x Q''.\n                       uu_ =\n                       \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n                       <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                       a'<x>.Q'' \\<in> summands Q' \\<and> y' \\<sharp> Q'}", "by blast"], ["proof (state)\nthis:\n  {uu_.\n   \\<exists>a' y' P' x Q''.\n      uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n      <\\<nu>y'>a'{y'}.P' = <\\<nu>?y1>?a1{?y1}.?P1 \\<and>\n      a'<x>.Q'' \\<in> summands ?Q'1 \\<and>\n      y' \\<sharp> ?Q1 \\<and> y' \\<sharp> ?Q'1}\n  \\<subseteq> {uu_.\n               \\<exists>a' y' P' x Q''.\n                  uu_ =\n                  \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n                  <\\<nu>y'>a'{y'}.P' = <\\<nu>?y1>?a1{?y1}.?P1 \\<and>\n                  a'<x>.Q'' \\<in> summands ?Q'1 \\<and> y' \\<sharp> ?Q'1}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "have BC: \"\\<And>a y P Q. \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk> \\<Longrightarrow> finite {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q'[x::=y']))) | a' y' P' x Q'. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q' \\<in> summands Q \\<and> y' \\<sharp> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a y P Q.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                              a'<x>.Q' \\<in> summands Q \\<and>\n                              y' \\<sharp> Q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a y P Q.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                              a'<x>.Q' \\<in> summands Q \\<and>\n                              y' \\<sharp> Q}", "fix a y P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a y P Q.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                              a'<x>.Q' \\<in> summands Q \\<and>\n                              y' \\<sharp> Q}", "assume \"(y::name) \\<sharp> (Q::pi)\" and \"y \\<noteq> a\""], ["proof (state)\nthis:\n  y \\<sharp> Q\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>a y P Q.\n       \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                              a'<x>.Q' \\<in> summands Q \\<and>\n                              y' \\<sharp> Q}", "thus \"finite {\\<tau>.(<\\<nu>y'>(P' \\<parallel> (Q'[x::=y']))) | a' y' P' x Q'. <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and> a'<x>.Q' \\<in> summands Q \\<and> y' \\<sharp> Q}\""], ["proof (prove)\nusing this:\n  y \\<sharp> Q\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. finite\n     {uu_.\n      \\<exists>a' y' P' x Q'.\n         uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n         <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n         a'<x>.Q' \\<in> summands Q \\<and> y' \\<sharp> Q}", "apply(nominal_induct Q avoiding: y rule: pi.strong_induct, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> name1 \\<and> ya \\<sharp> [name2].pi; ya \\<noteq> a;\n        y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 2. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<sharp> pi1 \\<and> ya \\<sharp> pi2; ya \\<noteq> a; y \\<sharp> Q;\n        y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply(case_tac \"a=name1\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> name1 \\<and> ya \\<sharp> [name2].pi; ya \\<noteq> a;\n        y \\<sharp> Q; y \\<noteq> a; a = name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 2. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> name1 \\<and> ya \\<sharp> [name2].pi; ya \\<noteq> a;\n        y \\<sharp> Q; y \\<noteq> a; a \\<noteq> name1\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 3. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<sharp> pi1 \\<and> ya \\<sharp> pi2; ya \\<noteq> a; y \\<sharp> Q;\n        y \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> a;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        y \\<sharp> Q; y \\<noteq> a; ya \\<noteq> a;\n        ya \\<sharp> [name2].pi\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = a<name2>.pi \\<and>\n                              y' \\<noteq> a \\<and> y' \\<sharp> [name2].pi}\n 2. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; a \\<noteq> name1;\n        ya \\<noteq> name1; ya \\<sharp> [name2].pi\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 3. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply(subgoal_tac \"ya \\<sharp> (pi::pi)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> a;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        y \\<sharp> Q; y \\<noteq> a; ya \\<noteq> a; ya \\<sharp> [name2].pi;\n        ya \\<sharp> pi\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = a<name2>.pi \\<and>\n                              y' \\<noteq> a \\<and> y' \\<sharp> [name2].pi}\n 2. \\<And>name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> a;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        y \\<sharp> Q; y \\<noteq> a; ya \\<noteq> a;\n        ya \\<sharp> [name2].pi\\<rbrakk>\n       \\<Longrightarrow> ya \\<sharp> pi\n 3. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; a \\<noteq> name1;\n        ya \\<noteq> name1; ya \\<sharp> [name2].pi\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 4. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply(insert Aux)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> a;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        y \\<sharp> Q; y \\<noteq> a; ya \\<noteq> a; ya \\<sharp> [name2].pi;\n        ya \\<sharp> pi;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<sharp> a<x>.Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = a<name2>.pi \\<and>\n                              y' \\<noteq> a \\<and> y' \\<sharp> [name2].pi}\n 2. \\<And>name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> a;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        y \\<sharp> Q; y \\<noteq> a; ya \\<noteq> a; ya \\<sharp> [name2].pi;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<sharp> a<x>.Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> ya \\<sharp> pi\n 3. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; a \\<noteq> name1;\n        ya \\<noteq> name1; ya \\<sharp> [name2].pi;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<sharp> a<x>.Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 4. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<sharp> a<x>.Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> a;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        y \\<sharp> Q; y \\<noteq> a; ya \\<noteq> a; ya \\<sharp> [name2].pi;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> ya \\<sharp> pi\n 2. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; a \\<noteq> name1;\n        ya \\<noteq> name1; ya \\<sharp> [name2].pi;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 3. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply(simp add: name_fresh_abs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>name1 name2 pi ya.\n       \\<lbrakk>name2 \\<noteq> ya; name2 \\<noteq> name1;\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi \\<and>\n                                  y' \\<sharp> pi};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; a \\<noteq> name1;\n        ya \\<noteq> name1; ya \\<sharp> [name2].pi;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' = name1<name2>.pi \\<and>\n                              y' \\<noteq> name1 \\<and>\n                              y' \\<sharp> [name2].pi}\n 2. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply(simp add: pi.inject name_abs_eq name_calc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel>\n         Q[x::=y]))}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply(insert IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel> Q[x::=y]))};\n        \\<And>y a P Q Q'.\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               (a'<x>.Q'' \\<in> summands Q \\<or>\n                a'<x>.Q'' \\<in> summands Q') \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} =\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<union>\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q' \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              (a'<x>.Q' \\<in> summands pi1 \\<or>\n                               a'<x>.Q' \\<in> summands pi2) \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel> Q[x::=y]))};\n        \\<And>y a P Q Q'.\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               (a'<x>.Q'' \\<in> summands Q \\<or>\n                a'<x>.Q'' \\<in> summands Q') \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} =\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<union>\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q' \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' \\<in> summands pi1 \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}\n 2. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel> Q[x::=y]))};\n        \\<And>y a P Q Q'.\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               (a'<x>.Q'' \\<in> summands Q \\<or>\n                a'<x>.Q'' \\<in> summands Q') \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} =\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<union>\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q' \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' \\<in> summands pi2 \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "apply(blast intro: finite_subset[OF IH'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pi1 pi2 ya.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b \\<sharp> pi1; b \\<noteq> a\\<rbrakk>\n                   \\<Longrightarrow> finite\n{uu_.\n \\<exists>a' y' P' x Q'.\n    uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n    <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n    a'<x>.Q' \\<in> summands pi1 \\<and> y' \\<sharp> pi1};\n        \\<And>b.\n           \\<lbrakk>b \\<sharp> pi2; b \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> finite\n                              {uu_.\n                               \\<exists>a' y' P' x Q'.\n                                  uu_ =\n                                  \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n              Q'[x::=y'])) \\<and>\n                                  <\\<nu>y'>a'{y'}.P' = <\\<nu>b>a{b}.P \\<and>\n                                  a'<x>.Q' \\<in> summands pi2 \\<and>\n                                  y' \\<sharp> pi2};\n        ya \\<noteq> a; y \\<sharp> Q; y \\<noteq> a; ya \\<sharp> pi1;\n        ya \\<sharp> pi2;\n        \\<And>y Q a P x.\n           \\<lbrakk>y \\<sharp> Q; y \\<noteq> a\\<rbrakk>\n           \\<Longrightarrow> {uu_.\n                              \\<exists>a' y' P' x' Q'.\n                                 uu_ =\n                                 \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n             Q'[x'::=y'])) \\<and>\n                                 <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n                                 a'<x'>.Q' = a<x>.Q \\<and>\n                                 y' \\<noteq> a \\<and> y' \\<sharp> [x].Q} =\n                             {\\<tau>.(<\\<nu>y>(P \\<parallel> Q[x::=y]))};\n        \\<And>y a P Q Q'.\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               (a'<x>.Q'' \\<in> summands Q \\<or>\n                a'<x>.Q'' \\<in> summands Q') \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} =\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'} \\<union>\n           {uu_.\n            \\<exists>a' y' P' x Q''.\n               uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q''[x::=y'])) \\<and>\n               <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n               a'<x>.Q'' \\<in> summands Q' \\<and>\n               y' \\<sharp> Q \\<and> y' \\<sharp> Q'}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a' y' P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n          Q'[x::=y'])) \\<and>\n                              <\\<nu>y'>a'{y'}.P' = <\\<nu>ya>a{ya}.P \\<and>\n                              a'<x>.Q' \\<in> summands pi2 \\<and>\n                              y' \\<sharp> pi1 \\<and> y' \\<sharp> pi2}", "by(blast intro: finite_subset[OF IH''])"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a' y' P' x Q'.\n       uu_ = \\<tau>.(<\\<nu>y'>(P' \\<parallel> Q'[x::=y'])) \\<and>\n       <\\<nu>y'>a'{y'}.P' = <\\<nu>y>a{y}.P \\<and>\n       a'<x>.Q' \\<in> summands Q \\<and> y' \\<sharp> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?y2 \\<sharp> ?Q2; ?y2 \\<noteq> ?a2\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {uu_.\n                      \\<exists>a' y' P' x Q'.\n                         uu_ =\n                         \\<tau>.(<\\<nu>y'>(P' \\<parallel>\n     Q'[x::=y'])) \\<and>\n                         <\\<nu>y'>a'{y'}.P' = <\\<nu>?y2>?a2{?y2}.?P2 \\<and>\n                         a'<x>.Q' \\<in> summands ?Q2 \\<and> y' \\<sharp> ?Q2}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "have \"finite {\\<tau>.(<\\<nu>y>(P' \\<parallel> (Q'[x::=y]))) | a y P' x Q'. <\\<nu>y>a{y}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {uu_.\n      \\<exists>a y P' x Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "apply(nominal_induct P avoiding: Q rule: pi.strong_induct, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pi1 pi2 Q.\n       \\<lbrakk>\\<And>b.\n                   finite\n                    {uu_.\n                     \\<exists>a y P' x Q'.\n                        uu_ =\n                        \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n                        <\\<nu>y>a{y}.P' \\<in> summands pi1 \\<and>\n                        a<x>.Q' \\<in> summands b \\<and> y \\<sharp> b};\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a y P' x Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n                <\\<nu>y>a{y}.P' \\<in> summands pi2 \\<and>\n                a<x>.Q' \\<in> summands b \\<and> y \\<sharp> b}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {uu_.\n                           \\<exists>a y P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P' \\<parallel>\n         Q'[x::=y])) \\<and>\n                              (<\\<nu>y>a{y}.P' \\<in> summands pi1 \\<or>\n                               <\\<nu>y>a{y}.P' \\<in> summands pi2) \\<and>\n                              a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n 2. \\<And>name pi Q.\n       \\<lbrakk>name \\<sharp> Q;\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a y P' x Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n                <\\<nu>y>a{y}.P' \\<in> summands pi \\<and>\n                a<x>.Q' \\<in> summands b \\<and> y \\<sharp> b}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             a \\<noteq> name \\<and>\n                             (\\<exists>P'.\n                                 pi = a{name}.P')) \\<longrightarrow>\n                         finite\n                          {uu_.\n                           \\<exists>a y P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P' \\<parallel>\n         Q'[x::=y])) \\<and>\n                              <\\<nu>y>a{y}.P' = <\\<nu>name>pi \\<and>\n                              a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "apply(simp add: Collect_ex_eq conj_disj_distribL conj_disj_distribR name_fresh_abs\n                      Collect_disj_eq UN_Un_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>name pi Q.\n       \\<lbrakk>name \\<sharp> Q;\n        \\<And>b.\n           finite\n            {uu_.\n             \\<exists>a y P' x Q'.\n                uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n                <\\<nu>y>a{y}.P' \\<in> summands pi \\<and>\n                a<x>.Q' \\<in> summands b \\<and> y \\<sharp> b}\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             a \\<noteq> name \\<and>\n                             (\\<exists>P'.\n                                 pi = a{name}.P')) \\<longrightarrow>\n                         finite\n                          {uu_.\n                           \\<exists>a y P' x Q'.\n                              uu_ =\n                              \\<tau>.(<\\<nu>y>(P' \\<parallel>\n         Q'[x::=y])) \\<and>\n                              <\\<nu>y>a{y}.P' = <\\<nu>name>pi \\<and>\n                              a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "by(auto intro: BC)"], ["proof (state)\nthis:\n  finite\n   {uu_.\n    \\<exists>a y P' x Q'.\n       uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n       <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n       a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite\n   {uu_.\n    \\<exists>a y P' x Q'.\n       uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n       <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n       a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite\n     {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n      \\<exists>a.\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "apply(rule_tac finite_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a y P' x Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q} \\<Longrightarrow>\n    {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n     \\<exists>a.\n        <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n        a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n    \\<subseteq> ?B1\n 2. finite\n     {uu_.\n      \\<exists>a y P' x Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q} \\<Longrightarrow>\n    finite ?B1", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite\n     {uu_.\n      \\<exists>a y P' x Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q} \\<Longrightarrow>\n    finite ?B1\n 2. finite\n     {uu_.\n      \\<exists>a y P' x Q'.\n         uu_ = \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<and>\n         <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n         a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q} \\<Longrightarrow>\n    {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n     \\<exists>a.\n        <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n        a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n    \\<subseteq> ?B1", "by blast+"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n    \\<exists>a.\n       <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n       a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n    \\<exists>a.\n       <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n       a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "ultimately"], ["proof (chain)\npicking this:\n  finite {\\<tau>.(P' \\<parallel> Q) |P'. \\<tau>.P' \\<in> summands P}\n  finite {\\<tau>.(P \\<parallel> Q') |Q'. \\<tau>.Q' \\<in> summands Q}\n  finite {a{b}.(P' \\<parallel> Q) |a b P'. a{b}.P' \\<in> summands P}\n  finite {a{b}.(P \\<parallel> Q') |a b Q'. a{b}.Q' \\<in> summands Q}\n  finite\n   {a<x>.(P' \\<parallel> Q) |a x P'.\n    a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}\n  finite\n   {a<x>.(P \\<parallel> Q') |a x Q'.\n    a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n  finite\n   {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n    <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}\n  finite\n   {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n    <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n  finite\n   {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n    \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n  finite\n   {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n    \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n  finite\n   {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n    \\<exists>a.\n       a<x>.P' \\<in> summands P \\<and>\n       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n  finite\n   {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n    \\<exists>a.\n       <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n       a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {\\<tau>.(P' \\<parallel> Q) |P'. \\<tau>.P' \\<in> summands P}\n  finite {\\<tau>.(P \\<parallel> Q') |Q'. \\<tau>.Q' \\<in> summands Q}\n  finite {a{b}.(P' \\<parallel> Q) |a b P'. a{b}.P' \\<in> summands P}\n  finite {a{b}.(P \\<parallel> Q') |a b Q'. a{b}.Q' \\<in> summands Q}\n  finite\n   {a<x>.(P' \\<parallel> Q) |a x P'.\n    a<x>.P' \\<in> summands P \\<and> x \\<sharp> Q}\n  finite\n   {a<x>.(P \\<parallel> Q') |a x Q'.\n    a<x>.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n  finite\n   {<\\<nu>x>a{x}.(P' \\<parallel> Q) |a x P'.\n    <\\<nu>x>a{x}.P' \\<in> summands P \\<and> x \\<sharp> Q}\n  finite\n   {<\\<nu>x>a{x}.(P \\<parallel> Q') |a x Q'.\n    <\\<nu>x>a{x}.Q' \\<in> summands Q \\<and> x \\<sharp> P}\n  finite\n   {\\<tau>.(P'[x::=b] \\<parallel> Q') |x P' b Q'.\n    \\<exists>a. a<x>.P' \\<in> summands P \\<and> a{b}.Q' \\<in> summands Q}\n  finite\n   {\\<tau>.(P' \\<parallel> Q'[x::=b]) |b P' x Q'.\n    \\<exists>a. a{b}.P' \\<in> summands P \\<and> a<x>.Q' \\<in> summands Q}\n  finite\n   {\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) |x P' y Q'.\n    \\<exists>a.\n       a<x>.P' \\<in> summands P \\<and>\n       <\\<nu>y>a{y}.Q' \\<in> summands Q \\<and> y \\<sharp> P}\n  finite\n   {\\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) |y P' x Q'.\n    \\<exists>a.\n       <\\<nu>y>a{y}.P' \\<in> summands P \\<and>\n       a<x>.Q' \\<in> summands Q \\<and> y \\<sharp> Q}\n\ngoal (1 subgoal):\n 1. finite (expandSet P Q)", "by(simp add: expandSet_def)"], ["proof (state)\nthis:\n  finite (expandSet P Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandHnf:\n  fixes P :: pi\n  and   Q :: pi\n\n  shows \"\\<forall>R \\<in> (expandSet P Q). hnf R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>expandSet P Q. hnf R", "by(force simp add: expandSet_def)"], ["", "inductive_set sumComposeSet :: \"(pi \\<times> pi set) set\"\nwhere\n  empty:  \"(\\<zero>, {}) \\<in> sumComposeSet\"\n| insert: \"\\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet\\<rbrakk> \\<Longrightarrow> (P \\<oplus> Q, S) \\<in> sumComposeSet\""], ["", "lemma expandAction:\n  fixes P :: pi\n  and   Q :: pi\n  and   S :: \"pi set\"\n\n  assumes \"(P, S) \\<in> sumComposeSet\"\n  and     \"Q \\<in> S\"\n  and     \"Q \\<longmapsto> Rs\"\n\n  shows \"P \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> Rs", "using assms"], ["proof (prove)\nusing this:\n  (P, S) \\<in> sumComposeSet\n  Q \\<in> S\n  Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> Rs", "proof(induct arbitrary: Q rule: sumComposeSet.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> {}; Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<longmapsto> Rs\n 2. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "case empty"], ["proof (state)\nthis:\n  Q \\<in> {}\n  Q \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> {}; Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<longmapsto> Rs\n 2. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "have \"Q \\<in> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> {}", "by fact"], ["proof (state)\nthis:\n  Q \\<in> {}\n\ngoal (2 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> {}; Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<longmapsto> Rs\n 2. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "hence False"], ["proof (prove)\nusing this:\n  Q \\<in> {}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> {}; Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<longmapsto> Rs\n 2. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<zero> \\<longmapsto> Rs", "by simp"], ["proof (state)\nthis:\n  \\<zero> \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "case(insert Q' S P Q)"], ["proof (state)\nthis:\n  Q' \\<in> S\n  (P, S - {Q'}) \\<in> sumComposeSet\n  \\<lbrakk>?Q \\<in> S - {Q'}; ?Q \\<longmapsto> Rs\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> Rs\n  Q \\<in> S\n  Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "have QTrans: \"Q \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> Rs", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<And>Q S P Qa.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        \\<And>Qa.\n           \\<lbrakk>Qa \\<in> S - {Q}; Qa \\<longmapsto> Rs\\<rbrakk>\n           \\<Longrightarrow> P \\<longmapsto> Rs;\n        Qa \\<in> S; Qa \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<longmapsto> Rs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<longmapsto> Rs", "proof(case_tac \"Q = Q'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Q = Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs\n 2. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "assume \"Q = Q'\""], ["proof (state)\nthis:\n  Q = Q'\n\ngoal (2 subgoals):\n 1. Q = Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs\n 2. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "with QTrans"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> Rs\n  Q = Q'", "show \"P \\<oplus> Q' \\<longmapsto> Rs\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> Rs\n  Q = Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<longmapsto> Rs", "by(blast intro: Sum2)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "assume QineqQ': \"Q \\<noteq> Q'\""], ["proof (state)\nthis:\n  Q \\<noteq> Q'\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "have IH: \"\\<And>Q. \\<lbrakk>Q \\<in> S - {Q'}; Q \\<longmapsto> Rs\\<rbrakk> \\<Longrightarrow> P \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q.\n       \\<lbrakk>Q \\<in> S - {Q'}; Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> P \\<longmapsto> Rs", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>?Q \\<in> S - {Q'}; ?Q \\<longmapsto> Rs\\<rbrakk>\n  \\<Longrightarrow> P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "have QinS: \"Q \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> S", "by fact"], ["proof (state)\nthis:\n  Q \\<in> S\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "with QineqQ'"], ["proof (chain)\npicking this:\n  Q \\<noteq> Q'\n  Q \\<in> S", "have \"Q \\<in> S - {Q'}\""], ["proof (prove)\nusing this:\n  Q \\<noteq> Q'\n  Q \\<in> S\n\ngoal (1 subgoal):\n 1. Q \\<in> S - {Q'}", "by simp"], ["proof (state)\nthis:\n  Q \\<in> S - {Q'}\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "hence \"P \\<longmapsto> Rs\""], ["proof (prove)\nusing this:\n  Q \\<in> S - {Q'}\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> Rs", "using QTrans"], ["proof (prove)\nusing this:\n  Q \\<in> S - {Q'}\n  Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> Rs", "by(rule IH)"], ["proof (state)\nthis:\n  P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. Q \\<noteq> Q' \\<Longrightarrow> P \\<oplus> Q' \\<longmapsto> Rs", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q' \\<longmapsto> Rs", "by(rule Sum1)"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<oplus> Q' \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandAction':\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"(R, S) \\<in> sumComposeSet\"\n  and     \"R \\<longmapsto> Rs\"\n\n  shows \"\\<exists>P \\<in> S. P \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>S. P \\<longmapsto> Rs", "using assms"], ["proof (prove)\nusing this:\n  (R, S) \\<in> sumComposeSet\n  R \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>S. P \\<longmapsto> Rs", "proof(induct rule: sumComposeSet.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<zero> \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>{}. P \\<longmapsto> Rs\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "case empty"], ["proof (state)\nthis:\n  \\<zero> \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. \\<zero> \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>{}. P \\<longmapsto> Rs\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "have \"\\<zero> \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<longmapsto> Rs", "by fact"], ["proof (state)\nthis:\n  \\<zero> \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. \\<zero> \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>{}. P \\<longmapsto> Rs\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "hence False"], ["proof (prove)\nusing this:\n  \\<zero> \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<zero> \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>{}. P \\<longmapsto> Rs\n 2. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>{}. P \\<longmapsto> Rs", "by simp"], ["proof (state)\nthis:\n  \\<exists>P\\<in>{}. P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "case(insert Q S P)"], ["proof (state)\nthis:\n  Q \\<in> S\n  (P, S - {Q}) \\<in> sumComposeSet\n  P \\<longmapsto> Rs \\<Longrightarrow>\n  \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs\n  P \\<oplus> Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "have QinS: \"Q \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> S", "by fact"], ["proof (state)\nthis:\n  Q \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "have \"P \\<oplus> Q \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<longmapsto> Rs", "by fact"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<And>Q S P.\n       \\<lbrakk>Q \\<in> S; (P, S - {Q}) \\<in> sumComposeSet;\n        P \\<longmapsto> Rs \\<Longrightarrow>\n        \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs;\n        P \\<oplus> Q \\<longmapsto> Rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>S. P \\<longmapsto> Rs", "proof(induct rule: sumCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "case cSum1"], ["proof (state)\nthis:\n  P \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. P \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "have \"P \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> Rs", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. P \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. P \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "have \"P \\<longmapsto> Rs \\<Longrightarrow> \\<exists>P \\<in> (S - {Q}). P \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> Rs \\<Longrightarrow>\n  \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. P \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto> Rs\n  P \\<longmapsto> Rs \\<Longrightarrow>\n  \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs", "obtain P where PinS: \"P \\<in> (S - {Q})\" and PTrans: \"P \\<longmapsto> Rs\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> Rs\n  P \\<longmapsto> Rs \\<Longrightarrow>\n  \\<exists>P\\<in>S - {Q}. P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>P \\<in> S - {Q}; P \\<longmapsto> Rs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<in> S - {Q}\n  P \\<longmapsto> Rs\n\ngoal (2 subgoals):\n 1. Pa__ \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>S. P \\<longmapsto> Rs", "proof(case_tac \"P = Q\")"], ["proof (state)\ngoal (2 subgoals):\n 1. P = Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. P \\<noteq> Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "assume \"P = Q\""], ["proof (state)\nthis:\n  P = Q\n\ngoal (2 subgoals):\n 1. P = Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs\n 2. P \\<noteq> Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "with PTrans QinS"], ["proof (chain)\npicking this:\n  P \\<longmapsto> Rs\n  Q \\<in> S\n  P = Q", "show ?case"], ["proof (prove)\nusing this:\n  P \\<longmapsto> Rs\n  Q \\<in> S\n  P = Q\n\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>S. P \\<longmapsto> Rs", "by blast"], ["proof (state)\nthis:\n  \\<exists>P\\<in>S. P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. P \\<noteq> Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<noteq> Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "assume PineqQ: \"P \\<noteq> Q\""], ["proof (state)\nthis:\n  P \\<noteq> Q\n\ngoal (1 subgoal):\n 1. P \\<noteq> Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "from PinS"], ["proof (chain)\npicking this:\n  P \\<in> S - {Q}", "have \"P \\<in> S\""], ["proof (prove)\nusing this:\n  P \\<in> S - {Q}\n\ngoal (1 subgoal):\n 1. P \\<in> S", "by simp"], ["proof (state)\nthis:\n  P \\<in> S\n\ngoal (1 subgoal):\n 1. P \\<noteq> Q \\<Longrightarrow> \\<exists>P\\<in>S. P \\<longmapsto> Rs", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> Rs\n  P \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<longmapsto> Rs\n  P \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>S. P \\<longmapsto> Rs", "by blast"], ["proof (state)\nthis:\n  \\<exists>P\\<in>S. P \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P\\<in>S. P \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "case cSum2"], ["proof (state)\nthis:\n  Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "have \"Q \\<longmapsto> Rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> Rs", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> Rs \\<Longrightarrow>\n    \\<exists>P\\<in>S. P \\<longmapsto> Rs", "with QinS"], ["proof (chain)\npicking this:\n  Q \\<in> S\n  Q \\<longmapsto> Rs", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<in> S\n  Q \\<longmapsto> Rs\n\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>S. P \\<longmapsto> Rs", "by blast"], ["proof (state)\nthis:\n  \\<exists>P\\<in>S. P \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P\\<in>S. P \\<longmapsto> Rs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandTrans:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  and   a :: name\n  and   b :: name\n  and   x :: name\n\n  assumes Exp: \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n\n  shows \"(P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P') = (R \\<longmapsto>\\<tau> \\<prec> P')\"\n  and   \"(P \\<parallel> Q \\<longmapsto>a[b] \\<prec> P') = (R \\<longmapsto>a[b] \\<prec> P')\"\n  and   \"(P \\<parallel> Q \\<longmapsto>a<x> \\<prec> P') = (R \\<longmapsto>a<x> \\<prec> P')\"\n  and   \"(P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P') = (R \\<longmapsto>a<\\<nu>x> \\<prec> P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' =\n     R \\<longmapsto> \\<tau> \\<prec> P' &&&\n     P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n     R \\<longmapsto> a[b] \\<prec> P') &&&\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    R \\<longmapsto> a<x> \\<prec> P' &&&\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' =\n    R \\<longmapsto> \\<tau> \\<prec> P'\n 2. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n    R \\<longmapsto> a[b] \\<prec> P'\n 3. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    R \\<longmapsto> a<x> \\<prec> P'\n 4. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "show \"P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' = R \\<longmapsto> \\<tau> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' =\n    R \\<longmapsto> \\<tau> \\<prec> P'", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> \\<tau> \\<prec> P'\n 2. R \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> \\<tau> \\<prec> P'\n 2. R \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "thus \"R \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P'", "proof(induct rule: parCasesF[of _ _ _ _ _ \"(P, Q)\"])"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cPar1 P')"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"P \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> \\<tau> \\<prec> P'", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  P \\<longmapsto> \\<tau> \\<prec> P'", "have \"\\<tau>.(P') \\<in> summands P\""], ["proof (prove)\nusing this:\n  hnf P\n  P \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<tau>.P' \\<in> summands P", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  \\<tau>.P' \\<in> summands P\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence \"\\<tau>.(P' \\<parallel> Q) \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  \\<tau>.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. \\<tau>.(P' \\<parallel> Q) \\<in> expandSet P Q", "by(auto simp add: expandSet_def)"], ["proof (state)\nthis:\n  \\<tau>.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"\\<tau>.(P' \\<parallel> Q) \\<longmapsto>\\<tau> \\<prec> (P' \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(P' \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q", "by(rule Tau)"], ["proof (state)\nthis:\n  \\<tau>.(P' \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.(P' \\<parallel> Q) \\<in> expandSet P Q\n  \\<tau>.(P' \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.(P' \\<parallel> Q) \\<in> expandSet P Q\n  \\<tau>.(P' \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q", "using Exp"], ["proof (prove)\nusing this:\n  \\<tau>.(P' \\<parallel> Q) \\<in> expandSet P Q\n  \\<tau>.(P' \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cPar2 Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"Q \\<longmapsto>\\<tau> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<tau> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'", "have \"\\<tau>.(Q') \\<in> summands Q\""], ["proof (prove)\nusing this:\n  hnf Q\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<tau>.Q' \\<in> summands Q", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  \\<tau>.Q' \\<in> summands Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence \"\\<tau>.(P \\<parallel> Q') \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  \\<tau>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<tau>.(P \\<parallel> Q') \\<in> expandSet P Q", "by(auto simp add: expandSet_def)"], ["proof (state)\nthis:\n  \\<tau>.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"\\<tau>.(P \\<parallel> Q') \\<longmapsto>\\<tau> \\<prec> (P \\<parallel> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'", "by(rule Tau)"], ["proof (state)\nthis:\n  \\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> \\<tau> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.(P \\<parallel> Q') \\<in> expandSet P Q\n  \\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.(P \\<parallel> Q') \\<in> expandSet P Q\n  \\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'", "using Exp"], ["proof (prove)\nusing this:\n  \\<tau>.(P \\<parallel> Q') \\<in> expandSet P Q\n  \\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cComm1 P' Q' a b x)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n  Q \\<longmapsto> a[b] \\<prec> Q'\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<noteq> a\n  x \\<noteq> b\n  x \\<sharp> Q'\n  x \\<sharp> (P, Q)\n  \\<tau> = \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"P \\<longmapsto>a<x> \\<prec> P'\" and \"Q \\<longmapsto>a[b] \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P' &&& Q \\<longmapsto> a[b] \\<prec> Q'", "by fact+"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Phnf Qhnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf Q\n  P \\<longmapsto> a<x> \\<prec> P'\n  Q \\<longmapsto> a[b] \\<prec> Q'", "have \"a<x>.P' \\<in> summands P\" and \"a{b}.Q' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  hnf P\n  hnf Q\n  P \\<longmapsto> a<x> \\<prec> P'\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. a<x>.P' \\<in> summands P &&& a{b}.Q' \\<in> summands Q", "by(simp add: summandTransition)+"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands P\n  a{b}.Q' \\<in> summands Q\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence \"\\<tau>.(P'[x::=b] \\<parallel> Q') \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a<x>.P' \\<in> summands P\n  a{b}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<tau>.(P'[x::=b] \\<parallel> Q') \\<in> expandSet P Q", "by(simp add: expandSet_def, blast)"], ["proof (state)\nthis:\n  \\<tau>.(P'[x::=b] \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(P'[x::=b] \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"\\<tau>.(P'[x::=b] \\<parallel> Q') \\<longmapsto>\\<tau> \\<prec> (P'[x::=b] \\<parallel> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(P'[x::=b] \\<parallel>\n            Q') \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'", "by(rule Tau)"], ["proof (state)\nthis:\n  \\<tau>.(P'[x::=b] \\<parallel>\n          Q') \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.(P'[x::=b] \\<parallel> Q') \\<in> expandSet P Q\n  \\<tau>.(P'[x::=b] \\<parallel>\n          Q') \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.(P'[x::=b] \\<parallel> Q') \\<in> expandSet P Q\n  \\<tau>.(P'[x::=b] \\<parallel>\n          Q') \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'", "using Exp"], ["proof (prove)\nusing this:\n  \\<tau>.(P'[x::=b] \\<parallel> Q') \\<in> expandSet P Q\n  \\<tau>.(P'[x::=b] \\<parallel>\n          Q') \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P'[x::=b] \\<parallel> Q'\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cComm2 P' Q' a b x)"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P'\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<noteq> a\n  x \\<noteq> b\n  x \\<sharp> P'\n  x \\<sharp> (P, Q)\n  \\<tau> = \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"P \\<longmapsto>a[b] \\<prec> P'\" and \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P' &&& Q \\<longmapsto> a<x> \\<prec> Q'", "by fact+"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P'\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Phnf Qhnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf Q\n  P \\<longmapsto> a[b] \\<prec> P'\n  Q \\<longmapsto> a<x> \\<prec> Q'", "have \"a{b}.P' \\<in> summands P\" and \"a<x>.Q' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  hnf P\n  hnf Q\n  P \\<longmapsto> a[b] \\<prec> P'\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. a{b}.P' \\<in> summands P &&& a<x>.Q' \\<in> summands Q", "by(simp add: summandTransition)+"], ["proof (state)\nthis:\n  a{b}.P' \\<in> summands P\n  a<x>.Q' \\<in> summands Q\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence \"\\<tau>.(P' \\<parallel> (Q'[x::=b])) \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a{b}.P' \\<in> summands P\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<in> expandSet P Q", "by(simp add: expandSet_def, blast)"], ["proof (state)\nthis:\n  \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<in> expandSet P Q\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<in> expandSet P Q\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"\\<tau>.(P' \\<parallel> (Q'[x::=b])) \\<longmapsto>\\<tau> \\<prec> (P' \\<parallel> (Q'[x::=b]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(P' \\<parallel>\n            Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]", "by(rule Tau)"], ["proof (state)\nthis:\n  \\<tau>.(P' \\<parallel>\n          Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>P \\<longmapsto> a[b] \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, Q);\n        \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=b]\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<in> expandSet P Q\n  \\<tau>.(P' \\<parallel>\n          Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<in> expandSet P Q\n  \\<tau>.(P' \\<parallel>\n          Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]", "using Exp"], ["proof (prove)\nusing this:\n  \\<tau>.(P' \\<parallel> Q'[x::=b]) \\<in> expandSet P Q\n  \\<tau>.(P' \\<parallel>\n          Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel> Q'[x::=b]\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cClose1 P' Q' a x y)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<noteq> a\n  x \\<noteq> y\n  x \\<sharp> Q'\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<noteq> a\n  y \\<sharp> P'\n  x \\<sharp> (P, Q)\n  y \\<sharp> (P, Q)\n  \\<tau> = \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"y \\<sharp> (P, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> (P, Q)", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> (P, Q)\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence yFreshP: \"y \\<sharp> P\""], ["proof (prove)\nusing this:\n  y \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. y \\<sharp> P", "by(simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have PTrans: \"P \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P'", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  P \\<longmapsto> a<x> \\<prec> P'", "have PSumm: \"a<x>.P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  hnf P\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. a<x>.P' \\<in> summands P", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"Q \\<longmapsto>a<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "from PTrans yFreshP"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<x> \\<prec> P'\n  y \\<sharp> P", "have \"y \\<noteq> a\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. y \\<noteq> a", "by(force dest: freshBoundDerivative)"], ["proof (state)\nthis:\n  y \\<noteq> a\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<noteq> a", "have \"<\\<nu>y>a{y}.Q' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. <\\<nu>y>a{y}.Q' \\<in> summands Q", "using Qhnf"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<noteq> a\n  hnf Q\n\ngoal (1 subgoal):\n 1. <\\<nu>y>a{y}.Q' \\<in> summands Q", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  <\\<nu>y>a{y}.Q' \\<in> summands Q\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with PSumm yFreshP"], ["proof (chain)\npicking this:\n  a<x>.P' \\<in> summands P\n  y \\<sharp> P\n  <\\<nu>y>a{y}.Q' \\<in> summands Q", "have \"\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a<x>.P' \\<in> summands P\n  y \\<sharp> P\n  <\\<nu>y>a{y}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<in> expandSet P Q", "by(auto simp add: expandSet_def)"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<in> expandSet P Q\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<in> expandSet P Q\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"\\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<longmapsto>\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n                     Q')) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                          Q')", "by(rule Tau)"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n                   Q')) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                        Q')\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<in> expandSet P Q\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n                   Q')) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                        Q')", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<in> expandSet P Q\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n                   Q')) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                        Q')\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel> Q')", "using Exp"], ["proof (prove)\nusing this:\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel> Q')) \\<in> expandSet P Q\n  \\<tau>.(<\\<nu>y>(P'[x::=y] \\<parallel>\n                   Q')) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                        Q')\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel> Q')", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel> Q')\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cClose2 P' Q' a x y)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n  x \\<sharp> Q\n  x \\<noteq> a\n  x \\<noteq> y\n  x \\<sharp> P'\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<noteq> a\n  y \\<sharp> Q'\n  x \\<sharp> (P, Q)\n  y \\<sharp> (P, Q)\n  \\<tau> = \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"y \\<sharp> (P, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> (P, Q)", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence yFreshQ: \"y \\<sharp> Q\""], ["proof (prove)\nusing this:\n  y \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. y \\<sharp> Q", "by(simp add: fresh_prod)"], ["proof (state)\nthis:\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have QTrans: \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  Q \\<longmapsto> a<x> \\<prec> Q'", "have QSumm: \"a<x>.Q' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  hnf Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. a<x>.Q' \\<in> summands Q", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"P \\<longmapsto>a<\\<nu>y> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>y> \\<prec> P'", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "from QTrans yFreshQ"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  y \\<sharp> Q", "have \"y \\<noteq> a\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. y \\<noteq> a", "by(force dest: freshBoundDerivative)"], ["proof (state)\nthis:\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  y \\<noteq> a", "have \"<\\<nu>y>a{y}.P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. <\\<nu>y>a{y}.P' \\<in> summands P", "using Phnf"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  y \\<noteq> a\n  hnf P\n\ngoal (1 subgoal):\n 1. <\\<nu>y>a{y}.P' \\<in> summands P", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  <\\<nu>y>a{y}.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with QSumm yFreshQ"], ["proof (chain)\npicking this:\n  a<x>.Q' \\<in> summands Q\n  y \\<sharp> Q\n  <\\<nu>y>a{y}.P' \\<in> summands P", "have \"\\<tau>.(<\\<nu>y>(P' \\<parallel> (Q'[x::=y]))) \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a<x>.Q' \\<in> summands Q\n  y \\<sharp> Q\n  <\\<nu>y>a{y}.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<in> expandSet P Q", "by(simp add: expandSet_def, blast)"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<in> expandSet P Q\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<in> expandSet P Q\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"\\<tau>.(<\\<nu>y>(P' \\<parallel> (Q'[x::=y]))) \\<longmapsto>\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> (Q'[x::=y]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.(<\\<nu>y>(P' \\<parallel>\n                     Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                                 Q'[x::=y])", "by(rule Tau)"], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P' \\<parallel>\n                   Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                               Q'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, Q);\n        y \\<sharp> (P, Q); \\<tau> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<in> expandSet P Q\n  \\<tau>.(<\\<nu>y>(P' \\<parallel>\n                   Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                               Q'[x::=y])", "show ?case"], ["proof (prove)\nusing this:\n  \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<in> expandSet P Q\n  \\<tau>.(<\\<nu>y>(P' \\<parallel>\n                   Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                               Q'[x::=y])\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> Q'[x::=y])", "using Exp"], ["proof (prove)\nusing this:\n  \\<tau>.(<\\<nu>y>(P' \\<parallel> Q'[x::=y])) \\<in> expandSet P Q\n  \\<tau>.(<\\<nu>y>(P' \\<parallel>\n                   Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                               Q'[x::=y])\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> Q'[x::=y])", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> Q'[x::=y])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"R \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with Exp"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> \\<tau> \\<prec> P'", "obtain R where \"R \\<in> expandSet P Q\" and \"R \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>R \\<in> expandSet P Q;\n         R \\<longmapsto> \\<tau> \\<prec> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: expandAction')"], ["proof (state)\nthis:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "thus \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (prove)\nusing this:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "proof(auto simp add: expandSet_def)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.P'a \\<in> summands P; R = \\<tau>.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 6. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "fix P''"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.P'a \\<in> summands P; R = \\<tau>.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 6. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(P'') \\<in> summands P\""], ["proof (state)\nthis:\n  \\<tau>.P'' \\<in> summands P\n\ngoal (6 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.P'a \\<in> summands P; R = \\<tau>.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 6. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  \\<tau>.P'' \\<in> summands P", "have \"P \\<longmapsto>\\<tau> \\<prec> P''\""], ["proof (prove)\nusing this:\n  hnf P\n  \\<tau>.P'' \\<in> summands P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> \\<tau> \\<prec> P''", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<tau> \\<prec> P''\n\ngoal (6 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.P'a \\<in> summands P; R = \\<tau>.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 6. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence PQTrans: \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P'' \\<parallel> Q\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<tau> \\<prec> P''\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q", "by(rule Par1F)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q\n\ngoal (6 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.P'a \\<in> summands P; R = \\<tau>.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 6. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(P'' \\<parallel> Q) \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  \\<tau>.(P'' \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (6 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.P'a \\<in> summands P; R = \\<tau>.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 6. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence \"P' = P'' \\<parallel> Q\""], ["proof (prove)\nusing this:\n  \\<tau>.(P'' \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = P'' \\<parallel> Q", "by(erule_tac tauCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  P' = P'' \\<parallel> Q\n\ngoal (6 subgoals):\n 1. \\<And>P'a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel> Q) \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.P'a \\<in> summands P; R = \\<tau>.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 6. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q\n  P' = P'' \\<parallel> Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q\n  P' = P'' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "fix Q'"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(Q') \\<in> summands Q\""], ["proof (state)\nthis:\n  \\<tau>.Q' \\<in> summands Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  \\<tau>.Q' \\<in> summands Q", "have \"Q \\<longmapsto>\\<tau> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  hnf Q\n  \\<tau>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<tau> \\<prec> Q'", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence PQTrans: \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> \\<tau> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'", "by(rule Par2F)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(P \\<parallel> Q') \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  \\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence \"P' = P \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  \\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = P \\<parallel> Q'", "by(erule_tac tauCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  P' = P \\<parallel> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       \\<lbrakk>\\<tau>.(P \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P';\n        \\<tau>.Q' \\<in> summands Q; R = \\<tau>.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 5. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n  P' = P \\<parallel> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P \\<parallel> Q'\n  P' = P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "fix a x P'' b Q'"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"a<x>.P'' \\<in> summands P\" and \"a{b}.Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  a<x>.P'' \\<in> summands P\n  a{b}.Q' \\<in> summands Q\n\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with Phnf Qhnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf Q\n  a<x>.P'' \\<in> summands P\n  a{b}.Q' \\<in> summands Q", "have \"P \\<longmapsto>a<x> \\<prec> P''\" and \"Q \\<longmapsto>a[b] \\<prec> Q'\""], ["proof (prove)\nusing this:\n  hnf P\n  hnf Q\n  a<x>.P'' \\<in> summands P\n  a{b}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P'' &&& Q \\<longmapsto> a[b] \\<prec> Q'", "by(simp add: summandTransition)+"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P''\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence PQTrans: \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P''[x::=b] \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P''\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P''[x::=b] \\<parallel> Q'", "by(rule Comm1)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P''[x::=b] \\<parallel> Q'\n\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(P''[x::=b] \\<parallel> Q') \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  \\<tau>.(P''[x::=b] \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence \"P' = P''[x::=b] \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  \\<tau>.(P''[x::=b] \\<parallel> Q') \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = P''[x::=b] \\<parallel> Q'", "by(erule_tac tauCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  P' = P''[x::=b] \\<parallel> Q'\n\ngoal (4 subgoals):\n 1. \\<And>x P'a b Q' a.\n       \\<lbrakk>\\<tau>.(P'a[x::=b] \\<parallel>\n                        Q') \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a[x::=b] \\<parallel> Q'); a<x>.P'a \\<in> summands P;\n        a{b}.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 4. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P''[x::=b] \\<parallel> Q'\n  P' = P''[x::=b] \\<parallel> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P''[x::=b] \\<parallel> Q'\n  P' = P''[x::=b] \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "fix a b P'' x Q'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"a{b}.P'' \\<in> summands P\" and \"a<x>.Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  a{b}.P'' \\<in> summands P\n  a<x>.Q' \\<in> summands Q\n\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with Phnf Qhnf"], ["proof (chain)\npicking this:\n  hnf P\n  hnf Q\n  a{b}.P'' \\<in> summands P\n  a<x>.Q' \\<in> summands Q", "have \"P \\<longmapsto>a[b] \\<prec> P''\" and \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  hnf P\n  hnf Q\n  a{b}.P'' \\<in> summands P\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P'' &&& Q \\<longmapsto> a<x> \\<prec> Q'", "by(simp add: summandTransition)+"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P''\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence PQTrans: \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P'' \\<parallel> (Q'[x::=b])\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a[b] \\<prec> P''\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q'[x::=b]", "by(rule Comm2)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q'[x::=b]\n\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(P'' \\<parallel> (Q'[x::=b])) \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  \\<tau>.(P'' \\<parallel> Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence \"P' = P'' \\<parallel> (Q'[x::=b])\""], ["proof (prove)\nusing this:\n  \\<tau>.(P'' \\<parallel> Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = P'' \\<parallel> Q'[x::=b]", "by(erule_tac tauCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  P' = P'' \\<parallel> Q'[x::=b]\n\ngoal (3 subgoals):\n 1. \\<And>b P'a x Q' a.\n       \\<lbrakk>\\<tau>.(P'a \\<parallel>\n                        Q'[x::=b]) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(P'a \\<parallel> Q'[x::=b]); a{b}.P'a \\<in> summands P;\n        a<x>.Q' \\<in> summands Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 3. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q'[x::=b]\n  P' = P'' \\<parallel> Q'[x::=b]", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'' \\<parallel> Q'[x::=b]\n  P' = P'' \\<parallel> Q'[x::=b]\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "fix a x P'' y Q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume yFreshP: \"(y::name) \\<sharp> P\""], ["proof (state)\nthis:\n  y \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"a<x>.P'' \\<in> summands P\""], ["proof (state)\nthis:\n  a<x>.P'' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  a<x>.P'' \\<in> summands P", "have PTrans: \"P \\<longmapsto>a<x> \\<prec> P''\""], ["proof (prove)\nusing this:\n  hnf P\n  a<x>.P'' \\<in> summands P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P''", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P''\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"<\\<nu>y>a{y}.Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  <\\<nu>y>a{y}.Q' \\<in> summands Q\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y>a{y}.Q' \\<in> summands Q\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "from yFreshP PTrans"], ["proof (chain)\npicking this:\n  y \\<sharp> P\n  P \\<longmapsto> a<x> \\<prec> P''", "have \"y \\<noteq> a\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n  P \\<longmapsto> a<x> \\<prec> P''\n\ngoal (1 subgoal):\n 1. y \\<noteq> a", "by(force dest: freshBoundDerivative)"], ["proof (state)\nthis:\n  y \\<noteq> a\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>y>a{y}.Q' \\<in> summands Q\n  y \\<noteq> a", "have \"Q \\<longmapsto>a<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a{y}.Q' \\<in> summands Q\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "using Qhnf"], ["proof (prove)\nusing this:\n  <\\<nu>y>a{y}.Q' \\<in> summands Q\n  y \\<noteq> a\n  hnf Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<x> \\<prec> P''\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "have PQTrans: \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> <\\<nu>y>(P''[x::=y] \\<parallel> Q')\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P''\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P''[x::=y] \\<parallel> Q')", "using yFreshP"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P''\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P''[x::=y] \\<parallel> Q')", "by(rule Close1)"], ["proof (state)\nthis:\n  P \\<parallel>\n  Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P''[x::=y] \\<parallel> Q')\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel> Q')) \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel>\n                   Q')) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence \"P' = <\\<nu>y>(P''[x::=y] \\<parallel> Q')\""], ["proof (prove)\nusing this:\n  \\<tau>.(<\\<nu>y>(P''[x::=y] \\<parallel>\n                   Q')) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = <\\<nu>y>(P''[x::=y] \\<parallel> Q')", "by(erule_tac tauCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  P' = <\\<nu>y>(P''[x::=y] \\<parallel> Q')\n\ngoal (2 subgoals):\n 1. \\<And>x P'a y Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel>\n                                 Q')) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a[x::=y] \\<parallel> Q'));\n        a<x>.P'a \\<in> summands P; <\\<nu>y>a{y}.Q' \\<in> summands Q;\n        y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n 2. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P''[x::=y] \\<parallel> Q')\n  P' = <\\<nu>y>(P''[x::=y] \\<parallel> Q')", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P''[x::=y] \\<parallel> Q')\n  P' = <\\<nu>y>(P''[x::=y] \\<parallel> Q')\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "fix a y P'' x Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume yFreshQ: \"(y::name) \\<sharp> Q\""], ["proof (state)\nthis:\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"a<x>.Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  a<x>.Q' \\<in> summands Q", "have QTrans: \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  hnf Q\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"<\\<nu>y>a{y}.P'' \\<in> summands P\""], ["proof (state)\nthis:\n  <\\<nu>y>a{y}.P'' \\<in> summands P\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y>a{y}.P'' \\<in> summands P\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "from yFreshQ QTrans"], ["proof (chain)\npicking this:\n  y \\<sharp> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'", "have \"y \\<noteq> a\""], ["proof (prove)\nusing this:\n  y \\<sharp> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. y \\<noteq> a", "by(force dest: freshBoundDerivative)"], ["proof (state)\nthis:\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>y>a{y}.P'' \\<in> summands P\n  y \\<noteq> a", "have \"P \\<longmapsto>a<\\<nu>y> \\<prec> P''\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a{y}.P'' \\<in> summands P\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>y> \\<prec> P''", "using Phnf"], ["proof (prove)\nusing this:\n  <\\<nu>y>a{y}.P'' \\<in> summands P\n  y \\<noteq> a\n  hnf P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>y> \\<prec> P''", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P''\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence PQTrans: \"P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> <\\<nu>y>(P'' \\<parallel> Q'[x::=y])\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P''\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'' \\<parallel> Q'[x::=y])", "using QTrans yFreshQ"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P''\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'' \\<parallel> Q'[x::=y])", "by(rule Close2)"], ["proof (state)\nthis:\n  P \\<parallel>\n  Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'' \\<parallel> Q'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "assume \"\\<tau>.(<\\<nu>y>(P'' \\<parallel> Q'[x::=y])) \\<longmapsto>\\<tau> \\<prec> P'\""], ["proof (state)\nthis:\n  \\<tau>.(<\\<nu>y>(P'' \\<parallel>\n                   Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "hence \"P' = <\\<nu>y>(P'' \\<parallel> Q'[x::=y])\""], ["proof (prove)\nusing this:\n  \\<tau>.(<\\<nu>y>(P'' \\<parallel>\n                   Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = <\\<nu>y>(P'' \\<parallel> Q'[x::=y])", "by(erule_tac tauCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\nthis:\n  P' = <\\<nu>y>(P'' \\<parallel> Q'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>y P'a x Q' a.\n       \\<lbrakk>\\<tau>.(<\\<nu>y>(P'a \\<parallel>\n                                 Q'[x::=y])) \\<longmapsto> \\<tau> \\<prec> P';\n        R = \\<tau>.(<\\<nu>y>(P'a \\<parallel> Q'[x::=y]));\n        <\\<nu>y>a{y}.P'a \\<in> summands P; a<x>.Q' \\<in> summands Q;\n        y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'' \\<parallel> Q'[x::=y])\n  P' = <\\<nu>y>(P'' \\<parallel> Q'[x::=y])", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  Q \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'' \\<parallel> Q'[x::=y])\n  P' = <\\<nu>y>(P'' \\<parallel> Q'[x::=y])\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<tau> \\<prec> P' =\n  R \\<longmapsto> \\<tau> \\<prec> P'\n\ngoal (3 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n    R \\<longmapsto> a[b] \\<prec> P'\n 2. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    R \\<longmapsto> a<x> \\<prec> P'\n 3. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n    R \\<longmapsto> a[b] \\<prec> P'\n 2. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    R \\<longmapsto> a<x> \\<prec> P'\n 3. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "show \"P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' = R \\<longmapsto> a[b] \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n    R \\<longmapsto> a[b] \\<prec> P'", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a[b] \\<prec> P'\n 2. R \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "assume \"P \\<parallel> Q \\<longmapsto>a[b] \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a[b] \\<prec> P'\n 2. R \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "thus \"R \\<longmapsto>a[b] \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P'", "proof(induct rule: parCasesF[where C=\"()\"])"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cPar1 P')"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"P \\<longmapsto>a[b] \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a[b] \\<prec> P'", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  P \\<longmapsto> a[b] \\<prec> P'", "have \"a{b}.P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  hnf P\n  P \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. a{b}.P' \\<in> summands P", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  a{b}.P' \\<in> summands P\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence \"a{b}.(P' \\<parallel> Q) \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a{b}.P' \\<in> summands P\n\ngoal (1 subgoal):\n 1. a{b}.(P' \\<parallel> Q) \\<in> expandSet P Q", "by(auto simp add: expandSet_def)"], ["proof (state)\nthis:\n  a{b}.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  a{b}.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"a{b}.(P' \\<parallel> Q) \\<longmapsto>a[b] \\<prec> (P' \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.(P' \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q", "by(rule Output)"], ["proof (state)\nthis:\n  a{b}.(P' \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 4. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 6. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  a{b}.(P' \\<parallel> Q) \\<in> expandSet P Q\n  a{b}.(P' \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q", "show ?case"], ["proof (prove)\nusing this:\n  a{b}.(P' \\<parallel> Q) \\<in> expandSet P Q\n  a{b}.(P' \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q", "using Exp"], ["proof (prove)\nusing this:\n  a{b}.(P' \\<parallel> Q) \\<in> expandSet P Q\n  a{b}.(P' \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> a[b] \\<prec> P' \\<parallel> Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case(cPar2 Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"Q \\<longmapsto>a[b] \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  Q \\<longmapsto> a[b] \\<prec> Q'", "have \"a{b}.Q' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  hnf Q\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. a{b}.Q' \\<in> summands Q", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  a{b}.Q' \\<in> summands Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "hence \"a{b}.(P \\<parallel> Q') \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a{b}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. a{b}.(P \\<parallel> Q') \\<in> expandSet P Q", "by(simp add: expandSet_def, blast)"], ["proof (state)\nthis:\n  a{b}.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "moreover"], ["proof (state)\nthis:\n  a{b}.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "have \"a{b}.(P \\<parallel> Q') \\<longmapsto>a[b] \\<prec> (P \\<parallel> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'", "by(rule Output)"], ["proof (state)\nthis:\n  a{b}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a[b] \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 3. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 5. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "ultimately"], ["proof (chain)\npicking this:\n  a{b}.(P \\<parallel> Q') \\<in> expandSet P Q\n  a{b}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'", "show ?case"], ["proof (prove)\nusing this:\n  a{b}.(P \\<parallel> Q') \\<in> expandSet P Q\n  a{b}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'", "using Exp"], ["proof (prove)\nusing this:\n  a{b}.(P \\<parallel> Q') \\<in> expandSet P Q\n  a{b}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> a[b] \\<prec> P \\<parallel> Q'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 3. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 3. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case cComm1"], ["proof (state)\nthis:\n  P \\<longmapsto> a_<x_> \\<prec> P'_\n  Q \\<longmapsto> a_[b_] \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> b_\n  x_ \\<sharp> Q'_\n  x_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa[ba] \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> Q'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P'[x::=ba] \\<parallel>\n                  Q'\n 2. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 3. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 4. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a_<x_> \\<prec> P'_\n  Q \\<longmapsto> a_[b_] \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> b_\n  x_ \\<sharp> Q'_\n  x_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P'_[x_::=b_] \\<parallel> Q'_", "by auto"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P'_[x_::=b_] \\<parallel> Q'_\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 2. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 2. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case cComm2"], ["proof (state)\nthis:\n  P \\<longmapsto> a_[b_] \\<prec> P'_\n  Q \\<longmapsto> a_<x_> \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> b_\n  x_ \\<sharp> P'_\n  x_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' aa ba x.\n       \\<lbrakk>P \\<longmapsto> aa[ba] \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> ba; x \\<sharp> P'; x \\<sharp> ();\n        a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> P' \\<parallel>\n                  Q'[x::=ba]\n 2. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 3. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a_[b_] \\<prec> P'_\n  Q \\<longmapsto> a_<x_> \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> b_\n  x_ \\<sharp> P'_\n  x_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> P'_ \\<parallel> Q'_[x_::=b_]", "by auto"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> P'_ \\<parallel> Q'_[x_::=b_]\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case cClose1"], ["proof (state)\nthis:\n  P \\<longmapsto> a_<x_> \\<prec> P'_\n  Q \\<longmapsto> a_<\\<nu>y_> \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> y_\n  x_ \\<sharp> Q'_\n  y_ \\<sharp> P\n  y_ \\<sharp> Q\n  y_ \\<noteq> a_\n  y_ \\<sharp> P'_\n  x_ \\<sharp> ()\n  y_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<x> \\<prec> P';\n        Q \\<longmapsto> aa<\\<nu>y> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> P'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n                           Q')\n 2. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a_<x_> \\<prec> P'_\n  Q \\<longmapsto> a_<\\<nu>y_> \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> y_\n  x_ \\<sharp> Q'_\n  y_ \\<sharp> P\n  y_ \\<sharp> Q\n  y_ \\<noteq> a_\n  y_ \\<sharp> P'_\n  x_ \\<sharp> ()\n  y_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y_>(P'_[x_::=y_] \\<parallel> Q'_)", "by auto"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y_>(P'_[x_::=y_] \\<parallel> Q'_)\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "case cClose2"], ["proof (state)\nthis:\n  P \\<longmapsto> a_<\\<nu>y_> \\<prec> P'_\n  Q \\<longmapsto> a_<x_> \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> y_\n  x_ \\<sharp> P'_\n  y_ \\<sharp> P\n  y_ \\<sharp> Q\n  y_ \\<noteq> a_\n  y_ \\<sharp> Q'_\n  x_ \\<sharp> ()\n  y_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' aa x y.\n       \\<lbrakk>P \\<longmapsto> aa<\\<nu>y> \\<prec> P';\n        Q \\<longmapsto> aa<x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q;\n        x \\<noteq> aa; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> P;\n        y \\<sharp> Q; y \\<noteq> aa; y \\<sharp> Q'; x \\<sharp> ();\n        y \\<sharp> (); a[b] = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                           Q'[x::=y])", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a_<\\<nu>y_> \\<prec> P'_\n  Q \\<longmapsto> a_<x_> \\<prec> Q'_\n  x_ \\<sharp> P\n  x_ \\<sharp> Q\n  x_ \\<noteq> a_\n  x_ \\<noteq> y_\n  x_ \\<sharp> P'_\n  y_ \\<sharp> P\n  y_ \\<sharp> Q\n  y_ \\<noteq> a_\n  y_ \\<sharp> Q'_\n  x_ \\<sharp> ()\n  y_ \\<sharp> ()\n  a[b] = \\<tau>\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y_>(P'_ \\<parallel> Q'_[x_::=y_])", "by auto"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<tau> \\<prec> <\\<nu>y_>(P'_ \\<parallel> Q'_[x_::=y_])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "assume \"R \\<longmapsto>a[b] \\<prec> P'\""], ["proof (state)\nthis:\n  R \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "with Exp"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> a[b] \\<prec> P'", "obtain R where \"R \\<in> expandSet P Q\" and \"R \\<longmapsto>a[b] \\<prec> P'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>R \\<in> expandSet P Q;\n         R \\<longmapsto> a[b] \\<prec> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: expandAction')"], ["proof (state)\nthis:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a[b] \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "thus \"P \\<parallel> Q \\<longmapsto>a[b] \\<prec> P'\""], ["proof (prove)\nusing this:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "proof(auto simp add: expandSet_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa ba P'a.\n       \\<lbrakk>aa{ba}.(P'a \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.P'a \\<in> summands P; R = aa{ba}.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n 2. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "fix a' b' P''"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa ba P'a.\n       \\<lbrakk>aa{ba}.(P'a \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.P'a \\<in> summands P; R = aa{ba}.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n 2. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "assume \"a'{b'}.P'' \\<in> summands P\""], ["proof (state)\nthis:\n  a'{b'}.P'' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>aa ba P'a.\n       \\<lbrakk>aa{ba}.(P'a \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.P'a \\<in> summands P; R = aa{ba}.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n 2. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  a'{b'}.P'' \\<in> summands P", "have \"P \\<longmapsto>a'[b'] \\<prec> P''\""], ["proof (prove)\nusing this:\n  hnf P\n  a'{b'}.P'' \\<in> summands P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a'[b'] \\<prec> P''", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  P \\<longmapsto> a'[b'] \\<prec> P''\n\ngoal (2 subgoals):\n 1. \\<And>aa ba P'a.\n       \\<lbrakk>aa{ba}.(P'a \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.P'a \\<in> summands P; R = aa{ba}.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n 2. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "hence PQTrans: \"P \\<parallel> Q \\<longmapsto>a'[b'] \\<prec> P'' \\<parallel> Q\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a'[b'] \\<prec> P''\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P'' \\<parallel> Q", "by(rule Par1F)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P'' \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>aa ba P'a.\n       \\<lbrakk>aa{ba}.(P'a \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.P'a \\<in> summands P; R = aa{ba}.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n 2. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "assume \"a'{b'}.(P'' \\<parallel> Q) \\<longmapsto>a[b] \\<prec> P'\""], ["proof (state)\nthis:\n  a'{b'}.(P'' \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>aa ba P'a.\n       \\<lbrakk>aa{ba}.(P'a \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.P'a \\<in> summands P; R = aa{ba}.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n 2. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "hence \"P' = P'' \\<parallel> Q\" and \"a = a'\" and \"b = b'\""], ["proof (prove)\nusing this:\n  a'{b'}.(P'' \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = P'' \\<parallel> Q &&& a = a' &&& b = b'", "by(erule_tac outputCases, auto simp add: pi.inject residual.inject)+"], ["proof (state)\nthis:\n  P' = P'' \\<parallel> Q\n  a = a'\n  b = b'\n\ngoal (2 subgoals):\n 1. \\<And>aa ba P'a.\n       \\<lbrakk>aa{ba}.(P'a \\<parallel> Q) \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.P'a \\<in> summands P; R = aa{ba}.(P'a \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n 2. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P'' \\<parallel> Q\n  P' = P'' \\<parallel> Q\n  a = a'\n  b = b'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P'' \\<parallel> Q\n  P' = P'' \\<parallel> Q\n  a = a'\n  b = b'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "fix a' b' Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "assume \"a'{b'}.Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  a'{b'}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  a'{b'}.Q' \\<in> summands Q", "have \"Q \\<longmapsto>a'[b'] \\<prec> Q'\""], ["proof (prove)\nusing this:\n  hnf Q\n  a'{b'}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a'[b'] \\<prec> Q'", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a'[b'] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "hence PQTrans: \"P \\<parallel> Q \\<longmapsto>a'[b'] \\<prec> P \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a'[b'] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P \\<parallel> Q'", "by(rule Par2F)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "assume \"a'{b'}.(P \\<parallel> Q') \\<longmapsto>a[b] \\<prec> P'\""], ["proof (state)\nthis:\n  a'{b'}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "hence \"P' = P \\<parallel> Q'\" and \"a = a'\" and \"b = b'\""], ["proof (prove)\nusing this:\n  a'{b'}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P'\n\ngoal (1 subgoal):\n 1. P' = P \\<parallel> Q' &&& a = a' &&& b = b'", "by(erule_tac outputCases, auto simp add: pi.inject residual.inject)+"], ["proof (state)\nthis:\n  P' = P \\<parallel> Q'\n  a = a'\n  b = b'\n\ngoal (1 subgoal):\n 1. \\<And>aa ba Q'.\n       \\<lbrakk>aa{ba}.(P \\<parallel> Q') \\<longmapsto> a[b] \\<prec> P';\n        aa{ba}.Q' \\<in> summands Q; R = aa{ba}.(P \\<parallel> Q')\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P \\<parallel> Q'\n  P' = P \\<parallel> Q'\n  a = a'\n  b = b'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a'[b'] \\<prec> P \\<parallel> Q'\n  P' = P \\<parallel> Q'\n  a = a'\n  b = b'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a[b] \\<prec> P' =\n  R \\<longmapsto> a[b] \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "show \"P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' = R \\<longmapsto> a<x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n    R \\<longmapsto> a<x> \\<prec> P'", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "fix x P'"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"P \\<parallel> Q \\<longmapsto>a<x> \\<prec> P'\" and \"x \\<sharp> P\" and \"x \\<sharp> Q\""], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "hence \"R \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P'", "proof(induct rule: parCasesB)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "case(cPar1 P')"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "have \"P \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<x> \\<prec> P'", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  P \\<longmapsto> a<x> \\<prec> P'", "have \"a<x>.P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  hnf P\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. a<x>.P' \\<in> summands P", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  a<x>.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "have \"x \\<sharp> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> Q", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.P' \\<in> summands P\n  x \\<sharp> Q", "have \"a<x>.(P' \\<parallel> Q) \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a<x>.P' \\<in> summands P\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. a<x>.(P' \\<parallel> Q) \\<in> expandSet P Q", "by(auto simp add: expandSet_def)"], ["proof (state)\nthis:\n  a<x>.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  a<x>.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "have \"a<x>.(P' \\<parallel> Q) \\<longmapsto>a<x> \\<prec> (P' \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.(P' \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q", "by(rule Input)"], ["proof (state)\nthis:\n  a<x>.(P' \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.(P' \\<parallel> Q) \\<in> expandSet P Q\n  a<x>.(P' \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q", "show ?case"], ["proof (prove)\nusing this:\n  a<x>.(P' \\<parallel> Q) \\<in> expandSet P Q\n  a<x>.(P' \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q", "using Exp"], ["proof (prove)\nusing this:\n  a<x>.(P' \\<parallel> Q) \\<in> expandSet P Q\n  a<x>.(P' \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> P' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "case(cPar2 Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "have \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  Q \\<longmapsto> a<x> \\<prec> Q'", "have \"a<x>.Q' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  hnf Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. a<x>.Q' \\<in> summands Q", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  a<x>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "have \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.Q' \\<in> summands Q\n  x \\<sharp> P", "have \"a<x>.(P \\<parallel> Q') \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  a<x>.Q' \\<in> summands Q\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. a<x>.(P \\<parallel> Q') \\<in> expandSet P Q", "by(simp add: expandSet_def, blast)"], ["proof (state)\nthis:\n  a<x>.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  a<x>.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "have \"a<x>.(P \\<parallel> Q') \\<longmapsto>a<x> \\<prec> (P \\<parallel> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "by(rule Input)"], ["proof (state)\nthis:\n  a<x>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.(P \\<parallel> Q') \\<in> expandSet P Q\n  a<x>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "show ?case"], ["proof (prove)\nusing this:\n  a<x>.(P \\<parallel> Q') \\<in> expandSet P Q\n  a<x>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "using Exp"], ["proof (prove)\nusing this:\n  a<x>.(P \\<parallel> Q') \\<in> expandSet P Q\n  a<x>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> P \\<parallel> Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<?xa2> \\<prec> ?P'a2;\n   ?xa2 \\<sharp> P; ?xa2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<?xa2> \\<prec> ?P'a2\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<?xa2> \\<prec> ?P'a2;\n   ?xa2 \\<sharp> P; ?xa2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<?xa2> \\<prec> ?P'a2\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "obtain y::name where \"y \\<sharp> P\" and \"y \\<sharp> Q\" and \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P; y \\<sharp> Q; y \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"P \\<parallel> Q \\<longmapsto>a<x> \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "with \\<open>y \\<sharp> P'\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "have \"P \\<parallel> Q \\<longmapsto>a<y> \\<prec> ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<?xa2> \\<prec> ?P'a2;\n   ?xa2 \\<sharp> P; ?xa2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<?xa2> \\<prec> ?P'a2\n  P \\<parallel> Q \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'", "have \"R \\<longmapsto>a<y> \\<prec> ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<?xa2> \\<prec> ?P'a2;\n   ?xa2 \\<sharp> P; ?xa2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<?xa2> \\<prec> ?P'a2\n  P \\<parallel> Q \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'", "using \\<open>y \\<sharp> P\\<close> \\<open>y \\<sharp> Q\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<?xa2> \\<prec> ?P'a2;\n   ?xa2 \\<sharp> P; ?xa2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<?xa2> \\<prec> ?P'a2\n  P \\<parallel> Q \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'", "by auto"], ["proof (state)\nthis:\n  R \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<x> \\<prec> P'\n 2. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "thus \"R \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P'", "using \\<open>y \\<sharp> P'\\<close>"], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"R \\<longmapsto>a<x> \\<prec> P'\""], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "with Exp"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> a<x> \\<prec> P'", "obtain R where \"R \\<in> expandSet P Q\" and \"R \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>R \\<in> expandSet P Q;\n         R \\<longmapsto> a<x> \\<prec> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: expandAction')"], ["proof (state)\nthis:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "thus \"P \\<parallel> Q \\<longmapsto>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "proof(auto simp add: expandSet_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "fix a' y P''"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"a'<y>.P'' \\<in> summands P\""], ["proof (state)\nthis:\n  a'<y>.P'' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "with Phnf"], ["proof (chain)\npicking this:\n  hnf P\n  a'<y>.P'' \\<in> summands P", "have \"P \\<longmapsto>a'<y> \\<prec> P''\""], ["proof (prove)\nusing this:\n  hnf P\n  a'<y>.P'' \\<in> summands P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a'<y> \\<prec> P''", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  P \\<longmapsto> a'<y> \\<prec> P''\n\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto> a'<y> \\<prec> P''\n\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"y \\<sharp> Q\""], ["proof (state)\nthis:\n  y \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a'<y> \\<prec> P''\n  y \\<sharp> Q", "have PQTrans: \"P \\<parallel> Q \\<longmapsto>a'<y> \\<prec> P'' \\<parallel> Q\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a'<y> \\<prec> P''\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P'' \\<parallel> Q", "by(rule Par1B)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P'' \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"a'<y>.(P'' \\<parallel> Q) \\<longmapsto>a<x> \\<prec> P'\""], ["proof (state)\nthis:\n  a'<y>.(P'' \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "hence \"a<x> \\<prec> P' = a'<y> \\<prec> P'' \\<parallel> Q\" and \"a = a'\""], ["proof (prove)\nusing this:\n  a'<y>.(P'' \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. a<x> \\<prec> P' = a'<y> \\<prec> P'' \\<parallel> Q &&& a = a'", "by(erule_tac inputCases', auto simp add: pi.inject residual.inject)+"], ["proof (state)\nthis:\n  a<x> \\<prec> P' = a'<y> \\<prec> P'' \\<parallel> Q\n  a = a'\n\ngoal (2 subgoals):\n 1. \\<And>aa xa P'a.\n       \\<lbrakk>aa<xa>.(P'a \\<parallel> Q) \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P'a \\<parallel> Q); aa<xa>.P'a \\<in> summands P;\n        xa \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n 2. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P'' \\<parallel> Q\n  a<x> \\<prec> P' = a'<y> \\<prec> P'' \\<parallel> Q\n  a = a'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P'' \\<parallel> Q\n  a<x> \\<prec> P' = a'<y> \\<prec> P'' \\<parallel> Q\n  a = a'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "fix a' y Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"a'<y>.Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  a'<y>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "with Qhnf"], ["proof (chain)\npicking this:\n  hnf Q\n  a'<y>.Q' \\<in> summands Q", "have \"Q \\<longmapsto>(a'::name)<y> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  hnf Q\n  a'<y>.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a'<y> \\<prec> Q'", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a'<y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto> a'<y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"y \\<sharp> P\""], ["proof (state)\nthis:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a'<y> \\<prec> Q'\n  y \\<sharp> P", "have PQTrans: \"P \\<parallel> Q \\<longmapsto>a'<y> \\<prec> P \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a'<y> \\<prec> Q'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P \\<parallel> Q'", "by(rule Par2B)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "assume \"a'<y>.(P \\<parallel> Q') \\<longmapsto>a<x> \\<prec> P'\""], ["proof (state)\nthis:\n  a'<y>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "hence \"a<x> \\<prec> P' = a'<y> \\<prec> P \\<parallel> Q'\" and \"a = a'\""], ["proof (prove)\nusing this:\n  a'<y>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. a<x> \\<prec> P' = a'<y> \\<prec> P \\<parallel> Q' &&& a = a'", "by(erule_tac inputCases', auto simp add: pi.inject residual.inject)+"], ["proof (state)\nthis:\n  a<x> \\<prec> P' = a'<y> \\<prec> P \\<parallel> Q'\n  a = a'\n\ngoal (1 subgoal):\n 1. \\<And>aa xa Q'.\n       \\<lbrakk>aa<xa>.(P \\<parallel> Q') \\<longmapsto> a<x> \\<prec> P';\n        R = aa<xa>.(P \\<parallel> Q'); aa<xa>.Q' \\<in> summands Q;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P \\<parallel> Q'\n  a<x> \\<prec> P' = a'<y> \\<prec> P \\<parallel> Q'\n  a = a'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a'<y> \\<prec> P \\<parallel> Q'\n  a<x> \\<prec> P' = a'<y> \\<prec> P \\<parallel> Q'\n  a = a'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<x> \\<prec> P' =\n  R \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have Goal: \"\\<And>P Q a x P' R. \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q; a \\<noteq> x\\<rbrakk> \\<Longrightarrow> P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P' = R \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q a x P' R.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel>\n                         Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a x P' R.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel>\n                         Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "fix P Q a x P' R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a x P' R.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel>\n                         Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume aineqx: \"(a::name) \\<noteq> x\""], ["proof (state)\nthis:\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x P' R.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel>\n                         Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume Exp: \"(R, expandSet P Q) \\<in> sumComposeSet\""], ["proof (state)\nthis:\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x P' R.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel>\n                         Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume Phnf: \"hnf P\""], ["proof (state)\nthis:\n  hnf P\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x P' R.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel>\n                         Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume Qhnf: \"hnf Q\""], ["proof (state)\nthis:\n  hnf Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x P' R.\n       \\<lbrakk>(R, expandSet P Q) \\<in> sumComposeSet; hnf P; hnf Q;\n        a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel>\n                         Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n                         R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "show \"P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P' = R \\<longmapsto> a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "fix x P'"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<parallel>\n    Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__\n 2. R \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__", "assume \"P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and \"x \\<sharp> P\" and \"x \\<sharp> Q\" and \"a \\<noteq> x\""], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> P\n  x \\<sharp> Q\n  a \\<noteq> x\n\ngoal (2 subgoals):\n 1. P \\<parallel>\n    Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__\n 2. R \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__", "hence \"R \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> P\n  x \\<sharp> Q\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "proof(induct rule: parCasesB)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "case(cPar1 P')"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  a \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "have \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by fact"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "with Phnf \\<open>a \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  hnf P\n  a \\<noteq> x\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have \"<\\<nu>x>a{x}.P' \\<in> summands P\""], ["proof (prove)\nusing this:\n  hnf P\n  a \\<noteq> x\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.P' \\<in> summands P", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "have \"x \\<sharp> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> Q", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  x \\<sharp> Q", "have \"<\\<nu>x>a{x}.(P' \\<parallel> Q) \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.P' \\<in> summands P\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.(P' \\<parallel> Q) \\<in> expandSet P Q", "by(auto simp add: expandSet_def)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.(P' \\<parallel> Q) \\<in> expandSet P Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "have \"<\\<nu>x>a{x}.(P' \\<parallel> Q) \\<longmapsto>a<\\<nu>x> \\<prec> (P' \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.(P' \\<parallel>\n                  Q) \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q", "using \\<open>a \\<noteq> x\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.(P' \\<parallel>\n                  Q) \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q", "by(blast intro: Open Output)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.(P' \\<parallel>\n                Q) \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n 2. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>a{x}.(P' \\<parallel> Q) \\<in> expandSet P Q\n  <\\<nu>x>a{x}.(P' \\<parallel>\n                Q) \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.(P' \\<parallel> Q) \\<in> expandSet P Q\n  <\\<nu>x>a{x}.(P' \\<parallel>\n                Q) \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q", "using Exp"], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.(P' \\<parallel> Q) \\<in> expandSet P Q\n  <\\<nu>x>a{x}.(P' \\<parallel>\n                Q) \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "case(cPar2 Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "have \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "with Qhnf \\<open>a \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  hnf Q\n  a \\<noteq> x\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "have \"<\\<nu>x>a{x}.Q' \\<in> summands Q\""], ["proof (prove)\nusing this:\n  hnf Q\n  a \\<noteq> x\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.Q' \\<in> summands Q", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "have \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>a{x}.Q' \\<in> summands Q\n  x \\<sharp> P", "have \"<\\<nu>x>a{x}.(P \\<parallel> Q') \\<in> expandSet P Q\""], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.Q' \\<in> summands Q\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.(P \\<parallel> Q') \\<in> expandSet P Q", "by(simp add: expandSet_def, blast)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.(P \\<parallel> Q') \\<in> expandSet P Q\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "have \"<\\<nu>x>a{x}.(P \\<parallel> Q') \\<longmapsto>a<\\<nu>x> \\<prec> (P \\<parallel> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.(P \\<parallel>\n                  Q') \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "using \\<open>a \\<noteq> x\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. <\\<nu>x>a{x}.(P \\<parallel>\n                  Q') \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "by(blast intro: Open Output)"], ["proof (state)\nthis:\n  <\\<nu>x>a{x}.(P \\<parallel>\n                Q') \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; a \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>a{x}.(P \\<parallel> Q') \\<in> expandSet P Q\n  <\\<nu>x>a{x}.(P \\<parallel>\n                Q') \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.(P \\<parallel> Q') \\<in> expandSet P Q\n  <\\<nu>x>a{x}.(P \\<parallel>\n                Q') \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "using Exp"], ["proof (prove)\nusing this:\n  <\\<nu>x>a{x}.(P \\<parallel> Q') \\<in> expandSet P Q\n  <\\<nu>x>a{x}.(P \\<parallel>\n                Q') \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'\n  (R, expandSet P Q) \\<in> sumComposeSet\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'", "by(blast intro: expandAction)"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P \\<parallel> Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel>\n    Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__\n 2. R \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?xb2 \\<sharp> P; ?xb2 \\<sharp> Q; a \\<noteq> ?xb2\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?xb2 \\<sharp> P; ?xb2 \\<sharp> Q; a \\<noteq> ?xb2\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "obtain y::name where \"y \\<sharp> P\" and \"y \\<sharp> Q\" and \"y \\<sharp> P'\" and \"y \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P; y \\<sharp> Q; y \\<sharp> P';\n         y \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> P'\n  y \\<noteq> a\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume \"P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with \\<open>y \\<sharp> P'\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have \"P \\<parallel> Q \\<longmapsto>a<\\<nu>y> \\<prec> ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?xb2 \\<sharp> P; ?xb2 \\<sharp> Q; a \\<noteq> ?xb2\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "have \"R \\<longmapsto>a<\\<nu>y> \\<prec> ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?xb2 \\<sharp> P; ?xb2 \\<sharp> Q; a \\<noteq> ?xb2\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "using \\<open>y \\<sharp> P\\<close> \\<open>y \\<sharp> Q\\<close> \\<open>y \\<noteq> a\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?xb2 \\<sharp> P; ?xb2 \\<sharp> Q; a \\<noteq> ?xb2\\<rbrakk>\n  \\<Longrightarrow> R \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by auto"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "thus \"R \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "using \\<open>y \\<sharp> P'\\<close>"], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "fix R x P'"], ["proof (state)\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__", "assume \"R \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and \"R \\<in> expandSet P Q\" and \"x \\<sharp> R\" and \"x \\<sharp> P\" and \"x \\<sharp> Q\""], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  R \\<in> expandSet P Q\n  x \\<sharp> R\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__", "hence \"P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  R \\<in> expandSet P Q\n  x \\<sharp> R\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "proof(auto simp add: expandSet_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "fix a' y P''"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume \"<\\<nu>y>a'{y}.P'' \\<in> summands P\""], ["proof (state)\nthis:\n  <\\<nu>y>a'{y}.P'' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y>a'{y}.P'' \\<in> summands P\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "hence \"a' \\<noteq> y\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.P'' \\<in> summands P\n\ngoal (1 subgoal):\n 1. a' \\<noteq> y", "by auto"], ["proof (state)\nthis:\n  a' \\<noteq> y\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>y>a'{y}.P'' \\<in> summands P\n  a' \\<noteq> y", "have \"P \\<longmapsto>a'<\\<nu>y> \\<prec> P''\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.P'' \\<in> summands P\n  a' \\<noteq> y\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a'<\\<nu>y> \\<prec> P''", "using Phnf"], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.P'' \\<in> summands P\n  a' \\<noteq> y\n  hnf P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a'<\\<nu>y> \\<prec> P''", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  P \\<longmapsto> a'<\\<nu>y> \\<prec> P''\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto> a'<\\<nu>y> \\<prec> P''\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume \"y \\<sharp> Q\""], ["proof (state)\nthis:\n  y \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a'<\\<nu>y> \\<prec> P''\n  y \\<sharp> Q", "have PQTrans: \"P \\<parallel> Q \\<longmapsto>a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a'<\\<nu>y> \\<prec> P''\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "by(rule Par1B)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume ResTrans: \"<\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and \"x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q)\""], ["proof (state)\nthis:\n  <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q)\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with ResTrans \\<open>a' \\<noteq> y\\<close> \\<open>x \\<sharp> P\\<close> \\<open>x \\<sharp> Q\\<close>"], ["proof (chain)\npicking this:\n  <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  a' \\<noteq> y\n  x \\<sharp> P\n  x \\<sharp> Q\n  <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q)", "have \"a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  a' \\<noteq> y\n  x \\<sharp> P\n  x \\<sharp> Q\n  <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "apply(case_tac \"x=y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "apply(erule_tac resCasesB)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> y\n 2. \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> a'{y}.(P'' \\<parallel> Q)\n 3. \\<And>b P'.\n       \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n        <\\<nu>y>a'{y}.(P'' \\<parallel>\n                       Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y;\n        a'{y}.(P'' \\<parallel> Q) \\<longmapsto> b[y] \\<prec> P';\n        b \\<noteq> y; BoundOutputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> b<\\<nu>x> \\<prec> [(x, y)] \\<bullet> P' =\n                         a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 4. \\<And>P'.\n       \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n        <\\<nu>y>a'{y}.(P'' \\<parallel>\n                       Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y;\n        a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> a<\\<nu>x> \\<prec> <\\<nu>y>P' =\n                         a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 5. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> a'{y}.(P'' \\<parallel> Q)\n 2. \\<And>b P'.\n       \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n        <\\<nu>y>a'{y}.(P'' \\<parallel>\n                       Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y;\n        a'{y}.(P'' \\<parallel> Q) \\<longmapsto> b[y] \\<prec> P';\n        b \\<noteq> y; BoundOutputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> b<\\<nu>x> \\<prec> [(x, y)] \\<bullet> P' =\n                         a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 3. \\<And>P'.\n       \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n        <\\<nu>y>a'{y}.(P'' \\<parallel>\n                       Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y;\n        a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> a<\\<nu>x> \\<prec> <\\<nu>y>P' =\n                         a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 4. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "apply(simp add: abs_fresh)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n        <\\<nu>y>a'{y}.(P'' \\<parallel>\n                       Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y;\n        a'{y}.(P'' \\<parallel> Q) \\<longmapsto> b[y] \\<prec> P';\n        b \\<noteq> y; BoundOutputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> b<\\<nu>x> \\<prec> [(x, y)] \\<bullet> P' =\n                         a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 2. \\<And>P'.\n       \\<lbrakk>a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n        <\\<nu>y>a'{y}.(P'' \\<parallel>\n                       Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x \\<noteq> y;\n        a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> a<\\<nu>x> \\<prec> <\\<nu>y>P' =\n                         a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n 3. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y; x \\<sharp> P; x \\<sharp> Q;\n     <\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P'' \\<parallel> Q); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "apply(auto simp add: residual.inject alpha' calc_atm fresh_left abs_fresh elim: outputCases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y\\<rbrakk>\n    \\<Longrightarrow> a = a'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(ind_cases \"<\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>y> \\<prec> P'\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>P a b P'.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        <\\<nu>y>a'{y}.(P'' \\<parallel> Q) = <\\<nu>b>P;\n        a<\\<nu>y> \\<prec> P' = a<\\<nu>b> \\<prec> P';\n        P \\<longmapsto> a[b] \\<prec> P'; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        <\\<nu>y>a'{y}.(P'' \\<parallel> Q) = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 3. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(simp add: pi.inject alpha' residual.inject abs_fresh eqvts calc_atm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>P b P'.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        y = b \\<and> a'{y}.(P'' \\<parallel> Q) = P \\<or>\n        y \\<noteq> b \\<and>\n        (if b = a' then y\n         else if y = a' then b\n              else a'){(if b = y then y\n                        else if y = y then b\n                             else y)}.(([(b, y)] \\<bullet> P'') \\<parallel>\n ([(b, y)] \\<bullet> Q)) =\n        P \\<and>\n        b \\<noteq> a' \\<and>\n        b \\<noteq> y \\<and> b \\<sharp> P'' \\<and> b \\<sharp> Q;\n        y = b \\<and> P' = P' \\<or>\n        y \\<noteq> b \\<and> [(b, y)] \\<bullet> P' = P' \\<and> b \\<sharp> P';\n        P \\<longmapsto> a[b] \\<prec> P'; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        <\\<nu>y>a'{y}.(P'' \\<parallel> Q) = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 3. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(auto elim: outputCases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        <\\<nu>y>a'{y}.(P'' \\<parallel> Q) = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(simp add: pi.inject residual.inject alpha' calc_atm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x P' ya.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        y = ya \\<and> a'{y}.(P'' \\<parallel> Q) = P \\<or>\n        y \\<noteq> ya \\<and>\n        (if ya = a' then y\n         else if y = a' then ya\n              else a'){(if ya = y then y\n                        else if y = y then ya\n                             else y)}.(([(ya, y)] \\<bullet> P'') \\<parallel>\n ([(ya, y)] \\<bullet> Q)) =\n        P \\<and>\n        ya \\<noteq> a' \\<and>\n        ya \\<noteq> y \\<and> ya \\<sharp> P'' \\<and> ya \\<sharp> Q;\n        y = x \\<and> P' = <\\<nu>ya>P' \\<or>\n        y \\<noteq> x \\<and>\n        [(x, y)] \\<bullet> P' = <\\<nu>ya>P' \\<and> x \\<sharp> P';\n        P \\<longmapsto> a<\\<nu>x> \\<prec> P'; ya \\<noteq> a; ya \\<noteq> x;\n        x \\<sharp> P; x \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P'' \\<parallel>\n                            Q) \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(ind_cases \"<\\<nu>y>a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a<\\<nu>y> \\<prec> P'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a b P'.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        <\\<nu>y>a'{y}.(P'' \\<parallel> Q) = <\\<nu>b>P;\n        a<\\<nu>y> \\<prec> P' = a<\\<nu>b> \\<prec> P';\n        P \\<longmapsto> a[b] \\<prec> P'; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q\n 2. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        <\\<nu>y>a'{y}.(P'' \\<parallel> Q) = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(auto simp add: pi.inject alpha' residual.inject abs_fresh eqvts calc_atm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n     a'{y}.(P'' \\<parallel> Q) \\<longmapsto> a[y] \\<prec> P';\n     a \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> P' = P'' \\<parallel> Q\n 2. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        a'{b}.(([(b, y)] \\<bullet> P'') \\<parallel>\n               Q) \\<longmapsto> a[b] \\<prec> [(b, y)] \\<bullet> P';\n        a \\<noteq> b; b \\<noteq> a'; b \\<sharp> P''; b \\<sharp> Q;\n        y \\<noteq> b; b \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(auto elim: outputCases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        a'{b}.(([(b, y)] \\<bullet> P'') \\<parallel>\n               Q) \\<longmapsto> a[b] \\<prec> [(b, y)] \\<bullet> P';\n        a \\<noteq> b; b \\<noteq> a'; b \\<sharp> P''; b \\<sharp> Q;\n        y \\<noteq> b; b \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(erule_tac outputCases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        a \\<noteq> b; b \\<noteq> a'; b \\<sharp> P''; b \\<sharp> Q;\n        y \\<noteq> b; b \\<sharp> P'; a[b] = a'[b];\n        ([(b, y)] \\<bullet> P'') \\<parallel> Q =\n        [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(auto simp add: freeRes.inject)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; x = y;\n        b \\<noteq> a'; b \\<sharp> P''; b \\<sharp> Q; y \\<noteq> b;\n        b \\<sharp> P'; a = a';\n        ([(b, y)] \\<bullet> P'') \\<parallel> Q =\n        [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply hypsubst_thin"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; b \\<noteq> a';\n        b \\<sharp> P''; b \\<sharp> Q; y \\<noteq> b; b \\<sharp> P';\n        ([(b, y)] \\<bullet> P'') \\<parallel> Q =\n        [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q", "apply(drule_tac pi=\"[(b, y)]\" in pt_bij3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; y \\<sharp> P; y \\<sharp> Q; b \\<noteq> a';\n        b \\<sharp> P''; b \\<sharp> Q; y \\<noteq> b; b \\<sharp> P';\n        [(b, y)] \\<bullet> ([(b, y)] \\<bullet> P'') \\<parallel> Q =\n        [(b, y)] \\<bullet> [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P'' \\<parallel> Q", "by simp"], ["proof (state)\nthis:\n  a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>a x P'.\n       \\<lbrakk><\\<nu>x>a{x}.(P' \\<parallel>\n                              Q) \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P' \\<parallel> Q); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P' \\<parallel> Q);\n        <\\<nu>x>a{x}.P' \\<in> summands P; x \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n 2. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n  a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P'' \\<parallel> Q", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n  a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P'' \\<parallel> Q\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "fix a' y Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume \"<\\<nu>y>a'{y}.Q' \\<in> summands Q\""], ["proof (state)\nthis:\n  <\\<nu>y>a'{y}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>y>a'{y}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "hence \"a' \\<noteq> y\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.Q' \\<in> summands Q\n\ngoal (1 subgoal):\n 1. a' \\<noteq> y", "by auto"], ["proof (state)\nthis:\n  a' \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>y>a'{y}.Q' \\<in> summands Q\n  a' \\<noteq> y", "have \"Q \\<longmapsto>a'<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.Q' \\<in> summands Q\n  a' \\<noteq> y\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a'<\\<nu>y> \\<prec> Q'", "using Qhnf"], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.Q' \\<in> summands Q\n  a' \\<noteq> y\n  hnf Q\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a'<\\<nu>y> \\<prec> Q'", "by(simp add: summandTransition)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a'<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto> a'<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume \"y \\<sharp> P\""], ["proof (state)\nthis:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a'<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P", "have PQTrans: \"P \\<parallel> Q \\<longmapsto>a'<\\<nu>y> \\<prec> P \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a'<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "by(rule Par2B)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume ResTrans: \"<\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and \"x \\<sharp> [y].a'{y}.(P \\<parallel> Q')\""], ["proof (state)\nthis:\n  <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> [y].a'{y}.(P \\<parallel> Q')\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with ResTrans \\<open>a' \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  a' \\<noteq> y\n  <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> [y].a'{y}.(P \\<parallel> Q')", "have \"a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P \\<parallel> Q'\""], ["proof (prove)\nusing this:\n  <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  a' \\<noteq> y\n  <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  x \\<sharp> [y].a'{y}.(P \\<parallel> Q')\n\ngoal (1 subgoal):\n 1. a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "apply(case_tac \"x=y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "apply(erule_tac resCasesB)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> y\n 2. \\<lbrakk>a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> a'{y}.(P \\<parallel> Q')\n 3. \\<And>b P'.\n       \\<lbrakk>a' \\<noteq> y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y;\n        a'{y}.(P \\<parallel> Q') \\<longmapsto> b[y] \\<prec> P';\n        b \\<noteq> y; BoundOutputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> b<\\<nu>x> \\<prec> [(x, y)] \\<bullet> P' =\n                         a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 4. \\<And>P'.\n       \\<lbrakk>a' \\<noteq> y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y;\n        a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> a<\\<nu>x> \\<prec> <\\<nu>y>P' =\n                         a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 5. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x \\<sharp> a'{y}.(P \\<parallel> Q')\n 2. \\<And>b P'.\n       \\<lbrakk>a' \\<noteq> y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y;\n        a'{y}.(P \\<parallel> Q') \\<longmapsto> b[y] \\<prec> P';\n        b \\<noteq> y; BoundOutputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> b<\\<nu>x> \\<prec> [(x, y)] \\<bullet> P' =\n                         a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 3. \\<And>P'.\n       \\<lbrakk>a' \\<noteq> y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y;\n        a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> a<\\<nu>x> \\<prec> <\\<nu>y>P' =\n                         a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 4. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "apply(simp add: abs_fresh)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>a' \\<noteq> y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y;\n        a'{y}.(P \\<parallel> Q') \\<longmapsto> b[y] \\<prec> P';\n        b \\<noteq> y; BoundOutputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> b<\\<nu>x> \\<prec> [(x, y)] \\<bullet> P' =\n                         a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 2. \\<And>P'.\n       \\<lbrakk>a' \\<noteq> y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x \\<noteq> y;\n        a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        y \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> a<\\<nu>x> \\<prec> <\\<nu>y>P' =\n                         a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n 3. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     a' \\<noteq> y;\n     <\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     x \\<sharp> [y].a'{y}.(P \\<parallel> Q'); x = y\\<rbrakk>\n    \\<Longrightarrow> a<\\<nu>x> \\<prec> P' =\n                      a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "apply(auto simp add: residual.inject alpha' calc_atm fresh_left abs_fresh elim: outputCases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; x = y\\<rbrakk>\n    \\<Longrightarrow> a = a'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(ind_cases \"<\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>y> \\<prec> P'\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>P a b P'.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') = <\\<nu>b>P;\n        a<\\<nu>y> \\<prec> P' = a<\\<nu>b> \\<prec> P';\n        P \\<longmapsto> a[b] \\<prec> P'; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 3. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(simp add: pi.inject alpha' residual.inject abs_fresh eqvts calc_atm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>P b P'.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        y = b \\<and> a'{y}.(P \\<parallel> Q') = P \\<or>\n        y \\<noteq> b \\<and>\n        (if b = a' then y\n         else if y = a' then b\n              else a'){(if b = y then y\n                        else if y = y then b\n                             else y)}.(([(b, y)] \\<bullet> P) \\<parallel>\n ([(b, y)] \\<bullet> Q')) =\n        P \\<and>\n        b \\<noteq> a' \\<and>\n        b \\<noteq> y \\<and> b \\<sharp> P \\<and> b \\<sharp> Q';\n        y = b \\<and> P' = P' \\<or>\n        y \\<noteq> b \\<and> [(b, y)] \\<bullet> P' = P' \\<and> b \\<sharp> P';\n        P \\<longmapsto> a[b] \\<prec> P'; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 3. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(auto elim: outputCases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(simp add: pi.inject residual.inject alpha' calc_atm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x P' ya.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        y = ya \\<and> a'{y}.(P \\<parallel> Q') = P \\<or>\n        y \\<noteq> ya \\<and>\n        (if ya = a' then y\n         else if y = a' then ya\n              else a'){(if ya = y then y\n                        else if y = y then ya\n                             else y)}.(([(ya, y)] \\<bullet> P) \\<parallel>\n ([(ya, y)] \\<bullet> Q')) =\n        P \\<and>\n        ya \\<noteq> a' \\<and>\n        ya \\<noteq> y \\<and> ya \\<sharp> P \\<and> ya \\<sharp> Q';\n        y = x \\<and> P' = <\\<nu>ya>P' \\<or>\n        y \\<noteq> x \\<and>\n        [(x, y)] \\<bullet> P' = <\\<nu>ya>P' \\<and> x \\<sharp> P';\n        P \\<longmapsto> a<\\<nu>x> \\<prec> P'; ya \\<noteq> a; ya \\<noteq> x;\n        x \\<sharp> P; x \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> a = a'\n 2. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P \\<parallel> Q'", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk><\\<nu>y>a'{y}.(P \\<parallel>\n                            Q') \\<longmapsto> a<\\<nu>y> \\<prec> P';\n     a' \\<noteq> y; x = y\\<rbrakk>\n    \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(ind_cases \"<\\<nu>y>a'{y}.(P \\<parallel> Q') \\<longmapsto> a<\\<nu>y> \\<prec> P'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a b P'.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') = <\\<nu>b>P;\n        a<\\<nu>y> \\<prec> P' = a<\\<nu>b> \\<prec> P';\n        P \\<longmapsto> a[b] \\<prec> P'; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'\n 2. \\<And>P a x P' ya.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        <\\<nu>y>a'{y}.(P \\<parallel> Q') = <\\<nu>ya>P;\n        a<\\<nu>y> \\<prec> P' =\n        a\\<guillemotleft>x\\<guillemotright> \\<prec> <\\<nu>ya>P';\n        P \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        ya \\<sharp> a; ya \\<noteq> x; x \\<sharp> P; x \\<sharp> a\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(auto simp add: pi.inject alpha' residual.inject abs_fresh eqvts calc_atm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a' \\<noteq> y; x = y;\n     a'{y}.(P \\<parallel> Q') \\<longmapsto> a[y] \\<prec> P';\n     a \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> P' = P \\<parallel> Q'\n 2. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        a'{b}.(([(b, y)] \\<bullet> P) \\<parallel>\n               ([(b, y)] \\<bullet>\n                Q')) \\<longmapsto> a[b] \\<prec> [(b, y)] \\<bullet> P';\n        a \\<noteq> b; b \\<noteq> a'; b \\<sharp> P; b \\<sharp> Q';\n        y \\<noteq> b; b \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(auto elim: outputCases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; x = y;\n        a'{b}.(([(b, y)] \\<bullet> P) \\<parallel>\n               ([(b, y)] \\<bullet>\n                Q')) \\<longmapsto> a[b] \\<prec> [(b, y)] \\<bullet> P';\n        a \\<noteq> b; b \\<noteq> a'; b \\<sharp> P; b \\<sharp> Q';\n        y \\<noteq> b; b \\<sharp> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(erule_tac outputCases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; x = y; a \\<noteq> b; b \\<noteq> a';\n        b \\<sharp> P; b \\<sharp> Q'; y \\<noteq> b; b \\<sharp> P';\n        a[b] = a'[b];\n        ([(b, y)] \\<bullet> P) \\<parallel> ([(b, y)] \\<bullet> Q') =\n        [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(auto simp add: freeRes.inject)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; x = y; b \\<noteq> a'; b \\<sharp> P;\n        b \\<sharp> Q'; y \\<noteq> b; b \\<sharp> P'; a = a';\n        ([(b, y)] \\<bullet> P) \\<parallel> ([(b, y)] \\<bullet> Q') =\n        [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'", "apply hypsubst_thin"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; b \\<noteq> a'; b \\<sharp> P; b \\<sharp> Q';\n        y \\<noteq> b; b \\<sharp> P';\n        ([(b, y)] \\<bullet> P) \\<parallel> ([(b, y)] \\<bullet> Q') =\n        [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'", "apply(drule_tac pi=\"[(b, y)]\" in pt_bij3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>a' \\<noteq> y; b \\<noteq> a'; b \\<sharp> P; b \\<sharp> Q';\n        y \\<noteq> b; b \\<sharp> P';\n        [(b, y)] \\<bullet>\n        ([(b, y)] \\<bullet> P) \\<parallel> ([(b, y)] \\<bullet> Q') =\n        [(b, y)] \\<bullet> [(b, y)] \\<bullet> P'\\<rbrakk>\n       \\<Longrightarrow> P' = P \\<parallel> Q'", "by simp"], ["proof (state)\nthis:\n  a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>a x Q'.\n       \\<lbrakk><\\<nu>x>a{x}.(P \\<parallel>\n                              Q') \\<longmapsto> a<\\<nu>x> \\<prec> P';\n        x \\<sharp> [x].a{x}.(P \\<parallel> Q'); x \\<sharp> P; x \\<sharp> Q;\n        R = <\\<nu>x>a{x}.(P \\<parallel> Q');\n        <\\<nu>x>a{x}.Q' \\<in> summands Q; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with PQTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n  a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P \\<parallel> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n  a<\\<nu>x> \\<prec> P' = a'<\\<nu>y> \\<prec> P \\<parallel> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by simp"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__ \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>xa__> \\<prec> P'a__", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?Rb2 \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?Rb2 \\<in> expandSet P Q; ?xb2 \\<sharp> ?Rb2; ?xb2 \\<sharp> P;\n   ?xb2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?Rb2 \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?Rb2 \\<in> expandSet P Q; ?xb2 \\<sharp> ?Rb2; ?xb2 \\<sharp> P;\n   ?xb2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "assume \"R \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with Exp"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "obtain R where \"R \\<in> expandSet P Q\" and \"R \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        \\<lbrakk>R \\<in> expandSet P Q;\n         R \\<longmapsto> a<\\<nu>x> \\<prec> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac expandAction')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>R.\n                \\<lbrakk>R \\<in> expandSet P Q;\n                 R \\<longmapsto> a<\\<nu>x> \\<prec> P'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     R \\<longmapsto> a<\\<nu>x> \\<prec> P'\\<rbrakk>\n    \\<Longrightarrow> R \\<longmapsto> ?Rs4\n 2. \\<lbrakk>\\<And>R.\n                \\<lbrakk>R \\<in> expandSet P Q;\n                 R \\<longmapsto> a<\\<nu>x> \\<prec> P'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     R \\<longmapsto> a<\\<nu>x> \\<prec> P';\n     \\<exists>P\\<in>expandSet P Q. P \\<longmapsto> ?Rs4\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "obtain y::name where \"y \\<sharp> P\" and \"y \\<sharp> Q\" and \"y \\<sharp> R\" and \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<sharp> P; y \\<sharp> Q; y \\<sharp> R;\n         y \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(generate_fresh \"name\") auto"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with \\<open>y \\<sharp> P'\\<close> \\<open>R \\<longmapsto>a<\\<nu>x> \\<prec> P'\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<sharp> P'", "have \"R \\<longmapsto>a<\\<nu>y> \\<prec> ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?Rb2 \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?Rb2 \\<in> expandSet P Q; ?xb2 \\<sharp> ?Rb2; ?xb2 \\<sharp> P;\n   ?xb2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<sharp> P'\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "have \"P \\<parallel> Q \\<longmapsto>a<\\<nu>y> \\<prec> ([(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?Rb2 \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2;\n   ?Rb2 \\<in> expandSet P Q; ?xb2 \\<sharp> ?Rb2; ?xb2 \\<sharp> P;\n   ?xb2 \\<sharp> Q\\<rbrakk>\n  \\<Longrightarrow> P \\<parallel> Q \\<longmapsto> a<\\<nu>?xb2> \\<prec> ?P'b2\n  R \\<in> expandSet P Q\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  y \\<sharp> P\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<sharp> P'\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by auto"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. Ra__ \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n    P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "thus \"P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "using \\<open>y \\<sharp> P'\\<close>"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>(?R, expandSet ?P ?Q) \\<in> sumComposeSet; hnf ?P; hnf ?Q;\n   ?a \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?P \\<parallel>\n                    ?Q \\<longmapsto> ?a<\\<nu>?x> \\<prec> ?P' =\n                    ?R \\<longmapsto> ?a<\\<nu>?x> \\<prec> ?P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "obtain y where yineqx: \"a \\<noteq> y\" and yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>a \\<noteq> y; y \\<sharp> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force intro: name_exists_fresh[of \"(a, P')\"] simp add: fresh_prod)"], ["proof (state)\nthis:\n  a \\<noteq> y\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "from Exp Phnf Qhnf yineqx"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  a \\<noteq> y", "have \"(P \\<parallel> Q \\<longmapsto>a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P') = (R \\<longmapsto>a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  a \\<noteq> y\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P' =\n    R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by(rule Goal)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P' =\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P' =\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "with yFreshP'"], ["proof (chain)\npicking this:\n  y \\<sharp> P'\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P' =\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "have \"x \\<sharp> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P' =\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. x \\<sharp> [(x, y)] \\<bullet> P'", "by(simp add: name_fresh_left name_calc)"], ["proof (state)\nthis:\n  x \\<sharp> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P' =\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  x \\<sharp> [(x, y)] \\<bullet> P'", "show \"(P \\<parallel> Q \\<longmapsto>a<\\<nu>x> \\<prec> P') = (R \\<longmapsto>a<\\<nu>x> \\<prec> P')\""], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P' =\n  R \\<longmapsto> a<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  x \\<sharp> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n    R \\<longmapsto> a<\\<nu>x> \\<prec> P'", "by(simp add: alphaBoundResidual name_swap)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> a<\\<nu>x> \\<prec> P' =\n  R \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandLeft:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   R   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes Exp: \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n  and     Id: \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<parallel> Q \\<leadsto>[Rel] R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<leadsto>[Rel] R", "proof(induct rule: simCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> P \\<parallel> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Bound a x R')"], ["proof (state)\nthis:\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n  x \\<sharp> P \\<parallel> Q\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> P \\<parallel> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"R \\<longmapsto>a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> P \\<parallel> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "with Exp Phnf Qhnf"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'", "have \"P \\<parallel> Q \\<longmapsto>a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'", "by(cases a, auto simp add: expandTrans)"], ["proof (state)\nthis:\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> P \\<parallel> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> P \\<parallel> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "from Id"], ["proof (chain)\npicking this:\n  Id \\<subseteq> Rel", "have \"derivative R' R' a x Rel\""], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. derivative R' R' a x Rel", "by(cases a, auto simp add: derivative_def)"], ["proof (state)\nthis:\n  derivative R' R' a x Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> P \\<parallel> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n  derivative R' R' a x Rel", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n  derivative R' R' a x Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel>\n       Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<and>\n       derivative P' R' a x Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel>\n     Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<and>\n     derivative P' R' a x Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Free \\<alpha> R')"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"R \\<longmapsto>\\<alpha> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<alpha> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "with Exp Phnf Qhnf"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  R \\<longmapsto> \\<alpha> \\<prec> R'", "have \"P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> R'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'", "by(cases \\<alpha>, auto simp add: expandTrans)"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "from Id"], ["proof (chain)\npicking this:\n  Id \\<subseteq> Rel", "have \"(R', R') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. (R', R') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (R', R') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'\n  (R', R') \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'\n  (R', R') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (P', R') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (P', R') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandRight:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   R   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes Exp: \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     Phnf: \"hnf P\"\n  and     Qhnf: \"hnf Q\"\n  and     Id: \"Id \\<subseteq> Rel\"\n\n  shows \"R \\<leadsto>[Rel] P \\<parallel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<leadsto>[Rel] P \\<parallel> Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>P \\<parallel>\n                Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "case(Bound a x R')"], ["proof (state)\nthis:\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n  x \\<sharp> R\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>P \\<parallel>\n                Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"P \\<parallel> Q \\<longmapsto>a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>P \\<parallel>\n                Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with Exp Phnf Qhnf"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'", "have \"R \\<longmapsto>a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  P \\<parallel>\n  Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'", "by(cases a, auto simp add: expandTrans)"], ["proof (state)\nthis:\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>P \\<parallel>\n                Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>P \\<parallel>\n                Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from Id"], ["proof (chain)\npicking this:\n  Id \\<subseteq> Rel", "have \"derivative R' R' a x Rel\""], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. derivative R' R' a x Rel", "by(cases a, auto simp add: derivative_def)"], ["proof (state)\nthis:\n  derivative R' R' a x Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>P \\<parallel>\n                Q \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> Q';\n        y \\<sharp> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            R \\<longmapsto> a\\<guillemotleft>y\\<guillemotright> \\<prec> P' \\<and>\n                            derivative P' Q' a y Rel\n 2. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n  derivative R' R' a x Rel", "show ?case"], ["proof (prove)\nusing this:\n  R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> R'\n  derivative R' R' a x Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<and>\n       derivative P' R' a x Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     R \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<and>\n     derivative P' R' a x Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "case(Free \\<alpha> R')"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with Exp Phnf Qhnf"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'", "have \"R \\<longmapsto>\\<alpha> \\<prec> R'\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n  P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<alpha> \\<prec> R'", "by(cases \\<alpha>, auto simp add: expandTrans)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from Id"], ["proof (chain)\npicking this:\n  Id \\<subseteq> Rel", "have \"(R', R') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. (R', R') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (R', R') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       P \\<parallel> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n  (R', R') \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n  (R', R') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. R \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expandSC: \n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  \n  assumes \"(R, expandSet P Q) \\<in> sumComposeSet\"\n  and     \"hnf P\"\n  and     \"hnf Q\"\n\n  shows \"P \\<parallel> Q \\<sim> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<sim> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<sim> R", "let ?X = \"{(P \\<parallel> Q, R) | P Q R. (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q} \\<union> {(R, P \\<parallel> Q) | P Q R. (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<sim> R", "from assms"], ["proof (chain)\npicking this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q", "have \"(P \\<parallel> Q, R) \\<in> ?X\""], ["proof (prove)\nusing this:\n  (R, expandSet P Q) \\<in> sumComposeSet\n  hnf P\n  hnf Q\n\ngoal (1 subgoal):\n 1. (P \\<parallel> Q, R)\n    \\<in> {(P \\<parallel> Q, R) |P Q R.\n           (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n           hnf P \\<and> hnf Q} \\<union>\n          {(R, P \\<parallel> Q) |P Q R.\n           (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}", "by auto"], ["proof (state)\nthis:\n  (P \\<parallel> Q, R)\n  \\<in> {(P \\<parallel> Q, R) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n         hnf P \\<and> hnf Q} \\<union>\n        {(R, P \\<parallel> Q) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<sim> R", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P \\<parallel> Q, R)\n  \\<in> {(P \\<parallel> Q, R) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n         hnf P \\<and> hnf Q} \\<union>\n        {(R, P \\<parallel> Q) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<sim> R", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<Longrightarrow>\n       R \\<leadsto>[({(P \\<parallel> Q, R) |P Q R.\n                      (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                      hnf P \\<and> hnf Q} \\<union>\n                     {(R, P \\<parallel> Q) |P Q R.\n                      (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                      hnf P \\<and> hnf Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q}", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q)\n  \\<in> {(P \\<parallel> Q, R) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n         hnf P \\<and> hnf Q} \\<union>\n        {(R, P \\<parallel> Q) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<Longrightarrow>\n       R \\<leadsto>[({(P \\<parallel> Q, R) |P Q R.\n                      (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                      hnf P \\<and> hnf Q} \\<union>\n                     {(R, P \\<parallel> Q) |P Q R.\n                      (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                      hnf P \\<and> hnf Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(P \\<parallel> Q, R) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n         hnf P \\<and> hnf Q} \\<union>\n        {(R, P \\<parallel> Q) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[({(P \\<parallel> Q, R) |P Q R.\n                   (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                   hnf P \\<and> hnf Q} \\<union>\n                  {(R, P \\<parallel> Q) |P Q R.\n                   (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                   hnf P \\<and> hnf Q} \\<union>\n                  bisim)] Q", "by(blast intro: reflexive expandLeft expandRight)"], ["proof (state)\nthis:\n  P \\<leadsto>[({(P \\<parallel> Q, R) |P Q R.\n                 (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                 hnf P \\<and> hnf Q} \\<union>\n                {(R, P \\<parallel> Q) |P Q R.\n                 (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n                 hnf P \\<and> hnf Q} \\<union>\n                bisim)] Q\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q}", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q)\n  \\<in> {(P \\<parallel> Q, R) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n         hnf P \\<and> hnf Q} \\<union>\n        {(R, P \\<parallel> Q) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(P \\<parallel> Q, R) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q} \\<union>\n             {(R, P \\<parallel> Q) |P Q R.\n              (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n              hnf P \\<and> hnf Q}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(P \\<parallel> Q, R) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n         hnf P \\<and> hnf Q} \\<union>\n        {(R, P \\<parallel> Q) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\n\ngoal (1 subgoal):\n 1. (Q, P)\n    \\<in> {(P \\<parallel> Q, R) |P Q R.\n           (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n           hnf P \\<and> hnf Q} \\<union>\n          {(R, P \\<parallel> Q) |P Q R.\n           (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}", "by auto"], ["proof (state)\nthis:\n  (Q, P)\n  \\<in> {(P \\<parallel> Q, R) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and>\n         hnf P \\<and> hnf Q} \\<union>\n        {(R, P \\<parallel> Q) |P Q R.\n         (R, expandSet P Q) \\<in> sumComposeSet \\<and> hnf P \\<and> hnf Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> Q \\<sim> R\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}