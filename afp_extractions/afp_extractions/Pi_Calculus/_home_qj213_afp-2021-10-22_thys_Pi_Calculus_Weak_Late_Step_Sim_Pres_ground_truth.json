{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Weak_Late_Step_Sim_Pres.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma tauPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"\\<tau>.(P) \\<leadsto><Rel> \\<tau>.(Q)\"", "lemma inputPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   x    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"\\<forall>y. (P[x::=y], Q[x::=y]) \\<in> Rel\"\n  and     Eqvt: \"eqvt Rel\"\n\n  shows \"a<x>.P \\<leadsto><Rel> a<x>.Q\"", "lemma outputPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   b    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"a{b}.P \\<leadsto><Rel> a{b}.Q\"", "lemma matchPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   b    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"[a\\<frown>b]P \\<leadsto><Rel'> [a\\<frown>b]Q\"", "lemma mismatchPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   b    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"[a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q\"", "lemma sumCompose:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  and   T :: pi\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     RSimT: \"R \\<leadsto><Rel> T\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> T\"", "lemma sumPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     Id: \"Id \\<subseteq> Rel\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> R\"", "lemma parPres:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  \n  assumes PSimQ:    \"P \\<leadsto><Rel> Q\"\n  and     PRelQ:    \"(P, Q) \\<in> Rel\"\n  and     Par:      \"\\<And>P Q R. (P, Q) \\<in> Rel \\<Longrightarrow> (P \\<parallel> R, Q \\<parallel> R) \\<in> Rel'\"\n  and     Res:      \"\\<And>P Q a. (P, Q) \\<in> Rel' \\<Longrightarrow> (<\\<nu>a>P, <\\<nu>a>Q) \\<in> Rel'\"\n  and     EqvtRel:  \"eqvt Rel\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"P \\<parallel> R \\<leadsto><Rel'> Q \\<parallel> R\"", "lemma resPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   x    :: name\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     ResRel: \"\\<And>(P::pi) (Q::pi) (x::name). (P, Q) \\<in> Rel \\<Longrightarrow> (<\\<nu>x>P, <\\<nu>x>Q) \\<in> Rel'\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel: \"eqvt Rel\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"<\\<nu>x>P \\<leadsto><Rel'> <\\<nu>x>Q\"", "lemma bangPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n \n  assumes PSimQ:    \"P \\<leadsto><Rel'> Q\"\n  and     PRelQ:    \"(P, Q) \\<in> Rel\"\n  and     Sim:      \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto><Rel'> Q\"\n  and     RelRel':  \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> (P, Q) \\<in> Rel'\"\n  and     eqvtRel': \"eqvt Rel'\"\n\n  shows \"!P \\<leadsto><bangRel Rel'> !Q\""], "translations": [["", "lemma tauPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"\\<tau>.(P) \\<leadsto><Rel> \\<tau>.(Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<leadsto><Rel> \\<tau>.Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<tau>.P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Bound Q' a y)"], ["proof (state)\nthis:\n  \\<tau>.Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> \\<tau>.P\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<tau>.P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"\\<tau>.(Q) \\<longmapsto>a<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  \\<tau>.Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<tau>.P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "hence False"], ["proof (prove)\nusing this:\n  \\<tau>.Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            \\<tau>.P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<tau>.P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<tau>.P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Input Q' a x)"], ["proof (state)\nthis:\n  \\<tau>.Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> \\<tau>.P\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"\\<tau>.(Q) \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.Q \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  \\<tau>.Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "hence False"], ["proof (prove)\nusing this:\n  \\<tau>.Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<tau>.Q \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> \\<tau>.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           \\<tau>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"\\<tau>.(Q) \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "using PRelQ"], ["proof (prove)\nusing this:\n  \\<tau>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "proof(induct rule: tauCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = \\<tau>; Q = Q'; (P, Q') \\<in> Rel;\n     \\<tau>.Q' \\<longmapsto> \\<tau> \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "have \"\\<tau>.(P) \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P", "by(rule Weak_Late_Step_Semantics.Tau)"], ["proof (state)\nthis:\n  \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = \\<tau>; Q = Q'; (P, Q') \\<in> Rel;\n     \\<tau>.Q' \\<longmapsto> \\<tau> \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = \\<tau>; Q = Q'; (P, Q') \\<in> Rel;\n     \\<tau>.Q' \\<longmapsto> \\<tau> \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "assume \"(P, Q') \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = \\<tau>; Q = Q'; (P, Q') \\<in> Rel;\n     \\<tau>.Q' \\<longmapsto> \\<tau> \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P\n  (P, Q') \\<in> Rel", "show \"\\<exists>P'. \\<tau>.(P) \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P\n  (P, Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     \\<tau>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inputPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   x    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"\\<forall>y. (P[x::=y], Q[x::=y]) \\<in> Rel\"\n  and     Eqvt: \"eqvt Rel\"\n\n  shows \"a<x>.P \\<leadsto><Rel> a<x>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<leadsto><Rel> a<x>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<leadsto><Rel> a<x>.Q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<leadsto><Rel> a<x>.Q", "using Eqvt"], ["proof (prove)\nusing this:\n  eqvt Rel\n\ngoal (1 subgoal):\n 1. a<x>.P \\<leadsto><Rel> a<x>.Q", "proof(induct rule: simCasesCont[of _ \"(P, a, x, Q)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Bound Q' b y)"], ["proof (state)\nthis:\n  y \\<sharp> (P, a, x, Q)\n  a<x>.Q \\<longmapsto> b<\\<nu>y> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"a<x>.Q \\<longmapsto>b<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.Q \\<longmapsto> b<\\<nu>y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> b<\\<nu>y> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "hence False"], ["proof (prove)\nusing this:\n  a<x>.Q \\<longmapsto> b<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a<x>.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a<x>.P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a<x>.P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Input Q' b y)"], ["proof (state)\nthis:\n  y \\<sharp> (P, a, x, Q)\n  a<x>.Q \\<longmapsto> b<y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"y \\<sharp> (P, a, x, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> (P, a, x, Q)", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> (P, a, x, Q)\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "hence yFreshP: \"(y::name) \\<sharp> P\" and yineqx: \"y \\<noteq> x\" and \"y \\<noteq> a\" and \"y \\<sharp> Q\""], ["proof (prove)\nusing this:\n  y \\<sharp> (P, a, x, Q)\n\ngoal (1 subgoal):\n 1. (y \\<sharp> P &&& y \\<noteq> x) &&& y \\<noteq> a &&& y \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  y \\<sharp> P\n  y \\<noteq> x\n  y \\<noteq> a\n  y \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"a<x>.Q \\<longmapsto>b<y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.Q \\<longmapsto> b<y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> b<y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa xa.\n       \\<lbrakk>xa \\<sharp> (P, a, x, Q);\n        a<x>.Q \\<longmapsto> aa<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  a<x>.Q \\<longmapsto> b<y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n             (P', Q'[y::=u]) \\<in> Rel", "using \\<open>y \\<noteq> a\\<close> \\<open>y \\<noteq> x\\<close> \\<open>y \\<sharp> Q\\<close>"], ["proof (prove)\nusing this:\n  a<x>.Q \\<longmapsto> b<y> \\<prec> Q'\n  y \\<noteq> a\n  y \\<noteq> x\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n             (P', Q'[y::=u]) \\<in> Rel", "proof(induct rule: inputCases, auto simp add: subject.inject)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>b = a; Q' = [(x, y)] \\<bullet> Q;\n     a<x>.Q \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> Q; y \\<noteq> a;\n     y \\<noteq> x; y \\<sharp> Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n                               (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "have \"\\<forall>u. \\<exists>P'. a<x>.P \\<Longrightarrow>\\<^sub>lu in ([(x, y)] \\<bullet> P)\\<rightarrow>a<y> \\<prec> P' \\<and> (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n         P\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n         P\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n         P\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "have \"a<x>.P \\<Longrightarrow>\\<^sub>lu in ([(x, y)] \\<bullet> P)\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\" (is \"?goal\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "from yFreshP"], ["proof (chain)\npicking this:\n  y \\<sharp> P", "have \"a<x>.P = a<y>.([(x, y)] \\<bullet> P)\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. a<x>.P = a<y>.([(x, y)] \\<bullet> P)", "by(rule Agent.alphaInput)"], ["proof (state)\nthis:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "moreover"], ["proof (state)\nthis:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n\ngoal (1 subgoal):\n 1. a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "have \"a<y>.([(x, y)] \\<bullet> P) \\<Longrightarrow>\\<^sub>lu in ([(x, y)] \\<bullet> P)\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<y>.([(x, y)] \\<bullet>\n          P) \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n     P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "by(rule Weak_Late_Step_Semantics.Input)"], ["proof (state)\nthis:\n  a<y>.([(x, y)] \\<bullet>\n        P) \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\n\ngoal (1 subgoal):\n 1. a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n  a<y>.([(x, y)] \\<bullet>\n        P) \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "show ?goal"], ["proof (prove)\nusing this:\n  a<x>.P = a<y>.([(x, y)] \\<bullet> P)\n  a<y>.([(x, y)] \\<bullet>\n        P) \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\n\ngoal (1 subgoal):\n 1. a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n   P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]", "by(simp add: name_swap)"], ["proof (state)\nthis:\n  a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n         P\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n         P\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "have \"(([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "from PRelQ"], ["proof (chain)\npicking this:\n  \\<forall>y. (P[x::=y], Q[x::=y]) \\<in> Rel", "have \"(P[x::=u], Q[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>y. (P[x::=y], Q[x::=y]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P[x::=u], Q[x::=u]) \\<in> Rel", "by auto"], ["proof (state)\nthis:\n  (P[x::=u], Q[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "with \\<open>y \\<sharp> P\\<close> \\<open>y \\<sharp> Q\\<close>"], ["proof (chain)\npicking this:\n  y \\<sharp> P\n  y \\<sharp> Q\n  (P[x::=u], Q[x::=u]) \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<sharp> P\n  y \\<sharp> Q\n  (P[x::=u], Q[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "by(simp add: renaming)"], ["proof (state)\nthis:\n  (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n         P\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\n  (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "show \"\\<exists>P'. a<x>.P \\<Longrightarrow>\\<^sub>lu in ([(x, y)] \\<bullet> P)\\<rightarrow>a<y> \\<prec> P' \\<and> (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n P\\<rightarrow>a<y> \\<prec> ([(x, y)] \\<bullet> P)[y::=u]\n  (([(x, y)] \\<bullet> P)[y::=u], ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n      P\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n    P\\<rightarrow>a<y> \\<prec> P' \\<and>\n     (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n       P\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b = a; Q' = [(x, y)] \\<bullet> Q;\n     a<x>.Q \\<longmapsto> a<y> \\<prec> [(x, y)] \\<bullet> Q; y \\<noteq> a;\n     y \\<noteq> x; y \\<sharp> Q\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n                               (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "thus \"\\<exists>P''. \\<forall>u. \\<exists>P'. a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and> (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        a<x>.P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n       P\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n             (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q)[y::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           a<x>.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n           (P', Q'[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"a<x>.Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "hence False"], ["proof (prove)\nusing this:\n  a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a<x>.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a<x>.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a<x>.P \\<leadsto><Rel> a<x>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma outputPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   b    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"a{b}.P \\<leadsto><Rel> a{b}.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<leadsto><Rel> a{b}.Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a{b}.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Bound Q' c x)"], ["proof (state)\nthis:\n  a{b}.Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n  x \\<sharp> a{b}.P\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a{b}.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"a{b}.Q \\<longmapsto>c<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a{b}.Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a{b}.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "hence False"], ["proof (prove)\nusing this:\n  a{b}.Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            a{b}.P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a{b}.P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a{b}.P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Input Q' c x)"], ["proof (state)\nthis:\n  a{b}.Q \\<longmapsto> c<x> \\<prec> Q'\n  x \\<sharp> a{b}.P\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"a{b}.Q \\<longmapsto>c<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.Q \\<longmapsto> c<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a{b}.Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "hence False"], ["proof (prove)\nusing this:\n  a{b}.Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>a{b}.Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> a{b}.P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           a{b}.P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"a{b}.Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "using PRelQ"], ["proof (prove)\nusing this:\n  a{b}.Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "proof(induct rule: outputCases, auto simp add: pi.inject residual.inject)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = a[b]; Q = Q'; (P, Q') \\<in> Rel;\n     a{b}.Q' \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "have \"a{b}.P \\<Longrightarrow>\\<^sub>la[b] \\<prec> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P", "by(rule Weak_Late_Step_Semantics.Output)"], ["proof (state)\nthis:\n  a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = a[b]; Q = Q'; (P, Q') \\<in> Rel;\n     a{b}.Q' \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = a[b]; Q = Q'; (P, Q') \\<in> Rel;\n     a{b}.Q' \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "assume \"(P, Q') \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<alpha> = a[b]; Q = Q'; (P, Q') \\<in> Rel;\n     a{b}.Q' \\<longmapsto> a[b] \\<prec> Q'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P\n  (P, Q') \\<in> Rel", "show \"\\<exists>P'. a{b}.P \\<Longrightarrow>\\<^sub>la[b] \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P\n  (P, Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a{b}.P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     a{b}.P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matchPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   b    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"[a\\<frown>b]P \\<leadsto><Rel'> [a\\<frown>b]Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<leadsto><Rel'> [a\\<frown>b]Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound Q' c x)"], ["proof (state)\nthis:\n  [a\\<frown>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n  x \\<sharp> [a\\<frown>b]P\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> [a\\<frown>b]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> [a\\<frown>b]P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> [a\\<frown>b]P\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"(x::name) \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> [a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"[a\\<frown>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<frown>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  [a\\<frown>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  [a\\<frown>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: matchCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "case cMatch"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n  a = b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "have \"Q \\<longmapsto>c<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "with PSimQ xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lc<\\<nu>x> \\<prec> P'\"\n                                   and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'", "have \"[a\\<frown>a]P \\<Longrightarrow>\\<^sub>lc<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Match)"], ["proof (state)\nthis:\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "from P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Input Q' c x)"], ["proof (state)\nthis:\n  [a\\<frown>b]Q \\<longmapsto> c<x> \\<prec> Q'\n  x \\<sharp> [a\\<frown>b]P\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> [a\\<frown>b]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> [a\\<frown>b]P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> [a\\<frown>b]P\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"(x::name) \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> [a\\<frown>b]P\n\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"[a\\<frown>b]Q \\<longmapsto>c<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<frown>b]Q \\<longmapsto> c<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  [a\\<frown>b]Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<frown>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<frown>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  [a\\<frown>b]Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "proof(induct rule: matchCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "case cMatch"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<x> \\<prec> Q'\n  a = b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "have \"Q \\<longmapsto> c<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> c<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "with PSimQ xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<x> \\<prec> Q'", "obtain P'' where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\" and P'RelQ': \"(P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P';\n         (P', Q'[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'", "have \"[a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Match)"], ["proof (state)\nthis:\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "with P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'", "show \"\\<exists>P'. [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           [a\\<frown>a]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           [a\\<frown>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"[a\\<frown>b]Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  [a\\<frown>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: matchCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "case cMatch"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  a = b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "have \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\" and PRel: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "have \"[a\\<frown>a]P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Match)"], ["proof (state)\nthis:\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a = b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "with PRel RelRel'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<frown>a]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<frown>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mismatchPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   a    :: name\n  and   b    :: name\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"[a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "proof(cases \"a=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q\n 2. a \\<noteq> b \\<Longrightarrow>\n    [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "assume \"a=b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q\n 2. a \\<noteq> b \\<Longrightarrow>\n    [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "by(auto simp add: weakStepSimDef)"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "assume aineqb: \"a\\<noteq>b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound Q' c x)"], ["proof (state)\nthis:\n  [a\\<noteq>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n  x \\<sharp> [a\\<noteq>b]P\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> [a\\<noteq>b]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> [a\\<noteq>b]P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> [a\\<noteq>b]P\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"(x::name) \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> [a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"[a\\<noteq>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  [a\\<noteq>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<\\<nu>x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l aa<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  [a\\<noteq>b]Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: mismatchCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "case cMismatch"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "have \"Q \\<longmapsto>c<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "with PSimQ xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lc<\\<nu>x> \\<prec> P'\"\n                                     and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "from PTrans aineqb"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  a \\<noteq> b", "have \"[a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lc<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Mismatch)"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "from P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<\\<nu>x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l c<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Input Q' c x)"], ["proof (state)\nthis:\n  [a\\<noteq>b]Q \\<longmapsto> c<x> \\<prec> Q'\n  x \\<sharp> [a\\<noteq>b]P\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> [a\\<noteq>b]P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> [a\\<noteq>b]P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> [a\\<noteq>b]P\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"(x::name) \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> [a\\<noteq>b]P\n\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"[a\\<noteq>b]Q \\<longmapsto>c<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]Q \\<longmapsto> c<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  [a\\<noteq>b]Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' aa x.\n       \\<lbrakk>[a\\<noteq>b]Q \\<longmapsto> aa<x> \\<prec> Q';\n        x \\<sharp> [a\\<noteq>b]P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  [a\\<noteq>b]Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "proof(induct rule: mismatchCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "case cMismatch"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<x> \\<prec> Q'\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "have \"Q \\<longmapsto> c<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> c<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "with PSimQ xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<x> \\<prec> Q'", "obtain P'' where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  x \\<sharp> P\n  Q \\<longmapsto> c<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\" and P'RelQ': \"(P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P';\n         (P', Q'[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from PTrans aineqb"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n  a \\<noteq> b", "have \"[a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Mismatch)"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "with P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'", "show \"\\<exists>P'. [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> c<x> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P''.\n                         \\<forall>u.\n                            \\<exists>P'.\n                               [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n                               (P', Q'[x::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>c<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"[a\\<noteq>b]Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  [a\\<noteq>b]Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: mismatchCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "case cMismatch"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "have \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\" and PRel: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "from PTrans \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  a \\<noteq> b", "have \"[a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Mismatch)"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q'; a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel'", "with PRel RelRel'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n  [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     [a\\<noteq>b]P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<leadsto><Rel'> [a\\<noteq>b]Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sumCompose:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  and   T :: pi\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     RSimT: \"R \\<leadsto><Rel> T\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> T", "proof(induct rule: simCases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<oplus>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound Q' a x)"], ["proof (state)\nthis:\n  Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P \\<oplus> R\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<oplus>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> P \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<oplus> R", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P \\<oplus> R\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<oplus>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"(x::name) \\<sharp> P\" and xFreshR: \"x \\<sharp> R\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<oplus> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> R", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> R\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<oplus>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"Q \\<oplus> T \\<longmapsto>a<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<oplus>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<oplus> T \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: sumCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "case cSum1"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "have \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "with xFreshP PSimQ"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'", "have \"P \\<oplus> R \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Sum1)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "from P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "case cSum2"], ["proof (state)\nthis:\n  T \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "have \"T \\<longmapsto>a<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  T \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "with xFreshR RSimT"], ["proof (chain)\npicking this:\n  x \\<sharp> R\n  R \\<leadsto><Rel> T\n  T \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> R'\" and R'RelQ': \"(R', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  x \\<sharp> R\n  R \\<leadsto><Rel> T\n  T \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R';\n         (R', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n  (R', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'", "have \"P \\<oplus> R \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> R'\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'", "by(rule Weak_Late_Step_Semantics.Sum2)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "from R'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (R', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(R', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (R', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (R', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (R', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n  (R', Q') \\<in> Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n  (R', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Input Q' a x)"], ["proof (state)\nthis:\n  Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P \\<oplus> R\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> P \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<oplus> R", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P \\<oplus> R\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"(x::name) \\<sharp> P\" and xFreshR: \"x \\<sharp> R\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<oplus> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> R", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> R\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"Q \\<oplus> T \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P \\<oplus> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<oplus>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<oplus> T \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "proof(induct rule: sumCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'\n 2. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "case cSum1"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'\n 2. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "have \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'\n 2. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "with xFreshP PSimQ"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'", "obtain P'' where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'\n 2. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\"\n                          and P'RelQ': \"(P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'", "have \"P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus>\n    R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Sum1)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "with P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'", "show \"\\<exists>P'. P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus>\n       R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus>\n     R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<oplus>\n        R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'\n 2. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<oplus>\n        R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<oplus>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "case cSum2"], ["proof (state)\nthis:\n  T \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "have \"T \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  T \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "with xFreshR RSimT"], ["proof (chain)\npicking this:\n  x \\<sharp> R\n  R \\<leadsto><Rel> T\n  T \\<longmapsto> a<x> \\<prec> Q'", "obtain R'' where L1: \"\\<forall>u. \\<exists>R'. R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and> (R', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  x \\<sharp> R\n  R \\<leadsto><Rel> T\n  T \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R''.\n        \\<forall>u.\n           \\<exists>R'.\n              R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n              (R', Q'[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>R'.\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n        (R', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>R'.\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n        (R', Q'[x::=u]) \\<in> Rel", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\"\n                          and R'RelQ': \"(R', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>R'.\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n        (R', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R';\n         (R', Q'[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\n  (R', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'", "have \"P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus>\n    R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'", "by(rule Weak_Late_Step_Semantics.Sum2)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<oplus>\n          R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "with R'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (R', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'", "show  \"\\<exists>P'. P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (R', Q'[x::=u]) \\<in> Rel\n  Rel \\<subseteq> Rel'\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus>\n       R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus>\n     R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<oplus>\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<oplus>\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<oplus>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<oplus>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<oplus>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"Q \\<oplus> T \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<oplus> T \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: sumCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "case cSum1"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "have \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\" and PRel: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "have \"P \\<oplus> R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Sum1)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'\n 2. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "with RelRel' PRel"], ["proof (chain)\npicking this:\n  Rel \\<subseteq> Rel'\n  (P', Q') \\<in> Rel\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  Rel \\<subseteq> Rel'\n  (P', Q') \\<in> Rel\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "case cSum2"], ["proof (state)\nthis:\n  T \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "have \"T \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  T \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "with RSimT"], ["proof (chain)\npicking this:\n  R \\<leadsto><Rel> T\n  T \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> R'\" and RRel: \"(R', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  R \\<leadsto><Rel> T\n  T \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R';\n         (R', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n  (R', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'", "have \"P \\<oplus> R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> R'\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'", "by(rule Weak_Late_Step_Semantics.Sum2)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. T \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "with RelRel' RRel"], ["proof (chain)\npicking this:\n  Rel \\<subseteq> Rel'\n  (R', Q') \\<in> Rel\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'", "show ?case"], ["proof (prove)\nusing this:\n  Rel \\<subseteq> Rel'\n  (R', Q') \\<in> Rel\n  P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<oplus> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sumPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     Id: \"Id \\<subseteq> Rel\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n\n  shows \"P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> R", "from Id"], ["proof (chain)\npicking this:\n  Id \\<subseteq> Rel", "have Refl: \"R \\<leadsto><Rel> R\""], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. R \\<leadsto><Rel> R", "by(rule reflexive)"], ["proof (state)\nthis:\n  R \\<leadsto><Rel> R\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> R", "from PSimQ Refl RelRel'"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  R \\<leadsto><Rel> R\n  Rel \\<subseteq> Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  R \\<leadsto><Rel> R\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> R", "by(rule sumCompose)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<leadsto><Rel'> Q \\<oplus> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma parPres:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  \n  assumes PSimQ:    \"P \\<leadsto><Rel> Q\"\n  and     PRelQ:    \"(P, Q) \\<in> Rel\"\n  and     Par:      \"\\<And>P Q R. (P, Q) \\<in> Rel \\<Longrightarrow> (P \\<parallel> R, Q \\<parallel> R) \\<in> Rel'\"\n  and     Res:      \"\\<And>P Q a. (P, Q) \\<in> Rel' \\<Longrightarrow> (<\\<nu>a>P, <\\<nu>a>Q) \\<in> Rel'\"\n  and     EqvtRel:  \"eqvt Rel\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"P \\<parallel> R \\<leadsto><Rel'> Q \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<leadsto><Rel'> Q \\<parallel> R", "using EqvtRel'"], ["proof (prove)\nusing this:\n  eqvt Rel'\n\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<leadsto><Rel'> Q \\<parallel> R", "proof(induct rule: simCasesCont[where C=\"(P, Q, R)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound Q' a x)"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q, R)\n  Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> (P, Q, R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, Q, R)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q, R)\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"x \\<sharp> P\" and xFreshR: \"x \\<sharp> R\" and \"x \\<sharp> Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, Q, R)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> R &&& x \\<sharp> Q", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> R\n  x \\<sharp> Q\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from \\<open>Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<close> \\<open>x \\<sharp> Q\\<close> \\<open>x \\<sharp> R\\<close>"], ["proof (chain)\npicking this:\n  Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> Q\n  x \\<sharp> R", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<parallel> R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> Q\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: parCasesB)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "case(cPar1 Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "have QTrans: \"Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "from xFreshP PSimQ QTrans"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "obtain P' where PTrans:\"P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\"\n                                          and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "from PTrans xFreshR"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  x \\<sharp> R", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> (P' \\<parallel> R)\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R", "by(rule Weak_Late_Step_Semantics.Par1B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel", "have \"(P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'", "by(rule Par)"], ["proof (state)\nthis:\n  (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> R) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q' \\<parallel> R) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "case(cPar2 R')"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "have RTrans: \"R \\<longmapsto> a<\\<nu>x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "hence \"R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'", "by(auto simp add: weakTransition_def dest: Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "with xFreshP xFreshR"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  x \\<sharp> R\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'", "have ParTrans: \"P \\<parallel> R \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P \\<parallel> R'\""], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  x \\<sharp> R\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'", "by(blast intro: Weak_Late_Step_Semantics.Par2B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"(P \\<parallel> R', Q \\<parallel>  R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'", "by(rule Par)"], ["proof (state)\nthis:\n  (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q \\<parallel> R') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q \\<parallel> R') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Input Q' a x)"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q, R)\n  Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"x \\<sharp> (P, Q, R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, Q, R)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q, R)\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence xFreshP: \"x \\<sharp> P\" and xFreshR: \"x \\<sharp> R\" and \"x \\<sharp> Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, Q, R)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> R &&& x \\<sharp> Q", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> R\n  x \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q, R);\n        Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<parallel>\n                                  R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from \\<open>Q \\<parallel> R \\<longmapsto>a<x> \\<prec> Q'\\<close> \\<open>x \\<sharp> Q\\<close> \\<open>x \\<sharp> R\\<close>"], ["proof (chain)\npicking this:\n  Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> Q\n  x \\<sharp> R", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<parallel> R \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> Q\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<parallel>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "proof(induct rule: parCasesB)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'a.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'a \\<and>\n                (P'a, (P' \\<parallel> R)[x::=u]) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "case(cPar1 Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'a.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'a \\<and>\n                (P'a, (P' \\<parallel> R)[x::=u]) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "have QTrans: \"Q \\<longmapsto>a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'a.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'a \\<and>\n                (P'a, (P' \\<parallel> R)[x::=u]) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "from xFreshP PSimQ QTrans"], ["proof (chain)\npicking this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'", "obtain P''\n      where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  x \\<sharp> P\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'a.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'a \\<and>\n                (P'a, (P' \\<parallel> R)[x::=u]) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P'' \\<parallel> R)\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel", "obtain P' where PTrans:\"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\"\n                          and P'RelQ': \"(P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "from PTrans xFreshR"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  x \\<sharp> R", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P'' \\<parallel> R)\\<rightarrow>a<x> \\<prec> (P' \\<parallel> R)\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                    R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                         R", "by(rule Weak_Late_Step_Semantics.Par1B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=u]) \\<in> Rel", "have \"(P' \\<parallel> R, Q'[x::=u] \\<parallel> R) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, Q'[x::=u] \\<parallel> R) \\<in> Rel'", "by(rule Par)"], ["proof (state)\nthis:\n  (P' \\<parallel> R, Q'[x::=u] \\<parallel> R) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n  (P' \\<parallel> R, Q'[x::=u] \\<parallel> R) \\<in> Rel'", "show \"\\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P'' \\<parallel> R)\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u] \\<parallel> (R[x::=u])) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n  (P' \\<parallel> R, Q'[x::=u] \\<parallel> R) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel>\n       R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n R\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "using xFreshR"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n  (P' \\<parallel> R, Q'[x::=u] \\<parallel> R) \\<in> Rel'\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel>\n       R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n R\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'", "by(force simp add: forget)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel>\n     R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                     R\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n  R\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> a<x> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'a.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'a \\<and>\n                (P'a, (P' \\<parallel> R)[x::=u]) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n  R\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u] \\<parallel> R[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<parallel>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', (Q' \\<parallel> R)[x::=u]) \\<in> Rel'", "by force"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<parallel>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', (Q' \\<parallel> R)[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "case(cPar2 R')"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "have RTrans: \"R \\<longmapsto>a<x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P \\<parallel> R')\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<longmapsto> a<x> \\<prec> R'", "have \"R \\<Longrightarrow>\\<^sub>lu in R'\\<rightarrow>a<x> \\<prec> R'[x::=u]\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<Longrightarrow>\\<^sub>lu in R'\\<rightarrow>a<x> \\<prec> R'[x::=u]", "by(rule Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>lu in R'\\<rightarrow>a<x> \\<prec> R'[x::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "hence \"P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in P \\<parallel> R'\\<rightarrow>a<x> \\<prec> P \\<parallel> R'[x::=u]\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>lu in R'\\<rightarrow>a<x> \\<prec> R'[x::=u]\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                    R'\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                          R'[x::=u]", "using \\<open>x \\<sharp> P\\<close>"], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>lu in R'\\<rightarrow>a<x> \\<prec> R'[x::=u]\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                    R'\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                          R'[x::=u]", "by(rule Weak_Late_Step_Semantics.Par2B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R'\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                        R'[x::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R'\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                        R'[x::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"(P \\<parallel> R'[x::=u], Q \\<parallel>  R'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R'[x::=u], Q \\<parallel> R'[x::=u]) \\<in> Rel'", "by(rule Par)"], ["proof (state)\nthis:\n  (P \\<parallel> R'[x::=u], Q \\<parallel> R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R'\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                        R'[x::=u]\n  (P \\<parallel> R'[x::=u], Q \\<parallel> R'[x::=u]) \\<in> Rel'", "show \"\\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P \\<parallel> R')\\<rightarrow>a<x> \\<prec> P' \\<and>\n                           (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R'\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                        R'[x::=u]\n  (P \\<parallel> R'[x::=u], Q \\<parallel> R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel>\n       R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel>\n     R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                     R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n  R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q'.\n       R \\<longmapsto> a<x> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n  R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<parallel>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', (Q \\<parallel> R')[x::=u]) \\<in> Rel'", "using \\<open>x \\<sharp> Q\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n  R'\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q \\<parallel> R'[x::=u]) \\<in> Rel'\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<parallel>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', (Q \\<parallel> R')[x::=u]) \\<in> Rel'", "by(fastforce simp add: forget)"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<parallel>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', (Q \\<parallel> R')[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<parallel>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free QR' \\<alpha>)"], ["proof (state)\nthis:\n  Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> QR'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> QR'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> QR'", "by fact"], ["proof (state)\nthis:\n  Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> QR'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<parallel> R \\<longmapsto> \\<alpha> \\<prec> QR'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', QR') \\<in> Rel'", "proof(induct rule: parCasesF[of _ _ _ _ _ \"(P, R)\"])"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "case(cPar1 Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have \"Q \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\" and PRel: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "have Trans: \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P' \\<parallel> R\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R", "by(rule Weak_Late_Step_Semantics.Par1F)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PRel"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel", "have \"(P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'", "by(blast intro: Par)"], ["proof (state)\nthis:\n  (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'\n\ngoal (6 subgoals):\n 1. \\<And>P'.\n       Q \\<longmapsto> \\<alpha> \\<prec> P' \\<Longrightarrow>\n       \\<exists>P'a.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n          (P'a, P' \\<parallel> R) \\<in> Rel'\n 2. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 4. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 6. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> R) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> R) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q' \\<parallel> R) \\<in> Rel'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "case(cPar2 R')"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have \"R \\<longmapsto> \\<alpha> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<alpha> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "hence \"R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> R'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'", "by(rule Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "hence \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> (P \\<parallel> R')\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'", "by(rule Weak_Late_Step_Semantics.Par2F)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"(P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'", "by(blast intro: Par)"], ["proof (state)\nthis:\n  (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'\n\ngoal (5 subgoals):\n 1. \\<And>Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 3. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 5. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> R') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q \\<parallel> R') \\<in> Rel'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "case(cComm1 Q' R' a b x)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  R \\<longmapsto> a[b] \\<prec> R'\n  x \\<sharp> Q\n  x \\<sharp> R\n  x \\<noteq> a\n  x \\<noteq> b\n  x \\<sharp> R'\n  x \\<sharp> (P, R)\n  \\<alpha> = \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have QTrans: \"Q \\<longmapsto> a<x> \\<prec> Q'\" and RTrans: \"R \\<longmapsto> a[b] \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q' &&& R \\<longmapsto> a[b] \\<prec> R'", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  R \\<longmapsto> a[b] \\<prec> R'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have \"x \\<sharp> (P, R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, R)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, R)\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "hence xFreshP: \"x \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, R)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by(simp add: fresh_prod)"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PSimQ QTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P", "obtain P' P'' where PTrans: \"P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\"\n                                              and P'RelQ': \"(P', Q'[x::=b]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'' P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=b]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=b]) \\<in> Rel\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<longmapsto> a[b] \\<prec> R'", "have \"R \\<Longrightarrow>\\<^sub>la[b] \\<prec> R'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a[b] \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R'", "by(rule Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R'", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> P' \\<parallel> R'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'", "by(rule Weak_Late_Step_Semantics.Comm1)"], ["proof (state)\nthis:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=b]) \\<in> Rel", "have \"(P' \\<parallel> R', Q'[x::=b] \\<parallel> R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=b]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R', Q'[x::=b] \\<parallel> R') \\<in> Rel'", "by(rule Par)"], ["proof (state)\nthis:\n  (P' \\<parallel> R', Q'[x::=b] \\<parallel> R') \\<in> Rel'\n\ngoal (4 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a[b] \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> Q'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P'[x::=b] \\<parallel> Q') \\<in> Rel'\n 2. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 4. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n  (P' \\<parallel> R', Q'[x::=b] \\<parallel> R') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n  (P' \\<parallel> R', Q'[x::=b] \\<parallel> R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> R') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', Q'[x::=b] \\<parallel> R') \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "case(cComm2 Q' R' a b x)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n  R \\<longmapsto> a<x> \\<prec> R'\n  x \\<sharp> Q\n  x \\<sharp> R\n  x \\<noteq> a\n  x \\<noteq> b\n  x \\<sharp> Q'\n  x \\<sharp> (P, R)\n  \\<alpha> = \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have QTrans: \"Q \\<longmapsto>a[b] \\<prec> Q'\" and RTrans: \"R \\<longmapsto>a<x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> Q' &&& R \\<longmapsto> a<x> \\<prec> R'", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have \"x \\<sharp> (P, R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, R)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, R)\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "hence xFreshR: \"x \\<sharp> R\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, R)\n\ngoal (1 subgoal):\n 1. x \\<sharp> R", "by(simp add: fresh_prod)"], ["proof (state)\nthis:\n  x \\<sharp> R\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PSimQ QTrans"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a[b] \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la[b] \\<prec> P'\"\n                                  and PRel: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<longmapsto> a<x> \\<prec> R'", "have \"R \\<Longrightarrow>\\<^sub>lb in R'\\<rightarrow>a<x> \\<prec> R'[x::=b]\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<Longrightarrow>\\<^sub>lb in R'\\<rightarrow>a<x> \\<prec> R'[x::=b]", "by(rule Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>lb in R'\\<rightarrow>a<x> \\<prec> R'[x::=b]\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>lb in R'\\<rightarrow>a<x> \\<prec> R'[x::=b]", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> P' \\<parallel> R'[x::=b]\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>lb in R'\\<rightarrow>a<x> \\<prec> R'[x::=b]\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'[x::=b]", "by(rule Weak_Late_Step_Semantics.Comm2)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'[x::=b]\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'[x::=b]\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PRel"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel", "have \"(P' \\<parallel> R'[x::=b], Q' \\<parallel> R'[x::=b]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R'[x::=b], Q' \\<parallel> R'[x::=b]) \\<in> Rel'", "by(rule Par)"], ["proof (state)\nthis:\n  (P' \\<parallel> R'[x::=b], Q' \\<parallel> R'[x::=b]) \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>P' Q' a b x.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> b; x \\<sharp> P'; x \\<sharp> (P, R);\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, P' \\<parallel> Q'[x::=b]) \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 3. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'[x::=b]\n  (P' \\<parallel> R'[x::=b], Q' \\<parallel> R'[x::=b]) \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'[x::=b]\n  (P' \\<parallel> R'[x::=b], Q' \\<parallel> R'[x::=b]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> R'[x::=b]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', Q' \\<parallel> R'[x::=b]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "case(cClose1 Q' R' a x y)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'\n  x \\<sharp> Q\n  x \\<sharp> R\n  x \\<noteq> a\n  x \\<noteq> y\n  x \\<sharp> R'\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<noteq> a\n  y \\<sharp> Q'\n  x \\<sharp> (P, R)\n  y \\<sharp> (P, R)\n  \\<alpha> = \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have QTrans: \"Q \\<longmapsto>a<x> \\<prec> Q'\" and RTrans: \"R \\<longmapsto>a<\\<nu>y> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q' &&& R \\<longmapsto> a<\\<nu>y> \\<prec> R'", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have \"x \\<sharp> (P, R)\" and \"y \\<sharp> (P, R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, R) &&& y \\<sharp> (P, R)", "by fact+"], ["proof (state)\nthis:\n  x \\<sharp> (P, R)\n  y \\<sharp> (P, R)\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "hence xFreshP: \"x \\<sharp> P\" and yFreshR: \"y \\<sharp> R\" and yFreshP: \"y \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, R)\n  y \\<sharp> (P, R)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& y \\<sharp> R &&& y \\<sharp> P", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  y \\<sharp> R\n  y \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PSimQ QTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P", "obtain P' P'' where PTrans: \"P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\"\n                                              and P'RelQ': \"(P', Q'[x::=y]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'' P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=y]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=y]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'", "have \"R \\<Longrightarrow>\\<^sub>la<\\<nu>y> \\<prec> R'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'", "by(auto simp add: weakTransition_def dest: Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'", "have Trans: \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')", "using yFreshP yFreshR"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'\n  y \\<sharp> P\n  y \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')", "by(rule Weak_Late_Step_Semantics.Close1)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=y]) \\<in> Rel", "have \"(<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> R')) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=y]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> R'))\n    \\<in> Rel'", "by(blast intro: Par Res)"], ["proof (state)\nthis:\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> R'))\n  \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> Q'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> P'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P'[x::=y] \\<parallel> Q'))\n                            \\<in> Rel'\n 2. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> R'))\n  \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> R'))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> R')) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', <\\<nu>y>(Q'[x::=y] \\<parallel> R')) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "case(cClose2 Q' R' a x y)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  R \\<longmapsto> a<x> \\<prec> R'\n  x \\<sharp> Q\n  x \\<sharp> R\n  x \\<noteq> a\n  x \\<noteq> y\n  x \\<sharp> Q'\n  y \\<sharp> Q\n  y \\<sharp> R\n  y \\<noteq> a\n  y \\<sharp> R'\n  x \\<sharp> (P, R)\n  y \\<sharp> (P, R)\n  \\<alpha> = \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have QTrans: \"Q \\<longmapsto>a<\\<nu>y> \\<prec> Q'\" and RTrans: \"R \\<longmapsto>a<x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>y> \\<prec> Q' &&& R \\<longmapsto> a<x> \\<prec> R'", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "have \"x \\<sharp> (P, R)\" and \"y \\<sharp> (P, R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, R) &&& y \\<sharp> (P, R)", "by fact+"], ["proof (state)\nthis:\n  x \\<sharp> (P, R)\n  y \\<sharp> (P, R)\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "hence xFreshR: \"x \\<sharp> R\" and yFreshP: \"y \\<sharp> P\" and yFreshR: \"y \\<sharp> R\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, R)\n  y \\<sharp> (P, R)\n\ngoal (1 subgoal):\n 1. x \\<sharp> R &&& y \\<sharp> P &&& y \\<sharp> R", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  x \\<sharp> R\n  y \\<sharp> P\n  y \\<sharp> R\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from PSimQ QTrans yFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la<\\<nu>y> \\<prec> P'\"\n                                          and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<longmapsto> a<x> \\<prec> R'", "have \"R \\<Longrightarrow>\\<^sub>ly in R'\\<rightarrow>a<x> \\<prec> R'[x::=y]\""], ["proof (prove)\nusing this:\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. R \\<Longrightarrow>\\<^sub>ly in R'\\<rightarrow>a<x> \\<prec> R'[x::=y]", "by(rule Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>ly in R'\\<rightarrow>a<x> \\<prec> R'[x::=y]\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>ly in R'\\<rightarrow>a<x> \\<prec> R'[x::=y]", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R'[x::=y])\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>ly in R'\\<rightarrow>a<x> \\<prec> R'[x::=y]\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                  R'[x::=y])", "using yFreshP yFreshR"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>ly in R'\\<rightarrow>a<x> \\<prec> R'[x::=y]\n  y \\<sharp> P\n  y \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                  R'[x::=y])", "by(rule Weak_Late_Step_Semantics.Close2)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                R'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                R'[x::=y])\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel", "have \"(<\\<nu>y>(P' \\<parallel> R'[x::=y]), <\\<nu>y>(Q' \\<parallel> R'[x::=y])) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (<\\<nu>y>(P' \\<parallel> R'[x::=y]), <\\<nu>y>(Q' \\<parallel> R'[x::=y]))\n    \\<in> Rel'", "by(blast intro: Par Res)"], ["proof (state)\nthis:\n  (<\\<nu>y>(P' \\<parallel> R'[x::=y]), <\\<nu>y>(Q' \\<parallel> R'[x::=y]))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P' Q' a x y.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        R \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> Q; x \\<sharp> R;\n        x \\<noteq> a; x \\<noteq> y; x \\<sharp> P'; y \\<sharp> Q;\n        y \\<sharp> R; y \\<noteq> a; y \\<sharp> Q'; x \\<sharp> (P, R);\n        y \\<sharp> (P, R); \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            P \\<parallel>\n                            R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>y>(P' \\<parallel> Q'[x::=y]))\n                            \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                R'[x::=y])\n  (<\\<nu>y>(P' \\<parallel> R'[x::=y]), <\\<nu>y>(Q' \\<parallel> R'[x::=y]))\n  \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n                R'[x::=y])\n  (<\\<nu>y>(P' \\<parallel> R'[x::=y]), <\\<nu>y>(Q' \\<parallel> R'[x::=y]))\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> R'[x::=y])) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', <\\<nu>y>(Q' \\<parallel> R'[x::=y])) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', QR') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma resPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   x    :: name\n  and   Rel' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto><Rel> Q\"\n  and     ResRel: \"\\<And>(P::pi) (Q::pi) (x::name). (P, Q) \\<in> Rel \\<Longrightarrow> (<\\<nu>x>P, <\\<nu>x>Q) \\<in> Rel'\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel: \"eqvt Rel\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"<\\<nu>x>P \\<leadsto><Rel'> <\\<nu>x>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<leadsto><Rel'> <\\<nu>x>Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<leadsto><Rel'> <\\<nu>x>Q", "from EqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  eqvt Rel'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<leadsto><Rel'> <\\<nu>x>Q", "proof(induct rule: simCasesCont[of _ \"(P, Q, x)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound Q' a y)"], ["proof (state)\nthis:\n  y \\<sharp> (P, Q, x)\n  <\\<nu>x>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have Trans: \"<\\<nu>x>Q \\<longmapsto>a<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  <\\<nu>x>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"y \\<sharp> (P, Q, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> (P, Q, x)", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> (P, Q, x)\n\ngoal (3 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence yineqx: \"y \\<noteq> x\" and yFreshP: \"y \\<sharp> P\" and \"y \\<sharp> Q\""], ["proof (prove)\nusing this:\n  y \\<sharp> (P, Q, x)\n\ngoal (1 subgoal):\n 1. y \\<noteq> x &&& y \\<sharp> P &&& y \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  y \\<noteq> x\n  y \\<sharp> P\n  y \\<sharp> Q\n\ngoal (3 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<\\<nu>xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from Trans \\<open>y \\<noteq> x\\<close> \\<open>y \\<sharp> Q\\<close>"], ["proof (chain)\npicking this:\n  <\\<nu>x>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<noteq> x\n  y \\<sharp> Q", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<noteq> x\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: resCasesB)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        BoundOutputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, [(y, x)] \\<bullet> P') \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "case(cOpen a Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[x] \\<prec> Q'\n  a \\<noteq> x\n  BoundOutputS a__ = BoundOutputS a\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        BoundOutputS a__ = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, [(y, x)] \\<bullet> P') \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a__<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "have QTrans: \"Q \\<longmapsto>a[x] \\<prec> Q'\" and aineqx: \"a \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[x] \\<prec> Q' &&& a \\<noteq> x", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[x] \\<prec> Q'\n  a \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        BoundOutputS a__ = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, [(y, x)] \\<bullet> P') \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a__<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "from PSimQ QTrans"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a[x] \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la[x] \\<prec> P'\"\n                                    and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a[x] \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a[x] \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a[x] \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        BoundOutputS a__ = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, [(y, x)] \\<bullet> P') \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a__<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "have \"<\\<nu>x>P \\<Longrightarrow>\\<^sub>la<\\<nu>y> \\<prec> ([(y, x)] \\<bullet> P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                    P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                    P'", "from PTrans aineqx"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a[x] \\<prec> P'\n  a \\<noteq> x", "have \"<\\<nu>x>P \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a[x] \\<prec> P'\n  a \\<noteq> x\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Open)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                    P'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                    P'", "from PTrans yFreshP"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a[x] \\<prec> P'\n  y \\<sharp> P", "have \"y \\<sharp> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a[x] \\<prec> P'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. y \\<sharp> P'", "by(force intro: Weak_Late_Step_Semantics.freshTransition)"], ["proof (state)\nthis:\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                    P'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  y \\<sharp> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                    P'", "by(simp add: alphaBoundResidual name_swap)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                  P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                  P'\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        BoundOutputS a__ = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, [(y, x)] \\<bullet> P') \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a__<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                  P'\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        BoundOutputS a__ = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, [(y, x)] \\<bullet> P') \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a__<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "from EqvtRel P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  eqvt Rel\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"([(y, x)] \\<bullet> P', [(y, x)] \\<bullet> Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  (P', Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. ([(y, x)] \\<bullet> P', [(y, x)] \\<bullet> Q') \\<in> Rel'", "by(blast intro: eqvtRelI)"], ["proof (state)\nthis:\n  ([(y, x)] \\<bullet> P', [(y, x)] \\<bullet> Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        BoundOutputS a__ = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l b<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, [(y, x)] \\<bullet> P') \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a__<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                  P'\n  ([(y, x)] \\<bullet> P', [(y, x)] \\<bullet> Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> [(y, x)] \\<bullet>\n                  P'\n  ([(y, x)] \\<bullet> P', [(y, x)] \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n       (P', [(y, x)] \\<bullet> Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n     (P', [(y, x)] \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a__<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "case(cRes Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  x \\<sharp> BoundOutputS a\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "have QTrans: \"Q \\<longmapsto>a<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "from \\<open>x \\<sharp> BoundOutputS a\\<close>"], ["proof (chain)\npicking this:\n  x \\<sharp> BoundOutputS a", "have \"x \\<noteq> a\""], ["proof (prove)\nusing this:\n  x \\<sharp> BoundOutputS a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by simp"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "from PSimQ yFreshP QTrans"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  y \\<sharp> P\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la<\\<nu>y> \\<prec> P'\"\n                                            and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  y \\<sharp> P\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "from PTrans \\<open>x \\<noteq> a\\<close> yineqx yFreshP"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  x \\<noteq> a\n  y \\<noteq> x\n  y \\<sharp> P", "have ResTrans: \"<\\<nu>x>P \\<Longrightarrow>\\<^sub>la<\\<nu>y> \\<prec> (<\\<nu>x>P')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  x \\<noteq> a\n  y \\<noteq> x\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> <\\<nu>x>P'", "by(blast intro: Weak_Late_Step_Semantics.ResB)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel", "have \"((<\\<nu>x>P'), (<\\<nu>x>Q')) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'", "by(rule ResRel)"], ["proof (state)\nthis:\n  (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        x \\<sharp> BoundOutputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> <\\<nu>x>P'\n  (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> <\\<nu>x>P'\n  (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n     (P', <\\<nu>x>Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Input Q' a y)"], ["proof (state)\nthis:\n  y \\<sharp> (P, Q, x)\n  <\\<nu>x>Q \\<longmapsto> a<y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"y \\<sharp> (P, Q, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> (P, Q, x)", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> (P, Q, x)\n\ngoal (2 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence yineqx: \"y \\<noteq> x\" and yFreshP: \"y \\<sharp> P\" and \"y \\<sharp> Q\""], ["proof (prove)\nusing this:\n  y \\<sharp> (P, Q, x)\n\ngoal (1 subgoal):\n 1. y \\<noteq> x &&& y \\<sharp> P &&& y \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  y \\<noteq> x\n  y \\<sharp> P\n  y \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"<\\<nu>x>Q \\<longmapsto>a<y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>Q \\<longmapsto> a<y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  <\\<nu>x>Q \\<longmapsto> a<y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a xa.\n       \\<lbrakk>xa \\<sharp> (P, Q, x);\n        <\\<nu>x>Q \\<longmapsto> a<xa> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                                  (P', Q'[xa::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>Q \\<longmapsto> a<y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n             (P', Q'[y::=u]) \\<in> Rel'", "using yineqx \\<open>y \\<sharp> Q\\<close>"], ["proof (prove)\nusing this:\n  <\\<nu>x>Q \\<longmapsto> a<y> \\<prec> Q'\n  y \\<noteq> x\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n             (P', Q'[y::=u]) \\<in> Rel'", "proof(induct rule: resCasesB)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        InputS a = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, ([(y, x)] \\<bullet> P')[y::=u])\n                                  \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<y> \\<prec> P';\n        x \\<sharp> InputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "case(cOpen a Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[x] \\<prec> Q'\n  a \\<noteq> x\n  InputS a__ = BoundOutputS a\n\ngoal (2 subgoals):\n 1. \\<And>b P'.\n       \\<lbrakk>Q \\<longmapsto> b[x] \\<prec> P'; b \\<noteq> x;\n        InputS a__ = BoundOutputS b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a__<y> \\<prec> P'a \\<and>\n                                  (P'a, ([(y, x)] \\<bullet> P')[y::=u])\n                                  \\<in> Rel'\n 2. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<y> \\<prec> P';\n        x \\<sharp> InputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a__<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a[x] \\<prec> Q'\n  a \\<noteq> x\n  InputS a__ = BoundOutputS a\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a__<y> \\<prec> P' \\<and>\n             (P', ([(y, x)] \\<bullet> Q')[y::=u]) \\<in> Rel'", "by simp"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a__<y> \\<prec> P' \\<and>\n           (P', ([(y, x)] \\<bullet> Q')[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a__<y> \\<prec> P';\n        x \\<sharp> InputS a__\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a__<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<y> \\<prec> P';\n        x \\<sharp> InputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "case(cRes Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<y> \\<prec> Q'\n  x \\<sharp> InputS a\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<y> \\<prec> P';\n        x \\<sharp> InputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "have QTrans: \"Q \\<longmapsto>a<y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<y> \\<prec> P';\n        x \\<sharp> InputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "from \\<open>x \\<sharp> InputS a\\<close>"], ["proof (chain)\npicking this:\n  x \\<sharp> InputS a", "have \"x \\<noteq> a\""], ["proof (prove)\nusing this:\n  x \\<sharp> InputS a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by simp"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<y> \\<prec> P';\n        x \\<sharp> InputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "from PSimQ QTrans yFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<y> \\<prec> Q'\n  y \\<sharp> P", "obtain P''\n        where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and> (P', Q'[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> a<y> \\<prec> Q'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n              (P', Q'[y::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', Q'[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<y> \\<prec> P';\n        x \\<sharp> InputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in (<\\<nu>x>P'')\\<rightarrow>a<y> \\<prec> P' \\<and> (P', (<\\<nu>x>Q')[y::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n          (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "show \"\\<exists>P'. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and> (P', (<\\<nu>x>Q')[y::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "proof(cases \"x=u\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "assume xequ: \"x=u\""], ["proof (state)\nthis:\n  x = u\n\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "have \"\\<exists>c::name. c \\<sharp> (P, P'', Q', x, y, a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. c \\<sharp> (P, P'', Q', x, y, a)", "by(blast intro: name_exists_fresh)"], ["proof (state)\nthis:\n  \\<exists>c. c \\<sharp> (P, P'', Q', x, y, a)\n\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<exists>c. c \\<sharp> (P, P'', Q', x, y, a)", "obtain c::name where cFreshP: \"c \\<sharp> P\" and cFreshP'': \"c \\<sharp> P''\" and cFreshQ': \"c \\<sharp> Q'\"\n                                and cineqx: \"c \\<noteq> x\" and cineqy: \"c \\<noteq> y\" and cineqa: \"c \\<noteq> a\""], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (P, P'', Q', x, y, a)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<sharp> P; c \\<sharp> P''; c \\<sharp> Q'; c \\<noteq> x;\n         c \\<noteq> y; c \\<noteq> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force simp add: fresh_prod)"], ["proof (state)\nthis:\n  c \\<sharp> P\n  c \\<sharp> P''\n  c \\<sharp> Q'\n  c \\<noteq> x\n  c \\<noteq> y\n  c \\<noteq> a\n\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', Q'[y::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lc in P''\\<rightarrow>a<y> \\<prec> P'\"\n                              and P'RelQ': \"(P', Q'[y::=c]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', Q'[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lc in P''\\<rightarrow>a<y> \\<prec> P';\n         (P', Q'[y::=c]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lc in P''\\<rightarrow>a<y> \\<prec> P'\n  (P', Q'[y::=c]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "have \"<\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in (<\\<nu>x>P'')\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x, c)] \\<bullet> P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "from PTrans yineqx \\<open>x \\<noteq> a\\<close> cineqx"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lc in P''\\<rightarrow>a<y> \\<prec> P'\n  y \\<noteq> x\n  x \\<noteq> a\n  c \\<noteq> x", "have \"<\\<nu>x>P \\<Longrightarrow>\\<^sub>lc in (<\\<nu>x>P'')\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lc in P''\\<rightarrow>a<y> \\<prec> P'\n  y \\<noteq> x\n  x \\<noteq> a\n  c \\<noteq> x\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lc in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'", "by(blast intro: Weak_Late_Step_Semantics.ResB)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lc in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "hence \"([(x, c)] \\<bullet> <\\<nu>x>P) \\<Longrightarrow>\\<^sub>l([(x, c)] \\<bullet> c) in ([(x, c)] \\<bullet> <\\<nu>x>P'')\\<rightarrow>([(x, c)] \\<bullet> a)<([(x, c)] \\<bullet> y)> \\<prec> [(x, c)] \\<bullet> <\\<nu>x>P'\""], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lc in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. [(x, c)] \\<bullet>\n    <\\<nu>x>P \\<Longrightarrow>\\<^sub>l[(x, c)] \\<bullet>\n c in [(x, c)] \\<bullet>\n      <\\<nu>x>P''\\<rightarrow>[(x, c)] \\<bullet>\n                              a<[(x, c)] \\<bullet>\n                                y> \\<prec> [(x, c)] \\<bullet> <\\<nu>x>P'", "by(rule Weak_Late_Step_Semantics.eqvtI)"], ["proof (state)\nthis:\n  [(x, c)] \\<bullet>\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l[(x, c)] \\<bullet>\n                                     c in [(x, c)] \\<bullet>\n    <\\<nu>x>P''\\<rightarrow>[(x, c)] \\<bullet>\n                            a<[(x, c)] \\<bullet>\n                              y> \\<prec> [(x, c)] \\<bullet> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "moreover"], ["proof (state)\nthis:\n  [(x, c)] \\<bullet>\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l[(x, c)] \\<bullet>\n                                     c in [(x, c)] \\<bullet>\n    <\\<nu>x>P''\\<rightarrow>[(x, c)] \\<bullet>\n                            a<[(x, c)] \\<bullet>\n                              y> \\<prec> [(x, c)] \\<bullet> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "from cFreshP"], ["proof (chain)\npicking this:\n  c \\<sharp> P", "have \"<\\<nu>c>([(x, c)] \\<bullet> P) = <\\<nu>x>P\""], ["proof (prove)\nusing this:\n  c \\<sharp> P\n\ngoal (1 subgoal):\n 1. <\\<nu>c>([(x, c)] \\<bullet> P) = <\\<nu>x>P", "by(simp add: alphaRes)"], ["proof (state)\nthis:\n  <\\<nu>c>([(x, c)] \\<bullet> P) = <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "moreover"], ["proof (state)\nthis:\n  <\\<nu>c>([(x, c)] \\<bullet> P) = <\\<nu>x>P\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "from cFreshP''"], ["proof (chain)\npicking this:\n  c \\<sharp> P''", "have \"<\\<nu>c>([(x, c)] \\<bullet> P'') = <\\<nu>x>P''\""], ["proof (prove)\nusing this:\n  c \\<sharp> P''\n\ngoal (1 subgoal):\n 1. <\\<nu>c>([(x, c)] \\<bullet> P'') = <\\<nu>x>P''", "by(simp add: alphaRes)"], ["proof (state)\nthis:\n  <\\<nu>c>([(x, c)] \\<bullet> P'') = <\\<nu>x>P''\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "ultimately"], ["proof (chain)\npicking this:\n  [(x, c)] \\<bullet>\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l[(x, c)] \\<bullet>\n                                     c in [(x, c)] \\<bullet>\n    <\\<nu>x>P''\\<rightarrow>[(x, c)] \\<bullet>\n                            a<[(x, c)] \\<bullet>\n                              y> \\<prec> [(x, c)] \\<bullet> <\\<nu>x>P'\n  <\\<nu>c>([(x, c)] \\<bullet> P) = <\\<nu>x>P\n  <\\<nu>c>([(x, c)] \\<bullet> P'') = <\\<nu>x>P''", "show ?thesis"], ["proof (prove)\nusing this:\n  [(x, c)] \\<bullet>\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l[(x, c)] \\<bullet>\n                                     c in [(x, c)] \\<bullet>\n    <\\<nu>x>P''\\<rightarrow>[(x, c)] \\<bullet>\n                            a<[(x, c)] \\<bullet>\n                              y> \\<prec> [(x, c)] \\<bullet> <\\<nu>x>P'\n  <\\<nu>c>([(x, c)] \\<bullet> P) = <\\<nu>x>P\n  <\\<nu>c>([(x, c)] \\<bullet> P'') = <\\<nu>x>P''\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "using \\<open>x \\<noteq> a\\<close> cineqa yineqx cineqy cineqx xequ"], ["proof (prove)\nusing this:\n  [(x, c)] \\<bullet>\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l[(x, c)] \\<bullet>\n                                     c in [(x, c)] \\<bullet>\n    <\\<nu>x>P''\\<rightarrow>[(x, c)] \\<bullet>\n                            a<[(x, c)] \\<bullet>\n                              y> \\<prec> [(x, c)] \\<bullet> <\\<nu>x>P'\n  <\\<nu>c>([(x, c)] \\<bullet> P) = <\\<nu>x>P\n  <\\<nu>c>([(x, c)] \\<bullet> P'') = <\\<nu>x>P''\n  x \\<noteq> a\n  c \\<noteq> a\n  y \\<noteq> x\n  c \\<noteq> y\n  c \\<noteq> x\n  x = u\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n                c)] \\<bullet>\n              P')", "by(simp add: name_calc)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n              c)] \\<bullet>\n            P')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n              c)] \\<bullet>\n            P')\n\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n              c)] \\<bullet>\n            P')\n\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "have \"(<\\<nu>c>([(x, c)] \\<bullet> P'), (<\\<nu>x>Q')[y::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q'[y::=c]) \\<in> Rel", "have \"(<\\<nu>x>P', <\\<nu>x>(Q'[y::=c])) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[y::=c]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (<\\<nu>x>P', <\\<nu>x>Q'[y::=c]) \\<in> Rel'", "by(rule ResRel)"], ["proof (state)\nthis:\n  (<\\<nu>x>P', <\\<nu>x>Q'[y::=c]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "with EqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'\n  (<\\<nu>x>P', <\\<nu>x>Q'[y::=c]) \\<in> Rel'", "have \"([(x, c)] \\<bullet> <\\<nu>x>P', [(x, c)] \\<bullet> <\\<nu>x>(Q'[y::=c])) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  eqvt Rel'\n  (<\\<nu>x>P', <\\<nu>x>Q'[y::=c]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> <\\<nu>x>P', [(x, c)] \\<bullet> <\\<nu>x>Q'[y::=c])\n    \\<in> Rel'", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> <\\<nu>x>P', [(x, c)] \\<bullet> <\\<nu>x>Q'[y::=c])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "with cineqy yineqx cineqx"], ["proof (chain)\npicking this:\n  c \\<noteq> y\n  y \\<noteq> x\n  c \\<noteq> x\n  ([(x, c)] \\<bullet> <\\<nu>x>P', [(x, c)] \\<bullet> <\\<nu>x>Q'[y::=c])\n  \\<in> Rel'", "have \"(<\\<nu>c>([(x, c)] \\<bullet> P'), (<\\<nu>c>([(x, c)] \\<bullet> Q'))[y::=x]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  c \\<noteq> y\n  y \\<noteq> x\n  c \\<noteq> x\n  ([(x, c)] \\<bullet> <\\<nu>x>P', [(x, c)] \\<bullet> <\\<nu>x>Q'[y::=c])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (<\\<nu>c>([(x, c)] \\<bullet> P'),\n     <\\<nu>c>([(x, c)] \\<bullet> Q')[y::=x])\n    \\<in> Rel'", "by(simp add: name_calc eqvt_subs)"], ["proof (state)\nthis:\n  (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>c>([(x, c)] \\<bullet> Q')[y::=x])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "with cFreshQ' xequ"], ["proof (chain)\npicking this:\n  c \\<sharp> Q'\n  x = u\n  (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>c>([(x, c)] \\<bullet> Q')[y::=x])\n  \\<in> Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<sharp> Q'\n  x = u\n  (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>c>([(x, c)] \\<bullet> Q')[y::=x])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "by(simp add: alphaRes)"], ["proof (state)\nthis:\n  (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. x = u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n 2. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n              c)] \\<bullet>\n            P')\n  (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>c>([(x,\n              c)] \\<bullet>\n            P')\n  (<\\<nu>c>([(x, c)] \\<bullet> P'), <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n     (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "assume xinequ: \"x \\<noteq> u\""], ["proof (state)\nthis:\n  x \\<noteq> u\n\ngoal (1 subgoal):\n 1. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', Q'[y::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'\"\n                             and P'RelQ': \"(P', Q'[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', Q'[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P';\n         (P', Q'[y::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'\n  (P', Q'[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "from PTrans \\<open>x \\<noteq> a\\<close> yineqx xinequ"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'\n  x \\<noteq> a\n  y \\<noteq> x\n  x \\<noteq> u", "have \"<\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in (<\\<nu>x>P'')\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'\n  x \\<noteq> a\n  y \\<noteq> x\n  x \\<noteq> u\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'", "by(blast intro: Weak_Late_Step_Semantics.ResB)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "from P'RelQ' xinequ yineqx"], ["proof (chain)\npicking this:\n  (P', Q'[y::=u]) \\<in> Rel\n  x \\<noteq> u\n  y \\<noteq> x", "have \"(<\\<nu>x>P', (<\\<nu>x>Q')[y::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[y::=u]) \\<in> Rel\n  x \\<noteq> u\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. (<\\<nu>x>P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "by(force intro: ResRel)"], ["proof (state)\nthis:\n  (<\\<nu>x>P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. x \\<noteq> u \\<Longrightarrow>\n    \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\n  (<\\<nu>x>P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> <\\<nu>x>P'\n  (<\\<nu>x>P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n     (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n     (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> a<y> \\<prec> P';\n        x \\<sharp> InputS a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'a.\n                                  <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P'a \\<and>\n                                  (P'a, <\\<nu>x>P'[y::=u]) \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in <\\<nu>x>P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n        (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n             (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n           (P', <\\<nu>x>Q'[y::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           <\\<nu>x>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<y> \\<prec> P' \\<and>\n           (P', Q'[y::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"<\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "proof(induct rule: resCasesF)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        x \\<sharp> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "case(cRes Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  x \\<sharp> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        x \\<sharp> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "have \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        x \\<sharp> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\"\n                             and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        x \\<sharp> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "have \"<\\<nu>x>P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> <\\<nu>x>P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'", "have xFreshAlpha: \"x \\<sharp> \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<alpha>", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> \\<alpha>\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  x \\<sharp> \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  x \\<sharp> \\<alpha>\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'", "by(rule Weak_Late_Step_Semantics.ResF)"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        x \\<sharp> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        x \\<sharp> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel", "have \"(<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'", "by(rule ResRel)"], ["proof (state)\nthis:\n  (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        x \\<sharp> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'a.\n                            <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'a \\<and>\n                            (P'a, <\\<nu>x>P') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'\n  (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> <\\<nu>x>P'\n  (<\\<nu>x>P', <\\<nu>x>Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', <\\<nu>x>Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', <\\<nu>x>Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     <\\<nu>x>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<leadsto><Rel'> <\\<nu>x>Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bangPres:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n \n  assumes PSimQ:    \"P \\<leadsto><Rel'> Q\"\n  and     PRelQ:    \"(P, Q) \\<in> Rel\"\n  and     Sim:      \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto><Rel'> Q\"\n  and     RelRel':  \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> (P, Q) \\<in> Rel'\"\n  and     eqvtRel': \"eqvt Rel'\"\n\n  shows \"!P \\<leadsto><bangRel Rel'> !Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "from eqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'", "have EqvtBangRel': \"eqvt(bangRel Rel')\""], ["proof (prove)\nusing this:\n  eqvt Rel'\n\ngoal (1 subgoal):\n 1. eqvt (bangRel Rel')", "by(rule eqvtBangRel)"], ["proof (state)\nthis:\n  eqvt (bangRel Rel')\n\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "from RelRel'"], ["proof (chain)\npicking this:\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> (?P, ?Q) \\<in> Rel'", "have BRelRel': \"\\<And>P Q. (P, Q) \\<in> bangRel Rel \\<Longrightarrow> (P, Q) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> (?P, ?Q) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bangRel Rel \\<Longrightarrow> (P, Q) \\<in> bangRel Rel'", "by(auto intro: bangRelSubset)"], ["proof (state)\nthis:\n  (?P, ?Q) \\<in> bangRel Rel \\<Longrightarrow> (?P, ?Q) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "have \"\\<And>Rs P. \\<lbrakk>!Q \\<longmapsto> Rs; (P, !Q) \\<in> bangRel Rel\\<rbrakk> \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>!Q \\<longmapsto> Rs; (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>!Q \\<longmapsto> Rs; (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "fix Rs P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>!Q \\<longmapsto> Rs; (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "assume \"!Q \\<longmapsto> Rs\" and \"(P, !Q) \\<in> bangRel Rel\""], ["proof (state)\nthis:\n  !Q \\<longmapsto> Rs\n  (P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>!Q \\<longmapsto> Rs; (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus \"weakStepSimAct P Rs P (bangRel Rel')\""], ["proof (prove)\nusing this:\n  !Q \\<longmapsto> Rs\n  (P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct P Rs P (bangRel Rel')", "proof(nominal_induct avoiding: P rule: bangInduct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<parallel>\n                                 !Q)\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 3. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 4. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 5. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 6. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 7. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 8. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 9. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cPar1B aa x Q' P)"], ["proof (state)\nthis:\n  Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\n  x \\<sharp> Q\n  x \\<sharp> P\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (9 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<parallel>\n                                 !Q)\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 3. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 4. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 5. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 6. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 7. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 8. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 9. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have QTrans: \"Q \\<longmapsto>aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\" and xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' &&&\n    x \\<sharp> Q", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\n  x \\<sharp> Q\n\ngoal (9 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<parallel>\n                                 !Q)\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 3. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 4. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 5. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 6. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 7. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 8. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 9. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\" and \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel &&& x \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (9 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> P' \\<parallel>\n                                 !Q)\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 3. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 4. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 5. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 6. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 7. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 8. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 9. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. weakStepSimAct P\n     (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel> !Q) P\n     (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel>\n                                  !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel>\n                                  !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel>\n                                  !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "have \"x \\<sharp> P \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<parallel> R", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel>\n                                  !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "hence xFreshP: \"x \\<sharp> P\" and xFreshR: \"x \\<sharp> R\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> R", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel>\n                                  !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have PSimQ: \"P \\<leadsto><Rel'> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel'> Q", "by(rule Sim)"], ["proof (state)\nthis:\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel>\n                                  !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "from EqvtBangRel'"], ["proof (chain)\npicking this:\n  eqvt (bangRel Rel')", "show ?case"], ["proof (prove)\nusing this:\n  eqvt (bangRel Rel')\n\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R)\n     (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel> !Q)\n     (P \\<parallel> R) (bangRel Rel')", "proof(induct rule: simActBoundCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "case(Input a)"], ["proof (state)\nthis:\n  aa = InputS a\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "have \"aa = InputS a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa = InputS a", "by fact"], ["proof (state)\nthis:\n  aa = InputS a\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "with PSimQ QTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel'> Q\n  Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\n  x \\<sharp> P\n  aa = InputS a", "obtain P''\n            where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel'> Q\n  Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\n  x \\<sharp> P\n  aa = InputS a\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> Rel' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "have \"\\<forall>u. \\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P'' \\<parallel> R)\\<rightarrow>a<x> \\<prec> P' \\<and> (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\"\n                                and P'RelQ': \"(P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=u]) \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "from PTrans xFreshR"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  x \\<sharp> R", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P'' \\<parallel> R)\\<rightarrow>a<x>\\<prec> P' \\<parallel> R\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                    R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                         R", "by(rule Weak_Late_Step_Semantics.Par1B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "have \"(P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "from P'RelQ' RBangRelQ"], ["proof (chain)\npicking this:\n  (P', Q'[x::=u]) \\<in> Rel'\n  (R, !Q) \\<in> bangRel Rel", "have \"(P' \\<parallel> R, Q'[x::=u] \\<parallel> !Q) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=u]) \\<in> Rel'\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, Q'[x::=u] \\<parallel> !Q) \\<in> bangRel Rel'", "by(blast intro: BRelRel' Rel.BRPar)"], ["proof (state)\nthis:\n  (P' \\<parallel> R, Q'[x::=u] \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "with xFreshQ"], ["proof (chain)\npicking this:\n  x \\<sharp> Q\n  (P' \\<parallel> R, Q'[x::=u] \\<parallel> !Q) \\<in> bangRel Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> Q\n  (P' \\<parallel> R, Q'[x::=u] \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "by(force simp add: forget)"], ["proof (state)\nthis:\n  (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n    R\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n  (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "show \"\\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P'' \\<parallel> R)\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                  R\\<rightarrow>a<x> \\<prec> P' \\<parallel>\n                       R\n  (P' \\<parallel> R, (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel>\n       R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n R\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel>\n     R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n                                     R\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n  R\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P'' \\<parallel>\n  R\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<parallel>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<parallel>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', (Q' \\<parallel> !Q)[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "case(BoundOutput a)"], ["proof (state)\nthis:\n  aa = BoundOutputS a\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "have \"aa = BoundOutputS a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa = BoundOutputS a", "by fact"], ["proof (state)\nthis:\n  aa = BoundOutputS a\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "with PSimQ QTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel'> Q\n  Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\n  x \\<sharp> P\n  aa = BoundOutputS a", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel'> Q\n  Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\n  x \\<sharp> P\n  aa = BoundOutputS a\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "from PTrans xFreshR"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  x \\<sharp> R", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>la<\\<nu>x>\\<prec> P' \\<parallel> R\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R", "by(rule Weak_Late_Step_Semantics.Par1B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "from P'RelQ' RBangRelQ"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel'\n  (R, !Q) \\<in> bangRel Rel", "have \"(P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel'\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'", "by(blast intro: Rel.BRPar BRelRel')"], ["proof (state)\nthis:\n  (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R)\n   (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel> !Q)\n   (P \\<parallel> R) (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P\n   (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q' \\<parallel> !Q) P\n   (bangRel Rel')\n\ngoal (8 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 2. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 3. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 4. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 5. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 6. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 7. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 8. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 2. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 3. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 4. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 5. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 6. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 7. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 8. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cPar1F \\<alpha> Q' P)"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (8 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 2. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 3. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 4. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 5. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 6. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 7. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 8. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have QTrans: \"Q \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (8 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 2. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 3. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 4. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 5. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 6. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 7. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 8. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel", "by fact"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (8 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> P';\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> P' \\<parallel> !Q) P\n                          (bangRel Rel')\n 2. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 3. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 4. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 5. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 6. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 7. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 8. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct P (\\<alpha> \\<prec> Q' \\<parallel> !Q) P (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<alpha> \\<prec> Q' \\<parallel> !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<alpha> \\<prec> Q' \\<parallel> !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<alpha> \\<prec> Q' \\<parallel> !Q)\n                          (P \\<parallel> R) (bangRel Rel')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R) (\\<alpha> \\<prec> Q' \\<parallel> !Q)\n     (P \\<parallel> R) (bangRel Rel')", "proof(induct rule: simActFreeCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "case Free"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"P \\<leadsto><Rel'> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel'> Q", "by(rule Sim)"], ["proof (state)\nthis:\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "with QTrans"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  P \\<leadsto><Rel'> Q", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P' \\<parallel> R\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R", "by(rule Weak_Late_Step_Semantics.Par1F)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "from P'RelQ' RBangRelQ"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel'\n  (R, !Q) \\<in> bangRel Rel", "have \"(P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel'\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'", "by(blast intro: BRelRel' Rel.BRPar)"], ["proof (state)\nthis:\n  (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<parallel> R\n  (P' \\<parallel> R, Q' \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q' \\<parallel> !Q) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R) (\\<alpha> \\<prec> Q' \\<parallel> !Q)\n   (P \\<parallel> R) (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P (\\<alpha> \\<prec> Q' \\<parallel> !Q) P (bangRel Rel')\n\ngoal (7 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 3. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 4. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 5. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 6. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 7. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 3. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 4. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 5. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 6. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 7. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cPar2B aa x Q' P)"], ["proof (state)\nthis:\n  !Q \\<longmapsto> aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q'\n  x \\<sharp> Q\n  x \\<sharp> P\n  (?b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?b (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') ?b\n   (bangRel Rel')\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (7 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 3. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 4. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 5. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 6. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 7. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have IH: \"\\<And>P. (P, !Q) \\<in> bangRel Rel \\<Longrightarrow> weakStepSimAct P (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n       weakStepSimAct P (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') P\n        (bangRel Rel')", "by fact"], ["proof (state)\nthis:\n  (?P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?P (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') ?P\n   (bangRel Rel')\n\ngoal (7 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 3. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 4. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 5. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 6. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 7. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> Q", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> Q\n\ngoal (7 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 3. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 4. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 5. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 6. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 7. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\" and \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel &&& x \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (7 subgoals):\n 1. \\<And>a x P' P.\n       \\<lbrakk>!Q \\<longmapsto> a\\<guillemotleft>x\\<guillemotright> \\<prec> P';\n        x \\<sharp> Q; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a\\<guillemotleft>x\\<guillemotright> \\<prec> P')\n            b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                 P')\n                          P (bangRel Rel')\n 2. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 3. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 4. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 5. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 6. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 7. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. weakStepSimAct P\n     (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel> Q') P\n     (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                  Q')\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                  Q')\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                  Q')\n                          (P \\<parallel> R) (bangRel Rel')", "have \"x \\<sharp> P \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<parallel> R", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                  Q')\n                          (P \\<parallel> R) (bangRel Rel')", "hence xFreshP: \"x \\<sharp> P\" and xFreshR: \"x \\<sharp> R\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> R", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                  Q')\n                          (P \\<parallel> R) (bangRel Rel')", "from RBangRelQ"], ["proof (chain)\npicking this:\n  (R, !Q) \\<in> bangRel Rel", "have IH: \"weakStepSimAct R (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') R (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct R (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') R\n     (bangRel Rel')", "by(rule IH)"], ["proof (state)\nthis:\n  weakStepSimAct R (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') R\n   (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel>\n                                  Q')\n                          (P \\<parallel> R) (bangRel Rel')", "from EqvtBangRel'"], ["proof (chain)\npicking this:\n  eqvt (bangRel Rel')", "show ?case"], ["proof (prove)\nusing this:\n  eqvt (bangRel Rel')\n\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R)\n     (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel> Q')\n     (P \\<parallel> R) (bangRel Rel')", "proof(induct rule: simActBoundCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "case(Input a)"], ["proof (state)\nthis:\n  aa = InputS a\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "have \"aa = InputS a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa = InputS a", "by fact"], ["proof (state)\nthis:\n  aa = InputS a\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "with xFreshR IH"], ["proof (chain)\npicking this:\n  x \\<sharp> R\n  weakStepSimAct R (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') R\n   (bangRel Rel')\n  aa = InputS a", "obtain  R'' where L1: \"\\<forall>u. \\<exists>R'. R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n                                                 (R', Q'[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  x \\<sharp> R\n  weakStepSimAct R (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') R\n   (bangRel Rel')\n  aa = InputS a\n\ngoal (1 subgoal):\n 1. (\\<And>R''.\n        \\<forall>u.\n           \\<exists>R'.\n              R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n              (R', Q'[x::=u]) \\<in> bangRel Rel' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>R'.\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n        (R', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "have \"\\<forall>u. \\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P \\<parallel> R'')\\<rightarrow>a<x> \\<prec> P' \\<and> (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>R'.\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n        (R', Q'[x::=u]) \\<in> bangRel Rel'", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\"\n                                and R'BangRelT': \"(R', Q'[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>R'.\n        R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R' \\<and>\n        (R', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R';\n         (R', Q'[x::=u]) \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\n  (R', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "from RTrans xFreshP"], ["proof (chain)\npicking this:\n  R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\n  x \\<sharp> P", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P \\<parallel> R'')\\<rightarrow>a<x> \\<prec> P \\<parallel> R'\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>lu in R''\\<rightarrow>a<x> \\<prec> R'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                    R''\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                           R'", "by(rule Weak_Late_Step_Semantics.Par2B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R''\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                         R'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R''\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                         R'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "have \"(P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "from PRelQ R'BangRelT'"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  (R', Q'[x::=u]) \\<in> bangRel Rel'", "have \"(P \\<parallel> R', Q \\<parallel> Q'[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  (R', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R', Q \\<parallel> Q'[x::=u]) \\<in> bangRel Rel'", "by(blast intro: RelRel' Rel.BRPar)"], ["proof (state)\nthis:\n  (P \\<parallel> R', Q \\<parallel> Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "with xFreshQ"], ["proof (chain)\npicking this:\n  x \\<sharp> Q\n  (P \\<parallel> R', Q \\<parallel> Q'[x::=u]) \\<in> bangRel Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sharp> Q\n  (P \\<parallel> R', Q \\<parallel> Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "by(simp add: forget)"], ["proof (state)\nthis:\n  (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n    R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R''\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                         R'\n  (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "show \"\\<exists>P'. P \\<parallel> R \\<Longrightarrow>\\<^sub>lu in (P \\<parallel> R'')\\<rightarrow>a<x> \\<prec> P' \\<and> (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                  R''\\<rightarrow>a<x> \\<prec> P \\<parallel>\n                         R'\n  (P \\<parallel> R', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel>\n       R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel>\n     R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n                                     R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n  R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       aa = InputS b \\<Longrightarrow>\n       \\<exists>P''.\n          \\<forall>u.\n             \\<exists>P'.\n                P \\<parallel>\n                R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        R \\<Longrightarrow>\\<^sub>lu in P \\<parallel>\n  R''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<parallel>\n             R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<parallel>\n           R \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', (Q \\<parallel> Q')[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "case(BoundOutput a)"], ["proof (state)\nthis:\n  aa = BoundOutputS a\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "have \"aa = BoundOutputS a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. aa = BoundOutputS a", "by fact"], ["proof (state)\nthis:\n  aa = BoundOutputS a\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "with IH xFreshR"], ["proof (chain)\npicking this:\n  weakStepSimAct R (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') R\n   (bangRel Rel')\n  x \\<sharp> R\n  aa = BoundOutputS a", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> R'\"\n                                      and R'BangRelT': \"(R', Q') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  weakStepSimAct R (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q') R\n   (bangRel Rel')\n  x \\<sharp> R\n  aa = BoundOutputS a\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R';\n         (R', Q') \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n  (R', Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "from RTrans xFreshP"], ["proof (chain)\npicking this:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n  x \\<sharp> P", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P \\<parallel> R'\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> R'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'", "by(auto intro: Weak_Late_Step_Semantics.Par2B)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "from PRelQ R'BangRelT'"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  (R', Q') \\<in> bangRel Rel'", "have \"(P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  (R', Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'", "by(blast intro: RelRel' Rel.BRPar)"], ["proof (state)\nthis:\n  (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       aa = BoundOutputS b \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<parallel>\n          R \\<Longrightarrow>\\<^sub>l b<\\<nu>x> \\<prec> P' \\<and>\n          (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q \\<parallel> Q') \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R)\n   (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel> Q')\n   (P \\<parallel> R) (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P\n   (aa\\<guillemotleft>x\\<guillemotright> \\<prec> Q \\<parallel> Q') P\n   (bangRel Rel')\n\ngoal (6 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 2. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 3. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 4. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 5. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 6. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 2. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 3. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 4. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 5. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 6. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cPar2F \\<alpha> Q')"], ["proof (state)\nthis:\n  !Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  (?b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?b (\\<alpha> \\<prec> Q') ?b (bangRel Rel')\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (6 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 2. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 3. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 4. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 5. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 6. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have IH: \"\\<And>P. (P, !Q) \\<in> bangRel Rel \\<Longrightarrow> weakStepSimAct P (\\<alpha> \\<prec> Q') P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n       weakStepSimAct P (\\<alpha> \\<prec> Q') P (bangRel Rel')", "by fact+"], ["proof (state)\nthis:\n  (?P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?P (\\<alpha> \\<prec> Q') ?P (bangRel Rel')\n\ngoal (6 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 2. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 3. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 4. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 5. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 6. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel", "by fact"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (6 subgoals):\n 1. \\<And>\\<alpha> P' P.\n       \\<lbrakk>!Q \\<longmapsto> \\<alpha> \\<prec> P';\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (\\<alpha> \\<prec> P') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<alpha> \\<prec> Q \\<parallel> P') P\n                          (bangRel Rel')\n 2. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 3. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 4. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 5. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 6. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct P (\\<alpha> \\<prec> Q \\<parallel> Q') P (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<alpha> \\<prec> Q \\<parallel> Q')\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<alpha> \\<prec> Q \\<parallel> Q')\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<alpha> \\<prec> Q \\<parallel> Q')\n                          (P \\<parallel> R) (bangRel Rel')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R) (\\<alpha> \\<prec> Q \\<parallel> Q')\n     (P \\<parallel> R) (bangRel Rel')", "proof(induct rule: simActFreeCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "case Free"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "from RBangRelQ"], ["proof (chain)\npicking this:\n  (R, !Q) \\<in> bangRel Rel", "have \"weakStepSimAct R (\\<alpha> \\<prec> Q') R (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct R (\\<alpha> \\<prec> Q') R (bangRel Rel')", "by(rule IH)"], ["proof (state)\nthis:\n  weakStepSimAct R (\\<alpha> \\<prec> Q') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "then"], ["proof (chain)\npicking this:\n  weakStepSimAct R (\\<alpha> \\<prec> Q') R (bangRel Rel')", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> R'\" and R'BangRelQ': \"(R', Q') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  weakStepSimAct R (\\<alpha> \\<prec> Q') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R';\n         (R', Q') \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n  (R', Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "from RTrans"], ["proof (chain)\npicking this:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P \\<parallel> R'\""], ["proof (prove)\nusing this:\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'", "by(rule Weak_Late_Step_Semantics.Par2F)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "from PRelQ R'BangRelQ'"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  (R', Q') \\<in> bangRel Rel'", "have \"(P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  (R', Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'", "by(blast intro: RelRel' Rel.BRPar)"], ["proof (state)\nthis:\n  (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P \\<parallel> R'\n  (P \\<parallel> R', Q \\<parallel> Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q \\<parallel> Q') \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q \\<parallel> Q') \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R) (\\<alpha> \\<prec> Q \\<parallel> Q')\n   (P \\<parallel> R) (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P (\\<alpha> \\<prec> Q \\<parallel> Q') P (bangRel Rel')\n\ngoal (5 subgoals):\n 1. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 2. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 3. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 4. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 5. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 2. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 3. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 4. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 5. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cComm1 a x Q' b Q'' P)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  !Q \\<longmapsto> a[b] \\<prec> Q''\n  x \\<sharp> P\n  (?b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?b (a[b] \\<prec> Q'') ?b (bangRel Rel')\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (5 subgoals):\n 1. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 2. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 3. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 4. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 5. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have QTrans: \"Q \\<longmapsto> a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (5 subgoals):\n 1. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 2. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 3. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 4. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 5. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have IH: \"\\<And>P. (P, !Q) \\<in> bangRel Rel \\<Longrightarrow> weakStepSimAct P (a[b] \\<prec> Q'') P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n       weakStepSimAct P (a[b] \\<prec> Q'') P (bangRel Rel')", "by fact+"], ["proof (state)\nthis:\n  (?P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?P (a[b] \\<prec> Q'') ?P (bangRel Rel')\n\ngoal (5 subgoals):\n 1. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 2. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 3. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 4. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 5. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\" and \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel &&& x \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (5 subgoals):\n 1. \\<And>a x P' b P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a[b] \\<prec> P''; x \\<sharp> P;\n        \\<And>ba.\n           (ba, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct ba (a[b] \\<prec> P'') ba (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P'[x::=b] \\<parallel> P'') P\n                          (bangRel Rel')\n 2. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 3. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 4. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 5. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. weakStepSimAct P (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'') P\n     (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'')\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'')\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'')\n                          (P \\<parallel> R) (bangRel Rel')", "have \"x \\<sharp> P \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<parallel> R", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'')\n                          (P \\<parallel> R) (bangRel Rel')", "hence xFreshP: \"x \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> P", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'')\n                          (P \\<parallel> R) (bangRel Rel')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R)\n     (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'') (P \\<parallel> R)\n     (bangRel Rel')", "proof(induct rule: simActFreeCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "case Free"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"P \\<leadsto><Rel'> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel'> Q", "by(rule Sim)"], ["proof (state)\nthis:\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "with QTrans xFreshP"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n  P \\<leadsto><Rel'> Q", "obtain P' P'' where PTrans: \"P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\"\n                                              and P'RelQ': \"(P', Q'[x::=b]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'' P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=b]) \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=b]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "from RBangRelQ"], ["proof (chain)\npicking this:\n  (R, !Q) \\<in> bangRel Rel", "have \"weakStepSimAct R (a[b] \\<prec> Q'') R (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct R (a[b] \\<prec> Q'') R (bangRel Rel')", "by(rule IH)"], ["proof (state)\nthis:\n  weakStepSimAct R (a[b] \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "then"], ["proof (chain)\npicking this:\n  weakStepSimAct R (a[b] \\<prec> Q'') R (bangRel Rel')", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>la[b] \\<prec> R'\"\n                           and R'RelT': \"(R', Q'') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  weakStepSimAct R (a[b] \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R';\n         (R', Q'') \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R'\n  (R', Q'') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "from PTrans RTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R'", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> (P' \\<parallel> R')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lb in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a[b] \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'", "by(rule Weak_Late_Step_Semantics.Comm1)"], ["proof (state)\nthis:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "from P'RelQ' R'RelT'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=b]) \\<in> Rel'\n  (R', Q'') \\<in> bangRel Rel'", "have \"(P' \\<parallel> R', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=b]) \\<in> Rel'\n  (R', Q'') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "by(blast intro: RelRel' Rel.BRPar)"], ["proof (state)\nthis:\n  (P' \\<parallel> R', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n  (P' \\<parallel> R', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n  (P' \\<parallel> R', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', Q'[x::=b] \\<parallel> Q'') \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R)\n   (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'') (P \\<parallel> R)\n   (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P (\\<tau> \\<prec> Q'[x::=b] \\<parallel> Q'') P\n   (bangRel Rel')\n\ngoal (4 subgoals):\n 1. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 2. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 3. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 4. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 2. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 3. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 4. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cComm2 a b Q' x Q'' P)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n  !Q \\<longmapsto> a<x> \\<prec> Q''\n  x \\<sharp> P\n  (?b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?b (a<x> \\<prec> Q'') ?b (bangRel Rel')\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (4 subgoals):\n 1. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 2. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 3. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 4. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have QTrans: \"Q \\<longmapsto>a[b] \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a[b] \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n\ngoal (4 subgoals):\n 1. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 2. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 3. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 4. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have IH: \"\\<And>P. (P, !Q) \\<in> bangRel Rel \\<Longrightarrow> weakStepSimAct P (a<x> \\<prec> Q'') P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n       weakStepSimAct P (a<x> \\<prec> Q'') P (bangRel Rel')", "by fact"], ["proof (state)\nthis:\n  (?P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?P (a<x> \\<prec> Q'') ?P (bangRel Rel')\n\ngoal (4 subgoals):\n 1. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 2. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 3. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 4. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\" and \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel &&& x \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (4 subgoals):\n 1. \\<And>a b P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a[b] \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; x \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> P' \\<parallel> P''[x::=b]) P\n                          (bangRel Rel')\n 2. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 3. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 4. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. weakStepSimAct P (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b]) P\n     (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b])\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b])\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b])\n                          (P \\<parallel> R) (bangRel Rel')", "have \"x \\<sharp> P \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<parallel> R", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b])\n                          (P \\<parallel> R) (bangRel Rel')", "hence xFreshR: \"x \\<sharp> R\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> R", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b])\n                          (P \\<parallel> R) (bangRel Rel')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R)\n     (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b]) (P \\<parallel> R)\n     (bangRel Rel')", "proof(induct rule: simActFreeCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "case Free"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"P \\<leadsto><Rel'> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel'> Q", "by(rule Sim)"], ["proof (state)\nthis:\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "with QTrans"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n  P \\<leadsto><Rel'> Q", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la[b] \\<prec> P'\"\n                                  and P'RelQ': \"(P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a[b] \\<prec> Q'\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P';\n         (P', Q') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P'\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "from RBangRelQ"], ["proof (chain)\npicking this:\n  (R, !Q) \\<in> bangRel Rel", "have \"weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')", "by(rule IH)"], ["proof (state)\nthis:\n  weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "with xFreshR"], ["proof (chain)\npicking this:\n  x \\<sharp> R\n  weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')", "obtain R' R'' where RTrans: \"R \\<Longrightarrow>\\<^sub>lb in R''\\<rightarrow>a<x> \\<prec> R'\"\n                                       and R'BangRelQ'': \"(R', Q''[x::=b]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  x \\<sharp> R\n  weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. (\\<And>R'' R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>lb in R''\\<rightarrow>a<x> \\<prec> R';\n         (R', Q''[x::=b]) \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>lb in R''\\<rightarrow>a<x> \\<prec> R'\n  (R', Q''[x::=b]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "from PTrans RTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>lb in R''\\<rightarrow>a<x> \\<prec> R'", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> (P' \\<parallel> R')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a[b] \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>lb in R''\\<rightarrow>a<x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'", "by(rule Weak_Late_Step_Semantics.Comm2)"], ["proof (state)\nthis:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "from P'RelQ' R'BangRelQ''"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel'\n  (R', Q''[x::=b]) \\<in> bangRel Rel'", "have \"(P' \\<parallel> R', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel'\n  (R', Q''[x::=b]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (P' \\<parallel> R', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "by(rule Rel.BRPar)"], ["proof (state)\nthis:\n  (P' \\<parallel> R', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n  (P' \\<parallel> R', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<parallel> R'\n  (P' \\<parallel> R', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', Q' \\<parallel> Q''[x::=b]) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R)\n   (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b]) (P \\<parallel> R)\n   (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P (\\<tau> \\<prec> Q' \\<parallel> Q''[x::=b]) P\n   (bangRel Rel')\n\ngoal (3 subgoals):\n 1. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 2. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 3. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 2. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 3. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cClose1 a x Q' y Q'' P)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  !Q \\<longmapsto> a<\\<nu>y> \\<prec> Q''\n  y \\<sharp> Q\n  x \\<sharp> P\n  y \\<sharp> P\n  (?b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?b (a<\\<nu>y> \\<prec> Q'') ?b (bangRel Rel')\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (3 subgoals):\n 1. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 2. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 3. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have QTrans: \"Q \\<longmapsto> a<x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 2. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 3. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have IH: \"\\<And>P. (P, !Q) \\<in> bangRel Rel \\<Longrightarrow> weakStepSimAct P (a<\\<nu>y> \\<prec> Q'') P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n       weakStepSimAct P (a<\\<nu>y> \\<prec> Q'') P (bangRel Rel')", "by fact"], ["proof (state)\nthis:\n  (?P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?P (a<\\<nu>y> \\<prec> Q'') ?P (bangRel Rel')\n\ngoal (3 subgoals):\n 1. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 2. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 3. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\" and \"x \\<sharp> P\" and \"y \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel &&&\n    x \\<sharp> P &&& y \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n  y \\<sharp> P\n\ngoal (3 subgoals):\n 1. \\<And>a x P' y P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> P';\n        !Q \\<longmapsto> a<\\<nu>y> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<\\<nu>y> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P'[x::=y] \\<parallel>\n             P''))\n                          P (bangRel Rel')\n 2. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 3. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. weakStepSimAct P (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) P\n     (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel>\n             Q''))\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n  x \\<sharp> P \\<parallel> R\n  y \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel>\n             Q''))\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel>\n             Q''))\n                          (P \\<parallel> R) (bangRel Rel')", "have \"x \\<sharp> P \\<parallel> R\" and \"y \\<sharp> P \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<parallel> R &&& y \\<sharp> P \\<parallel> R", "by fact+"], ["proof (state)\nthis:\n  x \\<sharp> P \\<parallel> R\n  y \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel>\n             Q''))\n                          (P \\<parallel> R) (bangRel Rel')", "hence xFreshP: \"x \\<sharp> P\" and yFreshR: \"y \\<sharp> R\" and yFreshP: \"y \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<parallel> R\n  y \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& y \\<sharp> R &&& y \\<sharp> P", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  y \\<sharp> R\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel>\n             Q''))\n                          (P \\<parallel> R) (bangRel Rel')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R)\n     (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) (P \\<parallel> R)\n     (bangRel Rel')", "proof(induct rule: simActFreeCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "case Free"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"P \\<leadsto><Rel'> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel'> Q", "by(rule Sim)"], ["proof (state)\nthis:\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "with QTrans xFreshP"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n  P \\<leadsto><Rel'> Q", "obtain P' P'' where PTrans: \"P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\"\n                                              and P'RelQ': \"(P', Q'[x::=y]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'' P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=y]) \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=y]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "from RBangRelQ"], ["proof (chain)\npicking this:\n  (R, !Q) \\<in> bangRel Rel", "have \"weakStepSimAct R (a<\\<nu>y> \\<prec> Q'') R (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct R (a<\\<nu>y> \\<prec> Q'') R (bangRel Rel')", "by(rule IH)"], ["proof (state)\nthis:\n  weakStepSimAct R (a<\\<nu>y> \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "with yFreshR"], ["proof (chain)\npicking this:\n  y \\<sharp> R\n  weakStepSimAct R (a<\\<nu>y> \\<prec> Q'') R (bangRel Rel')", "obtain R' where RTrans: \"R \\<Longrightarrow>\\<^sub>la<\\<nu>y> \\<prec> R'\"\n                                   and R'BangRelQ'': \"(R', Q'') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  y \\<sharp> R\n  weakStepSimAct R (a<\\<nu>y> \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R';\n         (R', Q'') \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'\n  (R', Q'') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "from PTrans RTrans yFreshP yFreshR"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'\n  y \\<sharp> P\n  y \\<sharp> R", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>ly in P''\\<rightarrow>a<x> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> R'\n  y \\<sharp> P\n  y \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')", "by(rule Weak_Late_Step_Semantics.Close1)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "from P'RelQ' R'BangRelQ''"], ["proof (chain)\npicking this:\n  (P', Q'[x::=y]) \\<in> Rel'\n  (R', Q'') \\<in> bangRel Rel'", "have \"(<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=y]) \\<in> Rel'\n  (R', Q'') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> Q''))\n    \\<in> bangRel Rel'", "by(force intro: Rel.BRPar Rel.BRRes)"], ["proof (state)\nthis:\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> Q''))\n  \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> Q''))\n  \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q'[x::=y] \\<parallel> Q''))\n  \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R)\n   (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) (P \\<parallel> R)\n   (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P (\\<tau> \\<prec> <\\<nu>y>(Q'[x::=y] \\<parallel> Q'')) P\n   (bangRel Rel')\n\ngoal (2 subgoals):\n 1. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 2. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 2. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cClose2 a y Q' x Q'')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  !Q \\<longmapsto> a<x> \\<prec> Q''\n  y \\<sharp> Q\n  x \\<sharp> P\n  y \\<sharp> P\n  (?b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?b (a<x> \\<prec> Q'') ?b (bangRel Rel')\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 2. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have QTrans: \"Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 2. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have IH: \"\\<And>P. (P, !Q) \\<in> bangRel Rel \\<Longrightarrow> weakStepSimAct P (a<x> \\<prec> Q'') P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n       weakStepSimAct P (a<x> \\<prec> Q'') P (bangRel Rel')", "by fact"], ["proof (state)\nthis:\n  (?P, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?P (a<x> \\<prec> Q'') ?P (bangRel Rel')\n\ngoal (2 subgoals):\n 1. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 2. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\" and \"x \\<sharp> P\" and \"y \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q \\<parallel> !Q) \\<in> bangRel Rel &&&\n    x \\<sharp> P &&& y \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n  y \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>a y P' x P'' P.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> P';\n        !Q \\<longmapsto> a<x> \\<prec> P''; y \\<sharp> Q; x \\<sharp> P;\n        y \\<sharp> P;\n        \\<And>b.\n           (b, !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b (a<x> \\<prec> P'') b (bangRel Rel');\n        (P, Q \\<parallel> !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P\n                          (\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel>\n             P''[x::=y]))\n                          P (bangRel Rel')\n 2. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  x \\<sharp> P\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. weakStepSimAct P (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) P\n     (bangRel Rel')", "proof(induct rule: BRParCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel>\n             Q''[x::=y]))\n                          (P \\<parallel> R) (bangRel Rel')", "case(BRPar P R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n  x \\<sharp> P \\<parallel> R\n  y \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel>\n             Q''[x::=y]))\n                          (P \\<parallel> R) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\" and RBangRelQ: \"(R, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel &&& (R, !Q) \\<in> bangRel Rel", "by fact+"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel>\n             Q''[x::=y]))\n                          (P \\<parallel> R) (bangRel Rel')", "have \"x \\<sharp> P \\<parallel> R\" and \"y \\<sharp> P \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> P \\<parallel> R &&& y \\<sharp> P \\<parallel> R", "by fact+"], ["proof (state)\nthis:\n  x \\<sharp> P \\<parallel> R\n  y \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel>\n             Q''[x::=y]))\n                          (P \\<parallel> R) (bangRel Rel')", "hence xFreshR: \"x \\<sharp> R\" and yFreshR: \"y \\<sharp> R\" and yFreshP: \"y \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> P \\<parallel> R\n  y \\<sharp> P \\<parallel> R\n\ngoal (1 subgoal):\n 1. x \\<sharp> R &&& y \\<sharp> R &&& y \\<sharp> P", "by simp+"], ["proof (state)\nthis:\n  x \\<sharp> R\n  y \\<sharp> R\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>P R.\n       \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel;\n        x \\<sharp> P \\<parallel> R; y \\<sharp> P \\<parallel> R\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct (P \\<parallel> R)\n                          (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel>\n             Q''[x::=y]))\n                          (P \\<parallel> R) (bangRel Rel')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> R)\n     (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) (P \\<parallel> R)\n     (bangRel Rel')", "proof(induct rule: simActFreeCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "case Free"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"P \\<leadsto><Rel'> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel'> Q", "by(rule Sim)"], ["proof (state)\nthis:\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "with QTrans yFreshP"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P\n  P \\<leadsto><Rel'> Q", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>la<\\<nu>y> \\<prec> P'\"\n                                          and P'RelQ': \"(P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P\n  P \\<leadsto><Rel'> Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P';\n         (P', Q') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "from RBangRelQ"], ["proof (chain)\npicking this:\n  (R, !Q) \\<in> bangRel Rel", "have \"weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (R, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')", "by(rule IH)"], ["proof (state)\nthis:\n  weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "with xFreshR"], ["proof (chain)\npicking this:\n  x \\<sharp> R\n  weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')", "obtain R' R'' where RTrans: \"R \\<Longrightarrow>\\<^sub>ly in R''\\<rightarrow>a<x> \\<prec> R'\"\n                                       and R'BangRelT': \"(R', Q''[x::=y]) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  x \\<sharp> R\n  weakStepSimAct R (a<x> \\<prec> Q'') R (bangRel Rel')\n\ngoal (1 subgoal):\n 1. (\\<And>R'' R'.\n        \\<lbrakk>R \\<Longrightarrow>\\<^sub>ly in R''\\<rightarrow>a<x> \\<prec> R';\n         (R', Q''[x::=y]) \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  R \\<Longrightarrow>\\<^sub>ly in R''\\<rightarrow>a<x> \\<prec> R'\n  (R', Q''[x::=y]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "from PTrans RTrans yFreshP yFreshR"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>ly in R''\\<rightarrow>a<x> \\<prec> R'\n  y \\<sharp> P\n  y \\<sharp> R", "have \"P \\<parallel> R \\<Longrightarrow>\\<^sub>l\\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l a<\\<nu>y> \\<prec> P'\n  R \\<Longrightarrow>\\<^sub>ly in R''\\<rightarrow>a<x> \\<prec> R'\n  y \\<sharp> P\n  y \\<sharp> R\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')", "by(rule Weak_Late_Step_Semantics.Close2)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "moreover"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "from P'RelQ' R'BangRelT'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel'\n  (R', Q''[x::=y]) \\<in> bangRel Rel'", "have \"(<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel'\n  (R', Q''[x::=y]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q' \\<parallel> Q''[x::=y]))\n    \\<in> bangRel Rel'", "by(force intro: Rel.BRPar Rel.BRRes)"], ["proof (state)\nthis:\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q' \\<parallel> Q''[x::=y]))\n  \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q' \\<parallel> Q''[x::=y]))\n  \\<in> bangRel Rel'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> <\\<nu>y>(P' \\<parallel> R')\n  (<\\<nu>y>(P' \\<parallel> R'), <\\<nu>y>(Q' \\<parallel> Q''[x::=y]))\n  \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n       (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<parallel> R \\<Longrightarrow>\\<^sub>l \\<tau> \\<prec> P' \\<and>\n     (P', <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> R)\n   (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) (P \\<parallel> R)\n   (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P (\\<tau> \\<prec> <\\<nu>y>(Q' \\<parallel> Q''[x::=y])) P\n   (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "case(cBang Rs)"], ["proof (state)\nthis:\n  Q \\<parallel> !Q \\<longmapsto> Rs\n  (?b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?b Rs ?b (bangRel Rel')\n  (P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have IH: \"\\<And>P. (P, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n       weakStepSimAct P Rs P (bangRel Rel')", "by fact"], ["proof (state)\nthis:\n  (?P, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n  weakStepSimAct ?P Rs ?P (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "have \"(P, !Q) \\<in> bangRel Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, !Q) \\<in> bangRel Rel", "by fact"], ["proof (state)\nthis:\n  (P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>Rs P.\n       \\<lbrakk>Q \\<parallel> !Q \\<longmapsto> Rs;\n        \\<And>b.\n           (b, Q \\<parallel> !Q) \\<in> bangRel Rel \\<Longrightarrow>\n           weakStepSimAct b Rs b (bangRel Rel');\n        (P, !Q) \\<in> bangRel Rel\\<rbrakk>\n       \\<Longrightarrow> weakStepSimAct P Rs P (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  (P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct P Rs P (bangRel Rel')", "proof(induct rule: BRBangCases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       weakStepSimAct (!P) Rs (!P) (bangRel Rel')", "case(BRBang P)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       weakStepSimAct (!P) Rs (!P) (bangRel Rel')", "have PRelQ: \"(P, Q) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel", "by fact"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       weakStepSimAct (!P) Rs (!P) (bangRel Rel')", "hence \"(!P, !Q) \\<in> bangRel Rel\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (!P, !Q) \\<in> bangRel Rel", "by(rule Rel.BRBang)"], ["proof (state)\nthis:\n  (!P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       weakStepSimAct (!P) Rs (!P) (bangRel Rel')", "with PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  (!P, !Q) \\<in> bangRel Rel", "have \"(P \\<parallel> !P, Q \\<parallel> !Q) \\<in> bangRel Rel\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  (!P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. (P \\<parallel> !P, Q \\<parallel> !Q) \\<in> bangRel Rel", "by(rule Rel.BRPar)"], ["proof (state)\nthis:\n  (P \\<parallel> !P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       weakStepSimAct (!P) Rs (!P) (bangRel Rel')", "hence \"weakStepSimAct (P \\<parallel> !P) Rs (P \\<parallel> !P) (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (P \\<parallel> !P, Q \\<parallel> !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. weakStepSimAct (P \\<parallel> !P) Rs (P \\<parallel> !P) (bangRel Rel')", "by(rule IH)"], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> !P) Rs (P \\<parallel> !P) (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       weakStepSimAct (!P) Rs (!P) (bangRel Rel')", "thus ?case"], ["proof (prove)\nusing this:\n  weakStepSimAct (P \\<parallel> !P) Rs (P \\<parallel> !P) (bangRel Rel')\n\ngoal (1 subgoal):\n 1. weakStepSimAct (!P) Rs (!P) (bangRel Rel')", "proof(simp (no_asm) add: weakStepSimAct_def, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 3. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "fix Q' a x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 3. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "assume \"weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q') (P \\<parallel> !P) (bangRel Rel')\" and \"x \\<sharp> P\""], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n   (P \\<parallel> !P) (bangRel Rel')\n  x \\<sharp> P\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 3. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "then"], ["proof (chain)\npicking this:\n  weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n   (P \\<parallel> !P) (bangRel Rel')\n  x \\<sharp> P", "obtain P' where PTrans: \"(P \\<parallel> !P) \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P'\"\n                           and P'RelQ': \"(P', Q') \\<in> (bangRel Rel')\""], ["proof (prove)\nusing this:\n  weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n   (P \\<parallel> !P) (bangRel Rel')\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<parallel>\n                 !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> bangRel Rel'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 3. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'", "have \"!P \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Bang)"], ["proof (state)\nthis:\n  !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<\\<nu>x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 3. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> bangRel Rel'\n  !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'", "show \"\\<exists>P'. !P \\<Longrightarrow>\\<^sub>la<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> bangRel Rel'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> bangRel Rel'\n  !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     !P \\<Longrightarrow>\\<^sub>l a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> bangRel Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "fix Q' a x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "assume \"weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q') (P \\<parallel> !P) (bangRel Rel')\" and \"x \\<sharp> P\""], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q') (P \\<parallel> !P)\n   (bangRel Rel')\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "then"], ["proof (chain)\npicking this:\n  weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q') (P \\<parallel> !P)\n   (bangRel Rel')\n  x \\<sharp> P", "obtain P'' where L1: \"\\<forall>u. \\<exists>P'. P \\<parallel> !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> (bangRel Rel')\""], ["proof (prove)\nusing this:\n  weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q') (P \\<parallel> !P)\n   (bangRel Rel')\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<parallel>\n              !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> bangRel Rel' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "have \"\\<forall>u. \\<exists>P'. !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> (bangRel Rel')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> bangRel Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> bangRel Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> bangRel Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> bangRel Rel'", "obtain P' where PTrans: \"P \\<parallel> !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\"\n                                and P'RelQ': \"(P', Q'[x::=u]) \\<in> (bangRel Rel')\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<parallel>\n        !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<parallel>\n                 !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=u]) \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<parallel>\n  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> bangRel Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<parallel>\n  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'", "have \"!P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel>\n  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Bang)"], ["proof (state)\nthis:\n  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> bangRel Rel'", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q'[x::=u]) \\<in> bangRel Rel'\n  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'", "show \"\\<exists>P'. !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (P', Q'[x::=u]) \\<in> bangRel Rel'\n  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u]) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (a<x> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> bangRel Rel'\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "thus \"\\<exists>P''. \\<forall>u. \\<exists>P'. !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> (bangRel Rel')\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           !P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "fix Q' \\<alpha>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "assume \"weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q') (P \\<parallel> !P) (bangRel Rel')\""], ["proof (state)\nthis:\n  weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q') (P \\<parallel> !P)\n   (bangRel Rel')\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "then"], ["proof (chain)\npicking this:\n  weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q') (P \\<parallel> !P)\n   (bangRel Rel')", "obtain P' where PTrans: \"(P \\<parallel> !P) \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\"\n                           and P'RelQ': \"(P', Q') \\<in> (bangRel Rel')\""], ["proof (prove)\nusing this:\n  weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q') (P \\<parallel> !P)\n   (bangRel Rel')\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<parallel>\n                 !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P';\n         (P', Q') \\<in> bangRel Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp add: weakStepSimAct_def, blast)"], ["proof (state)\nthis:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n  (P', Q') \\<in> bangRel Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "have \"!P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "by(rule Weak_Late_Step_Semantics.Bang)"], ["proof (state)\nthis:\n  !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       \\<lbrakk>weakStepSimAct (P \\<parallel> !P) (\\<alpha> \\<prec> Q')\n                 (P \\<parallel> !P) (bangRel Rel');\n        Rs = \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> bangRel Rel'", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> bangRel Rel'\n  !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'", "show \"\\<exists>P'. !P \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> (bangRel Rel')\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> bangRel Rel'\n  !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> bangRel Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     !P \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> bangRel Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct (!P) Rs (!P) (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P Rs P (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weakStepSimAct P Rs P (bangRel Rel')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>!Q \\<longmapsto> ?Rs; (?P, !Q) \\<in> bangRel Rel\\<rbrakk>\n  \\<Longrightarrow> weakStepSimAct ?P ?Rs ?P (bangRel Rel')\n\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>!Q \\<longmapsto> ?Rs; (?P, !Q) \\<in> bangRel Rel\\<rbrakk>\n  \\<Longrightarrow> weakStepSimAct ?P ?Rs ?P (bangRel Rel')\n\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"(!P, !Q) \\<in> bangRel Rel\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (!P, !Q) \\<in> bangRel Rel", "by(rule Rel.BRBang)"], ["proof (state)\nthis:\n  (!P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>!Q \\<longmapsto> ?Rs; (?P, !Q) \\<in> bangRel Rel\\<rbrakk>\n  \\<Longrightarrow> weakStepSimAct ?P ?Rs ?P (bangRel Rel')\n  (!P, !Q) \\<in> bangRel Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>!Q \\<longmapsto> ?Rs; (?P, !Q) \\<in> bangRel Rel\\<rbrakk>\n  \\<Longrightarrow> weakStepSimAct ?P ?Rs ?P (bangRel Rel')\n  (!P, !Q) \\<in> bangRel Rel\n\ngoal (1 subgoal):\n 1. !P \\<leadsto><bangRel Rel'> !Q", "by(simp add: weakStepSim_def)"], ["proof (state)\nthis:\n  !P \\<leadsto><bangRel Rel'> !Q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}