{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Weak_Early_Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma weakTransitionI:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n\n  shows \"P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and   \"P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P\"", "lemma transitionCases[consumes 1, case_names Step Stay]:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and     \"P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<Longrightarrow> F \\<alpha> P'\"\n  and     \"F (\\<tau>) P\"\n\n  shows \"F \\<alpha> P'\"", "lemma singleActionChain:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n\n  assumes \"P \\<longmapsto>\\<alpha> \\<prec> P'\"\n\n  shows \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"", "lemma Tau:\n  fixes P :: pi\n\n  shows \"\\<tau>.(P) \\<Longrightarrow>\\<^sup>^ \\<tau> \\<prec>  P\"", "lemma Input:\n  fixes a :: name\n  and   x :: name\n  and   u :: name\n  and   P :: pi\n\n  shows \"a<x>.P \\<Longrightarrow>\\<^sup>^ a<u> \\<prec> P[x::=u]\"", "lemma Output:\n  fixes a :: name\n  and   b :: name\n  and   P :: pi\n\n  shows \"a{b}.P \\<Longrightarrow>\\<^sup>^a[b] \\<prec> P\"", "lemma Par1F:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n  and   Q  :: pi\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> (P' \\<parallel> Q)\"", "lemma Par2F:\n  fixes Q :: pi\n  and   \\<alpha>  :: freeRes\n  and   Q' :: pi\n  and   P  :: pi\n\n  assumes QTrans: \"Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> Q'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> (P \\<parallel> Q')\"", "lemma ResF:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n  and   x  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and     \"x \\<sharp> \\<alpha>\"\n\n  shows \"<\\<nu>x>P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> <\\<nu>x>P'\"", "lemma Bang:\n  fixes P  :: pi\n  and   Rs :: residual\n\n  assumes \"P \\<parallel> !P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and     \"P' \\<noteq> P \\<parallel> !P\"\n  \n  shows \"!P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"", "lemma tauTransitionChain[simp]:\n  fixes P  :: pi\n  and   P' :: pi\n\n  shows \"P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P' = P \\<Longrightarrow>\\<^sub>\\<tau> P'\"", "lemma tauStepTransitionChain[simp]:\n  fixes P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<noteq> P'\"\n\n  shows \"P \\<Longrightarrow>\\<tau> \\<prec> P' = P \\<Longrightarrow>\\<^sub>\\<tau> P'\"", "lemma chainTransitionAppend:\n  fixes P   :: pi\n  and   P'  :: pi\n  and   Rs  :: residual\n  and   a   :: name\n  and   x   :: name\n  and   P'' :: pi\n  and   \\<alpha>   :: freeRes\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<Longrightarrow> P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'  \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and   \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'' \\<Longrightarrow> P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"", "lemma freshTauTransition:\n  fixes P :: pi\n  and   c :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P'\"\n  and     \"c \\<sharp> P\"\n\n  shows \"c \\<sharp> P'\"", "lemma freshOutputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n  and   c  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^a[b] \\<prec> P'\"\n  and     \"c \\<sharp> P\"\n\n  shows \"c \\<sharp> P'\"", "lemma eqvtI:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n  and   p  :: \"name prm\"\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n\n  shows \"(p \\<bullet> P) \\<Longrightarrow>\\<^sup>^(p \\<bullet> \\<alpha>) \\<prec> (p \\<bullet> P')\"", "lemma freshInputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n  and   c  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^a<b> \\<prec> P'\"\n  and     \"c \\<sharp> P\"\n  and     \"c \\<noteq> b\"\n\n  shows \"c \\<sharp> P'\"", "lemmas freshTransition = freshBoundOutputTransition freshOutputTransition\n                         freshInputTransition freshTauTransition"], "translations": [["", "lemma weakTransitionI:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n\n  shows \"P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and   \"P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<Longrightarrow>\n     P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P') &&&\n    P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P", "by(auto simp add: weakFreeTransition_def)"], ["", "lemma transitionCases[consumes 1, case_names Step Stay]:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and     \"P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<Longrightarrow> F \\<alpha> P'\"\n  and     \"F (\\<tau>) P\"\n\n  shows \"F \\<alpha> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<alpha> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\n  P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<Longrightarrow> F \\<alpha> P'\n  F (\\<tau>) P\n\ngoal (1 subgoal):\n 1. F \\<alpha> P'", "by(auto simp add: weakFreeTransition_def)"], ["", "lemma singleActionChain:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n\n  assumes \"P \\<longmapsto>\\<alpha> \\<prec> P'\"\n\n  shows \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'", "by(auto dest: singleActionChain intro: weakTransitionI)"], ["", "lemma Tau:\n  fixes P :: pi\n\n  shows \"\\<tau>.(P) \\<Longrightarrow>\\<^sup>^ \\<tau> \\<prec>  P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P", "by(auto intro: Weak_Early_Step_Semantics.Tau\n   simp add: weakFreeTransition_def)"], ["", "lemma Input:\n  fixes a :: name\n  and   x :: name\n  and   u :: name\n  and   P :: pi\n\n  shows \"a<x>.P \\<Longrightarrow>\\<^sup>^ a<u> \\<prec> P[x::=u]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<Longrightarrow>\\<^sup>^a<u> \\<prec> P[x::=u]", "by(auto intro: Weak_Early_Step_Semantics.Input\n   simp add: weakFreeTransition_def)"], ["", "lemma Output:\n  fixes a :: name\n  and   b :: name\n  and   P :: pi\n\n  shows \"a{b}.P \\<Longrightarrow>\\<^sup>^a[b] \\<prec> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<Longrightarrow>\\<^sup>^a[b] \\<prec> P", "by(auto intro: Weak_Early_Step_Semantics.Output\n   simp add: weakFreeTransition_def)"], ["", "lemma Par1F:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n  and   Q  :: pi\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> (P' \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P' \\<parallel> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P' \\<parallel> Q", "by(auto intro: Weak_Early_Step_Semantics.Par1F\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemma Par2F:\n  fixes Q :: pi\n  and   \\<alpha>  :: freeRes\n  and   Q' :: pi\n  and   P  :: pi\n\n  assumes QTrans: \"Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> Q'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> (P \\<parallel> Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P \\<parallel> Q'", "using assms"], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    Q \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P \\<parallel> Q'", "by(auto intro: Weak_Early_Step_Semantics.Par2F\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemma ResF:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n  and   x  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and     \"x \\<sharp> \\<alpha>\"\n\n  shows \"<\\<nu>x>P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> <\\<nu>x>P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> <\\<nu>x>P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\n  x \\<sharp> \\<alpha>\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> <\\<nu>x>P'", "by(auto intro: Weak_Early_Step_Semantics.ResF\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemma Bang:\n  fixes P  :: pi\n  and   Rs :: residual\n\n  assumes \"P \\<parallel> !P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and     \"P' \\<noteq> P \\<parallel> !P\"\n  \n  shows \"!P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\n  P' \\<noteq> P \\<parallel> !P\n\ngoal (1 subgoal):\n 1. !P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'", "by(auto intro: Weak_Early_Step_Semantics.Bang\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemma tauTransitionChain[simp]:\n  fixes P  :: pi\n  and   P' :: pi\n\n  shows \"P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P' = P \\<Longrightarrow>\\<^sub>\\<tau> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P' =\n    P \\<Longrightarrow>\\<^sub>\\<tau> P'", "apply(auto dest: Weak_Early_Step_Semantics.tauTransitionChain\n      simp add: weakFreeTransition_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(P, P')\n             \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n     P \\<noteq> P'\\<rbrakk>\n    \\<Longrightarrow> P \\<Longrightarrow>\\<tau> \\<prec> P'", "by(erule rtrancl.cases) (auto intro: transitionI)"], ["", "lemma tauStepTransitionChain[simp]:\n  fixes P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<noteq> P'\"\n\n  shows \"P \\<Longrightarrow>\\<tau> \\<prec> P' = P \\<Longrightarrow>\\<^sub>\\<tau> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<tau> \\<prec> P' =\n    P \\<Longrightarrow>\\<^sub>\\<tau> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<noteq> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<tau> \\<prec> P' =\n    P \\<Longrightarrow>\\<^sub>\\<tau> P'", "apply(auto dest: Weak_Early_Step_Semantics.tauTransitionChain\n      simp add: weakFreeTransition_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<noteq> P';\n     (P, P')\n     \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> P \\<Longrightarrow>\\<tau> \\<prec> P'", "by(erule rtrancl.cases) (auto intro: transitionI)"], ["", "lemma chainTransitionAppend:\n  fixes P   :: pi\n  and   P'  :: pi\n  and   Rs  :: residual\n  and   a   :: name\n  and   x   :: name\n  and   P'' :: pi\n  and   \\<alpha>   :: freeRes\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<Longrightarrow> P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'  \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n  and   \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'' \\<Longrightarrow> P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n      P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\\<rbrakk>\n     \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P') &&&\n    (\\<lbrakk>P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'';\n      P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\\<rbrakk>\n     \\<Longrightarrow> P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P')", "by(auto intro: chainTransitionAppend simp add: weakFreeTransition_def dest: Weak_Early_Step_Semantics.tauTransitionChain)"], ["", "lemma freshTauTransition:\n  fixes P :: pi\n  and   c :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P'\"\n  and     \"c \\<sharp> P\"\n\n  shows \"c \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sharp> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sup>^\\<tau> \\<prec> P'\n  c \\<sharp> P\n\ngoal (1 subgoal):\n 1. c \\<sharp> P'", "by(auto intro: Weak_Early_Step_Semantics.freshTauTransition\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemma freshOutputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n  and   c  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^a[b] \\<prec> P'\"\n  and     \"c \\<sharp> P\"\n\n  shows \"c \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sharp> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sup>^a[b] \\<prec> P'\n  c \\<sharp> P\n\ngoal (1 subgoal):\n 1. c \\<sharp> P'", "by(auto intro: Weak_Early_Step_Semantics.freshOutputTransition\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemma eqvtI:\n  fixes P  :: pi\n  and   \\<alpha>  :: freeRes\n  and   P' :: pi\n  and   p  :: \"name prm\"\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\"\n\n  shows \"(p \\<bullet> P) \\<Longrightarrow>\\<^sup>^(p \\<bullet> \\<alpha>) \\<prec> (p \\<bullet> P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet>\n    P \\<Longrightarrow>\\<^sup>^p \\<bullet> \\<alpha> \\<prec> p \\<bullet> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    P \\<Longrightarrow>\\<^sup>^p \\<bullet> \\<alpha> \\<prec> p \\<bullet> P'", "by(auto intro: Weak_Early_Step_Semantics.eqvtI\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemma freshInputTransition:\n  fixes P  :: pi\n  and   a  :: name\n  and   b  :: name\n  and   P' :: pi\n  and   c  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sup>^a<b> \\<prec> P'\"\n  and     \"c \\<sharp> P\"\n  and     \"c \\<noteq> b\"\n\n  shows \"c \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sharp> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sup>^a<b> \\<prec> P'\n  c \\<sharp> P\n  c \\<noteq> b\n\ngoal (1 subgoal):\n 1. c \\<sharp> P'", "by(auto intro: Weak_Early_Step_Semantics.freshInputTransition\n   simp add: weakFreeTransition_def residual.inject)"], ["", "lemmas freshTransition = freshBoundOutputTransition freshOutputTransition\n                         freshInputTransition freshTauTransition"], ["", "end"]]}