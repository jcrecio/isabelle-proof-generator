{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Strong_Late_Bisim_Pres.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma tauPres:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"\\<tau>.(P) \\<sim> \\<tau>.(Q)\"", "lemma inputPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   x :: name\n\n  assumes PSimQ: \"\\<forall>y. P[x::=y] \\<sim> Q[x::=y]\"\n  \n  shows \"a<x>.P \\<sim> a<x>.Q\"", "lemma outputPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   b :: name\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"a{b}.P \\<sim> a{b}.Q\"", "lemma matchPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   b :: name\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"[a\\<frown>b]P \\<sim> [a\\<frown>b]Q\"", "lemma mismatchPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   b :: name\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"[a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q\"", "lemma sumPres: \n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"P \\<oplus> R \\<sim> Q \\<oplus> R\"", "lemma resPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n  \n  assumes \"P \\<sim> Q\"\n\n  shows \"<\\<nu>x>P \\<sim> <\\<nu>x>Q\"", "lemma parPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"P \\<parallel> R \\<sim> Q \\<parallel> R\"", "lemma bangPres:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes PBiSimQ: \"P \\<sim> Q\"\n\n  shows \"!P \\<sim> !Q\""], "translations": [["", "lemma tauPres:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"\\<tau>.(P) \\<sim> \\<tau>.(Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<sim> \\<tau>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<sim> \\<tau>.Q", "let ?X = \"{(\\<tau>.(P), \\<tau>.(Q)), (\\<tau>.(Q), \\<tau>.(P))}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<tau>.P \\<sim> \\<tau>.Q", "have \"(\\<tau>.(P), \\<tau>.(Q)) \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<tau>.P, \\<tau>.Q) \\<in> {(\\<tau>.P, \\<tau>.Q), (\\<tau>.Q, \\<tau>.P)}", "by auto"], ["proof (state)\nthis:\n  (\\<tau>.P, \\<tau>.Q) \\<in> {(\\<tau>.P, \\<tau>.Q), (\\<tau>.Q, \\<tau>.P)}\n\ngoal (1 subgoal):\n 1. \\<tau>.P \\<sim> \\<tau>.Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<tau>.P, \\<tau>.Q) \\<in> {(\\<tau>.P, \\<tau>.Q), (\\<tau>.Q, \\<tau>.P)}\n\ngoal (1 subgoal):\n 1. \\<tau>.P \\<sim> \\<tau>.Q", "using \\<open>P \\<sim> Q\\<close>"], ["proof (prove)\nusing this:\n  (\\<tau>.P, \\<tau>.Q) \\<in> {(\\<tau>.P, \\<tau>.Q), (\\<tau>.Q, \\<tau>.P)}\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<tau>.P \\<sim> \\<tau>.Q", "by(coinduct rule: bisimCoinduct)\n      (auto intro: Strong_Late_Sim_Pres.tauPres dest: symmetric)"], ["proof (state)\nthis:\n  \\<tau>.P \\<sim> \\<tau>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inputPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   x :: name\n\n  assumes PSimQ: \"\\<forall>y. P[x::=y] \\<sim> Q[x::=y]\"\n  \n  shows \"a<x>.P \\<sim> a<x>.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "let ?X = \"{(a<x>.P, a<x>.Q) | a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "fix axP axQ p"], ["proof (state)\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "assume \"(axP, axQ) \\<in> ?X\""], ["proof (state)\nthis:\n  (axP, axQ)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "then"], ["proof (chain)\npicking this:\n  (axP, axQ)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "obtain a x P Q where A: \"\\<forall>y. P[x::=y] \\<sim> Q[x::=y]\" and B: \"axP = a<x>.P\" and C: \"axQ = a<x>.Q\""], ["proof (prove)\nusing this:\n  (axP, axQ)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. (\\<And>P x Q a.\n        \\<lbrakk>\\<forall>y. P[x::=y] \\<sim> Q[x::=y]; axP = a<x>.P;\n         axQ = a<x>.Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. P[x::=y] \\<sim> Q[x::=y]\n  axP = a<x>.P\n  axQ = a<x>.Q\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "have \"\\<And>y. ((p::name prm) \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim> (p \\<bullet> Q)[(p \\<bullet> x)::=y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       (p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim>\n       (p \\<bullet> Q)[(p \\<bullet> x)::=y]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       (p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim>\n       (p \\<bullet> Q)[(p \\<bullet> x)::=y]", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       (p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim>\n       (p \\<bullet> Q)[(p \\<bullet> x)::=y]", "from A"], ["proof (chain)\npicking this:\n  \\<forall>y. P[x::=y] \\<sim> Q[x::=y]", "have \"P[x::=(rev p \\<bullet> y)] \\<sim> Q[x::=(rev p \\<bullet> y)]\""], ["proof (prove)\nusing this:\n  \\<forall>y. P[x::=y] \\<sim> Q[x::=y]\n\ngoal (1 subgoal):\n 1. P[x::=(rev p \\<bullet> y)] \\<sim> Q[x::=(rev p \\<bullet> y)]", "by blast"], ["proof (state)\nthis:\n  P[x::=(rev p \\<bullet> y)] \\<sim> Q[x::=(rev p \\<bullet> y)]\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       (p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim>\n       (p \\<bullet> Q)[(p \\<bullet> x)::=y]", "hence \"(p \\<bullet> (P[x::=(rev p \\<bullet> y)])) \\<sim> p \\<bullet> (Q[x::=(rev p \\<bullet> y)])\""], ["proof (prove)\nusing this:\n  P[x::=(rev p \\<bullet> y)] \\<sim> Q[x::=(rev p \\<bullet> y)]\n\ngoal (1 subgoal):\n 1. p \\<bullet> P[x::=(rev p \\<bullet> y)] \\<sim>\n    p \\<bullet> Q[x::=(rev p \\<bullet> y)]", "by(rule bisimClosed)"], ["proof (state)\nthis:\n  p \\<bullet> P[x::=(rev p \\<bullet> y)] \\<sim>\n  p \\<bullet> Q[x::=(rev p \\<bullet> y)]\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       (p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim>\n       (p \\<bullet> Q)[(p \\<bullet> x)::=y]", "thus \"(p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim> (p \\<bullet> Q)[(p \\<bullet> x)::=y]\""], ["proof (prove)\nusing this:\n  p \\<bullet> P[x::=(rev p \\<bullet> y)] \\<sim>\n  p \\<bullet> Q[x::=(rev p \\<bullet> y)]\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim>\n    (p \\<bullet> Q)[(p \\<bullet> x)::=y]", "by(simp add: eqvts pt_pi_rev[OF pt_name_inst, OF at_name_inst])"], ["proof (state)\nthis:\n  (p \\<bullet> P)[(p \\<bullet> x)::=y] \\<sim>\n  (p \\<bullet> Q)[(p \\<bullet> x)::=y]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p \\<bullet> P)[(p \\<bullet> x)::=?y] \\<sim>\n  (p \\<bullet> Q)[(p \\<bullet> x)::=?y]\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "hence \"((p::name prm) \\<bullet> axP, p \\<bullet> axQ) \\<in> ?X\""], ["proof (prove)\nusing this:\n  (p \\<bullet> P)[(p \\<bullet> x)::=?y] \\<sim>\n  (p \\<bullet> Q)[(p \\<bullet> x)::=?y]\n\ngoal (1 subgoal):\n 1. (p \\<bullet> axP, p \\<bullet> axQ)\n    \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "using B C"], ["proof (prove)\nusing this:\n  (p \\<bullet> P)[(p \\<bullet> x)::=?y] \\<sim>\n  (p \\<bullet> Q)[(p \\<bullet> x)::=?y]\n  axP = a<x>.P\n  axQ = a<x>.Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> axP, p \\<bullet> axQ)\n    \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "by auto"], ["proof (state)\nthis:\n  (p \\<bullet> axP, p \\<bullet> axQ)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "}"], ["proof (state)\nthis:\n  (?axP2, ?axQ2)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n  (?p2 \\<bullet> ?axP2, ?p2 \\<bullet> ?axQ2)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "hence \"eqvt ?X\""], ["proof (prove)\nusing this:\n  (?axP2, ?axQ2)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n         \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n  (?p2 \\<bullet> ?axP2, ?p2 \\<bullet> ?axQ2)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. eqvt {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "by(simp add: eqvt_def)"], ["proof (state)\nthis:\n  eqvt {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "from PSimQ"], ["proof (chain)\npicking this:\n  \\<forall>y. P[x::=y] \\<sim> Q[x::=y]", "have \"(a<x>.P, a<x>.Q) \\<in> ?X\""], ["proof (prove)\nusing this:\n  \\<forall>y. P[x::=y] \\<sim> Q[x::=y]\n\ngoal (1 subgoal):\n 1. (a<x>.P, a<x>.Q)\n    \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "by auto"], ["proof (state)\nthis:\n  (a<x>.P, a<x>.Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (a<x>.P, a<x>.Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. a<x>.P \\<sim> a<x>.Q", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       R \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                      \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       R \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                      \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                   \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                  bisim)] Q", "using \\<open>eqvt ?X\\<close>"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n  eqvt {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                   \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                  bisim)] Q", "by(force intro: inputPres)"], ["proof (state)\nthis:\n  P \\<leadsto>[({(a<x>.P, a<x>.Q) |a x P Q.\n                 \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<union>\n                bisim)] Q\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(a<x>.P, a<x>.Q) |a x P Q.\n              \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal (1 subgoal):\n 1. (Q, P)\n    \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}", "by(blast dest: symmetric)"], ["proof (state)\nthis:\n  (Q, P)\n  \\<in> {(a<x>.P, a<x>.Q) |a x P Q. \\<forall>y. P[x::=y] \\<sim> Q[x::=y]}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a<x>.P \\<sim> a<x>.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma outputPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   b :: name\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"a{b}.P \\<sim> a{b}.Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a{b}.P \\<sim> a{b}.Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a{b}.P \\<sim> a{b}.Q", "let ?X = \"{(a{b}.P, a{b}.Q), (a{b}.Q, a{b}.P)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. a{b}.P \\<sim> a{b}.Q", "have \"(a{b}.P, a{b}.Q) \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a{b}.P, a{b}.Q) \\<in> {(a{b}.P, a{b}.Q), (a{b}.Q, a{b}.P)}", "by auto"], ["proof (state)\nthis:\n  (a{b}.P, a{b}.Q) \\<in> {(a{b}.P, a{b}.Q), (a{b}.Q, a{b}.P)}\n\ngoal (1 subgoal):\n 1. a{b}.P \\<sim> a{b}.Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (a{b}.P, a{b}.Q) \\<in> {(a{b}.P, a{b}.Q), (a{b}.Q, a{b}.P)}\n\ngoal (1 subgoal):\n 1. a{b}.P \\<sim> a{b}.Q", "using \\<open>P \\<sim> Q\\<close>"], ["proof (prove)\nusing this:\n  (a{b}.P, a{b}.Q) \\<in> {(a{b}.P, a{b}.Q), (a{b}.Q, a{b}.P)}\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. a{b}.P \\<sim> a{b}.Q", "by(coinduct rule: bisimCoinduct)\n      (auto intro: Strong_Late_Sim_Pres.outputPres dest: symmetric)"], ["proof (state)\nthis:\n  a{b}.P \\<sim> a{b}.Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matchPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   b :: name\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"[a\\<frown>b]P \\<sim> [a\\<frown>b]Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<sim> [a\\<frown>b]Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<sim> [a\\<frown>b]Q", "let ?X = \"{([a\\<frown>b]P, [a\\<frown>b]Q), ([a\\<frown>b]Q, [a\\<frown>b]P)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<sim> [a\\<frown>b]Q", "have \"([a\\<frown>b]P, [a\\<frown>b]Q) \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([a\\<frown>b]P, [a\\<frown>b]Q)\n    \\<in> {([a\\<frown>b]P, [a\\<frown>b]Q), ([a\\<frown>b]Q, [a\\<frown>b]P)}", "by auto"], ["proof (state)\nthis:\n  ([a\\<frown>b]P, [a\\<frown>b]Q)\n  \\<in> {([a\\<frown>b]P, [a\\<frown>b]Q), ([a\\<frown>b]Q, [a\\<frown>b]P)}\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<sim> [a\\<frown>b]Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  ([a\\<frown>b]P, [a\\<frown>b]Q)\n  \\<in> {([a\\<frown>b]P, [a\\<frown>b]Q), ([a\\<frown>b]Q, [a\\<frown>b]P)}\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<sim> [a\\<frown>b]Q", "using \\<open>P \\<sim> Q\\<close>"], ["proof (prove)\nusing this:\n  ([a\\<frown>b]P, [a\\<frown>b]Q)\n  \\<in> {([a\\<frown>b]P, [a\\<frown>b]Q), ([a\\<frown>b]Q, [a\\<frown>b]P)}\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. [a\\<frown>b]P \\<sim> [a\\<frown>b]Q", "by(coinduct rule: bisimCoinduct)\n      (auto intro: Strong_Late_Sim_Pres.matchPres dest: symmetric bisimE)"], ["proof (state)\nthis:\n  [a\\<frown>b]P \\<sim> [a\\<frown>b]Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mismatchPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   a :: name\n  and   b :: name\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"[a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q", "let ?X = \"{([a\\<noteq>b]P, [a\\<noteq>b]Q), ([a\\<noteq>b]Q, [a\\<noteq>b]P)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q", "have \"([a\\<noteq>b]P, [a\\<noteq>b]Q) \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([a\\<noteq>b]P, [a\\<noteq>b]Q)\n    \\<in> {([a\\<noteq>b]P, [a\\<noteq>b]Q), ([a\\<noteq>b]Q, [a\\<noteq>b]P)}", "by auto"], ["proof (state)\nthis:\n  ([a\\<noteq>b]P, [a\\<noteq>b]Q)\n  \\<in> {([a\\<noteq>b]P, [a\\<noteq>b]Q), ([a\\<noteq>b]Q, [a\\<noteq>b]P)}\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  ([a\\<noteq>b]P, [a\\<noteq>b]Q)\n  \\<in> {([a\\<noteq>b]P, [a\\<noteq>b]Q), ([a\\<noteq>b]Q, [a\\<noteq>b]P)}\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q", "using \\<open>P \\<sim> Q\\<close>"], ["proof (prove)\nusing this:\n  ([a\\<noteq>b]P, [a\\<noteq>b]Q)\n  \\<in> {([a\\<noteq>b]P, [a\\<noteq>b]Q), ([a\\<noteq>b]Q, [a\\<noteq>b]P)}\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. [a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q", "by(coinduct rule: bisimCoinduct)\n      (auto intro: Strong_Late_Sim_Pres.mismatchPres dest: symmetric bisimE)"], ["proof (state)\nthis:\n  [a\\<noteq>b]P \\<sim> [a\\<noteq>b]Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sumPres: \n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"P \\<oplus> R \\<sim> Q \\<oplus> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<sim> Q \\<oplus> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<sim> Q \\<oplus> R", "let ?X = \"{(P \\<oplus> R, Q \\<oplus> R), (Q \\<oplus> R, P \\<oplus> R)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<sim> Q \\<oplus> R", "have \"(P \\<oplus> R, Q \\<oplus> R) \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<oplus> R, Q \\<oplus> R)\n    \\<in> {(P \\<oplus> R, Q \\<oplus> R), (Q \\<oplus> R, P \\<oplus> R)}", "by auto"], ["proof (state)\nthis:\n  (P \\<oplus> R, Q \\<oplus> R)\n  \\<in> {(P \\<oplus> R, Q \\<oplus> R), (Q \\<oplus> R, P \\<oplus> R)}\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<sim> Q \\<oplus> R", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P \\<oplus> R, Q \\<oplus> R)\n  \\<in> {(P \\<oplus> R, Q \\<oplus> R), (Q \\<oplus> R, P \\<oplus> R)}\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<sim> Q \\<oplus> R", "using \\<open>P \\<sim> Q\\<close>"], ["proof (prove)\nusing this:\n  (P \\<oplus> R, Q \\<oplus> R)\n  \\<in> {(P \\<oplus> R, Q \\<oplus> R), (Q \\<oplus> R, P \\<oplus> R)}\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> R \\<sim> Q \\<oplus> R", "by(coinduct rule: bisimCoinduct)\n      (auto intro: Strong_Late_Sim_Pres.sumPres reflexive dest: symmetric bisimE)"], ["proof (state)\nthis:\n  P \\<oplus> R \\<sim> Q \\<oplus> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma resPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   x :: name\n  \n  assumes \"P \\<sim> Q\"\n\n  shows \"<\\<nu>x>P \\<sim> <\\<nu>x>Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<sim> <\\<nu>x>Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<sim> <\\<nu>x>Q", "let ?X = \"{x. \\<exists>P Q. P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\""], ["proof (state)\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<sim> <\\<nu>x>Q", "from \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "have \"(<\\<nu>x>P, <\\<nu>x>Q) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. (<\\<nu>x>P, <\\<nu>x>Q)\n    \\<in> {x. \\<exists>P Q.\n                 P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "by blast"], ["proof (state)\nthis:\n  (<\\<nu>x>P, <\\<nu>x>Q)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<sim> <\\<nu>x>Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (<\\<nu>x>P, <\\<nu>x>Q)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (1 subgoal):\n 1. <\\<nu>x>P \\<sim> <\\<nu>x>Q", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "case(cSim xP xQ)"], ["proof (state)\nthis:\n  (xP, xQ)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "{"], ["proof (state)\nthis:\n  (xP, xQ)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "fix P Q a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "assume PSimQ: \"P \\<leadsto>[bisim] Q\""], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "have \"\\<And>P Q a. P \\<sim> Q \\<Longrightarrow> (<\\<nu>a>P, <\\<nu>a>Q) \\<in> ?X \\<union> bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       P \\<sim> Q \\<Longrightarrow>\n       (<\\<nu>a>P, <\\<nu>a>Q)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n             bisim", "by blast"], ["proof (state)\nthis:\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (<\\<nu>?a>?P, <\\<nu>?a>?Q)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and>\n               (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n        bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "moreover"], ["proof (state)\nthis:\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (<\\<nu>?a>?P, <\\<nu>?a>?Q)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and>\n               (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n        bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "have \"bisim \\<subseteq> ?X \\<union> bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim\n    \\<subseteq> {x. \\<exists>P Q.\n                       P \\<sim> Q \\<and>\n                       (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                bisim", "by blast"], ["proof (state)\nthis:\n  bisim\n  \\<subseteq> {x. \\<exists>P Q.\n                     P \\<sim> Q \\<and>\n                     (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n              bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "moreover"], ["proof (state)\nthis:\n  bisim\n  \\<subseteq> {x. \\<exists>P Q.\n                     P \\<sim> Q \\<and>\n                     (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n              bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "have \"eqvt bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt bisim", "by simp"], ["proof (state)\nthis:\n  eqvt bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "moreover"], ["proof (state)\nthis:\n  eqvt bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "have \"eqvt ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt\n     {x. \\<exists>P Q.\n            P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "by(auto simp add: eqvt_def) (blast intro: bisimClosed)"], ["proof (state)\nthis:\n  eqvt\n   {x. \\<exists>P Q.\n          P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "hence \"eqvt (?X \\<union> bisim)\""], ["proof (prove)\nusing this:\n  eqvt\n   {x. \\<exists>P Q.\n          P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (1 subgoal):\n 1. eqvt\n     ({x. \\<exists>P Q.\n             P \\<sim> Q \\<and>\n             (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n      bisim)", "by auto"], ["proof (state)\nthis:\n  eqvt\n   ({x. \\<exists>P Q.\n           P \\<sim> Q \\<and>\n           (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n    bisim)\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (<\\<nu>?a>?P, <\\<nu>?a>?Q)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and>\n               (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n        bisim\n  bisim\n  \\<subseteq> {x. \\<exists>P Q.\n                     P \\<sim> Q \\<and>\n                     (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n              bisim\n  eqvt bisim\n  eqvt\n   ({x. \\<exists>P Q.\n           P \\<sim> Q \\<and>\n           (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n    bisim)", "have \"<\\<nu>a>P \\<leadsto>[(?X \\<union> bisim)] <\\<nu>a>Q\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (<\\<nu>?a>?P, <\\<nu>?a>?Q)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and>\n               (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n        bisim\n  bisim\n  \\<subseteq> {x. \\<exists>P Q.\n                     P \\<sim> Q \\<and>\n                     (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n              bisim\n  eqvt bisim\n  eqvt\n   ({x. \\<exists>P Q.\n           P \\<sim> Q \\<and>\n           (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n    bisim)\n\ngoal (1 subgoal):\n 1. <\\<nu>a>P \\<leadsto>[({x. \\<exists>P Q.\n                                 P \\<sim> Q \\<and>\n                                 (\\<exists>a.\n                                     x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                          bisim)] <\\<nu>a>Q", "by(rule Strong_Late_Sim_Pres.resPres)"], ["proof (state)\nthis:\n  <\\<nu>a>P \\<leadsto>[({x. \\<exists>P Q.\n                               P \\<sim> Q \\<and>\n                               (\\<exists>a.\n                                   x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                        bisim)] <\\<nu>a>Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "}"], ["proof (state)\nthis:\n  ?Pa2 \\<leadsto>[bisim] ?Qa2 \\<Longrightarrow>\n  <\\<nu>?a2>?Pa2 \\<leadsto>[({x. \\<exists>P Q.\n                                    P \\<sim> Q \\<and>\n                                    (\\<exists>a.\n  x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                             bisim)] <\\<nu>?a2>?Qa2\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       R \\<leadsto>[({x. \\<exists>P Q.\n                            P \\<sim> Q \\<and>\n                            (\\<exists>a.\n                                x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "with \\<open>(xP, xQ) \\<in> ?X\\<close>"], ["proof (chain)\npicking this:\n  (xP, xQ)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n  ?Pa2 \\<leadsto>[bisim] ?Qa2 \\<Longrightarrow>\n  <\\<nu>?a2>?Pa2 \\<leadsto>[({x. \\<exists>P Q.\n                                    P \\<sim> Q \\<and>\n                                    (\\<exists>a.\n  x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                             bisim)] <\\<nu>?a2>?Qa2", "show ?case"], ["proof (prove)\nusing this:\n  (xP, xQ)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n  ?Pa2 \\<leadsto>[bisim] ?Qa2 \\<Longrightarrow>\n  <\\<nu>?a2>?Pa2 \\<leadsto>[({x. \\<exists>P Q.\n                                    P \\<sim> Q \\<and>\n                                    (\\<exists>a.\n  x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                             bisim)] <\\<nu>?a2>?Qa2\n\ngoal (1 subgoal):\n 1. xP \\<leadsto>[({x. \\<exists>P Q.\n                          P \\<sim> Q \\<and>\n                          (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                   bisim)] xQ", "by(auto dest: bisimE)"], ["proof (state)\nthis:\n  xP \\<leadsto>[({x. \\<exists>P Q.\n                        P \\<sim> Q \\<and>\n                        (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<union>\n                 bisim)] xQ\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "case(cSym xP xQ)"], ["proof (state)\nthis:\n  (xP, xQ)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a.\n                        x = (<\\<nu>a>P, <\\<nu>a>Q))} \\<Longrightarrow>\n       (S, R)\n       \\<in> {x. \\<exists>P Q.\n                    P \\<sim> Q \\<and>\n                    (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "thus ?case"], ["proof (prove)\nusing this:\n  (xP, xQ)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal (1 subgoal):\n 1. (xQ, xP)\n    \\<in> {x. \\<exists>P Q.\n                 P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}", "by(auto dest: symmetric)"], ["proof (state)\nthis:\n  (xQ, xP)\n  \\<in> {x. \\<exists>P Q.\n               P \\<sim> Q \\<and> (\\<exists>a. x = (<\\<nu>a>P, <\\<nu>a>Q))}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  <\\<nu>x>P \\<sim> <\\<nu>x>Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma parPres:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"P \\<parallel> R \\<sim> Q \\<parallel> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<sim> Q \\<parallel> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<sim> Q \\<parallel> R", "let ?X = \"{(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) | lst P R Q. P \\<sim> Q}\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<sim> Q \\<parallel> R", "have EmptyChain: \"\\<And>P Q. P \\<parallel> Q = resChain [] (P \\<parallel> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q. P \\<parallel> Q = resChain [] (P \\<parallel> Q)", "by auto"], ["proof (state)\nthis:\n  ?P \\<parallel> ?Q = resChain [] (?P \\<parallel> ?Q)\n\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<sim> Q \\<parallel> R", "with \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q\n  ?P \\<parallel> ?Q = resChain [] (?P \\<parallel> ?Q)", "have \"(P \\<parallel> R, Q \\<parallel> R) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  ?P \\<parallel> ?Q = resChain [] (?P \\<parallel> ?Q)\n\ngoal (1 subgoal):\n 1. (P \\<parallel> R, Q \\<parallel> R)\n    \\<in> {(resChain lst (P \\<parallel> R),\n            resChain lst (Q \\<parallel> R)) |\n           lst P R Q. P \\<sim> Q}", "by blast"], ["proof (state)\nthis:\n  (P \\<parallel> R, Q \\<parallel> R)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<sim> Q \\<parallel> R", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P \\<parallel> R, Q \\<parallel> R)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<parallel> R \\<sim> Q \\<parallel> R", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "case(cSim PR QR)"], ["proof (state)\nthis:\n  (PR, QR)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "{"], ["proof (state)\nthis:\n  (PR, QR)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "fix P Q R lst"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "assume \"P \\<sim> Q\""], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "hence \"P \\<leadsto>[bisim] Q\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q", "by(rule bisimE)"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "note \\<open>P \\<sim> Q\\<close>"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "have \"\\<And>P Q R. P \\<sim> Q \\<Longrightarrow> (P \\<parallel> R, Q \\<parallel> R) \\<in> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<sim> Q \\<Longrightarrow>\n       (P \\<parallel> R, Q \\<parallel> R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "by auto (blast intro: EmptyChain)"], ["proof (state)\nthis:\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (?P \\<parallel> ?R, ?Q \\<parallel> ?R)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (?P \\<parallel> ?R, ?Q \\<parallel> ?R)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "{"], ["proof (state)\nthis:\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (?P \\<parallel> ?R, ?Q \\<parallel> ?R)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "fix xP xQ x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "assume \"(xP, xQ) \\<in> ?X\""], ["proof (state)\nthis:\n  (xP, xQ)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "then"], ["proof (chain)\npicking this:\n  (xP, xQ)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}", "obtain P Q R lst \n          where \"P \\<sim> Q\" and \"xP = resChain lst (P \\<parallel> R)\" and xQeq: \"xQ = resChain lst (Q \\<parallel> R)\""], ["proof (prove)\nusing this:\n  (xP, xQ)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. (\\<And>P Q lst R.\n        \\<lbrakk>P \\<sim> Q; xP = resChain lst (P \\<parallel> R);\n         xQ = resChain lst (Q \\<parallel> R)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P \\<sim> Q\n  xP = resChain lst (P \\<parallel> R)\n  xQ = resChain lst (Q \\<parallel> R)\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  P \\<sim> Q\n  xP = resChain lst (P \\<parallel> R)\n  xQ = resChain lst (Q \\<parallel> R)\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "hence \"(resChain (x#lst) (P \\<parallel> R), resChain (x#lst) (Q \\<parallel> R)) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  xP = resChain lst (P \\<parallel> R)\n  xQ = resChain lst (Q \\<parallel> R)\n\ngoal (1 subgoal):\n 1. (resChain (x # lst) (P \\<parallel> R),\n     resChain (x # lst) (Q \\<parallel> R))\n    \\<in> {(resChain lst (P \\<parallel> R),\n            resChain lst (Q \\<parallel> R)) |\n           lst P R Q. P \\<sim> Q}", "by blast"], ["proof (state)\nthis:\n  (resChain (x # lst) (P \\<parallel> R),\n   resChain (x # lst) (Q \\<parallel> R))\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "ultimately"], ["proof (chain)\npicking this:\n  P \\<sim> Q\n  xP = resChain lst (P \\<parallel> R)\n  xQ = resChain lst (Q \\<parallel> R)\n  (resChain (x # lst) (P \\<parallel> R),\n   resChain (x # lst) (Q \\<parallel> R))\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}", "have \"(<\\<nu>x>xP, <\\<nu>x>xQ) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  xP = resChain lst (P \\<parallel> R)\n  xQ = resChain lst (Q \\<parallel> R)\n  (resChain (x # lst) (P \\<parallel> R),\n   resChain (x # lst) (Q \\<parallel> R))\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. (<\\<nu>x>xP, <\\<nu>x>xQ)\n    \\<in> {(resChain lst (P \\<parallel> R),\n            resChain lst (Q \\<parallel> R)) |\n           lst P R Q. P \\<sim> Q}", "by auto"], ["proof (state)\nthis:\n  (<\\<nu>x>xP, <\\<nu>x>xQ)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "}"], ["proof (state)\nthis:\n  (?xP2, ?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n  (<\\<nu>?x2>?xP2, <\\<nu>?x2>?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "note ResPres = this"], ["proof (state)\nthis:\n  (?xP2, ?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n  (<\\<nu>?x2>?xP2, <\\<nu>?x2>?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  (?xP2, ?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n  (<\\<nu>?x2>?xP2, <\\<nu>?x2>?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "have \"eqvt bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt bisim", "by simp"], ["proof (state)\nthis:\n  eqvt bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  eqvt bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "have \"eqvt ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt\n     {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |lst\n      P R Q. P \\<sim> Q}", "by(auto simp add: eqvt_def) (blast intro: bisimClosed)"], ["proof (state)\nthis:\n  eqvt\n   {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |lst P\n    R Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  P \\<sim> Q\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (?P \\<parallel> ?R, ?Q \\<parallel> ?R)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n  (?xP2, ?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n  (<\\<nu>?x2>?xP2, <\\<nu>?x2>?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n  eqvt bisim\n  eqvt\n   {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |lst P\n    R Q. P \\<sim> Q}", "have \"P \\<parallel> R \\<leadsto>[(?X)] Q \\<parallel> R\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  P \\<sim> Q\n  ?P \\<sim> ?Q \\<Longrightarrow>\n  (?P \\<parallel> ?R, ?Q \\<parallel> ?R)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n  (?xP2, ?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n  (<\\<nu>?x2>?xP2, <\\<nu>?x2>?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n  eqvt bisim\n  eqvt\n   {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |lst P\n    R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<parallel>\n    R \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                   resChain lst (Q \\<parallel> R)) |\n                  lst P R Q. P \\<sim> Q}] Q \\<parallel> R", "by(rule parPres)"], ["proof (state)\nthis:\n  P \\<parallel>\n  R \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                 resChain lst (Q \\<parallel> R)) |\n                lst P R Q. P \\<sim> Q}] Q \\<parallel> R\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "hence \"resChain lst (P \\<parallel> R) \\<leadsto>[?X] (resChain lst (Q \\<parallel> R))\""], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                 resChain lst (Q \\<parallel> R)) |\n                lst P R Q. P \\<sim> Q}] Q \\<parallel> R\n\ngoal (1 subgoal):\n 1. resChain lst\n     (P \\<parallel>\n      R) \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                      resChain lst (Q \\<parallel> R)) |\n                     lst P R Q. P \\<sim> Q}] resChain lst (Q \\<parallel> R)", "using \\<open>eqvt ?X\\<close> ResPres"], ["proof (prove)\nusing this:\n  P \\<parallel>\n  R \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                 resChain lst (Q \\<parallel> R)) |\n                lst P R Q. P \\<sim> Q}] Q \\<parallel> R\n  eqvt\n   {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |lst P\n    R Q. P \\<sim> Q}\n  (?xP2, ?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n  (<\\<nu>?x2>?xP2, <\\<nu>?x2>?xQ2)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. resChain lst\n     (P \\<parallel>\n      R) \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                      resChain lst (Q \\<parallel> R)) |\n                     lst P R Q. P \\<sim> Q}] resChain lst (Q \\<parallel> R)", "by(rule resChainI)"], ["proof (state)\nthis:\n  resChain lst\n   (P \\<parallel>\n    R) \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                    resChain lst (Q \\<parallel> R)) |\n                   lst P R Q. P \\<sim> Q}] resChain lst (Q \\<parallel> R)\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "hence \"resChain lst (P \\<parallel> R) \\<leadsto>[(?X \\<union> bisim)] (resChain lst (Q \\<parallel> R))\""], ["proof (prove)\nusing this:\n  resChain lst\n   (P \\<parallel>\n    R) \\<leadsto>[{(resChain lst (P \\<parallel> R),\n                    resChain lst (Q \\<parallel> R)) |\n                   lst P R Q. P \\<sim> Q}] resChain lst (Q \\<parallel> R)\n\ngoal (1 subgoal):\n 1. resChain lst\n     (P \\<parallel>\n      R) \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] resChain lst (Q \\<parallel> R)", "by(force intro: Strong_Late_Sim.monotonic)"], ["proof (state)\nthis:\n  resChain lst\n   (P \\<parallel>\n    R) \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                     resChain lst (Q \\<parallel> R)) |\n                    lst P R Q. P \\<sim> Q} \\<union>\n                   bisim)] resChain lst (Q \\<parallel> R)\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "}"], ["proof (state)\nthis:\n  ?Pa2 \\<sim> ?Qa2 \\<Longrightarrow>\n  resChain ?lst2\n   (?Pa2 \\<parallel>\n    ?Ra2) \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                        resChain lst (Q \\<parallel> R)) |\n                       lst P R Q. P \\<sim> Q} \\<union>\n                      bisim)] resChain ?lst2 (?Qa2 \\<parallel> ?Ra2)\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                       resChain lst (Q \\<parallel> R)) |\n                      lst P R Q. P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "with \\<open>(PR, QR) \\<in> ?X\\<close>"], ["proof (chain)\npicking this:\n  (PR, QR)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n  ?Pa2 \\<sim> ?Qa2 \\<Longrightarrow>\n  resChain ?lst2\n   (?Pa2 \\<parallel>\n    ?Ra2) \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                        resChain lst (Q \\<parallel> R)) |\n                       lst P R Q. P \\<sim> Q} \\<union>\n                      bisim)] resChain ?lst2 (?Qa2 \\<parallel> ?Ra2)", "show ?case"], ["proof (prove)\nusing this:\n  (PR, QR)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n  ?Pa2 \\<sim> ?Qa2 \\<Longrightarrow>\n  resChain ?lst2\n   (?Pa2 \\<parallel>\n    ?Ra2) \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                        resChain lst (Q \\<parallel> R)) |\n                       lst P R Q. P \\<sim> Q} \\<union>\n                      bisim)] resChain ?lst2 (?Qa2 \\<parallel> ?Ra2)\n\ngoal (1 subgoal):\n 1. PR \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                     resChain lst (Q \\<parallel> R)) |\n                    lst P R Q. P \\<sim> Q} \\<union>\n                   bisim)] QR", "by auto"], ["proof (state)\nthis:\n  PR \\<leadsto>[({(resChain lst (P \\<parallel> R),\n                   resChain lst (Q \\<parallel> R)) |\n                  lst P R Q. P \\<sim> Q} \\<union>\n                 bisim)] QR\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "case(cSym PR QR)"], ["proof (state)\nthis:\n  (PR, QR)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q} \\<Longrightarrow>\n       (S, R)\n       \\<in> {(resChain lst (P \\<parallel> R),\n               resChain lst (Q \\<parallel> R)) |\n              lst P R Q. P \\<sim> Q}", "thus ?case"], ["proof (prove)\nusing this:\n  (PR, QR)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. (QR, PR)\n    \\<in> {(resChain lst (P \\<parallel> R),\n            resChain lst (Q \\<parallel> R)) |\n           lst P R Q. P \\<sim> Q}", "by(blast dest: symmetric)"], ["proof (state)\nthis:\n  (QR, PR)\n  \\<in> {(resChain lst (P \\<parallel> R), resChain lst (Q \\<parallel> R)) |\n         lst P R Q. P \\<sim> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<parallel> R \\<sim> Q \\<parallel> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bangPres:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes PBiSimQ: \"P \\<sim> Q\"\n\n  shows \"!P \\<sim> !Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !P \\<sim> !Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. !P \\<sim> !Q", "let ?X = \"bangRel bisim\""], ["proof (state)\ngoal (1 subgoal):\n 1. !P \\<sim> !Q", "from PBiSimQ"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "have \"(!P, !Q) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. (!P, !Q) \\<in> bangRel bisim", "by(rule Rel.BRBang)"], ["proof (state)\nthis:\n  (!P, !Q) \\<in> bangRel bisim\n\ngoal (1 subgoal):\n 1. !P \\<sim> !Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (!P, !Q) \\<in> bangRel bisim\n\ngoal (1 subgoal):\n 1. !P \\<sim> !Q", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "case(cSim bP bQ)"], ["proof (state)\nthis:\n  (bP, bQ) \\<in> bangRel bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "{"], ["proof (state)\nthis:\n  (bP, bQ) \\<in> bangRel bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "fix P Q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "assume \"(P, Q) \\<in> ?X\""], ["proof (state)\nthis:\n  (P, Q) \\<in> bangRel bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "hence \"P \\<leadsto>[?X] Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bangRel bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bangRel bisim] Q", "proof(induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q. P \\<sim> Q \\<Longrightarrow> !P \\<leadsto>[bangRel bisim] !Q\n 2. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 3. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "fix P Q"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q. P \\<sim> Q \\<Longrightarrow> !P \\<leadsto>[bangRel bisim] !Q\n 2. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 3. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "assume \"P \\<sim> Q\""], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q. P \\<sim> Q \\<Longrightarrow> !P \\<leadsto>[bangRel bisim] !Q\n 2. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 3. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "thus \"!P \\<leadsto>[?X] !Q\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. !P \\<leadsto>[bangRel bisim] !Q", "using bisimE bisimEqvt"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  ?P \\<sim> ?Q \\<Longrightarrow> ?P \\<leadsto>[bisim] ?Q\n  eqvt bisim\n\ngoal (1 subgoal):\n 1. !P \\<leadsto>[bangRel bisim] !Q", "by(rule Strong_Late_Sim_Pres.bangPres)"], ["proof (state)\nthis:\n  !P \\<leadsto>[bangRel bisim] !Q\n\ngoal (2 subgoals):\n 1. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 2. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 2. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "fix P Q R T"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 2. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "assume RBiSimT: \"R \\<sim> T\""], ["proof (state)\nthis:\n  R \\<sim> T\n\ngoal (2 subgoals):\n 1. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 2. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "assume PBangRelQ: \"(P, Q) \\<in> ?X\""], ["proof (state)\nthis:\n  (P, Q) \\<in> bangRel bisim\n\ngoal (2 subgoals):\n 1. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 2. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "assume PSimQ: \"P \\<leadsto>[?X] Q\""], ["proof (state)\nthis:\n  P \\<leadsto>[bangRel bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 2. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "from RBiSimT"], ["proof (chain)\npicking this:\n  R \\<sim> T", "have \"R \\<leadsto>[bisim] T\""], ["proof (prove)\nusing this:\n  R \\<sim> T\n\ngoal (1 subgoal):\n 1. R \\<leadsto>[bisim] T", "by(blast dest: bisimE)"], ["proof (state)\nthis:\n  R \\<leadsto>[bisim] T\n\ngoal (2 subgoals):\n 1. \\<And>R T P Q.\n       \\<lbrakk>R \\<sim> T; (P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> R \\<parallel>\n                         P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n 2. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "thus \"R \\<parallel> P \\<leadsto>[?X] T \\<parallel> Q\""], ["proof (prove)\nusing this:\n  R \\<leadsto>[bisim] T\n\ngoal (1 subgoal):\n 1. R \\<parallel> P \\<leadsto>[bangRel bisim] T \\<parallel> Q", "using PSimQ RBiSimT PBangRelQ Rel.BRPar Rel.BRRes bisimEqvt eqvtBangRel"], ["proof (prove)\nusing this:\n  R \\<leadsto>[bisim] T\n  P \\<leadsto>[bangRel bisim] Q\n  R \\<sim> T\n  (P, Q) \\<in> bangRel bisim\n  \\<lbrakk>(?R, ?T) \\<in> ?Rel; (?P, ?Q) \\<in> bangRel ?Rel\\<rbrakk>\n  \\<Longrightarrow> (?R \\<parallel> ?P, ?T \\<parallel> ?Q)\n                    \\<in> bangRel ?Rel\n  (?P, ?Q) \\<in> bangRel ?Rel \\<Longrightarrow>\n  (<\\<nu>?a>?P, <\\<nu>?a>?Q) \\<in> bangRel ?Rel\n  eqvt bisim\n  eqvt ?Rel \\<Longrightarrow> eqvt (bangRel ?Rel)\n\ngoal (1 subgoal):\n 1. R \\<parallel> P \\<leadsto>[bangRel bisim] T \\<parallel> Q", "by(blast intro: Strong_Late_Sim_Pres.parCompose)"], ["proof (state)\nthis:\n  R \\<parallel> P \\<leadsto>[bangRel bisim] T \\<parallel> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "fix P Q a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "assume \"P \\<leadsto>[?X] Q\""], ["proof (state)\nthis:\n  P \\<leadsto>[bangRel bisim] Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bangRel bisim] Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "from eqvtBangRel bisimEqvt"], ["proof (chain)\npicking this:\n  eqvt ?Rel \\<Longrightarrow> eqvt (bangRel ?Rel)\n  eqvt bisim", "have \"eqvt ?X\""], ["proof (prove)\nusing this:\n  eqvt ?Rel \\<Longrightarrow> eqvt (bangRel ?Rel)\n  eqvt bisim\n\ngoal (1 subgoal):\n 1. eqvt (bangRel bisim)", "by blast"], ["proof (state)\nthis:\n  eqvt (bangRel bisim)\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       \\<lbrakk>(P, Q) \\<in> bangRel bisim;\n        P \\<leadsto>[bangRel bisim] Q\\<rbrakk>\n       \\<Longrightarrow> <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bangRel bisim] Q\n  eqvt (bangRel bisim)", "show \"<\\<nu>a>P \\<leadsto>[?X] <\\<nu>a>Q\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bangRel bisim] Q\n  eqvt (bangRel bisim)\n\ngoal (1 subgoal):\n 1. <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "using Rel.BRRes"], ["proof (prove)\nusing this:\n  P \\<leadsto>[bangRel bisim] Q\n  eqvt (bangRel bisim)\n  (?P, ?Q) \\<in> bangRel ?Rel \\<Longrightarrow>\n  (<\\<nu>?a>?P, <\\<nu>?a>?Q) \\<in> bangRel ?Rel\n\ngoal (1 subgoal):\n 1. <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q", "by(blast intro: Strong_Late_Sim_Pres.resPres)"], ["proof (state)\nthis:\n  <\\<nu>a>P \\<leadsto>[bangRel bisim] <\\<nu>a>Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>[bangRel bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "hence \"P \\<leadsto>[((bangRel bisim) \\<union> bisim)] Q\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bangRel bisim] Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bangRel bisim \\<union> bisim)] Q", "by(rule_tac Strong_Late_Sim.monotonic) auto"], ["proof (state)\nthis:\n  P \\<leadsto>[(bangRel bisim \\<union> bisim)] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "}"], ["proof (state)\nthis:\n  (?Pa2, ?Qa2) \\<in> bangRel bisim \\<Longrightarrow>\n  ?Pa2 \\<leadsto>[(bangRel bisim \\<union> bisim)] ?Qa2\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       R \\<leadsto>[(bangRel bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "with \\<open>(bP, bQ) \\<in> ?X\\<close>"], ["proof (chain)\npicking this:\n  (bP, bQ) \\<in> bangRel bisim\n  (?Pa2, ?Qa2) \\<in> bangRel bisim \\<Longrightarrow>\n  ?Pa2 \\<leadsto>[(bangRel bisim \\<union> bisim)] ?Qa2", "show ?case"], ["proof (prove)\nusing this:\n  (bP, bQ) \\<in> bangRel bisim\n  (?Pa2, ?Qa2) \\<in> bangRel bisim \\<Longrightarrow>\n  ?Pa2 \\<leadsto>[(bangRel bisim \\<union> bisim)] ?Qa2\n\ngoal (1 subgoal):\n 1. bP \\<leadsto>[(bangRel bisim \\<union> bisim)] bQ", "by auto"], ["proof (state)\nthis:\n  bP \\<leadsto>[(bangRel bisim \\<union> bisim)] bQ\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "case(cSym bP bQ)"], ["proof (state)\nthis:\n  (bP, bQ) \\<in> bangRel bisim\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bangRel bisim \\<Longrightarrow>\n       (S, R) \\<in> bangRel bisim", "thus ?case"], ["proof (prove)\nusing this:\n  (bP, bQ) \\<in> bangRel bisim\n\ngoal (1 subgoal):\n 1. (bQ, bP) \\<in> bangRel bisim", "by(metis bangRelSymetric symmetric)"], ["proof (state)\nthis:\n  (bQ, bP) \\<in> bangRel bisim\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  !P \\<sim> !Q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}