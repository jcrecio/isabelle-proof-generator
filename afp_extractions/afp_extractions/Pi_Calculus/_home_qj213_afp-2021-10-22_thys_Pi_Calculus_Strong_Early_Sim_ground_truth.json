{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Strong_Early_Sim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma monotonic: \n  fixes A  :: \"(pi \\<times> pi) set\"\n  and   B  :: \"(pi \\<times> pi) set\"\n  and   P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<leadsto>[A] P'\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>[B] P'\"", "lemma freshUnit[simp]:\n  fixes y :: name\n\n  shows \"y \\<sharp> ()\"", "lemma simCasesCont[consumes 1, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Eqvt:  \"eqvt Rel\"\n  and     Bound: \"\\<And>a y Q'. \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P; y \\<sharp> Q; y \\<sharp> C\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Free:  \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>[Rel] Q\"", "lemma simCases[consumes 0, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Bound: \"\\<And>a y Q'. \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Free:  \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>[Rel] Q\"", "lemma elim:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes \"P \\<leadsto>[Rel] Q\"\n\n  shows \"Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"", "lemma eqvtI:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   perm :: \"name prm\"\n\n  assumes Sim: \"P \\<leadsto>[Rel] Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"(perm \\<bullet> P) \\<leadsto>[Rel'] (perm \\<bullet> Q)\"", "lemma reflexive:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>[Rel] P\"", "lemmas fresh_prod[simp]", "lemma transitive:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>[Rel] Q\"\n  and     QSimR: \"Q \\<leadsto>[Rel'] R\"\n  and     Eqvt': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n\n  shows \"P \\<leadsto>[Rel''] R\""], "translations": [["", "lemma monotonic: \n  fixes A  :: \"(pi \\<times> pi) set\"\n  and   B  :: \"(pi \\<times> pi) set\"\n  and   P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<leadsto>[A] P'\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>[B] P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[B] P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[A] P'\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[B] P'", "by(fastforce simp add: strongSimEarly_def)"], ["", "lemma freshUnit[simp]:\n  fixes y :: name\n\n  shows \"y \\<sharp> ()\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> ()", "by(auto simp add: fresh_def supp_unit)"], ["", "lemma simCasesCont[consumes 1, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Eqvt:  \"eqvt Rel\"\n  and     Bound: \"\\<And>a y Q'. \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P; y \\<sharp> Q; y \\<sharp> C\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Free:  \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>[Rel] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] Q", "from Free"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<longmapsto> ?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<longmapsto> ?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] Q", "proof(auto simp add: strongSimEarly_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "fix Q' a y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume yFreshP: \"(y::name) \\<sharp> P\""], ["proof (state)\nthis:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume Trans: \"Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "have \"\\<exists>c::name. c \\<sharp> (P, Q', y, Q, C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. c \\<sharp> (P, Q', y, Q, C)", "by(blast intro: name_exists_fresh)"], ["proof (state)\nthis:\n  \\<exists>c. c \\<sharp> (P, Q', y, Q, C)\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>c. c \\<sharp> (P, Q', y, Q, C)", "obtain c::name where cFreshP: \"c \\<sharp> P\" and cFreshQ': \"c \\<sharp> Q'\" and cFreshC: \"c \\<sharp> C\"\n                          and cineqy: \"c \\<noteq> y\" and \"c \\<sharp> Q\""], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (P, Q', y, Q, C)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<sharp> P; c \\<sharp> Q'; c \\<sharp> C; c \\<noteq> y;\n         c \\<sharp> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force simp add: fresh_prod name_fresh)"], ["proof (state)\nthis:\n  c \\<sharp> P\n  c \\<sharp> Q'\n  c \\<sharp> C\n  c \\<noteq> y\n  c \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from Trans cFreshQ'"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  c \\<sharp> Q'", "have \"Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(y, c)] \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  c \\<sharp> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(y, c)] \\<bullet> Q')", "by(simp add: alphaBoundOutput)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(y, c)] \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "hence \"\\<exists>P'. P \\<longmapsto> a<\\<nu>c> \\<prec> P' \\<and> (P', [(y, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(y, c)] \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> a<\\<nu>c> \\<prec> P' \\<and>\n       (P', [(y, c)] \\<bullet> Q') \\<in> Rel", "using \\<open>c \\<sharp> P\\<close> \\<open>c \\<sharp> Q\\<close> \\<open>c \\<sharp> C\\<close>"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(y, c)] \\<bullet> Q')\n  c \\<sharp> P\n  c \\<sharp> Q\n  c \\<sharp> C\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> a<\\<nu>c> \\<prec> P' \\<and>\n       (P', [(y, c)] \\<bullet> Q') \\<in> Rel", "by(rule Bound)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(y, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(y, c)] \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<longmapsto> a<\\<nu>c> \\<prec> P'\" and P'RelQ': \"(P', [(y, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(y, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a<\\<nu>c> \\<prec> P';\n         (P', [(y, c)] \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>c> \\<prec> P'\n  (P', [(y, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from PTrans yFreshP cineqy"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>c> \\<prec> P'\n  y \\<sharp> P\n  c \\<noteq> y", "have yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>c> \\<prec> P'\n  y \\<sharp> P\n  c \\<noteq> y\n\ngoal (1 subgoal):\n 1. y \\<sharp> P'", "by(force intro: freshTransition)"], ["proof (state)\nthis:\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>c> \\<prec> P'\n  y \\<sharp> P'", "have \"P \\<longmapsto> a<\\<nu>y> \\<prec> ([(y, c)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>c> \\<prec> P'\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. P \\<longmapsto> a<\\<nu>y> \\<prec> ([(y, c)] \\<bullet> P')", "by(simp add: alphaBoundOutput name_swap)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> ([(y, c)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> ([(y, c)] \\<bullet> P')\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "have \"([(y, c)] \\<bullet> P', Q') \\<in> Rel\" (is \"?goal\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(y, c)] \\<bullet> P', Q') \\<in> Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([(y, c)] \\<bullet> P', Q') \\<in> Rel", "from Eqvt P'RelQ'"], ["proof (chain)\npicking this:\n  eqvt Rel\n  (P', [(y, c)] \\<bullet> Q') \\<in> Rel", "have \"([(y, c)] \\<bullet> P', [(y, c)] \\<bullet> [(y, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  (P', [(y, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(y, c)] \\<bullet> P', [(y, c)] \\<bullet> [(y, c)] \\<bullet> Q')\n    \\<in> Rel", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  ([(y, c)] \\<bullet> P', [(y, c)] \\<bullet> [(y, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(y, c)] \\<bullet> P', Q') \\<in> Rel", "with cineqy"], ["proof (chain)\npicking this:\n  c \\<noteq> y\n  ([(y, c)] \\<bullet> P', [(y, c)] \\<bullet> [(y, c)] \\<bullet> Q')\n  \\<in> Rel", "show ?goal"], ["proof (prove)\nusing this:\n  c \\<noteq> y\n  ([(y, c)] \\<bullet> P', [(y, c)] \\<bullet> [(y, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(y, c)] \\<bullet> P', Q') \\<in> Rel", "by(simp add: name_calc)"], ["proof (state)\nthis:\n  ([(y, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([(y, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a y Q'.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> ([(y, c)] \\<bullet> P')\n  ([(y, c)] \\<bullet> P', Q') \\<in> Rel", "show \"\\<exists>P'. P \\<longmapsto>a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> ([(y, c)] \\<bullet> P')\n  ([(y, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>[Rel] Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simCases[consumes 0, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Bound: \"\\<And>a y Q'. \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Free:  \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>[Rel] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] Q", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>Q \\<longmapsto> ?a<\\<nu>?y> \\<prec> ?Q'; ?y \\<sharp> P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       P \\<longmapsto> ?a<\\<nu>?y> \\<prec> P' \\<and>\n                       (P', ?Q') \\<in> Rel\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<longmapsto> ?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] Q", "by(auto simp add: strongSimEarly_def)"], ["", "lemma elim:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes \"P \\<leadsto>[Rel] Q\"\n\n  shows \"Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<longmapsto> a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)", "by(simp add: strongSimEarly_def)+"], ["", "lemma eqvtI:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   perm :: \"name prm\"\n\n  assumes Sim: \"P \\<leadsto>[Rel] Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"(perm \\<bullet> P) \\<leadsto>[Rel'] (perm \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<leadsto>[Rel'] perm \\<bullet> Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound a y Q')"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> perm \\<bullet> P\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have Trans: \"(perm \\<bullet> Q) \\<longmapsto> a<\\<nu>y> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have yFreshP: \"y \\<sharp> perm \\<bullet> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> perm \\<bullet> P", "by fact"], ["proof (state)\nthis:\n  y \\<sharp> perm \\<bullet> P\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from Trans"], ["proof (chain)\npicking this:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'", "have \"(rev perm \\<bullet> (perm \\<bullet> Q)) \\<longmapsto> rev perm \\<bullet> (a<\\<nu>y> \\<prec> Q')\""], ["proof (prove)\nusing this:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet>\n    perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>y> \\<prec> Q'", "by(rule TransitionsEarly.eqvt)"], ["proof (state)\nthis:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>y> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"Q \\<longmapsto> (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> (rev perm \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>y> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> (rev perm \\<bullet>\n                     a)<\\<nu>(rev perm \\<bullet>\n                              y)> \\<prec> (rev perm \\<bullet> Q')", "by(simp add: name_rev_per)"], ["proof (state)\nthis:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            y)> \\<prec> (rev perm \\<bullet> Q')\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            y)> \\<prec> (rev perm \\<bullet> Q')\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from yFreshP"], ["proof (chain)\npicking this:\n  y \\<sharp> perm \\<bullet> P", "have \"(rev perm \\<bullet> y) \\<sharp> P\""], ["proof (prove)\nusing this:\n  y \\<sharp> perm \\<bullet> P\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet> y \\<sharp> P", "by(simp add: name_fresh_left)"], ["proof (state)\nthis:\n  rev perm \\<bullet> y \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            y)> \\<prec> (rev perm \\<bullet> Q')\n  rev perm \\<bullet> y \\<sharp> P", "have \"\\<exists>P'. P \\<longmapsto> (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P' \\<and> (P', rev perm \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            y)> \\<prec> (rev perm \\<bullet> Q')\n  rev perm \\<bullet> y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> (rev perm \\<bullet>\n                        a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P' \\<and>\n       (P', rev perm \\<bullet> Q') \\<in> Rel", "using Sim"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            y)> \\<prec> (rev perm \\<bullet> Q')\n  rev perm \\<bullet> y \\<sharp> P\n  P \\<leadsto>[Rel] Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> (rev perm \\<bullet>\n                        a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P' \\<and>\n       (P', rev perm \\<bullet> Q') \\<in> Rel", "by(force intro: elim)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<longmapsto> (rev perm \\<bullet>\n                      a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<longmapsto> (rev perm \\<bullet>\n                      a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<longmapsto> (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P'\" and P'RelQ': \"(P', rev perm \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<longmapsto> (rev perm \\<bullet>\n                      a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> (rev perm \\<bullet>\n                                  a)<\\<nu>(rev perm \\<bullet>\n     y)> \\<prec> P';\n         (P', rev perm \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P'\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P'", "have \"(perm \\<bullet> P) \\<longmapsto> perm \\<bullet> ((rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P')\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<longmapsto> perm \\<bullet>\n                    (rev perm \\<bullet>\n                     a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P'", "by(rule TransitionsEarly.eqvt)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<longmapsto> perm \\<bullet>\n                  (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence L1: \"(perm \\<bullet> P) \\<longmapsto> a<\\<nu>y> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<longmapsto> perm \\<bullet>\n                  (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet> y)> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<longmapsto> a<\\<nu>y> \\<prec> (perm \\<bullet> P')", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  perm \\<bullet> P \\<longmapsto> a<\\<nu>y> \\<prec> (perm \\<bullet> P')\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(P', rev perm \\<bullet> Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (P', rev perm \\<bullet> Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (P', rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with EqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'\n  (P', rev perm \\<bullet> Q') \\<in> Rel'", "have \"(perm \\<bullet> P', perm \\<bullet> (rev perm \\<bullet> Q')) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  eqvt Rel'\n  (P', rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"(perm \\<bullet> P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', Q') \\<in> Rel'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n        y \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with L1"], ["proof (chain)\npicking this:\n  perm \\<bullet> P \\<longmapsto> a<\\<nu>y> \\<prec> (perm \\<bullet> P')\n  (perm \\<bullet> P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  perm \\<bullet> P \\<longmapsto> a<\\<nu>y> \\<prec> (perm \\<bullet> P')\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       perm \\<bullet> P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     perm \\<bullet> P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free \\<alpha> Q')"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have Trans: \"(perm \\<bullet> Q) \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from Trans"], ["proof (chain)\npicking this:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "have \"(rev perm \\<bullet> (perm \\<bullet> Q)) \\<longmapsto> rev perm \\<bullet> (\\<alpha> \\<prec> Q')\""], ["proof (prove)\nusing this:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet>\n    perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'", "by(rule TransitionsEarly.eqvt)"], ["proof (state)\nthis:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"Q \\<longmapsto> (rev perm \\<bullet> \\<alpha>) \\<prec> (rev perm \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> rev perm \\<bullet>\n                    \\<alpha> \\<prec> rev perm \\<bullet> Q'", "by(simp add: name_rev_per)"], ["proof (state)\nthis:\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with Sim"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'", "have \"\\<exists>P'. P \\<longmapsto> (rev perm \\<bullet> \\<alpha>) \\<prec> P' \\<and> (P', (rev perm \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P' \\<and>\n       (P', rev perm \\<bullet> Q') \\<in> Rel", "by(force intro: elim)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<longmapsto> (rev perm \\<bullet> \\<alpha>) \\<prec> P'\" and PRel: \"(P', (rev perm \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P';\n         (P', rev perm \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P'\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P'", "have \"(perm \\<bullet> P) \\<longmapsto> perm \\<bullet> ((rev perm \\<bullet> \\<alpha>)\\<prec> P')\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<longmapsto> perm \\<bullet> rev perm \\<bullet> \\<alpha> \\<prec> P'", "by(rule TransitionsEarly.eqvt)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<longmapsto> perm \\<bullet> rev perm \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence L1: \"(perm \\<bullet> P) \\<longmapsto> \\<alpha> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<longmapsto> perm \\<bullet> rev perm \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> perm \\<bullet> P'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PRel EqvtRel' RelRel'"], ["proof (chain)\npicking this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  eqvt Rel'\n  Rel \\<subseteq> Rel'", "have \"((perm \\<bullet> P'), (perm \\<bullet> (rev perm \\<bullet> Q'))) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  eqvt Rel'\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'", "by(force intro: eqvtRelI)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"((perm \\<bullet> P'), Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', Q') \\<in> Rel'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with L1"], ["proof (chain)\npicking this:\n  perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     perm \\<bullet> P \\<longmapsto> \\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "(*****************Reflexivity and transitivity*********************)"], ["", "lemma reflexive:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>[Rel] P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] P", "using assms"], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] P", "by(auto simp add: strongSimEarly_def)"], ["", "lemmas fresh_prod[simp]"], ["", "lemma transitive:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>[Rel] Q\"\n  and     QSimR: \"Q \\<leadsto>[Rel'] R\"\n  and     Eqvt': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n\n  shows \"P \\<leadsto>[Rel''] R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel''] R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel''] R", "from Eqvt'"], ["proof (chain)\npicking this:\n  eqvt Rel''", "show ?thesis"], ["proof (prove)\nusing this:\n  eqvt Rel''\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel''] R", "proof(induct rule: simCasesCont[where C=Q])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "case(Bound a y R')"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'\n  y \\<sharp> P\n  y \\<sharp> R\n  y \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> a<\\<nu>y> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>y> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from QSimR RTrans \\<open>y \\<sharp> Q\\<close>"], ["proof (chain)\npicking this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'\n  y \\<sharp> Q", "have \"\\<exists>Q'. Q \\<longmapsto> a<\\<nu>y> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> a<\\<nu>y> \\<prec> R'\n  y \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<longmapsto> a<\\<nu>y> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'", "by(rule elim)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<longmapsto> a<\\<nu>y> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     Q \\<longmapsto> a<\\<nu>y> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'", "obtain Q' where QTrans: \"Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\" and Q'Rel'R': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     Q \\<longmapsto> a<\\<nu>y> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<longmapsto> a<\\<nu>y> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from PSimQ QTrans \\<open>y \\<sharp> P\\<close>"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P", "have \"\\<exists>P'. P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<\\<nu>y> \\<prec> Q'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by(rule elim)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<longmapsto> a<\\<nu>y> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a<\\<nu>y> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from P'RelQ' Q'Rel'R' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (2 subgoals):\n 1. \\<And>a y Q'.\n       \\<lbrakk>R \\<longmapsto> a<\\<nu>y> \\<prec> Q'; y \\<sharp> P;\n        y \\<sharp> R; y \\<sharp> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>y> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<longmapsto> a<\\<nu>y> \\<prec> P' \\<and> (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "case(Free \\<alpha> R')"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> \\<alpha> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<alpha> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "with QSimR"], ["proof (chain)\npicking this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> \\<alpha> \\<prec> R'", "have \"\\<exists>Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'", "by(rule elim)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'", "obtain Q' where QTrans: \"Q \\<longmapsto> \\<alpha> \\<prec> Q'\" and Q'RelR': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from PSimQ QTrans"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "have \"\\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by(rule elim)"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<longmapsto> \\<alpha> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from P'RelQ' Q'RelR' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''", "show \"\\<exists>P'. P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<longmapsto> \\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>[Rel''] R\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}