{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Strong_Early_Bisim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma monoAux: \"A \\<subseteq> B \\<Longrightarrow> P \\<leadsto>[A] Q \\<longrightarrow> P \\<leadsto>[B] Q\"", "lemma bisimCoinductAux[case_names bisim, case_conclusion StrongBisim step, consumes 1]:\n  assumes p: \"(P, Q) \\<in> X\"\n  and step:  \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[(X \\<union> bisim)] Q \\<and> (Q, P) \\<in> bisim \\<union> X\"\n\n  shows \"P \\<sim> Q\"", "lemma bisimCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(X \\<union> bisim)] S\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\"", "lemma weak_coinduct[case_names bisim, case_conclusion StrongBisim step, consumes 1]:\n  assumes p: \"(P, Q) \\<in> X\"\n  and step:  \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[X] Q \\<and> (Q, P) \\<in> X\"\n \n  shows \"P \\<sim> Q\"", "lemma bisimWeakCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[X] Q\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> (Q, P) \\<in> X\"\n\n  shows \"P \\<sim> Q\"", "lemma monotonic: \"mono(\\<lambda>p x1 x2.\n        \\<exists>P Q. x1 = P \\<and>\n              x2 = Q \\<and> P \\<leadsto>[{(xa, x). p xa x}] Q \\<and> Q \\<leadsto>[{(xa, x). p xa x}] P)\"", "lemma bisimE:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<sim> Q\"\n  \n  shows \"P \\<leadsto>[bisim] Q\"\n  and   \"Q \\<sim> P\"", "lemma bisimClosed[eqvt]:\n  fixes P :: pi\n  and   Q :: pi\n  and   p :: \"name prm\"\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"(p \\<bullet> P) \\<sim> (p \\<bullet> Q)\"", "lemma eqvt[simp]:\n  shows \"eqvt bisim\"", "lemma reflexive:\n  fixes P :: pi\n\n  shows \"P \\<sim> P\"", "lemma transitive:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes PBiSimQ: \"P \\<sim> Q\"\n  and     QBiSimR: \"Q \\<sim> R\"\n\n  shows \"P \\<sim> R\""], "translations": [["", "lemma monoAux: \"A \\<subseteq> B \\<Longrightarrow> P \\<leadsto>[A] Q \\<longrightarrow> P \\<leadsto>[B] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    P \\<leadsto>[A] Q \\<longrightarrow> P \\<leadsto>[B] Q", "by(auto intro: Strong_Early_Sim.monotonic)"], ["", "coinductive_set bisim :: \"(pi \\<times> pi) set\"\nwhere\n  step: \"\\<lbrakk>P \\<leadsto>[bisim] Q; (Q, P) \\<in> bisim\\<rbrakk> \\<Longrightarrow> (P, Q) \\<in> bisim\"\nmonos monoAux"], ["", "abbreviation strongBisimJudge (infixr \"\\<sim>\" 65) where \"P \\<sim> Q \\<equiv> (P, Q) \\<in> bisim\""], ["", "lemma bisimCoinductAux[case_names bisim, case_conclusion StrongBisim step, consumes 1]:\n  assumes p: \"(P, Q) \\<in> X\"\n  and step:  \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[(X \\<union> bisim)] Q \\<and> (Q, P) \\<in> bisim \\<union> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "have aux: \"X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "by blast"], ["proof (state)\nthis:\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "from p"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> X", "show ?thesis"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(coinduct, force dest: step simp add: aux)"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(X \\<union> bisim)] S\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "using assms"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n  (?R, ?S) \\<in> X \\<Longrightarrow> ?R \\<leadsto>[(X \\<union> bisim)] ?S\n  (?R, ?S) \\<in> X \\<Longrightarrow> (?S, ?R) \\<in> X\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(coinduct rule: bisimCoinductAux) auto"], ["", "lemma weak_coinduct[case_names bisim, case_conclusion StrongBisim step, consumes 1]:\n  assumes p: \"(P, Q) \\<in> X\"\n  and step:  \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[X] Q \\<and> (Q, P) \\<in> X\"\n \n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "using p"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof(coinduct rule: bisimCoinductAux)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> X \\<Longrightarrow>\n       P \\<leadsto>[(X \\<union> bisim)] Q \\<and>\n       (Q, P) \\<in> bisim \\<union> X", "case (bisim P)"], ["proof (state)\nthis:\n  (P, Q_) \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> X \\<Longrightarrow>\n       P \\<leadsto>[(X \\<union> bisim)] Q \\<and>\n       (Q, P) \\<in> bisim \\<union> X", "from step[OF this]"], ["proof (chain)\npicking this:\n  P \\<leadsto>[X] Q_ \\<and> (Q_, P) \\<in> X", "show ?case"], ["proof (prove)\nusing this:\n  P \\<leadsto>[X] Q_ \\<and> (Q_, P) \\<in> X\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(X \\<union> bisim)] Q_ \\<and>\n    (Q_, P) \\<in> bisim \\<union> X", "using Strong_Early_Sim.monotonic"], ["proof (prove)\nusing this:\n  P \\<leadsto>[X] Q_ \\<and> (Q_, P) \\<in> X\n  \\<lbrakk>?P \\<leadsto>[?A] ?P'; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?P \\<leadsto>[?B] ?P'\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(X \\<union> bisim)] Q_ \\<and>\n    (Q_, P) \\<in> bisim \\<union> X", "by blast"], ["proof (state)\nthis:\n  P \\<leadsto>[(X \\<union> bisim)] Q_ \\<and> (Q_, P) \\<in> bisim \\<union> X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimWeakCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[X] Q\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> (Q, P) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "using assms"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n  (?P, ?Q) \\<in> X \\<Longrightarrow> ?P \\<leadsto>[X] ?Q\n  (?P, ?Q) \\<in> X \\<Longrightarrow> (?Q, ?P) \\<in> X\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(coinduct rule: weak_coinduct) auto"], ["", "lemma monotonic: \"mono(\\<lambda>p x1 x2.\n        \\<exists>P Q. x1 = P \\<and>\n              x2 = Q \\<and> P \\<leadsto>[{(xa, x). p xa x}] Q \\<and> Q \\<leadsto>[{(xa, x). p xa x}] P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>p x1 x2.\n         \\<exists>P Q.\n            x1 = P \\<and>\n            x2 = Q \\<and>\n            P \\<leadsto>[{(xa, x). p xa x}] Q \\<and>\n            Q \\<leadsto>[{(xa, x). p xa x}] P)", "apply(rule monoI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow>\n       (\\<lambda>x1 x2.\n           \\<exists>P Q.\n              x1 = P \\<and>\n              x2 = Q \\<and>\n              P \\<leadsto>[{(xaa, xa). x xaa xa}] Q \\<and>\n              Q \\<leadsto>[{(xaa, xa). x xaa xa}] P)\n       \\<le> (\\<lambda>x1 x2.\n                 \\<exists>P Q.\n                    x1 = P \\<and>\n                    x2 = Q \\<and>\n                    P \\<leadsto>[{(xa, x). y xa x}] Q \\<and>\n                    Q \\<leadsto>[{(xa, x). y xa x}] P)", "by(auto intro: Strong_Early_Sim.monotonic)"], ["", "lemma bisimE:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<sim> Q\"\n  \n  shows \"P \\<leadsto>[bisim] Q\"\n  and   \"Q \\<sim> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q &&& Q \\<sim> P", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q &&& Q \\<sim> P", "by(auto intro: bisim.cases)"], ["", "lemma bisimClosed[eqvt]:\n  fixes P :: pi\n  and   Q :: pi\n  and   p :: \"name prm\"\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"(p \\<bullet> P) \\<sim> (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "let ?X = \"{(p \\<bullet> P, p \\<bullet> Q) | (p::name prm) P Q. P \\<sim> Q}\""], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "from assms"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "have \"(p \\<bullet> P, p \\<bullet> Q) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P, p \\<bullet> Q)\n    \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "by auto"], ["proof (state)\nthis:\n  (p \\<bullet> P, p \\<bullet> Q)\n  \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (p \\<bullet> P, p \\<bullet> Q)\n  \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "proof(coinduct rule: bisimWeakCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "{"], ["proof (state)\nthis:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "fix P Q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "fix p::\"name prm\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "assume \"P \\<leadsto>[bisim] Q\""], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "have \"bisim \\<subseteq> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "by(auto, rule_tac x=\"[]\" in exI) auto"], ["proof (state)\nthis:\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "have \"eqvt ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "by(auto simp add: eqvt_def pt2[OF pt_name_inst, THEN sym]) blast"], ["proof (state)\nthis:\n  eqvt {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n  eqvt {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "have \"(p \\<bullet> P) \\<leadsto>[?X] (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n  eqvt {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n                  P \\<sim> Q}] p \\<bullet> Q", "by(rule Strong_Early_Sim.eqvtI)"], ["proof (state)\nthis:\n  p \\<bullet>\n  P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n                P \\<sim> Q}] p \\<bullet> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "}"], ["proof (state)\nthis:\n  ?Pb2 \\<leadsto>[bisim] ?Qb2 \\<Longrightarrow>\n  ?pa2 \\<bullet>\n  ?Pb2 \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n                   P \\<sim> Q}] ?pa2 \\<bullet> ?Qb2\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n 2. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "ultimately"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n  ?Pb2 \\<leadsto>[bisim] ?Qb2 \\<Longrightarrow>\n  ?pa2 \\<bullet>\n  ?Pb2 \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n                   P \\<sim> Q}] ?pa2 \\<bullet> ?Qb2", "show ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n  ?Pb2 \\<leadsto>[bisim] ?Qb2 \\<Longrightarrow>\n  ?pa2 \\<bullet>\n  ?Pb2 \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n                   P \\<sim> Q}] ?pa2 \\<bullet> ?Qb2\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q", "by(blast dest: bisimE)"], ["proof (state)\nthis:\n  P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}] Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q.\n              P \\<sim> Q} \\<Longrightarrow>\n       (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}", "by(blast dest: bisimE)"], ["proof (state)\nthis:\n  (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |p P Q. P \\<sim> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<bullet> P \\<sim> p \\<bullet> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eqvt[simp]:\n  shows \"eqvt bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt bisim", "by(auto simp add: eqvt_def eqvts)"], ["", "lemma reflexive:\n  fixes P :: pi\n\n  shows \"P \\<sim> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> P", "have \"(P, P) \\<in> Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, P) \\<in> Id", "by simp"], ["proof (state)\nthis:\n  (P, P) \\<in> Id\n\ngoal (1 subgoal):\n 1. P \\<sim> P", "then"], ["proof (chain)\npicking this:\n  (P, P) \\<in> Id", "show ?thesis"], ["proof (prove)\nusing this:\n  (P, P) \\<in> Id\n\ngoal (1 subgoal):\n 1. P \\<sim> P", "by(coinduct rule: bisimWeakCoinduct) (auto intro: Strong_Early_Sim.reflexive)"], ["proof (state)\nthis:\n  P \\<sim> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma transitive:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes PBiSimQ: \"P \\<sim> Q\"\n  and     QBiSimR: \"Q \\<sim> R\"\n\n  shows \"P \\<sim> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> R", "let ?X = \"bisim O bisim\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> R", "from assms"], ["proof (chain)\npicking this:\n  P \\<sim> Q\n  Q \\<sim> R", "have \"(P, R) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  Q \\<sim> R\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> bisim O bisim", "by blast"], ["proof (state)\nthis:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> R", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> R", "proof(coinduct rule: bisimWeakCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O bisim\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "moreover"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O bisim\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "{"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O bisim\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "fix P Q R"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "assume \"P \\<sim> Q\" and \"Q \\<sim> R\""], ["proof (state)\nthis:\n  P \\<sim> Q\n  Q \\<sim> R\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "hence \"P \\<leadsto>[bisim] Q\" and \"Q \\<leadsto>[bisim] R\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  Q \\<sim> R\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q &&& Q \\<leadsto>[bisim] R", "by(metis bisimE)+"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n  Q \\<leadsto>[bisim] R\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n  Q \\<leadsto>[bisim] R\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "from eqvt"], ["proof (chain)\npicking this:\n  eqvt bisim", "have \"eqvt ?X\""], ["proof (prove)\nusing this:\n  eqvt bisim\n\ngoal (1 subgoal):\n 1. eqvt (bisim O bisim)", "by(auto simp add: eqvtTrans)"], ["proof (state)\nthis:\n  eqvt (bisim O bisim)\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "moreover"], ["proof (state)\nthis:\n  eqvt (bisim O bisim)\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "have \"bisim O bisim \\<subseteq> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim O bisim \\<subseteq> bisim O bisim", "by auto"], ["proof (state)\nthis:\n  bisim O bisim \\<subseteq> bisim O bisim\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  Q \\<leadsto>[bisim] R\n  eqvt (bisim O bisim)\n  bisim O bisim \\<subseteq> bisim O bisim", "have \"P \\<leadsto>[?X] R\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  Q \\<leadsto>[bisim] R\n  eqvt (bisim O bisim)\n  bisim O bisim \\<subseteq> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O bisim)] R", "by(rule Strong_Early_Sim.transitive)"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O bisim)] R\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?Pb2 \\<sim> ?Qb2; ?Qb2 \\<sim> ?Ra2\\<rbrakk>\n  \\<Longrightarrow> ?Pb2 \\<leadsto>[(bisim O bisim)] ?Ra2\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "ultimately"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> bisim O bisim\n  \\<lbrakk>?Pb2 \\<sim> ?Qb2; ?Qb2 \\<sim> ?Ra2\\<rbrakk>\n  \\<Longrightarrow> ?Pb2 \\<leadsto>[(bisim O bisim)] ?Ra2", "show ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O bisim\n  \\<lbrakk>?Pb2 \\<sim> ?Qb2; ?Qb2 \\<sim> ?Ra2\\<rbrakk>\n  \\<Longrightarrow> ?Pb2 \\<leadsto>[(bisim O bisim)] ?Ra2\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O bisim)] Q", "by auto"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O bisim)] Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O bisim", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> bisim O bisim", "by(auto dest: bisimE)"], ["proof (state)\nthis:\n  (Q, P) \\<in> bisim O bisim\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<sim> R\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}