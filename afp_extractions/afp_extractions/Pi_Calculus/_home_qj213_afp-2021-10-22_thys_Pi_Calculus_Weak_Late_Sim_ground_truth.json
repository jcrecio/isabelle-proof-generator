{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Weak_Late_Sim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemmas simDef = weakSimAct_def weakSimulation_def", "lemma \"weakSimAux P Rel Q = weakSimulation P Rel Q\"", "lemma monotonic: \n  fixes A  :: \"(pi \\<times> pi) set\"\n  and   B  :: \"(pi \\<times> pi) set\"\n  and   P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<leadsto>\\<^sup>^<A> P'\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>\\<^sup>^<B> P'\"", "lemma simCasesCont[consumes 1, case_names Bound Input Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Eqvt:  \"eqvt Rel\"\n  and     Bound: \"\\<And>Q' a x. \\<lbrakk>x \\<sharp> C; Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Input: \"\\<And>Q' a x. \\<lbrakk>x \\<sharp> C; Q \\<longmapsto>a<x> \\<prec> Q'\\<rbrakk> \\<Longrightarrow> \\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\"\n  and     Free:  \"\\<And>Q' \\<alpha>. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> (\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\"", "lemma simCases[case_names Bound Input Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Bound: \"\\<And>Q' a x. \\<lbrakk>Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Input: \"\\<And>Q' a x. \\<lbrakk>Q \\<longmapsto>a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\"\n  and     Free:  \"\\<And>Q' \\<alpha>. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> (\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\"", "lemma simActBoundCases[consumes 1, case_names Input BoundOutput]:\n  fixes P   :: pi\n  and   a   :: subject\n  and   x   :: name\n  and   Q'  :: pi\n  and   C   :: \"'a::fs_name\"\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes EqvtRel: \"eqvt Rel\"\n  and     DerInput: \"\\<And>b. a = InputS b \\<Longrightarrow> (\\<exists>P''. \\<forall>u. \\<exists>P'. (P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P') \\<and> (P', Q'[x::=u]) \\<in> Rel)\"\n  and     DerBoundOutput: \"\\<And>b. a = BoundOutputS b \\<Longrightarrow> (\\<exists>P'. (P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P') \\<and> (P', Q') \\<in> Rel)\"\n\n  shows \"weakSimAct P (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q') P Rel\"", "lemma simActFreeCases[consumes 0, case_names Der]:\n  fixes P   :: pi\n  and   \\<alpha>   :: freeRes\n  and   Q'  :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"\\<exists>P'. (P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P') \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"weakSimAct P (\\<alpha> \\<prec> Q') P Rel\"", "lemma simE:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   u   :: name\n  and   Q'  :: pi\n\n  assumes \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n\n  shows \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<longmapsto>a<x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\"\n  and   \"Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> (\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)\"", "lemma weakSimTauChain:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   Q'  :: pi\n\n  assumes QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n  and     Sim: \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto>\\<^sup>^<Rel> Q\"\n\n  shows \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\"", "lemma simE2:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes PSimQ: \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     Sim: \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     Eqvt: \"eqvt Rel\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"", "lemma eqvtI:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   perm :: \"name prm\"\n\n  assumes Sim: \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"(perm \\<bullet> P) \\<leadsto>\\<^sup>^<Rel'> (perm \\<bullet> Q)\"", "lemma reflexive:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> P\"", "lemma transitive:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes QSimR: \"Q \\<leadsto>\\<^sup>^<Rel'> R\"\n  and     Eqvt:  \"eqvt Rel\"\n  and     Eqvt': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n  and     Sim:   \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel''> R\"", "lemma strongSimWeakSim:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>[Rel] Q\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\"", "lemma strongAppend:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     QSimR: \"Q \\<leadsto>[Rel'] R\"\n  and     Eqvt'': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel''> R\""], "translations": [["", "lemmas simDef = weakSimAct_def weakSimulation_def"], ["", "lemma \"weakSimAux P Rel Q = weakSimulation P Rel Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weakSimAux P Rel Q = P \\<leadsto>\\<^sup>^<Rel> Q", "by(auto simp add: weakSimAux_def simDef)"], ["", "lemma monotonic: \n  fixes A  :: \"(pi \\<times> pi) set\"\n  and   B  :: \"(pi \\<times> pi) set\"\n  and   P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<leadsto>\\<^sup>^<A> P'\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>\\<^sup>^<B> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<B> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<A> P'\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<B> P'", "apply(auto simp add: simDef)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 3. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "apply(erule_tac x=\"a<x> \\<prec> Q'\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P;\n        P' \\<longmapsto> a<x> \\<prec> Q' \\<longrightarrow>\n        (\\<forall>Q'a aa xa.\n            a<x> \\<prec> Q' = aa<\\<nu>xa> \\<prec> Q'a \\<longrightarrow>\n            xa \\<sharp> P \\<longrightarrow>\n            (\\<exists>P'.\n                P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n                (P', Q'a) \\<in> A)) \\<and>\n        (\\<forall>Q'a aa xa.\n            a<x> \\<prec> Q' = aa<xa> \\<prec> Q'a \\<longrightarrow>\n            xa \\<sharp> P \\<longrightarrow>\n            (\\<exists>P''.\n                \\<forall>u.\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                      (P', Q'a[xa::=u]) \\<in> A)) \\<and>\n        (\\<forall>Q'a \\<alpha>.\n            a<x> \\<prec> Q' = \\<alpha> \\<prec> Q'a \\<longrightarrow>\n            (\\<exists>P'.\n                P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                (P', Q'a) \\<in> A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "apply(clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P;\n        \\<forall>Q'a aa xa.\n           a<x> \\<prec> Q' = aa<\\<nu>xa> \\<prec> Q'a \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n               (P', Q'a) \\<in> A);\n        \\<forall>Q'a aa xa.\n           a<x> \\<prec> Q' = aa<xa> \\<prec> Q'a \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P''.\n               \\<forall>u.\n                  \\<exists>P'.\n                     P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                     (P', Q'a[xa::=u]) \\<in> A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "apply(rotate_tac 4)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<forall>Q'a aa xa.\n                   a<x> \\<prec> Q' = aa<xa> \\<prec> Q'a \\<longrightarrow>\n                   xa \\<sharp> P \\<longrightarrow>\n                   (\\<exists>P''.\n                       \\<forall>u.\n                          \\<exists>P'.\n                             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                             (P', Q'a[xa::=u]) \\<in> A);\n        A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P;\n        \\<forall>Q'a aa xa.\n           a<x> \\<prec> Q' = aa<\\<nu>xa> \\<prec> Q'a \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n               (P', Q'a) \\<in> A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "apply(erule_tac x=Q' in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P;\n        \\<forall>Q'a aa xa.\n           a<x> \\<prec> Q' = aa<\\<nu>xa> \\<prec> Q'a \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n               (P', Q'a) \\<in> A);\n        \\<forall>aa xa.\n           a<x> \\<prec> Q' = aa<xa> \\<prec> Q' \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P''.\n               \\<forall>u.\n                  \\<exists>P'.\n                     P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                     (P', Q'[xa::=u]) \\<in> A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "apply(erule_tac x=a in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P;\n        \\<forall>Q'a aa xa.\n           a<x> \\<prec> Q' = aa<\\<nu>xa> \\<prec> Q'a \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n               (P', Q'a) \\<in> A);\n        \\<forall>xa.\n           a<x> \\<prec> Q' = a<xa> \\<prec> Q' \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P''.\n               \\<forall>u.\n                  \\<exists>P'.\n                     P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<xa> \\<prec> P' \\<and>\n                     (P', Q'[xa::=u]) \\<in> A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "apply(erule_tac x=x in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>A \\<subseteq> B; P' \\<longmapsto> a<x> \\<prec> Q';\n        x \\<sharp> P;\n        \\<forall>Q'a aa xa.\n           a<x> \\<prec> Q' = aa<\\<nu>xa> \\<prec> Q'a \\<longrightarrow>\n           xa \\<sharp> P \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n               (P', Q'a) \\<in> A);\n        a<x> \\<prec> Q' = a<x> \\<prec> Q' \\<longrightarrow>\n        x \\<sharp> P \\<longrightarrow>\n        (\\<exists>P''.\n            \\<forall>u.\n               \\<exists>P'.\n                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                  (P', Q'[x::=u]) \\<in> A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> B\n 2. \\<And>Q' \\<alpha>.\n       \\<lbrakk>\\<forall>Rs.\n                   P' \\<longmapsto> Rs \\<longrightarrow>\n                   (\\<forall>Q' a x.\n                       Rs = a<\\<nu>x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A)) \\<and>\n                   (\\<forall>Q' a x.\n                       Rs = a<x> \\<prec> Q' \\<longrightarrow>\n                       x \\<sharp> P \\<longrightarrow>\n                       (\\<exists>P''.\n                           \\<forall>u.\n                              \\<exists>P'.\n                                 P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                 (P', Q'[x::=u]) \\<in> A)) \\<and>\n                   (\\<forall>Q' \\<alpha>.\n                       Rs = \\<alpha> \\<prec> Q' \\<longrightarrow>\n                       (\\<exists>P'.\n                           P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                           (P', Q') \\<in> A));\n        A \\<subseteq> B; P' \\<longmapsto> \\<alpha> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> B", "by blast+"], ["", "lemma simCasesCont[consumes 1, case_names Bound Input Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Eqvt:  \"eqvt Rel\"\n  and     Bound: \"\\<And>Q' a x. \\<lbrakk>x \\<sharp> C; Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Input: \"\\<And>Q' a x. \\<lbrakk>x \\<sharp> C; Q \\<longmapsto>a<x> \\<prec> Q'\\<rbrakk> \\<Longrightarrow> \\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\"\n  and     Free:  \"\\<And>Q' \\<alpha>. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> (\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "using Free"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^?\\<alpha> \\<prec> P' \\<and>\n     (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "proof(auto simp add: simDef)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "fix Q' a x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "assume xFreshP: \"(x::name) \\<sharp> P\""], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "assume Trans: \"Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "have \"\\<exists>c::name. c \\<sharp> (P, Q', x, C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. c \\<sharp> (P, Q', x, C)", "by(blast intro: name_exists_fresh)"], ["proof (state)\nthis:\n  \\<exists>c. c \\<sharp> (P, Q', x, C)\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>c. c \\<sharp> (P, Q', x, C)", "obtain c::name where cFreshP: \"c \\<sharp> P\" and cFreshQ': \"c \\<sharp> Q'\" and cFreshC: \"c \\<sharp> C\"\n                        and cineqx: \"c \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (P, Q', x, C)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<sharp> P; c \\<sharp> Q'; c \\<sharp> C;\n         c \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force simp add: fresh_prod)"], ["proof (state)\nthis:\n  c \\<sharp> P\n  c \\<sharp> Q'\n  c \\<sharp> C\n  c \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "from Trans cFreshQ'"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  c \\<sharp> Q'", "have \"Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(x, c)] \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  c \\<sharp> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "with cFreshC"], ["proof (chain)\npicking this:\n  c \\<sharp> C\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'", "have \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ a<\\<nu>c> \\<prec> P' \\<and> (P', [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  c \\<sharp> C\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n       (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "by(rule Bound)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\" and P'RelQ': \"(P', [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P';\n         (P', [(x, c)] \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "from PTrans xFreshP cineqx"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P\n  c \\<noteq> x", "have xFreshP': \"x \\<sharp> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P\n  c \\<noteq> x\n\ngoal (1 subgoal):\n 1. x \\<sharp> P'", "by(force dest: freshTransition)"], ["proof (state)\nthis:\n  x \\<sharp> P'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P'", "have \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^ a<\\<nu>x> \\<prec> ([(x, c)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet>\n                   P'", "by(simp add: alphaBoundResidual name_swap)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "have \"([(x, c)] \\<bullet> P', Q') \\<in> Rel\" (is \"?goal\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "from Eqvt P'RelQ'"], ["proof (chain)\npicking this:\n  eqvt Rel\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "have \"([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n    \\<in> Rel", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "with cineqx"], ["proof (chain)\npicking this:\n  c \\<noteq> x\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel", "show ?goal"], ["proof (prove)\nusing this:\n  c \\<noteq> x\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "by(simp add: name_calc)"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "fix Q' a x u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "assume QTrans: \"Q \\<longmapsto>a<x> \\<prec> (Q'::pi)\"and xFreshP: \"x \\<sharp> P\""], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "have \"\\<exists>c::name. c \\<sharp> (P, Q', C, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. c \\<sharp> (P, Q', C, x)", "by(blast intro: name_exists_fresh)"], ["proof (state)\nthis:\n  \\<exists>c. c \\<sharp> (P, Q', C, x)\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>c. c \\<sharp> (P, Q', C, x)", "obtain c::name where cFreshP: \"c \\<sharp> P\" and cFreshQ': \"c \\<sharp> Q'\" and cFreshC: \"c \\<sharp> C\"\n                        and cineqx: \"c \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (P, Q', C, x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<sharp> P; c \\<sharp> Q'; c \\<sharp> C;\n         c \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force simp add: fresh_prod)"], ["proof (state)\nthis:\n  c \\<sharp> P\n  c \\<sharp> Q'\n  c \\<sharp> C\n  c \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "from QTrans cFreshQ'"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  c \\<sharp> Q'", "have \"Q \\<longmapsto>a<c> \\<prec> ([(x, c)] \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  c \\<sharp> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<c> \\<prec> [(x, c)] \\<bullet> Q'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<c> \\<prec> [(x, c)] \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "with cFreshC"], ["proof (chain)\npicking this:\n  c \\<sharp> C\n  Q \\<longmapsto> a<c> \\<prec> [(x, c)] \\<bullet> Q'", "have \"\\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and> (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  c \\<sharp> C\n  Q \\<longmapsto> a<c> \\<prec> [(x, c)] \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n             (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel", "by(rule Input)"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n           (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n           (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel", "obtain P'' where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and> (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n           (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n              (P', ([(x, c)] \\<bullet> Q')[c::=u])\n              \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n        (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "have \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in ([(c, x)] \\<bullet> P'')\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel", "proof(auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n        (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P'\" and P'RelQ': \"(P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P' \\<and>\n        (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P';\n         (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P'\n  (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel", "from PTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P'\n  x \\<sharp> P", "have \"P \\<Longrightarrow>\\<^sub>lu in ([(c, x)] \\<bullet> P'')\\<rightarrow>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<c> \\<prec> P'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n                                    P''\\<rightarrow>a<x> \\<prec> P'", "by(rule alphaInput)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n                                  P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n                                  P''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel", "from P'RelQ' cFreshQ'"], ["proof (chain)\npicking this:\n  (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\n  c \\<sharp> Q'", "have \"(P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (P', ([(x, c)] \\<bullet> Q')[c::=u]) \\<in> Rel\n  c \\<sharp> Q'\n\ngoal (1 subgoal):\n 1. (P', Q'[x::=u]) \\<in> Rel", "by(simp add: renaming[THEN sym] name_swap)"], ["proof (state)\nthis:\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n                                  P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in ([(c, x)] \\<bullet> P'')\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n                                  P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u]) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n                                     P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n  P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel", "thus \"\\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in [(c, x)] \\<bullet>\n  P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simCases[case_names Bound Input Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Bound: \"\\<And>Q' a x. \\<lbrakk>Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Input: \"\\<And>Q' a x. \\<lbrakk>Q \\<longmapsto>a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\"\n  and     Free:  \"\\<And>Q' \\<alpha>. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> (\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>Q \\<longmapsto> ?a<\\<nu>?x> \\<prec> ?Q'; ?x \\<sharp> P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       P \\<Longrightarrow>\\<^sub>l\\<^sup>^?a<\\<nu>?x> \\<prec> P' \\<and>\n                       (P', ?Q') \\<in> Rel\n  \\<lbrakk>Q \\<longmapsto> ?a<?x> \\<prec> ?Q'; ?x \\<sharp> P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P''.\n                       \\<forall>u.\n                          \\<exists>P'.\n                             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>?a<?x> \\<prec> P' \\<and>\n                             (P', ?Q'[?x::=u]) \\<in> Rel\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^?\\<alpha> \\<prec> P' \\<and>\n     (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "by(auto simp add: simDef)"], ["", "lemma simActBoundCases[consumes 1, case_names Input BoundOutput]:\n  fixes P   :: pi\n  and   a   :: subject\n  and   x   :: name\n  and   Q'  :: pi\n  and   C   :: \"'a::fs_name\"\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes EqvtRel: \"eqvt Rel\"\n  and     DerInput: \"\\<And>b. a = InputS b \\<Longrightarrow> (\\<exists>P''. \\<forall>u. \\<exists>P'. (P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P') \\<and> (P', Q'[x::=u]) \\<in> Rel)\"\n  and     DerBoundOutput: \"\\<And>b. a = BoundOutputS b \\<Longrightarrow> (\\<exists>P'. (P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P') \\<and> (P', Q') \\<in> Rel)\"\n\n  shows \"weakSimAct P (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q') P Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weakSimAct P (a\\<guillemotleft>x\\<guillemotright> \\<prec> Q') P Rel", "proof(simp add: weakSimAct_def fresh_prod, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<\\<nu>xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q'a) \\<in> Rel\n 2. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "fix Q'' b y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<\\<nu>xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q'a) \\<in> Rel\n 2. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "assume Eq: \"a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<\\<nu>y> \\<prec> Q''\""], ["proof (state)\nthis:\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<\\<nu>y> \\<prec> Q''\n\ngoal (2 subgoals):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<\\<nu>xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q'a) \\<in> Rel\n 2. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "assume yFreshP: \"y \\<sharp> P\""], ["proof (state)\nthis:\n  y \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<\\<nu>xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q'a) \\<in> Rel\n 2. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "from Eq"], ["proof (chain)\npicking this:\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<\\<nu>y> \\<prec> Q''", "have \"a = BoundOutputS b\""], ["proof (prove)\nusing this:\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<\\<nu>y> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. a = BoundOutputS b", "by(simp add: residual.inject)"], ["proof (state)\nthis:\n  a = BoundOutputS b\n\ngoal (2 subgoals):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<\\<nu>xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^aa<\\<nu>xa> \\<prec> P' \\<and>\n                            (P', Q'a) \\<in> Rel\n 2. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "from yFreshP DerBoundOutput[OF this] Eq"], ["proof (chain)\npicking this:\n  y \\<sharp> P\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<\\<nu>y> \\<prec> Q''", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and> (P', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  y \\<sharp> P\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<\\<nu>y> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n       (P', Q'') \\<in> Rel", "proof(cases \"x=y\", auto simp add: residual.inject name_abs_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "fix P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "assume PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P'\""], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "assume P'RelQ': \"(P', ([(x, y)] \\<bullet> Q'')) \\<in> Rel\""], ["proof (state)\nthis:\n  (P', [(x, y)] \\<bullet> Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "assume xineqy: \"x \\<noteq> y\""], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "with PTrans yFreshP"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P'\n  y \\<sharp> P\n  x \\<noteq> y", "have yFreshP': \"y \\<sharp> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P'\n  y \\<sharp> P\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. y \\<sharp> P'", "by(force intro: freshTransition)"], ["proof (state)\nthis:\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "hence \"b<\\<nu>x> \\<prec> P' = b<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\""], ["proof (prove)\nusing this:\n  y \\<sharp> P'\n\ngoal (1 subgoal):\n 1. b<\\<nu>x> \\<prec> P' = b<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'", "by(rule alphaBoundResidual)"], ["proof (state)\nthis:\n  b<\\<nu>x> \\<prec> P' = b<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  b<\\<nu>x> \\<prec> P' = b<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "have \"([(x, y)] \\<bullet> P', Q'') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(x, y)] \\<bullet> P', Q'') \\<in> Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([(x, y)] \\<bullet> P', Q'') \\<in> Rel", "from EqvtRel P'RelQ'"], ["proof (chain)\npicking this:\n  eqvt Rel\n  (P', [(x, y)] \\<bullet> Q'') \\<in> Rel", "have \"([(x, y)] \\<bullet> P', [(x, y)] \\<bullet> ([(x, y)] \\<bullet> Q''))\\<in> Rel\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  (P', [(x, y)] \\<bullet> Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, y)] \\<bullet> P', [(x, y)] \\<bullet> [(x, y)] \\<bullet> Q'')\n    \\<in> Rel", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  ([(x, y)] \\<bullet> P', [(x, y)] \\<bullet> [(x, y)] \\<bullet> Q'')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, y)] \\<bullet> P', Q'') \\<in> Rel", "thus ?thesis"], ["proof (prove)\nusing this:\n  ([(x, y)] \\<bullet> P', [(x, y)] \\<bullet> [(x, y)] \\<bullet> Q'')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, y)] \\<bullet> P', Q'') \\<in> Rel", "by(simp add: name_calc)"], ["proof (state)\nthis:\n  ([(x, y)] \\<bullet> P', Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([(x, y)] \\<bullet> P', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>x \\<noteq> y; y \\<sharp> P; a = BoundOutputS b;\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P';\n        (P', [(x, y)] \\<bullet> Q'') \\<in> Rel; Q' = [(x, y)] \\<bullet> Q'';\n        x \\<sharp> Q''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n                            (P', Q'') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  b<\\<nu>x> \\<prec> P' = b<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  ([(x, y)] \\<bullet> P', Q'') \\<in> Rel", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and> (P', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  b<\\<nu>x> \\<prec> P' = b<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  ([(x, y)] \\<bullet> P', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n       (P', Q'') \\<in> Rel", "using PTrans"], ["proof (prove)\nusing this:\n  b<\\<nu>x> \\<prec> P' = b<\\<nu>y> \\<prec> [(x, y)] \\<bullet> P'\n  ([(x, y)] \\<bullet> P', Q'') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n       (P', Q'') \\<in> Rel", "by auto"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n     (P', Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^b<\\<nu>y> \\<prec> P' \\<and>\n     (P', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "fix Q'' b y u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "assume Eq: \"a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<y> \\<prec> Q''\""], ["proof (state)\nthis:\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<y> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "assume yFreshP: \"y \\<sharp> P\""], ["proof (state)\nthis:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "from Eq"], ["proof (chain)\npicking this:\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<y> \\<prec> Q''", "have \"a = InputS b\""], ["proof (prove)\nusing this:\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<y> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. a = InputS b", "by(simp add: residual.inject)"], ["proof (state)\nthis:\n  a = InputS b\n\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "from DerInput[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel", "obtain P'' where L1: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n                                                        (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "have \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in ([(x, y)] \\<bullet> P'')\\<rightarrow>b<y> \\<prec> P' \\<and> (P', Q''[y::=u]) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n    P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n          (P', Q''[y::=u]) \\<in> Rel", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n    P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n          (P', Q''[y::=u]) \\<in> Rel", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n    P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n          (P', Q''[y::=u]) \\<in> Rel", "from L1 Eq"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<y> \\<prec> Q''", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in ([(x, y)] \\<bullet> P'')\\<rightarrow>b<y> \\<prec> P' \\<and> (P', Q''[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n  a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' = b<y> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n       (P', Q''[y::=u]) \\<in> Rel", "proof(cases \"x=y\", auto simp add: residual.inject name_abs_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel;\n     a = InputS b; Q' = [(x, y)] \\<bullet> Q''; x \\<sharp> Q''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                   P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n                         (P', Q''[y::=u]) \\<in> Rel", "assume Der: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and> (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel\""], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n        (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel;\n     a = InputS b; Q' = [(x, y)] \\<bullet> Q''; x \\<sharp> Q''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                   P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n                         (P', Q''[y::=u]) \\<in> Rel", "assume xFreshQ'': \"x \\<sharp> Q''\""], ["proof (state)\nthis:\n  x \\<sharp> Q''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel;\n     a = InputS b; Q' = [(x, y)] \\<bullet> Q''; x \\<sharp> Q''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                   P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n                         (P', Q''[y::=u]) \\<in> Rel", "from Der"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n        (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P'\"\n                          and P'RelQ': \"(P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n        (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P';\n         (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P'\n  (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel;\n     a = InputS b; Q' = [(x, y)] \\<bullet> Q''; x \\<sharp> Q''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                   P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n                         (P', Q''[y::=u]) \\<in> Rel", "from PTrans yFreshP"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P'\n  y \\<sharp> P", "have \"P \\<Longrightarrow>\\<^sub>lu in ([(x, y)] \\<bullet> P'')\\<rightarrow>b<y> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P'\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                                    P''\\<rightarrow>b<y> \\<prec> P'", "by(rule alphaInput)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                                  P''\\<rightarrow>b<y> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel;\n     a = InputS b; Q' = [(x, y)] \\<bullet> Q''; x \\<sharp> Q''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                   P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n                         (P', Q''[y::=u]) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                                  P''\\<rightarrow>b<y> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel;\n     a = InputS b; Q' = [(x, y)] \\<bullet> Q''; x \\<sharp> Q''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                   P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n                         (P', Q''[y::=u]) \\<in> Rel", "from xFreshQ'' P'RelQ'"], ["proof (chain)\npicking this:\n  x \\<sharp> Q''\n  (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel", "have \"(P', Q''[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  x \\<sharp> Q''\n  (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P', Q''[y::=u]) \\<in> Rel", "by(simp add: renaming)"], ["proof (state)\nthis:\n  (P', Q''[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y;\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<x> \\<prec> P' \\<and>\n           (P', ([(x, y)] \\<bullet> Q'')[x::=u]) \\<in> Rel;\n     a = InputS b; Q' = [(x, y)] \\<bullet> Q''; x \\<sharp> Q''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                   P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n                         (P', Q''[y::=u]) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                                  P''\\<rightarrow>b<y> \\<prec> P'\n  (P', Q''[y::=u]) \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                                  P''\\<rightarrow>b<y> \\<prec> P'\n  (P', Q''[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n       (P', Q''[y::=u]) \\<in> Rel", "by force"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                                     P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n     (P', Q''[y::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n                                     P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n     (P', Q''[y::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n  P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n        (P', Q''[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q'a aa xa.\n       \\<lbrakk>a\\<guillemotleft>x\\<guillemotright> \\<prec> Q' =\n                aa<xa> \\<prec> Q'a;\n        xa \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>aa<xa> \\<prec> P' \\<and>\n                                  (P', Q'a[xa::=u]) \\<in> Rel", "thus  \"\\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<y> \\<prec> P' \\<and> (P', Q''[y::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in [(x, y)] \\<bullet>\n  P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n        (P', Q''[y::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n             (P', Q''[y::=u]) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>b<y> \\<prec> P' \\<and>\n           (P', Q''[y::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simActFreeCases[consumes 0, case_names Der]:\n  fixes P   :: pi\n  and   \\<alpha>   :: freeRes\n  and   Q'  :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"\\<exists>P'. (P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P') \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"weakSimAct P (\\<alpha> \\<prec> Q') P Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weakSimAct P (\\<alpha> \\<prec> Q') P Rel", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. weakSimAct P (\\<alpha> \\<prec> Q') P Rel", "by(simp add: residual.inject weakSimAct_def fresh_prod)"], ["", "lemma simE:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   u   :: name\n  and   Q'  :: pi\n\n  assumes \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n\n  shows \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<longmapsto>a<x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\"\n  and   \"Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> (\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (\\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P''.\n                          \\<forall>u.\n                             \\<exists>P'.\n                                P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                (P', Q'[x::=u]) \\<in> Rel) &&&\n    (Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n        (P', Q') \\<in> Rel)", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (\\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P''.\n                          \\<forall>u.\n                             \\<exists>P'.\n                                P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                (P', Q'[x::=u]) \\<in> Rel) &&&\n    (Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n        (P', Q') \\<in> Rel)", "by(simp add: simDef)+"], ["", "lemma weakSimTauChain:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   Q'  :: pi\n\n  assumes QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n  and     Sim: \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto>\\<^sup>^<Rel> Q\"\n\n  shows \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "from QChain"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "proof(induct rule: tauChainInduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q) \\<in> Rel\n 2. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "case id"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q) \\<in> Rel\n 2. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "have \"P \\<Longrightarrow>\\<^sub>\\<tau> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P", "by simp"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P\n\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q) \\<in> Rel\n 2. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "with PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>\\<tau> P", "show ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>\\<tau> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "case(ih Q' Q'')"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  Q' \\<longmapsto> \\<tau> \\<prec> Q''\n  \\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "have IH: \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "by fact"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where PChain: \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "from P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel", "have \"P' \\<leadsto>\\<^sup>^<Rel> Q'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P' \\<leadsto>\\<^sup>^<Rel> Q'", "by(rule Sim)"], ["proof (state)\nthis:\n  P' \\<leadsto>\\<^sup>^<Rel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P' \\<leadsto>\\<^sup>^<Rel> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "have Q'Trans: \"Q' \\<longmapsto>\\<tau> \\<prec> Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' \\<longmapsto> \\<tau> \\<prec> Q''", "by fact"], ["proof (state)\nthis:\n  Q' \\<longmapsto> \\<tau> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P' \\<leadsto>\\<^sup>^<Rel> Q'\n  Q' \\<longmapsto> \\<tau> \\<prec> Q''", "have \"\\<exists>P''. P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P'' \\<and> (P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P' \\<leadsto>\\<^sup>^<Rel> Q'\n  Q' \\<longmapsto> \\<tau> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P'' \\<and>\n       (P'', Q'') \\<in> Rel", "by(rule simE)"], ["proof (state)\nthis:\n  \\<exists>P''.\n     P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P'' \\<and>\n     (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P''.\n     P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P'' \\<and>\n     (P'', Q'') \\<in> Rel", "obtain P'' where P'Trans: \"P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P''\" and P''RelQ'': \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''.\n     P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P'' \\<and>\n     (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P'';\n         (P'', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "from P'Trans"], ["proof (chain)\npicking this:\n  P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P''", "have \"P' \\<Longrightarrow>\\<^sub>\\<tau> P''\""], ["proof (prove)\nusing this:\n  P' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P''\n\ngoal (1 subgoal):\n 1. P' \\<Longrightarrow>\\<^sub>\\<tau> P''", "by(rule tauTransitionChain)"], ["proof (state)\nthis:\n  P' \\<Longrightarrow>\\<^sub>\\<tau> P''\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "with PChain"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P' \\<Longrightarrow>\\<^sub>\\<tau> P''", "have \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P' \\<Longrightarrow>\\<^sub>\\<tau> P''\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P''", "by auto"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto> \\<tau> \\<prec> P'';\n        \\<exists>P'a.\n           P \\<Longrightarrow>\\<^sub>\\<tau> P'a \\<and>\n           (P'a, P') \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and>\n                            (P', P'') \\<in> Rel", "with P''RelQ''"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''", "show ?case"], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q'') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simE2:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes PSimQ: \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     Sim: \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     Eqvt: \"eqvt Rel\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n      x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n        (P', Q') \\<in> Rel)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "assume QTrans: \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "assume xFreshP: \"x \\<sharp> P\""], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have Goal: \"\\<And>P Q a x Q'. \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q; Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'; x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk> \\<Longrightarrow>\n                            \\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "fix P Q a x Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume PSimQ: \"P \\<leadsto>\\<^sup>^<Rel> Q\""], ["proof (state)\nthis:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume QTrans: \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume xFreshP: \"x \\<sharp> P\""], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume xFreshQ: \"x \\<sharp> Q\""], ["proof (state)\nthis:\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume PRelQ: \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from QTrans xFreshQ"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> Q", "obtain Q'' Q''' where QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\"\n                                          and Q''Trans: \"Q'' \\<longmapsto>a<\\<nu>x> \\<prec> Q'''\"\n                                          and Q'''Chain: \"Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'' Q'''.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> Q'';\n         Q'' \\<longmapsto> a<\\<nu>x> \\<prec> Q''';\n         Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: Weak_Late_Step_Semantics.transitionE simp add: weakTransition_def)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  Q'' \\<longmapsto> a<\\<nu>x> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from QChain PRelQ Sim"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  (P, Q) \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q", "have \"\\<exists>P''. P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  (P, Q) \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel", "obtain P'' where PChain: \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\" and P''RelQ'': \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         (P'', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from PChain xFreshP"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  x \\<sharp> P", "have xFreshP'': \"x \\<sharp> P''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. x \\<sharp> P''", "by(rule freshChain)"], ["proof (state)\nthis:\n  x \\<sharp> P''\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from P''RelQ''"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel", "have \"P'' \\<leadsto>\\<^sup>^<Rel> Q''\""], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P'' \\<leadsto>\\<^sup>^<Rel> Q''", "by(rule Sim)"], ["proof (state)\nthis:\n  P'' \\<leadsto>\\<^sup>^<Rel> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "hence \"\\<exists>P'''. P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P''' \\<and> (P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P'' \\<leadsto>\\<^sup>^<Rel> Q''\n\ngoal (1 subgoal):\n 1. \\<exists>P'''.\n       P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P''' \\<and>\n       (P''', Q''') \\<in> Rel", "using Q''Trans xFreshP''"], ["proof (prove)\nusing this:\n  P'' \\<leadsto>\\<^sup>^<Rel> Q''\n  Q'' \\<longmapsto> a<\\<nu>x> \\<prec> Q'''\n  x \\<sharp> P''\n\ngoal (1 subgoal):\n 1. \\<exists>P'''.\n       P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P''' \\<and>\n       (P''', Q''') \\<in> Rel", "by(rule simE)"], ["proof (state)\nthis:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel", "obtain P''' where P''Trans: \"P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'''\" and P'''RelQ''': \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P''';\n         (P''', Q''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'''\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from P'''RelQ'''"], ["proof (chain)\npicking this:\n  (P''', Q''') \\<in> Rel", "have \"P''' \\<leadsto>\\<^sup>^<Rel> Q'''\""], ["proof (prove)\nusing this:\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P''' \\<leadsto>\\<^sup>^<Rel> Q'''", "by(rule Sim)"], ["proof (state)\nthis:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "have \"\\<exists>P'. P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "using Q'''Chain P'''RelQ''' Sim"], ["proof (prove)\nusing this:\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q''') \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where P'''Chain: \"P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from PChain P''Trans P'''Chain xFreshP''"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  x \\<sharp> P''", "have \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  x \\<sharp> P''\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'", "by(blast dest: chainTransitionAppend)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q a x Q'.\n       \\<lbrakk>P \\<leadsto>\\<^sup>^<Rel> Q;\n        Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> P; x \\<sharp> Q; (P, Q) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?P \\<leadsto>\\<^sup>^<Rel> ?Q;\n   ?Q \\<Longrightarrow>\\<^sub>l\\<^sup>^?a<\\<nu>?x> \\<prec> ?Q';\n   ?x \\<sharp> ?P; ?x \\<sharp> ?Q; (?P, ?Q) \\<in> Rel\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       ?P \\<Longrightarrow>\\<^sub>l\\<^sup>^?a<\\<nu>?x> \\<prec> P' \\<and>\n                       (P', ?Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have \"\\<exists>c::name. c \\<sharp> (Q, Q', P, x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. c \\<sharp> (Q, Q', P, x)", "by(blast intro: name_exists_fresh)"], ["proof (state)\nthis:\n  \\<exists>c. c \\<sharp> (Q, Q', P, x)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>c. c \\<sharp> (Q, Q', P, x)", "obtain c::name where cFreshQ: \"c \\<sharp> Q\" and cFreshQ': \"c \\<sharp> Q'\" and cFreshP: \"c \\<sharp> P\"\n                        and xineqc: \"x \\<noteq> c\""], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (Q, Q', P, x)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<sharp> Q; c \\<sharp> Q'; c \\<sharp> P;\n         x \\<noteq> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force simp add: fresh_prod)"], ["proof (state)\nthis:\n  c \\<sharp> Q\n  c \\<sharp> Q'\n  c \\<sharp> P\n  x \\<noteq> c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "from QTrans cFreshQ'"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n  c \\<sharp> Q'", "have \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> ([(x, c)] \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n  c \\<sharp> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> [(x, c)] \\<bullet>\n                   Q'", "by(simp add: alphaBoundResidual)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'", "have \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and> (P', [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n       (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "using cFreshP cFreshQ \\<open>(P, Q) \\<in> Rel\\<close>"], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> [(x, c)] \\<bullet> Q'\n  c \\<sharp> P\n  c \\<sharp> Q\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n       (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "by(rule Goal)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\" and P'RelQ': \"(P', [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P';\n         (P', [(x, c)] \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> ([(x, c)] \\<bullet> P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet>\n                   P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet>\n                   P'", "from PTrans xFreshP xineqc"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P\n  x \\<noteq> c", "have \"x \\<sharp> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P\n  x \\<noteq> c\n\ngoal (1 subgoal):\n 1. x \\<sharp> P'", "by(rule freshTransition)"], ["proof (state)\nthis:\n  x \\<sharp> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet>\n                   P'", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet>\n                   P'", "by(simp add: alphaBoundResidual name_swap)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have \"([(x, c)] \\<bullet> P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "from Eqvt P'RelQ'"], ["proof (chain)\npicking this:\n  eqvt Rel\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "have \"([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n    \\<in> Rel", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "thus ?thesis"], ["proof (prove)\nusing this:\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n     x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "assume QTrans: \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "thus \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "proof(induct rule: transitionCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "case Step"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have \"Q \\<Longrightarrow>\\<^sub>l\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q'", "obtain Q'' Q''' where QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\" \n                           and Q''Trans: \"Q'' \\<longmapsto>\\<alpha> \\<prec> Q'''\"\n                           and Q'''Chain: \"Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'' Q'''.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> Q'';\n         Q'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n         Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Weak_Late_Step_Semantics.transitionE)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  Q'' \\<longmapsto> \\<alpha> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "from QChain PRelQ Sim"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  (P, Q) \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q", "have \"\\<exists>P''. P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  (P, Q) \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel", "obtain P'' where PChain: \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\" and P''RelQ'': \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         (P'', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  (P'', Q'') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "from P''RelQ''"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel", "have \"P'' \\<leadsto>\\<^sup>^<Rel> Q''\""], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P'' \\<leadsto>\\<^sup>^<Rel> Q''", "by(rule Sim)"], ["proof (state)\nthis:\n  P'' \\<leadsto>\\<^sup>^<Rel> Q''\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "hence \"\\<exists>P'''. P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P''' \\<and> (P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P'' \\<leadsto>\\<^sup>^<Rel> Q''\n\ngoal (1 subgoal):\n 1. \\<exists>P'''.\n       P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n       (P''', Q''') \\<in> Rel", "using Q''Trans"], ["proof (prove)\nusing this:\n  P'' \\<leadsto>\\<^sup>^<Rel> Q''\n  Q'' \\<longmapsto> \\<alpha> \\<prec> Q'''\n\ngoal (1 subgoal):\n 1. \\<exists>P'''.\n       P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n       (P''', Q''') \\<in> Rel", "by(rule simE)"], ["proof (state)\nthis:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel", "obtain P''' where P''Trans: \"P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'''\" and P'''RelQ''': \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P''';\n         (P''', Q''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'''\n  (P''', Q''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "from P'''RelQ'''"], ["proof (chain)\npicking this:\n  (P''', Q''') \\<in> Rel", "have \"P''' \\<leadsto>\\<^sup>^<Rel> Q'''\""], ["proof (prove)\nusing this:\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P''' \\<leadsto>\\<^sup>^<Rel> Q'''", "by(rule Sim)"], ["proof (state)\nthis:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have \"\\<exists>P'. P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "using Q'''Chain P'''RelQ''' Sim"], ["proof (prove)\nusing this:\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q''') \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where P'''Chain: \"P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "from PChain P''Trans P'''Chain"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'", "have \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  P'' \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'", "by(blast dest: chainTransitionAppend)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n\ngoal (2 subgoals):\n 1. Q \\<Longrightarrow>\\<^sub>l \\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel\n 2. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "case Stay"], ["proof (state)\nthis:\n  \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have \"\\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q", "by fact"], ["proof (state)\nthis:\n  \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "hence \"Q = Q'\" and \"\\<alpha> = \\<tau>\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q\n\ngoal (1 subgoal):\n 1. Q = Q' &&& \\<alpha> = \\<tau>", "by(simp add: residual.inject)+"], ["proof (state)\nthis:\n  Q = Q'\n  \\<alpha> = \\<tau>\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  Q = Q'\n  \\<alpha> = \\<tau>\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "have \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P", "by(simp add: weakTransition_def)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<prec> Q' = \\<tau> \\<prec> Q \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  Q = Q'\n  \\<alpha> = \\<tau>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P", "show ?case"], ["proof (prove)\nusing this:\n  Q = Q'\n  \\<alpha> = \\<tau>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "using PRelQ"], ["proof (prove)\nusing this:\n  Q = Q'\n  \\<alpha> = \\<tau>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<tau> \\<prec> P\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "(*\nlemma tauChainStep:\n  fixes P  :: pi\n  and   P' :: pi\n  \n  assumes PChain: \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     PineqP': \"P \\<noteq> P'\"\n\n  shows \"\\<exists>P''. P \\<longmapsto>\\<tau> \\<prec> P'' \\<and> P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\"\nproof -\n  from PChain have \"(P, P') \\<in> Id \\<union> (tauActs O tauActs\\<^sup>* )\"\n    by(insert rtrancl_unfold, blast)\n  with PineqP' have \"(P, P') \\<in> tauActs O tauActs\\<^sup>*\" by simp\n  hence \"(P, P') \\<in> tauActs\\<^sup>* O tauActs\" by(simp add: r_comp_rtrancl_eq)\n  thus ?thesis\n    by(auto simp add: tauActs_def tauChain_def)\nqed\n*)"], ["", "lemma eqvtI:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   perm :: \"name prm\"\n\n  assumes Sim: \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"(perm \\<bullet> P) \\<leadsto>\\<^sup>^<Rel'> (perm \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<leadsto>\\<^sup>^<Rel'> perm \\<bullet> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<leadsto>\\<^sup>^<Rel'> perm \\<bullet> Q", "from EqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'", "show ?thesis"], ["proof (prove)\nusing this:\n  eqvt Rel'\n\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<leadsto>\\<^sup>^<Rel'> perm \\<bullet> Q", "proof(induct rule: simCasesCont[of _ \"(perm \\<bullet> P)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound Q' a x)"], ["proof (state)\nthis:\n  x \\<sharp> perm \\<bullet> P\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have Trans: \"(perm \\<bullet> Q) \\<longmapsto> a<\\<nu>x> \\<prec> Q'\" and xFreshP: \"x \\<sharp> perm \\<bullet> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' &&&\n    x \\<sharp> perm \\<bullet> P", "by fact+"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> perm \\<bullet> P\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from Trans"], ["proof (chain)\npicking this:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "have \"(rev perm \\<bullet> (perm \\<bullet> Q)) \\<longmapsto> rev perm \\<bullet> (a<\\<nu>x> \\<prec> Q')\""], ["proof (prove)\nusing this:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet>\n    perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>x> \\<prec> Q'", "by(rule eqvts)"], ["proof (state)\nthis:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>x> \\<prec> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"Q \\<longmapsto> (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> x)> \\<prec> (rev perm \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> rev perm \\<bullet>\n                    a<\\<nu>rev perm \\<bullet>\n                           x> \\<prec> rev perm \\<bullet> Q'", "by(simp add: name_rev_per)"], ["proof (state)\nthis:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<\\<nu>rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<\\<nu>rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from xFreshP"], ["proof (chain)\npicking this:\n  x \\<sharp> perm \\<bullet> P", "have \"(rev perm \\<bullet> x) \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> perm \\<bullet> P\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet> x \\<sharp> P", "by(simp add: name_fresh_left)"], ["proof (state)\nthis:\n  rev perm \\<bullet> x \\<sharp> P\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<\\<nu>rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n  rev perm \\<bullet> x \\<sharp> P", "have \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> x)> \\<prec> P' \\<and> (P', rev perm \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<\\<nu>rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n  rev perm \\<bullet> x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n    a<\\<nu>rev perm \\<bullet> x> \\<prec> P' \\<and>\n       (P', rev perm \\<bullet> Q') \\<in> Rel", "using Sim"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<\\<nu>rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n  rev perm \\<bullet> x \\<sharp> P\n  P \\<leadsto>\\<^sup>^<Rel> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n    a<\\<nu>rev perm \\<bullet> x> \\<prec> P' \\<and>\n       (P', rev perm \\<bullet> Q') \\<in> Rel", "by(force intro: simE)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n  a<\\<nu>rev perm \\<bullet> x> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n  a<\\<nu>rev perm \\<bullet> x> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^ (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> x)> \\<prec> P'\" and P'RelQ': \"(P', rev perm \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n  a<\\<nu>rev perm \\<bullet> x> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n              a<\\<nu>rev perm \\<bullet> x> \\<prec> P';\n         (P', rev perm \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n                                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n                                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'", "have \"(perm \\<bullet> P) \\<Longrightarrow>\\<^sub>l\\<^sup>^ perm \\<bullet> ((rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> x)> \\<prec> P')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n                                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>\\<^sub>l\\<^sup>^perm \\<bullet>\n rev perm \\<bullet> a<\\<nu>rev perm \\<bullet> x> \\<prec> P'", "by(rule Weak_Late_Semantics.eqvtI)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^perm \\<bullet>\n                                     rev perm \\<bullet>\n                                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence L1: \"(perm \\<bullet> P) \\<Longrightarrow>\\<^sub>l\\<^sup>^ a<\\<nu>x> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^perm \\<bullet>\n                                     rev perm \\<bullet>\n                                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> perm \\<bullet> P'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> perm \\<bullet> P'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(P', rev perm \\<bullet> Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (P', rev perm \\<bullet> Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (P', rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with EqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'\n  (P', rev perm \\<bullet> Q') \\<in> Rel'", "have \"(perm \\<bullet> P', perm \\<bullet> (rev perm \\<bullet> Q')) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  eqvt Rel'\n  (P', rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"(perm \\<bullet> P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', Q') \\<in> Rel'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 3. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with L1"], ["proof (chain)\npicking this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       perm \\<bullet>\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     perm \\<bullet>\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Input Q' a x)"], ["proof (state)\nthis:\n  x \\<sharp> perm \\<bullet> P\n  perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have Trans: \"(perm \\<bullet> Q) \\<longmapsto>a<x> \\<prec> Q'\" and xFreshP: \"x \\<sharp> perm \\<bullet> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q' &&&\n    x \\<sharp> perm \\<bullet> P", "by fact+"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> perm \\<bullet> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from Trans"], ["proof (chain)\npicking this:\n  perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'", "have \"(rev perm \\<bullet> (perm \\<bullet> Q)) \\<longmapsto> rev perm \\<bullet> (a<x> \\<prec> Q')\""], ["proof (prove)\nusing this:\n  perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet>\n    perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<x> \\<prec> Q'", "by(rule eqvts)"], ["proof (state)\nthis:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"Q \\<longmapsto> (rev perm \\<bullet> a)<(rev perm \\<bullet> x)> \\<prec> (rev perm \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> rev perm \\<bullet>\n                    a<rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'", "by(simp add: name_rev_per)"], ["proof (state)\nthis:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from xFreshP"], ["proof (chain)\npicking this:\n  x \\<sharp> perm \\<bullet> P", "have xFreshP: \"(rev perm \\<bullet> x) \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> perm \\<bullet> P\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet> x \\<sharp> P", "by(simp add: name_fresh_left)"], ["proof (state)\nthis:\n  rev perm \\<bullet> x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n  rev perm \\<bullet> x \\<sharp> P", "have \"\\<exists>P''. \\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>(rev perm \\<bullet> a)<(rev perm \\<bullet> x)> \\<prec> P' \\<and> (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n  rev perm \\<bullet> x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev\n                        perm \\<bullet>\n                       a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n             (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u])\n             \\<in> Rel", "using Sim"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> rev perm \\<bullet> Q'\n  rev perm \\<bullet> x \\<sharp> P\n  P \\<leadsto>\\<^sup>^<Rel> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev\n                        perm \\<bullet>\n                       a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n             (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u])\n             \\<in> Rel", "by(force intro: simE)"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev\n                      perm \\<bullet>\n                     a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n           (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u])\n           \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev\n                      perm \\<bullet>\n                     a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n           (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u])\n           \\<in> Rel", "obtain P'' where L1:  \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>(rev perm \\<bullet> a)<(rev perm \\<bullet> x)> \\<prec> P' \\<and> (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev\n                      perm \\<bullet>\n                     a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n           (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u])\n           \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev\n                         perm \\<bullet>\n                        a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n              (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u])\n              \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n        (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have \"\\<forall>u. \\<exists>P'. (perm \\<bullet> P) \\<Longrightarrow>\\<^sub>lu in (perm \\<bullet> P'')\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n        (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l(rev perm \\<bullet> u) in P''\\<rightarrow>(rev perm \\<bullet> a)<(rev perm \\<bullet> x)> \\<prec> P'\"\n                          and P'RelQ': \"(P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>rev perm \\<bullet>\n                  a<rev perm \\<bullet> x> \\<prec> P' \\<and>\n        (P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lrev perm \\<bullet>\n      u in P''\\<rightarrow>rev perm \\<bullet>\n                           a<rev perm \\<bullet> x> \\<prec> P';\n         (P',\n          (rev perm \\<bullet>\n           Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n         \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lrev perm \\<bullet>\n                             u in P''\\<rightarrow>rev perm \\<bullet>\n            a<rev perm \\<bullet> x> \\<prec> P'\n  (P',\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lrev perm \\<bullet>\n                             u in P''\\<rightarrow>rev perm \\<bullet>\n            a<rev perm \\<bullet> x> \\<prec> P'", "have \"(perm \\<bullet> P) \\<Longrightarrow>\\<^sub>l(perm \\<bullet> (rev perm \\<bullet> u)) in (perm \\<bullet> P'')\\<rightarrow>(perm \\<bullet> rev perm \\<bullet> a)<(perm \\<bullet> rev perm \\<bullet> x)> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lrev perm \\<bullet>\n                             u in P''\\<rightarrow>rev perm \\<bullet>\n            a<rev perm \\<bullet> x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>\\<^sub>lperm \\<bullet>\n                               rev perm \\<bullet>\n                               u in perm \\<bullet>\n                                    P''\\<rightarrow>perm \\<bullet>\n              rev perm \\<bullet>\n              a<perm \\<bullet>\n                rev perm \\<bullet> x> \\<prec> perm \\<bullet> P'", "by(rule_tac Weak_Late_Step_Semantics.eqvtI, auto)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>lperm \\<bullet>\n                             rev perm \\<bullet>\n                             u in perm \\<bullet>\n                                  P''\\<rightarrow>perm \\<bullet>\n            rev perm \\<bullet>\n            a<perm \\<bullet> rev perm \\<bullet> x> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "hence L2: \"(perm \\<bullet> P) \\<Longrightarrow>\\<^sub>lu in (perm \\<bullet> P'')\\<rightarrow>a<x> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>lperm \\<bullet>\n                             rev perm \\<bullet>\n                             u in perm \\<bullet>\n                                  P''\\<rightarrow>perm \\<bullet>\n            rev perm \\<bullet>\n            a<perm \\<bullet> rev perm \\<bullet> x> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n                                    P''\\<rightarrow>a<x> \\<prec> perm \\<bullet>\n                           P'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n                                  P''\\<rightarrow>a<x> \\<prec> perm \\<bullet>\n                         P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "from P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P',\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(P', (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P',\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (P',\n     (rev perm \\<bullet>\n      Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n    \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (P',\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "with EqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'\n  (P',\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel'", "have \"(perm \\<bullet> P', perm \\<bullet> ((rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  eqvt Rel'\n  (P',\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P',\n     perm \\<bullet>\n     (rev perm \\<bullet>\n      Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n    \\<in> Rel'", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  (perm \\<bullet> P',\n   perm \\<bullet>\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "hence \"(perm \\<bullet> P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (perm \\<bullet> P',\n   perm \\<bullet>\n   (rev perm \\<bullet> Q')[(rev perm \\<bullet> x)::=(rev perm \\<bullet> u)])\n  \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', Q'[x::=u]) \\<in> Rel'", "by(simp add: name_per_rev eqvt_subs[THEN sym] name_calc)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n    P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', Q'[x::=u]) \\<in> Rel'", "with L2"], ["proof (chain)\npicking this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n                                  P''\\<rightarrow>a<x> \\<prec> perm \\<bullet>\n                         P'\n  (perm \\<bullet> P', Q'[x::=u]) \\<in> Rel'", "show \"\\<exists>P'. (perm \\<bullet> P) \\<Longrightarrow>\\<^sub>lu in (perm \\<bullet> P'')\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n                                  P''\\<rightarrow>a<x> \\<prec> perm \\<bullet>\n                         P'\n  (perm \\<bullet> P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       perm \\<bullet>\n       P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     perm \\<bullet>\n     P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n                                     P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', Q'[x::=u]) \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        perm \\<bullet>\n        P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n  P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> perm \\<bullet> P;\n        perm \\<bullet> Q \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  perm \\<bullet>\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel'\n 2. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        perm \\<bullet>\n        P \\<Longrightarrow>\\<^sub>lu in perm \\<bullet>\n  P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             perm \\<bullet>\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           perm \\<bullet>\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have Trans: \"(perm \\<bullet> Q) \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from Trans"], ["proof (chain)\npicking this:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "have \"(rev perm \\<bullet> (perm \\<bullet> Q)) \\<longmapsto> rev perm \\<bullet> (\\<alpha> \\<prec> Q')\""], ["proof (prove)\nusing this:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet>\n    perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'", "by(rule eqvts)"], ["proof (state)\nthis:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"Q \\<longmapsto> (rev perm \\<bullet> \\<alpha>) \\<prec> (rev perm \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> rev perm \\<bullet>\n                    \\<alpha> \\<prec> rev perm \\<bullet> Q'", "by(simp add: name_rev_per)"], ["proof (state)\nthis:\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with Sim"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'", "have \"(\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ (rev perm \\<bullet> \\<alpha>) \\<prec> P' \\<and> (P', (rev perm \\<bullet> Q')) \\<in> Rel)\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n    \\<alpha> \\<prec> P' \\<and>\n       (P', rev perm \\<bullet> Q') \\<in> Rel", "by(rule simE)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n  \\<alpha> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n  \\<alpha> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^ (rev perm \\<bullet> \\<alpha>) \\<prec> P'\" and PRel: \"(P', (rev perm \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n  \\<alpha> \\<prec> P' \\<and>\n     (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet>\n              \\<alpha> \\<prec> P';\n         (P', rev perm \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet> \\<alpha> \\<prec> P'\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet> \\<alpha> \\<prec> P'", "have \"(perm \\<bullet> P) \\<Longrightarrow>\\<^sub>l\\<^sup>^ perm \\<bullet> ((rev perm \\<bullet> \\<alpha>)\\<prec> P')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^rev perm \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>\\<^sub>l\\<^sup>^perm \\<bullet>\n rev perm \\<bullet> \\<alpha> \\<prec> P'", "by(rule Weak_Late_Semantics.eqvtI)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^perm \\<bullet>\n                                     rev perm \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence L1: \"(perm \\<bullet> P) \\<Longrightarrow>\\<^sub>l\\<^sup>^ \\<alpha> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^perm \\<bullet>\n                                     rev perm \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> perm \\<bullet> P'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PRel EqvtRel' RelRel'"], ["proof (chain)\npicking this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  eqvt Rel'\n  Rel \\<subseteq> Rel'", "have \"((perm \\<bullet> P'), (perm \\<bullet> (rev perm \\<bullet> Q'))) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  eqvt Rel'\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'", "by(force intro: eqvtRelI)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"((perm \\<bullet> P'), Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', Q') \\<in> Rel'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet>\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with L1"], ["proof (chain)\npicking this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       perm \\<bullet>\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     perm \\<bullet>\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  perm \\<bullet> P \\<leadsto>\\<^sup>^<Rel'> perm \\<bullet> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "(*****************Reflexivity and transitivity*********************)"], ["", "lemma reflexive:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> P", "using assms"], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> P", "by(auto intro: Weak_Late_Step_Semantics.singleActionChain\n  simp add: simDef weakTransition_def)"], ["", "lemma transitive:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes QSimR: \"Q \\<leadsto>\\<^sup>^<Rel'> R\"\n  and     Eqvt:  \"eqvt Rel\"\n  and     Eqvt': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n  and     Sim:   \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel''> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel''> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel''> R", "from PRelQ"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have PSimQ: \"P \\<leadsto>\\<^sup>^<Rel> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "by(rule Sim)"], ["proof (state)\nthis:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel''> R", "from Eqvt'"], ["proof (chain)\npicking this:\n  eqvt Rel''", "show ?thesis"], ["proof (prove)\nusing this:\n  eqvt Rel''\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel''> R", "proof(induct rule: simCasesCont[of _ \"(P, Q)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "case(Bound R' a x)"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> a<\\<nu>x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have \"x \\<sharp> (P, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, Q)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "hence xFreshP: \"x \\<sharp> P\" and xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from QSimR RTrans xFreshQ"], ["proof (chain)\npicking this:\n  Q \\<leadsto>\\<^sup>^<Rel'> R\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n  x \\<sharp> Q", "have \"\\<exists>Q'. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>\\<^sup>^<Rel'> R\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q' \\<and>\n       (Q', R') \\<in> Rel'", "by(rule simE)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q' \\<and>\n     (Q', R') \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q' \\<and>\n     (Q', R') \\<in> Rel'", "obtain Q' where QTrans: \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\" and Q'RelR': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q' \\<and>\n     (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from PSimQ Sim Eqvt PRelQ QTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P", "have \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by(rule simE2)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from P'RelQ' Q'RelR' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', R') \\<in> Rel''\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "case(Input R' a x)"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> a<x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have \"x \\<sharp> (P, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, Q)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "hence xFreshP: \"x \\<sharp> P\" and xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from QSimR RTrans xFreshQ"], ["proof (chain)\npicking this:\n  Q \\<leadsto>\\<^sup>^<Rel'> R\n  R \\<longmapsto> a<x> \\<prec> R'\n  x \\<sharp> Q", "obtain Q'' where \"\\<forall>u. \\<exists>Q'. Q \\<Longrightarrow>\\<^sub>lu in Q''\\<rightarrow>a<x> \\<prec> Q' \\<and> (Q', R'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>\\<^sup>^<Rel'> R\n  R \\<longmapsto> a<x> \\<prec> R'\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<forall>u.\n           \\<exists>Q'.\n              Q \\<Longrightarrow>\\<^sub>lu in Q''\\<rightarrow>a<x> \\<prec> Q' \\<and>\n              (Q', R'[x::=u]) \\<in> Rel' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>Q'.\n        Q \\<Longrightarrow>\\<^sub>lu in Q''\\<rightarrow>a<x> \\<prec> Q' \\<and>\n        (Q', R'[x::=u]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "hence \"\\<exists>Q'''. Q \\<Longrightarrow>\\<^sub>\\<tau> Q''' \\<and> Q'''\\<longmapsto>a<x> \\<prec> Q'' \\<and> (\\<forall>u. \\<exists>Q'. Q''[x::=u]\\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and> (Q', R'[x::=u]) \\<in> Rel')\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>Q'.\n        Q \\<Longrightarrow>\\<^sub>lu in Q''\\<rightarrow>a<x> \\<prec> Q' \\<and>\n        (Q', R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'''.\n       Q \\<Longrightarrow>\\<^sub>\\<tau> Q''' \\<and>\n       Q''' \\<longmapsto> a<x> \\<prec> Q'' \\<and>\n       (\\<forall>u.\n           \\<exists>Q'.\n              Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n              (Q', R'[x::=u]) \\<in> Rel')", "by(simp add: inputTransition_def, blast)"], ["proof (state)\nthis:\n  \\<exists>Q'''.\n     Q \\<Longrightarrow>\\<^sub>\\<tau> Q''' \\<and>\n     Q''' \\<longmapsto> a<x> \\<prec> Q'' \\<and>\n     (\\<forall>u.\n         \\<exists>Q'.\n            Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n            (Q', R'[x::=u]) \\<in> Rel')\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'''.\n     Q \\<Longrightarrow>\\<^sub>\\<tau> Q''' \\<and>\n     Q''' \\<longmapsto> a<x> \\<prec> Q'' \\<and>\n     (\\<forall>u.\n         \\<exists>Q'.\n            Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n            (Q', R'[x::=u]) \\<in> Rel')", "obtain Q''' where QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\"\n                       and Q'''Trans: \"Q''' \\<longmapsto>a<x> \\<prec> Q''\"\n                       and L1: \"\\<forall>u. \\<exists>Q'. Q''[x::=u]\\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and> (Q', R'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<exists>Q'''.\n     Q \\<Longrightarrow>\\<^sub>\\<tau> Q''' \\<and>\n     Q''' \\<longmapsto> a<x> \\<prec> Q'' \\<and>\n     (\\<forall>u.\n         \\<exists>Q'.\n            Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n            (Q', R'[x::=u]) \\<in> Rel')\n\ngoal (1 subgoal):\n 1. (\\<And>Q'''.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n         Q''' \\<longmapsto> a<x> \\<prec> Q'';\n         \\<forall>u.\n            \\<exists>Q'.\n               Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n               (Q', R'[x::=u]) \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  Q''' \\<longmapsto> a<x> \\<prec> Q''\n  \\<forall>u.\n     \\<exists>Q'.\n        Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n        (Q', R'[x::=u]) \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from QChain PRelQ Sim"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  (P, Q) \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q", "have \"\\<exists>P'''. P \\<Longrightarrow>\\<^sub>\\<tau> P''' \\<and> (P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  (P, Q) \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'''.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P''' \\<and> (P''', Q''') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P'''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P''' \\<and> (P''', Q''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P''' \\<and> (P''', Q''') \\<in> Rel", "obtain P''' where PChain: \"P \\<Longrightarrow>\\<^sub>\\<tau> P'''\" and P'''RelQ''': \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P''' \\<and> (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P''';\n         (P''', Q''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  (P''', Q''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from PChain xFreshP"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  x \\<sharp> P", "have xFreshP''': \"x \\<sharp> P'''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. x \\<sharp> P'''", "by(rule freshChain)"], ["proof (state)\nthis:\n  x \\<sharp> P'''\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from P'''RelQ'''"], ["proof (chain)\npicking this:\n  (P''', Q''') \\<in> Rel", "have \"P''' \\<leadsto>\\<^sup>^<Rel> Q'''\""], ["proof (prove)\nusing this:\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P''' \\<leadsto>\\<^sup>^<Rel> Q'''", "by(rule Sim)"], ["proof (state)\nthis:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "hence \"\\<exists>P''''. \\<forall>u. \\<exists>P''. P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and> (P'', Q''[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n\ngoal (1 subgoal):\n 1. \\<exists>P''''.\n       \\<forall>u.\n          \\<exists>P''.\n             P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n             (P'', Q''[x::=u]) \\<in> Rel", "using Q'''Trans xFreshP'''"], ["proof (prove)\nusing this:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n  Q''' \\<longmapsto> a<x> \\<prec> Q''\n  x \\<sharp> P'''\n\ngoal (1 subgoal):\n 1. \\<exists>P''''.\n       \\<forall>u.\n          \\<exists>P''.\n             P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n             (P'', Q''[x::=u]) \\<in> Rel", "by(rule simE)"], ["proof (state)\nthis:\n  \\<exists>P''''.\n     \\<forall>u.\n        \\<exists>P''.\n           P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n           (P'', Q''[x::=u]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P''''.\n     \\<forall>u.\n        \\<exists>P''.\n           P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n           (P'', Q''[x::=u]) \\<in> Rel", "obtain P'''' where L2: \"\\<forall>u. \\<exists>P''. P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and> (P'', Q''[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''''.\n     \\<forall>u.\n        \\<exists>P''.\n           P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n           (P'', Q''[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''''.\n        \\<forall>u.\n           \\<exists>P''.\n              P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n              (P'', Q''[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P''.\n        P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n        (P'', Q''[x::=u]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have \"\\<forall>u. \\<exists>P' Q'. P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', R'[x::=u]) \\<in> Rel''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "from L1"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>Q'.\n        Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n        (Q', R'[x::=u]) \\<in> Rel'", "obtain Q' where Q''Chain: \"Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q'\" and Q'RelR': \"(Q', R'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>Q'.\n        Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q' \\<and>\n        (Q', R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q';\n         (Q', R'[x::=u]) \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (Q', R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "from L2"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P''.\n        P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n        (P'', Q''[x::=u]) \\<in> Rel", "obtain P'' where P'''Trans: \"P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P''\"\n                           and P''RelQ'': \"(P'', Q''[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P''.\n        P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'' \\<and>\n        (P'', Q''[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'';\n         (P'', Q''[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P''\n  (P'', Q''[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "from P''RelQ''"], ["proof (chain)\npicking this:\n  (P'', Q''[x::=u]) \\<in> Rel", "have \"P'' \\<leadsto>\\<^sup>^<Rel> Q''[x::=u]\""], ["proof (prove)\nusing this:\n  (P'', Q''[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P'' \\<leadsto>\\<^sup>^<Rel> Q''[x::=u]", "by(rule Sim)"], ["proof (state)\nthis:\n  P'' \\<leadsto>\\<^sup>^<Rel> Q''[x::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "have \"\\<exists>P'. P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "using Q''Chain P''RelQ'' Sim"], ["proof (prove)\nusing this:\n  Q''[x::=u] \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P'', Q''[x::=u]) \\<in> Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where P''Chain: \"P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P'' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "from PChain P'''Trans P''Chain"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P''\n  P'' \\<Longrightarrow>\\<^sub>\\<tau> P'", "have \"P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  P''' \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P''\n  P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'", "by(blast dest: Weak_Late_Step_Semantics.chainTransitionAppend)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "from P'RelQ' Q'RelR'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R'[x::=u]) \\<in> Rel'", "have \"(P', R'[x::=u]) \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (P', R'[x::=u]) \\<in> Rel''", "by(insert Trans, auto)"], ["proof (state)\nthis:\n  (P', R'[x::=u]) \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P' Q'.\n          P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'\n  (P', R'[x::=u]) \\<in> Rel''", "show \"\\<exists>P' Q'. P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', R'[x::=u]) \\<in> Rel''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P'\n  (P', R'[x::=u]) \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P' Q'.\n       P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', R'[x::=u]) \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P' Q'.\n     P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', R'[x::=u]) \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P' Q'.\n        P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', R'[x::=u]) \\<in> Rel''\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P' Q'.\n        P \\<Longrightarrow>\\<^sub>lu in P''''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', R'[x::=u]) \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', R'[x::=u]) \\<in> Rel''", "by force"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', R'[x::=u]) \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "case(Free R' \\<alpha>)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> \\<alpha> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<alpha> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "with QSimR"], ["proof (chain)\npicking this:\n  Q \\<leadsto>\\<^sup>^<Rel'> R\n  R \\<longmapsto> \\<alpha> \\<prec> R'", "have \"\\<exists>Q'. Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<and> (Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>\\<^sup>^<Rel'> R\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<and>\n       (Q', R') \\<in> Rel'", "by(rule simE)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<and>\n     (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<and>\n     (Q', R') \\<in> Rel'", "obtain Q' where QTrans: \"Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q'\" and Q'RelR': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q' \\<and>\n     (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from PSimQ Sim Eqvt PRelQ QTrans"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q'", "have \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> ?P \\<leadsto>\\<^sup>^<Rel> ?Q\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by(rule simE2)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from P'RelQ' Q'RelR' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', R') \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>\\<^sup>^<Rel''> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strongSimWeakSim:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>[Rel] Q\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Bound Q' a x)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\" and \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' &&& x \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P", "obtain P' where PTrans: \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: Strong_Late_Sim.simE simp add: derivative_def)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'", "by(force intro: Weak_Late_Step_Semantics.singleActionChain simp add: weakTransition_def)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 3. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Input Q' a x)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "assume \"Q \\<longmapsto>a<x> \\<prec> Q'\" and \"x \\<sharp> P\""], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P", "obtain P' where PTrans: \"P \\<longmapsto>a<x> \\<prec> P'\" and PDer: \"derivative P' Q' (InputS a) x Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a<x> \\<prec> P';\n         derivative P' Q' (InputS a) x Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Strong_Late_Sim.simE)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<x> \\<prec> P'\n  derivative P' Q' (InputS a) x Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"\\<forall>u. \\<exists>P''. P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and> (P'', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P''.\n          P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n          (P'', Q'[x::=u]) \\<in> Rel", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P''.\n          P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n          (P'', Q'[x::=u]) \\<in> Rel", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P''.\n          P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n          (P'', Q'[x::=u]) \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<x> \\<prec> P'", "have \"P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'[x::=u]\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'[x::=u]", "by(blast intro: Weak_Late_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'[x::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P''.\n          P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n          (P'', Q'[x::=u]) \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'[x::=u]\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P''.\n          P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n          (P'', Q'[x::=u]) \\<in> Rel", "from PDer"], ["proof (chain)\npicking this:\n  derivative P' Q' (InputS a) x Rel", "have \"(P'[x::=u], Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  derivative P' Q' (InputS a) x Rel\n\ngoal (1 subgoal):\n 1. (P'[x::=u], Q'[x::=u]) \\<in> Rel", "by(force simp add: derivative_def)"], ["proof (state)\nthis:\n  (P'[x::=u], Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P''.\n          P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n          (P'', Q'[x::=u]) \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'[x::=u]\n  (P'[x::=u], Q'[x::=u]) \\<in> Rel", "show \"\\<exists>P''. P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and> (P'', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'[x::=u]\n  (P'[x::=u], Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n       (P'', Q'[x::=u]) \\<in> Rel", "by auto"], ["proof (state)\nthis:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n     (P'', Q'[x::=u]) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P''.\n        P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n        (P'', Q'[x::=u]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel\n 2. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P''.\n        P \\<Longrightarrow>\\<^sub>lu in P'\\<rightarrow>a<x> \\<prec> P'' \\<and>\n        (P'', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', Q'[x::=u]) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "case(Free Q' \\<alpha>)"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "have \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where PTrans: \"P \\<longmapsto>\\<alpha> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Strong_Late_Sim.simE)"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> \\<alpha> \\<prec> P'", "have \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'", "by(rule Weak_Late_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strongAppend:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>\\<^sup>^<Rel> Q\"\n  and     QSimR: \"Q \\<leadsto>[Rel'] R\"\n  and     Eqvt'': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n\n  shows \"P \\<leadsto>\\<^sup>^<Rel''> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel''> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel''> R", "from Eqvt''"], ["proof (chain)\npicking this:\n  eqvt Rel''", "show ?thesis"], ["proof (prove)\nusing this:\n  eqvt Rel''\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel''> R", "proof(induct rule: simCasesCont[of _ \"(P, Q)\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "case(Bound R' a x)"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have \"x \\<sharp> (P, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, Q)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "hence xFreshP: \"x \\<sharp> P\" and xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto>a<\\<nu>x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from xFreshQ QSimR RTrans"], ["proof (chain)\npicking this:\n  x \\<sharp> Q\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'", "obtain Q' where QTrans: \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\"\n                                          and Q'Rel'R': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  x \\<sharp> Q\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force dest: Strong_Late_Sim.simE simp add: derivative_def)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "with PSimQ QTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  (Q', R') \\<in> Rel'", "have \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by(blast intro: simE)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^ a<\\<nu>x> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from P'RelQ' Q'Rel'R' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (3 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 3. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n       (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^a<\\<nu>x> \\<prec> P' \\<and>\n     (P', R') \\<in> Rel''\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "case(Input R' a x)"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> a<x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<x> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<x> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have \"x \\<sharp> (P, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, Q)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "hence xFreshP: \"x \\<sharp> P\" and xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from QSimR RTrans xFreshQ"], ["proof (chain)\npicking this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> a<x> \\<prec> R'\n  x \\<sharp> Q", "obtain Q' where QTrans: \"Q \\<longmapsto>a<x> \\<prec> Q'\" and Q'Der: \"derivative Q' R' (InputS a) x Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> a<x> \\<prec> R'\n  x \\<sharp> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<longmapsto> a<x> \\<prec> Q';\n         derivative Q' R' (InputS a) x Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Strong_Late_Sim.simE)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  derivative Q' R' (InputS a) x Rel'\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from QTrans PSimQ xFreshP"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  x \\<sharp> P", "obtain P'' where L2: \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<x> \\<prec> Q'\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<forall>u.\n           \\<exists>P'.\n              P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n              (P', Q'[x::=u]) \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have \"\\<forall>u. \\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', R'[x::=u]) \\<in> Rel''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "proof(rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "from L2"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\"\n                          and P'RelQ': \"(P', Q'[x::=u]) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P';\n         (P', Q'[x::=u]) \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "from Q'Der"], ["proof (chain)\npicking this:\n  derivative Q' R' (InputS a) x Rel'", "have \"(Q'[x::=u], R'[x::=u]) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  derivative Q' R' (InputS a) x Rel'\n\ngoal (1 subgoal):\n 1. (Q'[x::=u], R'[x::=u]) \\<in> Rel'", "by(simp add: derivative_def)"], ["proof (state)\nthis:\n  (Q'[x::=u], R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n          (P', R'[x::=u]) \\<in> Rel''", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n  (Q'[x::=u], R'[x::=u]) \\<in> Rel'", "show \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and> (P', R'[x::=u]) \\<in> Rel''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n  (Q'[x::=u], R'[x::=u]) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', R'[x::=u]) \\<in> Rel''", "using Trans"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P'\n  (P', Q'[x::=u]) \\<in> Rel\n  (Q'[x::=u], R'[x::=u]) \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n       (P', R'[x::=u]) \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n     (P', R'[x::=u]) \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', R'[x::=u]) \\<in> Rel''\n\ngoal (2 subgoals):\n 1. \\<And>Q' a x.\n       \\<lbrakk>x \\<sharp> (P, Q); R \\<longmapsto> a<x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            \\<forall>u.\n                               \\<exists>P'.\n                                  P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n                                  (P', Q'[x::=u]) \\<in> Rel''\n 2. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>u.\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n        (P', R'[x::=u]) \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       \\<forall>u.\n          \\<exists>P'.\n             P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n             (P', R'[x::=u]) \\<in> Rel''", "by force"], ["proof (state)\nthis:\n  \\<exists>P''.\n     \\<forall>u.\n        \\<exists>P'.\n           P \\<Longrightarrow>\\<^sub>lu in P''\\<rightarrow>a<x> \\<prec> P' \\<and>\n           (P', R'[x::=u]) \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "case(Free R' \\<alpha>)"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> \\<alpha> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<alpha> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "with QSimR"], ["proof (chain)\npicking this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> \\<alpha> \\<prec> R'", "obtain Q' where QTrans: \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\" and Q'RelR': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>[Rel'] R\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Strong_Late_Sim.simE)"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from PSimQ QTrans"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "have \"\\<exists>P'. P \\<Longrightarrow>\\<^sub>l\\<^sup>^ \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<^sup>^<Rel> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel", "by(blast intro: simE)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow>\\<^sub>l\\<^sup>^ \\<alpha> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "from P'RelQ' Q'RelR' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>Q' \\<alpha>.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel''", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n       (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<^sub>l\\<^sup>^\\<alpha> \\<prec> P' \\<and>\n     (P', R') \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>\\<^sup>^<Rel''> R\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}