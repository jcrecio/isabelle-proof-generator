{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Weak_Late_Bisim_Subst.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma congBisim:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<approx>\\<^sup>s Q\"\n\n  shows \"P \\<approx> Q\"", "lemma strongBisimWeakBisim:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"P \\<sim>\\<^sup>s Q\"\n\n  shows \"P \\<approx>\\<^sup>s Q\"", "lemma eqvt:\n  shows \"eqvt (substClosed weakBisim)\"", "lemma eqvtI:\n  fixes P :: pi\n  and   Q :: pi\n  and   perm :: \"name prm\"\n\n  assumes \"P \\<approx>\\<^sup>s Q\"\n\n  shows \"(perm \\<bullet> P) \\<approx>\\<^sup>s (perm \\<bullet> Q)\"", "lemma reflexive:\n  fixes P :: pi\n  \n  shows \"P \\<approx>\\<^sup>s P\"", "lemma symetric:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"P \\<approx>\\<^sup>s Q\"\n  \n  shows \"Q \\<approx>\\<^sup>s P\"", "lemma transitive:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  \n  assumes \"P \\<approx>\\<^sup>s Q\"\n  and     \"Q \\<approx>\\<^sup>s R\"\n  \n  shows \"P \\<approx>\\<^sup>s R\"", "lemma partUnfold:\n  fixes P :: pi\n  and   Q :: pi\n  and   s :: \"(name \\<times> name) list\"\n\n  assumes \"P \\<approx>\\<^sup>s Q\"\n\n  shows \"P[<s>] \\<approx>\\<^sup>s Q[<s>]\""], "translations": [["", "lemma congBisim:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<approx>\\<^sup>s Q\"\n\n  shows \"P \\<approx> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<approx> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<approx> Q", "from assms substClosedSubset"], ["proof (chain)\npicking this:\n  P \\<approx>\\<^sup>s Q\n  substClosed ?Rel \\<subseteq> ?Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<approx>\\<^sup>s Q\n  substClosed ?Rel \\<subseteq> ?Rel\n\ngoal (1 subgoal):\n 1. P \\<approx> Q", "by blast"], ["proof (state)\nthis:\n  P \\<approx> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strongBisimWeakBisim:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"P \\<sim>\\<^sup>s Q\"\n\n  shows \"P \\<approx>\\<^sup>s Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<approx>\\<^sup>s Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim>\\<^sup>s Q\n\ngoal (1 subgoal):\n 1. P \\<approx>\\<^sup>s Q", "by(auto simp add: substClosed_def intro: strongBisimWeakBisim)"], ["", "lemma eqvt:\n  shows \"eqvt (substClosed weakBisim)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt (substClosed weakBisim)", "by(rule eqvtSubstClosed[OF Weak_Late_Bisim.eqvt])"], ["", "lemma eqvtI:\n  fixes P :: pi\n  and   Q :: pi\n  and   perm :: \"name prm\"\n\n  assumes \"P \\<approx>\\<^sup>s Q\"\n\n  shows \"(perm \\<bullet> P) \\<approx>\\<^sup>s (perm \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<approx>\\<^sup>s perm \\<bullet> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<approx>\\<^sup>s Q\n\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<approx>\\<^sup>s perm \\<bullet> Q", "by(rule_tac eqvtRelI[OF eqvt])"], ["", "lemma reflexive:\n  fixes P :: pi\n  \n  shows \"P \\<approx>\\<^sup>s P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<approx>\\<^sup>s P", "by(force simp add: substClosed_def intro: Weak_Late_Bisim.reflexive)"], ["", "lemma symetric:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"P \\<approx>\\<^sup>s Q\"\n  \n  shows \"Q \\<approx>\\<^sup>s P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<approx>\\<^sup>s P", "using assms"], ["proof (prove)\nusing this:\n  P \\<approx>\\<^sup>s Q\n\ngoal (1 subgoal):\n 1. Q \\<approx>\\<^sup>s P", "by(force simp add: substClosed_def intro: Weak_Late_Bisim.symmetric)"], ["", "lemma transitive:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n  \n  assumes \"P \\<approx>\\<^sup>s Q\"\n  and     \"Q \\<approx>\\<^sup>s R\"\n  \n  shows \"P \\<approx>\\<^sup>s R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<approx>\\<^sup>s R", "using assms"], ["proof (prove)\nusing this:\n  P \\<approx>\\<^sup>s Q\n  Q \\<approx>\\<^sup>s R\n\ngoal (1 subgoal):\n 1. P \\<approx>\\<^sup>s R", "by(force simp add: substClosed_def intro: Weak_Late_Bisim.transitive)"], ["", "lemma partUnfold:\n  fixes P :: pi\n  and   Q :: pi\n  and   s :: \"(name \\<times> name) list\"\n\n  assumes \"P \\<approx>\\<^sup>s Q\"\n\n  shows \"P[<s>] \\<approx>\\<^sup>s Q[<s>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P[<s>] \\<approx>\\<^sup>s Q[<s>]", "using assms"], ["proof (prove)\nusing this:\n  P \\<approx>\\<^sup>s Q\n\ngoal (1 subgoal):\n 1. P[<s>] \\<approx>\\<^sup>s Q[<s>]", "proof(auto simp add: substClosed_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "assume \"\\<forall>s. P[<s>] \\<approx> Q[<s>]\""], ["proof (state)\nthis:\n  \\<forall>s. P[<s>] \\<approx> Q[<s>]\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "hence \"P[<(s@s')>] \\<approx> Q[<(s@s')>]\""], ["proof (prove)\nusing this:\n  \\<forall>s. P[<s>] \\<approx> Q[<s>]\n\ngoal (1 subgoal):\n 1. P[<(s @ s')>] \\<approx> Q[<(s @ s')>]", "by blast"], ["proof (state)\nthis:\n  P[<(s @ s')>] \\<approx> Q[<(s @ s')>]\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "moreover"], ["proof (state)\nthis:\n  P[<(s @ s')>] \\<approx> Q[<(s @ s')>]\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "have \"P[<(s@s')>] = (P[<s>])[<s'>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P[<(s @ s')>] = P[<s>][<s'>]", "by(induct s', auto)"], ["proof (state)\nthis:\n  P[<(s @ s')>] = P[<s>][<s'>]\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "moreover"], ["proof (state)\nthis:\n  P[<(s @ s')>] = P[<s>][<s'>]\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "have \"Q[<(s@s')>] = (Q[<s>])[<s'>]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q[<(s @ s')>] = Q[<s>][<s'>]", "by(induct s', auto)"], ["proof (state)\nthis:\n  Q[<(s @ s')>] = Q[<s>][<s'>]\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       \\<forall>\\<sigma>.\n          P[<\\<sigma>>] \\<approx> Q[<\\<sigma>>] \\<Longrightarrow>\n       P[<s>][<\\<sigma>>] \\<approx> Q[<s>][<\\<sigma>>]", "ultimately"], ["proof (chain)\npicking this:\n  P[<(s @ s')>] \\<approx> Q[<(s @ s')>]\n  P[<(s @ s')>] = P[<s>][<s'>]\n  Q[<(s @ s')>] = Q[<s>][<s'>]", "show \"(P[<s>])[<s'>] \\<approx> (Q[<s>])[<s'>]\""], ["proof (prove)\nusing this:\n  P[<(s @ s')>] \\<approx> Q[<(s @ s')>]\n  P[<(s @ s')>] = P[<s>][<s'>]\n  Q[<(s @ s')>] = Q[<s>][<s'>]\n\ngoal (1 subgoal):\n 1. P[<s>][<s'>] \\<approx> Q[<s>][<s'>]", "by simp"], ["proof (state)\nthis:\n  P[<s>][<s'>] \\<approx> Q[<s>][<s'>]\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}