{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Strong_Late_Bisim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma monoAux: \"A \\<subseteq> B \\<Longrightarrow> P \\<leadsto>[A] Q \\<longrightarrow> P \\<leadsto>[B] Q\"", "lemma monotonic': \"mono(\\<lambda>S. {(P, Q) |P Q. P \\<leadsto>[S] Q \\<and> Q \\<leadsto>[S] P})\"", "lemma monotonic: \"mono(\\<lambda>p x1 x2.\n        \\<exists>P Q. x1 = P \\<and>\n              x2 = Q \\<and> P \\<leadsto>[{(xa, x). p xa x}] Q \\<and> Q \\<leadsto>[{(xa, x). p xa x}] P)\"", "lemma bisimCoinduct[case_names cSim cSym , consumes 1]:\n  assumes p: \"(P, Q) \\<in> X\"\n  and     rSim: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(X \\<union> bisim)] S\"\n  and     rSym: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\"", "lemma bisimE:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<sim> Q\"\n  \n  shows \"P \\<leadsto>[bisim] Q\"", "lemma bisimI:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"P \\<leadsto>[bisim] Q\"\n  and     \"Q \\<sim> P\"\n\n  shows \"P \\<sim> Q\"", "lemma oldBisimBisimEq:\n  shows \"(\\<Union>{Rel. (old_bisim Rel)}) = bisim\"  (is \"?LHS = ?RHS\")", "lemma reflexive:\n  fixes P :: pi\n\n  shows \"P \\<sim> P\"", "lemma symmetric:\n  fixes P :: pi\n  and   Q :: pi\n   \n  assumes \"P \\<sim> Q\"\n\n  shows \"Q \\<sim> P\"", "lemma bisimClosed:\n  fixes P :: pi\n  and   Q :: pi\n  and   p :: \"name prm\"\n  \n  assumes \"P \\<sim> Q\"\n\n  shows \"(p \\<bullet> P) \\<sim> (p \\<bullet> Q)\"", "lemma bisimEqvt[simp]:\n  shows \"eqvt bisim\"", "lemma transitive:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"P \\<sim> Q\"\n  and     \"Q \\<sim> R\"\n\n  shows \"P \\<sim> R\"", "lemma bisimTransitiveCoinduct[case_names cSim cSym, case_conclusion bisim step, consumes 2]:\n  assumes \"(P, Q) \\<in> X\"\n  and \"eqvt X\"\n  and rSim: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim)] S\"\n  and rSym: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> bisim O (X \\<union> bisim) O bisim\"\n\n  shows \"P \\<sim> Q\""], "translations": [["", "lemma monoAux: \"A \\<subseteq> B \\<Longrightarrow> P \\<leadsto>[A] Q \\<longrightarrow> P \\<leadsto>[B] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    P \\<leadsto>[A] Q \\<longrightarrow> P \\<leadsto>[B] Q", "by(auto intro: Strong_Late_Sim.monotonic)"], ["", "coinductive_set bisim :: \"(pi \\<times> pi) set\"\nwhere\n  step: \"\\<lbrakk>P \\<leadsto>[bisim] Q; (Q, P) \\<in> bisim\\<rbrakk> \\<Longrightarrow> (P, Q) \\<in> bisim\"\nmonos monoAux"], ["", "abbreviation\n  strongBisimJudge (infixr \"\\<sim>\" 65) where \"P \\<sim> Q \\<equiv> (P, Q) \\<in> bisim\""], ["", "lemma monotonic': \"mono(\\<lambda>S. {(P, Q) |P Q. P \\<leadsto>[S] Q \\<and> Q \\<leadsto>[S] P})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>S. {(P, Q) |P Q. P \\<leadsto>[S] Q \\<and> Q \\<leadsto>[S] P})", "apply(rule monoI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<subseteq> y \\<Longrightarrow>\n       {(P, Q) |P Q. P \\<leadsto>[x] Q \\<and> Q \\<leadsto>[x] P}\n       \\<subseteq> {(P, Q) |P Q. P \\<leadsto>[y] Q \\<and> Q \\<leadsto>[y] P}", "by(auto dest: monoAux)"], ["", "lemma monotonic: \"mono(\\<lambda>p x1 x2.\n        \\<exists>P Q. x1 = P \\<and>\n              x2 = Q \\<and> P \\<leadsto>[{(xa, x). p xa x}] Q \\<and> Q \\<leadsto>[{(xa, x). p xa x}] P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>p x1 x2.\n         \\<exists>P Q.\n            x1 = P \\<and>\n            x2 = Q \\<and>\n            P \\<leadsto>[{(xa, x). p xa x}] Q \\<and>\n            Q \\<leadsto>[{(xa, x). p xa x}] P)", "apply(rule monoI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow>\n       (\\<lambda>x1 x2.\n           \\<exists>P Q.\n              x1 = P \\<and>\n              x2 = Q \\<and>\n              P \\<leadsto>[{(xaa, xa). x xaa xa}] Q \\<and>\n              Q \\<leadsto>[{(xaa, xa). x xaa xa}] P)\n       \\<le> (\\<lambda>x1 x2.\n                 \\<exists>P Q.\n                    x1 = P \\<and>\n                    x2 = Q \\<and>\n                    P \\<leadsto>[{(xa, x). y xa x}] Q \\<and>\n                    Q \\<leadsto>[{(xa, x). y xa x}] P)", "by(auto intro: Strong_Late_Sim.monotonic)"], ["", "lemma bisimCoinduct[case_names cSim cSym , consumes 1]:\n  assumes p: \"(P, Q) \\<in> X\"\n  and     rSim: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(X \\<union> bisim)] S\"\n  and     rSym: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "have aux: \"X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "by blast"], ["proof (state)\nthis:\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "from p"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> X", "show ?thesis"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "apply(coinduct, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>(x1, x2) \\<in> X; (P, Q) \\<in> X\\<rbrakk>\n       \\<Longrightarrow> x1 \\<leadsto>[{(xa, x).\n  (xa, x) \\<in> X \\<or> xa \\<sim> x}] x2\n 2. \\<And>x1 x2.\n       \\<lbrakk>(x1, x2) \\<in> X; (P, Q) \\<in> X;\n        (x2, x1) \\<notin> bisim\\<rbrakk>\n       \\<Longrightarrow> (x2, x1) \\<in> X", "apply(fastforce dest: rSim simp add: aux)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>(x1, x2) \\<in> X; (P, Q) \\<in> X;\n        (x2, x1) \\<notin> bisim\\<rbrakk>\n       \\<Longrightarrow> (x2, x1) \\<in> X", "by(fastforce dest: rSym)"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimE:\n  fixes P :: pi\n  and   Q :: pi\n\n  assumes \"P \\<sim> Q\"\n  \n  shows \"P \\<leadsto>[bisim] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q", "by(auto intro: bisim.cases)"], ["", "lemma bisimI:\n  fixes P :: pi\n  and   Q :: pi\n  \n  assumes \"P \\<leadsto>[bisim] Q\"\n  and     \"Q \\<sim> P\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  Q \\<sim> P\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(rule bisim.intros)"], ["", "definition old_bisim :: \"(pi \\<times> pi) set \\<Rightarrow> bool\" where\n  \"old_bisim Rel \\<equiv> \\<forall>(P, Q) \\<in> Rel. P \\<leadsto>[Rel] Q \\<and> (Q, P) \\<in> Rel\""], ["", "lemma oldBisimBisimEq:\n  shows \"(\\<Union>{Rel. (old_bisim Rel)}) = bisim\"  (is \"?LHS = ?RHS\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {Rel. old_bisim Rel} = bisim", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> {Rel. old_bisim Rel} \\<subseteq> bisim\n 2. bisim \\<subseteq> \\<Union> {Rel. old_bisim Rel}", "show \"?LHS \\<subseteq> ?RHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {Rel. old_bisim Rel} \\<subseteq> bisim", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b X.\n       \\<lbrakk>(a, b) \\<in> X; old_bisim X\\<rbrakk>\n       \\<Longrightarrow> a \\<sim> b", "fix P Q Rel"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b X.\n       \\<lbrakk>(a, b) \\<in> X; old_bisim X\\<rbrakk>\n       \\<Longrightarrow> a \\<sim> b", "assume \"(P, Q) \\<in> Rel\" and \"old_bisim Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  old_bisim Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b X.\n       \\<lbrakk>(a, b) \\<in> X; old_bisim X\\<rbrakk>\n       \\<Longrightarrow> a \\<sim> b", "thus \"P \\<sim> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n  old_bisim Rel\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       \\<lbrakk>old_bisim Rel; (R, S) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> R \\<leadsto>[(Rel \\<union> bisim)] S\n 2. \\<And>R S.\n       \\<lbrakk>old_bisim Rel; (R, S) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> (S, R) \\<in> Rel", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       \\<lbrakk>old_bisim Rel; (R, S) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> R \\<leadsto>[(Rel \\<union> bisim)] S\n 2. \\<And>R S.\n       \\<lbrakk>old_bisim Rel; (R, S) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> (S, R) \\<in> Rel", "with \\<open>old_bisim Rel\\<close>"], ["proof (chain)\npicking this:\n  old_bisim Rel\n  (P, Q) \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  old_bisim Rel\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(Rel \\<union> bisim)] Q", "by(fastforce simp add: old_bisim_def intro: Strong_Late_Sim.monotonic)"], ["proof (state)\nthis:\n  P \\<leadsto>[(Rel \\<union> bisim)] Q\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       \\<lbrakk>old_bisim Rel; (R, S) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> (S, R) \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       \\<lbrakk>old_bisim Rel; (R, S) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> (S, R) \\<in> Rel", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       \\<lbrakk>old_bisim Rel; (R, S) \\<in> Rel\\<rbrakk>\n       \\<Longrightarrow> (S, R) \\<in> Rel", "with \\<open>old_bisim Rel\\<close>"], ["proof (chain)\npicking this:\n  old_bisim Rel\n  (P, Q) \\<in> Rel", "show ?case"], ["proof (prove)\nusing this:\n  old_bisim Rel\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> Rel", "by(auto simp add: old_bisim_def)"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> {Rel. old_bisim Rel} \\<subseteq> bisim\n\ngoal (1 subgoal):\n 1. bisim \\<subseteq> \\<Union> {Rel. old_bisim Rel}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bisim \\<subseteq> \\<Union> {Rel. old_bisim Rel}", "show \"?RHS \\<subseteq> ?LHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim \\<subseteq> \\<Union> {Rel. old_bisim Rel}", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<sim> b \\<Longrightarrow>\n       \\<exists>x. old_bisim x \\<and> (a, b) \\<in> x", "fix P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<sim> b \\<Longrightarrow>\n       \\<exists>x. old_bisim x \\<and> (a, b) \\<in> x", "assume \"P \\<sim> Q\""], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<sim> b \\<Longrightarrow>\n       \\<exists>x. old_bisim x \\<and> (a, b) \\<in> x", "moreover"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<sim> b \\<Longrightarrow>\n       \\<exists>x. old_bisim x \\<and> (a, b) \\<in> x", "hence \"old_bisim bisim\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. old_bisim bisim", "by(auto simp add: old_bisim_def dest: bisim.cases)"], ["proof (state)\nthis:\n  old_bisim bisim\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<sim> b \\<Longrightarrow>\n       \\<exists>x. old_bisim x \\<and> (a, b) \\<in> x", "ultimately"], ["proof (chain)\npicking this:\n  P \\<sim> Q\n  old_bisim bisim", "show \"\\<exists>Rel. old_bisim Rel \\<and> (P, Q) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  old_bisim bisim\n\ngoal (1 subgoal):\n 1. \\<exists>Rel. old_bisim Rel \\<and> (P, Q) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Rel. old_bisim Rel \\<and> (P, Q) \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bisim \\<subseteq> \\<Union> {Rel. old_bisim Rel}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reflexive:\n  fixes P :: pi\n\n  shows \"P \\<sim> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> P", "have \"(P, P) \\<in> Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, P) \\<in> Id", "by simp"], ["proof (state)\nthis:\n  (P, P) \\<in> Id\n\ngoal (1 subgoal):\n 1. P \\<sim> P", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P, P) \\<in> Id\n\ngoal (1 subgoal):\n 1. P \\<sim> P", "by(coinduct rule: bisimCoinduct, auto intro: Strong_Late_Sim.reflexive)"], ["proof (state)\nthis:\n  P \\<sim> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma symmetric:\n  fixes P :: pi\n  and   Q :: pi\n   \n  assumes \"P \\<sim> Q\"\n\n  shows \"Q \\<sim> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<sim> P", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. Q \\<sim> P", "by(auto dest: bisim.cases)"], ["", "lemma bisimClosed:\n  fixes P :: pi\n  and   Q :: pi\n  and   p :: \"name prm\"\n  \n  assumes \"P \\<sim> Q\"\n\n  shows \"(p \\<bullet> P) \\<sim> (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "let ?X = \"{(p \\<bullet> P, p \\<bullet> Q) | P Q (p::name prm). P \\<sim> Q}\""], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "from \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "have  \"(p \\<bullet> P, p \\<bullet> Q) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P, p \\<bullet> Q)\n    \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "by blast"], ["proof (state)\nthis:\n  (p \\<bullet> P, p \\<bullet> Q)\n  \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (p \\<bullet> P, p \\<bullet> Q)\n  \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim> p \\<bullet> Q", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "case(cSim pP pQ)"], ["proof (state)\nthis:\n  (pP, pQ) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "from \\<open>(pP, pQ) \\<in> ?X\\<close>"], ["proof (chain)\npicking this:\n  (pP, pQ) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "obtain P Q p where \"P \\<sim> Q\" and \"pP = (p::name prm) \\<bullet> P\" and \"pQ = p \\<bullet> Q\""], ["proof (prove)\nusing this:\n  (pP, pQ) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. (\\<And>P Q p.\n        \\<lbrakk>P \\<sim> Q; pP = p \\<bullet> P; pQ = p \\<bullet> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P \\<sim> Q\n  pP = p \\<bullet> P\n  pQ = p \\<bullet> Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "from \\<open>P \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> Q", "have \"P \\<leadsto>[bisim] Q\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q", "by(rule bisimE)"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "have \"bisim \\<subseteq> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bisim \\<Longrightarrow>\n       x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bisim \\<Longrightarrow>\n       x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "assume \"x \\<in> bisim\""], ["proof (state)\nthis:\n  x \\<in> bisim\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bisim \\<Longrightarrow>\n       x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  x \\<in> bisim\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bisim \\<Longrightarrow>\n       x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "have \"x = (([]::name prm) \\<bullet> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = [] \\<bullet> x", "by auto"], ["proof (state)\nthis:\n  x = [] \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> bisim \\<Longrightarrow>\n       x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> bisim\n  x = [] \\<bullet> x", "show \"x \\<in> ?X\""], ["proof (prove)\nusing this:\n  x \\<in> bisim\n  x = [] \\<bullet> x\n\ngoal (1 subgoal):\n 1. x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "apply(case_tac x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<in> bisim; x = [] \\<bullet> x; x = (a, b)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                                  P \\<sim> Q}", "by(clarify, simp only: eqvts) metis"], ["proof (state)\nthis:\n  x \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "moreover"], ["proof (state)\nthis:\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "have \"eqvt ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "proof(auto simp add: eqvt_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "fix P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "fix perm1::\"name prm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "fix perm2::\"name prm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "assume \"P \\<sim> Q\""], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "moreover"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "have \"perm1 \\<bullet> perm2 \\<bullet> P = (perm1 @ perm2) \\<bullet> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm1 \\<bullet> perm2 \\<bullet> P = (perm1 @ perm2) \\<bullet> P", "by(simp add: pt2[OF pt_name_inst])"], ["proof (state)\nthis:\n  perm1 \\<bullet> perm2 \\<bullet> P = (perm1 @ perm2) \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "moreover"], ["proof (state)\nthis:\n  perm1 \\<bullet> perm2 \\<bullet> P = (perm1 @ perm2) \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "have \"perm1 \\<bullet> perm2 \\<bullet> Q = (perm1 @ perm2) \\<bullet> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm1 \\<bullet> perm2 \\<bullet> Q = (perm1 @ perm2) \\<bullet> Q", "by(simp add: pt2[OF pt_name_inst])"], ["proof (state)\nthis:\n  perm1 \\<bullet> perm2 \\<bullet> Q = (perm1 @ perm2) \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q perma p.\n       P \\<sim> Q \\<Longrightarrow>\n       \\<exists>Pa Qa.\n          (\\<exists>pa.\n              perma \\<bullet> p \\<bullet> P = pa \\<bullet> Pa \\<and>\n              perma \\<bullet> p \\<bullet> Q = pa \\<bullet> Qa) \\<and>\n          Pa \\<sim> Qa", "ultimately"], ["proof (chain)\npicking this:\n  P \\<sim> Q\n  perm1 \\<bullet> perm2 \\<bullet> P = (perm1 @ perm2) \\<bullet> P\n  perm1 \\<bullet> perm2 \\<bullet> Q = (perm1 @ perm2) \\<bullet> Q", "show \"\\<exists>P' Q'. (\\<exists>(perm::name prm). perm1 \\<bullet> perm2 \\<bullet> P = perm \\<bullet> P' \\<and>\n                                                   perm1 \\<bullet> perm2 \\<bullet> Q = perm \\<bullet> Q') \\<and> P' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  perm1 \\<bullet> perm2 \\<bullet> P = (perm1 @ perm2) \\<bullet> P\n  perm1 \\<bullet> perm2 \\<bullet> Q = (perm1 @ perm2) \\<bullet> Q\n\ngoal (1 subgoal):\n 1. \\<exists>P' Q'.\n       (\\<exists>perma.\n           perm1 \\<bullet> perm2 \\<bullet> P = perma \\<bullet> P' \\<and>\n           perm1 \\<bullet> perm2 \\<bullet> Q = perma \\<bullet> Q') \\<and>\n       P' \\<sim> Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P' Q'.\n     (\\<exists>perma.\n         perm1 \\<bullet> perm2 \\<bullet> P = perma \\<bullet> P' \\<and>\n         perm1 \\<bullet> perm2 \\<bullet> Q = perma \\<bullet> Q') \\<and>\n     P' \\<sim> Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eqvt {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n  eqvt {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "have \"(p \\<bullet> P) \\<leadsto>[?X] (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  bisim \\<subseteq> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n  eqvt {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. p \\<bullet>\n    P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                  P \\<sim> Q}] p \\<bullet> Q", "by(rule Strong_Late_Sim.eqvtI)"], ["proof (state)\nthis:\n  p \\<bullet>\n  P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                P \\<sim> Q}] p \\<bullet> Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       R \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                      P \\<sim> Q} \\<union>\n                     bisim)] S\n 2. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "with \\<open>pP = p \\<bullet> P\\<close> \\<open>pQ = p \\<bullet> Q\\<close>"], ["proof (chain)\npicking this:\n  pP = p \\<bullet> P\n  pQ = p \\<bullet> Q\n  p \\<bullet>\n  P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                P \\<sim> Q}] p \\<bullet> Q", "show ?case"], ["proof (prove)\nusing this:\n  pP = p \\<bullet> P\n  pQ = p \\<bullet> Q\n  p \\<bullet>\n  P \\<leadsto>[{(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                P \\<sim> Q}] p \\<bullet> Q\n\ngoal (1 subgoal):\n 1. pP \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                    P \\<sim> Q} \\<union>\n                   bisim)] pQ", "by(force intro: Strong_Late_Sim.monotonic)"], ["proof (state)\nthis:\n  pP \\<leadsto>[({(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n                  P \\<sim> Q} \\<union>\n                 bisim)] pQ\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S)\n       \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p.\n              P \\<sim> Q} \\<Longrightarrow>\n       (S, R) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}", "by(auto intro: symmetric)"], ["proof (state)\nthis:\n  (Q, P) \\<in> {(p \\<bullet> P, p \\<bullet> Q) |P Q p. P \\<sim> Q}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<bullet> P \\<sim> p \\<bullet> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimEqvt[simp]:\n  shows \"eqvt bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt bisim", "by(auto simp add: eqvt_def bisimClosed)"], ["", "lemma transitive:\n  fixes P :: pi\n  and   Q :: pi\n  and   R :: pi\n\n  assumes \"P \\<sim> Q\"\n  and     \"Q \\<sim> R\"\n\n  shows \"P \\<sim> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> R", "let ?X = \"bisim O bisim\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> R", "from assms"], ["proof (chain)\npicking this:\n  P \\<sim> Q\n  Q \\<sim> R", "have \"(P, R) \\<in> ?X\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  Q \\<sim> R\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> bisim O bisim", "by blast"], ["proof (state)\nthis:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> R", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> R", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O bisim", "case(cSim P R)"], ["proof (state)\nthis:\n  (P, R) \\<in> bisim O bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O bisim", "thus ?case"], ["proof (prove)\nusing this:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O bisim \\<union> bisim)] R", "by(fastforce intro: Strong_Late_Sim.transitive dest: bisimE simp add: eqvtTrans)"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O bisim \\<union> bisim)] R\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O bisim", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O bisim", "case(cSym P R)"], ["proof (state)\nthis:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O bisim", "thus ?case"], ["proof (prove)\nusing this:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. (R, P) \\<in> bisim O bisim", "by(auto dest: symmetric)"], ["proof (state)\nthis:\n  (R, P) \\<in> bisim O bisim\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<sim> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimTransitiveCoinduct[case_names cSim cSym, case_conclusion bisim step, consumes 2]:\n  assumes \"(P, Q) \\<in> X\"\n  and \"eqvt X\"\n  and rSim: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim)] S\"\n  and rSym: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> bisim O (X \\<union> bisim) O bisim\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "let ?X = \"bisim O (X \\<union> bisim) O bisim\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "from \\<open>(P, Q) \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> X", "have \"(P, Q) \\<in> ?X\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim", "by(auto intro: reflexive)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof(coinduct rule: bisimCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "{"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "fix P P' Q' Q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "assume \"P \\<sim> P'\" and \"(P', Q') \\<in> X \\<union> bisim\" and \"Q' \\<sim> Q\""], ["proof (state)\nthis:\n  P \\<sim> P'\n  (P', Q') \\<in> X \\<union> bisim\n  Q' \\<sim> Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "have \"P \\<leadsto>[(?X \\<union> bisim)] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "proof(cases \"(P', Q') \\<in> X\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "case True"], ["proof (state)\nthis:\n  (P', Q') \\<in> X\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "from \\<open>P \\<sim> P'\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> P'", "have \"P \\<leadsto>[bisim] P'\""], ["proof (prove)\nusing this:\n  P \\<sim> P'\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] P'", "by(rule bisimE)"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] P'\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] P'\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "from \\<open>(P', Q') \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> X", "have \"P' \\<leadsto>[(?X)] Q'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> X\n\ngoal (1 subgoal):\n 1. P' \\<leadsto>[(bisim O (X \\<union> bisim) O bisim)] Q'", "by(rule rSim)"], ["proof (state)\nthis:\n  P' \\<leadsto>[(bisim O (X \\<union> bisim) O bisim)] Q'\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "moreover"], ["proof (state)\nthis:\n  P' \\<leadsto>[(bisim O (X \\<union> bisim) O bisim)] Q'\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "from \\<open>eqvt X\\<close> bisimEqvt"], ["proof (chain)\npicking this:\n  eqvt X\n  eqvt bisim", "have \"eqvt(?X \\<union> bisim)\""], ["proof (prove)\nusing this:\n  eqvt X\n  eqvt bisim\n\ngoal (1 subgoal):\n 1. eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)", "by blast"], ["proof (state)\nthis:\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "moreover"], ["proof (state)\nthis:\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "have \"bisim O ?X \\<subseteq> ?X \\<union> bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim O bisim O (X \\<union> bisim) O bisim\n    \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim", "by(auto dest: transitive)"], ["proof (state)\nthis:\n  bisim O bisim O (X \\<union> bisim) O bisim\n  \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] P'\n  P' \\<leadsto>[(bisim O (X \\<union> bisim) O bisim)] Q'\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n  bisim O bisim O (X \\<union> bisim) O bisim\n  \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim", "have \"P \\<leadsto>[(?X \\<union> bisim)] Q'\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] P'\n  P' \\<leadsto>[(bisim O (X \\<union> bisim) O bisim)] Q'\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n  bisim O bisim O (X \\<union> bisim) O bisim\n  \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q'", "by(rule Strong_Late_Sim.transitive)"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q'\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q'\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "from \\<open>Q' \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  Q' \\<sim> Q", "have \"Q' \\<leadsto>[bisim] Q\""], ["proof (prove)\nusing this:\n  Q' \\<sim> Q\n\ngoal (1 subgoal):\n 1. Q' \\<leadsto>[bisim] Q", "by(rule bisimE)"], ["proof (state)\nthis:\n  Q' \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "moreover"], ["proof (state)\nthis:\n  Q' \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "note \\<open>eqvt(?X \\<union> bisim)\\<close>"], ["proof (state)\nthis:\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "moreover"], ["proof (state)\nthis:\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "have \"(?X \\<union> bisim) O bisim \\<subseteq> ?X \\<union> bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bisim O (X \\<union> bisim) O bisim \\<union> bisim) O bisim\n    \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim", "by auto (blast dest: transitive)+"], ["proof (state)\nthis:\n  (bisim O (X \\<union> bisim) O bisim \\<union> bisim) O bisim\n  \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q'\n  Q' \\<leadsto>[bisim] Q\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n  (bisim O (X \\<union> bisim) O bisim \\<union> bisim) O bisim\n  \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q'\n  Q' \\<leadsto>[bisim] Q\n  eqvt (bisim O (X \\<union> bisim) O bisim \\<union> bisim)\n  (bisim O (X \\<union> bisim) O bisim \\<union> bisim) O bisim\n  \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "by(rule Strong_Late_Sim.transitive)"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "case False"], ["proof (state)\nthis:\n  (P', Q') \\<notin> X\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "from \\<open>(P', Q') \\<notin> X\\<close> \\<open>(P', Q') \\<in> X \\<union> bisim\\<close>"], ["proof (chain)\npicking this:\n  (P', Q') \\<notin> X\n  (P', Q') \\<in> X \\<union> bisim", "have \"P' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<notin> X\n  (P', Q') \\<in> X \\<union> bisim\n\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "by simp"], ["proof (state)\nthis:\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "with \\<open>P \\<sim> P'\\<close> \\<open>Q' \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> P'\n  Q' \\<sim> Q\n  P' \\<sim> Q'", "have \"P \\<sim> Q\""], ["proof (prove)\nusing this:\n  P \\<sim> P'\n  Q' \\<sim> Q\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(blast dest: transitive)"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "hence \"P \\<leadsto>[bisim] Q\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q", "by(rule bisimE)"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] Q\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "have \"bisim \\<subseteq> ?X \\<union> bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim", "by auto"], ["proof (state)\nthis:\n  bisim \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] Q\n  bisim \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  bisim \\<subseteq> bisim O (X \\<union> bisim) O bisim \\<union> bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "by(rule Strong_Late_Sim.monotonic)"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?Pb2 \\<sim> ?P'2; (?P'2, ?Q'2) \\<in> X \\<union> bisim;\n   ?Q'2 \\<sim> ?Qb2\\<rbrakk>\n  \\<Longrightarrow> ?Pb2 \\<leadsto>[(bisim O\n                                     (X \\<union> bisim) O bisim \\<union>\n                                     bisim)] ?Qb2\n\ngoal (2 subgoals):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       R \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] S\n 2. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "with \\<open>(P, Q) \\<in> ?X\\<close>"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n  \\<lbrakk>?Pb2 \\<sim> ?P'2; (?P'2, ?Q'2) \\<in> X \\<union> bisim;\n   ?Q'2 \\<sim> ?Qb2\\<rbrakk>\n  \\<Longrightarrow> ?Pb2 \\<leadsto>[(bisim O\n                                     (X \\<union> bisim) O bisim \\<union>\n                                     bisim)] ?Qb2", "show ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n  \\<lbrakk>?Pb2 \\<sim> ?P'2; (?P'2, ?Q'2) \\<in> X \\<union> bisim;\n   ?Q'2 \\<sim> ?Qb2\\<rbrakk>\n  \\<Longrightarrow> ?Pb2 \\<leadsto>[(bisim O\n                                     (X \\<union> bisim) O bisim \\<union>\n                                     bisim)] ?Qb2\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q", "by auto"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O (X \\<union> bisim) O bisim \\<union> bisim)] Q\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "{"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "fix P P' Q' Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "assume \"P \\<sim> P'\" and \"(P', Q') \\<in> X \\<union> bisim\" and \"Q' \\<sim> Q\""], ["proof (state)\nthis:\n  P \\<sim> P'\n  (P', Q') \\<in> X \\<union> bisim\n  Q' \\<sim> Q\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "have \"(Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "proof(cases \"(P', Q') \\<in> X\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "case True"], ["proof (state)\nthis:\n  (P', Q') \\<in> X\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "from \\<open>(P', Q') \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> X", "have \"(Q', P') \\<in> ?X\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> X\n\ngoal (1 subgoal):\n 1. (Q', P') \\<in> bisim O (X \\<union> bisim) O bisim", "by(rule rSym)"], ["proof (state)\nthis:\n  (Q', P') \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "then"], ["proof (chain)\npicking this:\n  (Q', P') \\<in> bisim O (X \\<union> bisim) O bisim", "obtain Q'' P'' where \"Q' \\<sim> Q''\" and \"(Q'', P'') \\<in> X \\<union> bisim\" and \"P'' \\<sim> P'\""], ["proof (prove)\nusing this:\n  (Q', P') \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. (\\<And>Q'' P''.\n        \\<lbrakk>Q' \\<sim> Q''; (Q'', P'') \\<in> X \\<union> bisim;\n         P'' \\<sim> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Q' \\<sim> Q''\n  (Q'', P'') \\<in> X \\<union> bisim\n  P'' \\<sim> P'\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "from \\<open>Q' \\<sim> Q\\<close> \\<open>Q' \\<sim> Q''\\<close>"], ["proof (chain)\npicking this:\n  Q' \\<sim> Q\n  Q' \\<sim> Q''", "have \"Q \\<sim> Q''\""], ["proof (prove)\nusing this:\n  Q' \\<sim> Q\n  Q' \\<sim> Q''\n\ngoal (1 subgoal):\n 1. Q \\<sim> Q''", "by(metis transitive symmetric)"], ["proof (state)\nthis:\n  Q \\<sim> Q''\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "moreover"], ["proof (state)\nthis:\n  Q \\<sim> Q''\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "from \\<open>P \\<sim> P'\\<close> \\<open>P'' \\<sim> P'\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> P'\n  P'' \\<sim> P'", "have \"P'' \\<sim> P\""], ["proof (prove)\nusing this:\n  P \\<sim> P'\n  P'' \\<sim> P'\n\ngoal (1 subgoal):\n 1. P'' \\<sim> P", "by(metis transitive symmetric)"], ["proof (state)\nthis:\n  P'' \\<sim> P\n\ngoal (2 subgoals):\n 1. (P', Q') \\<in> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n 2. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<sim> Q''\n  P'' \\<sim> P", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<sim> Q''\n  P'' \\<sim> P\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "using \\<open>(Q'', P'') \\<in> X \\<union> bisim\\<close>"], ["proof (prove)\nusing this:\n  Q \\<sim> Q''\n  P'' \\<sim> P\n  (Q'', P'') \\<in> X \\<union> bisim\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "by blast"], ["proof (state)\nthis:\n  (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "case False"], ["proof (state)\nthis:\n  (P', Q') \\<notin> X\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "from \\<open>(P', Q') \\<notin> X\\<close> \\<open>(P', Q') \\<in> X \\<union> bisim\\<close>"], ["proof (chain)\npicking this:\n  (P', Q') \\<notin> X\n  (P', Q') \\<in> X \\<union> bisim", "have \"P' \\<sim> Q'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<notin> X\n  (P', Q') \\<in> X \\<union> bisim\n\ngoal (1 subgoal):\n 1. P' \\<sim> Q'", "by simp"], ["proof (state)\nthis:\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "with \\<open>P \\<sim> P'\\<close> \\<open>Q' \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> P'\n  Q' \\<sim> Q\n  P' \\<sim> Q'", "have \"Q \\<sim> P\""], ["proof (prove)\nusing this:\n  P \\<sim> P'\n  Q' \\<sim> Q\n  P' \\<sim> Q'\n\ngoal (1 subgoal):\n 1. Q \\<sim> P", "by(metis transitive symmetric)"], ["proof (state)\nthis:\n  Q \\<sim> P\n\ngoal (1 subgoal):\n 1. (P', Q') \\<notin> X \\<Longrightarrow>\n    (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "thus ?thesis"], ["proof (prove)\nusing this:\n  Q \\<sim> P\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "by(blast intro: reflexive)"], ["proof (state)\nthis:\n  (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?Pc2 \\<sim> ?P'2; (?P'2, ?Q'2) \\<in> X \\<union> bisim;\n   ?Q'2 \\<sim> ?Qc2\\<rbrakk>\n  \\<Longrightarrow> (?Qc2, ?Pc2) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. \\<And>R S.\n       (R, S) \\<in> bisim O (X \\<union> bisim) O bisim \\<Longrightarrow>\n       (S, R) \\<in> bisim O (X \\<union> bisim) O bisim", "with \\<open>(P, Q) \\<in> ?X\\<close>"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n  \\<lbrakk>?Pc2 \\<sim> ?P'2; (?P'2, ?Q'2) \\<in> X \\<union> bisim;\n   ?Q'2 \\<sim> ?Qc2\\<rbrakk>\n  \\<Longrightarrow> (?Qc2, ?Pc2) \\<in> bisim O (X \\<union> bisim) O bisim", "show ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O (X \\<union> bisim) O bisim\n  \\<lbrakk>?Pc2 \\<sim> ?P'2; (?P'2, ?Q'2) \\<in> X \\<union> bisim;\n   ?Q'2 \\<sim> ?Qc2\\<rbrakk>\n  \\<Longrightarrow> (?Qc2, ?Pc2) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim", "by blast"], ["proof (state)\nthis:\n  (Q, P) \\<in> bisim O (X \\<union> bisim) O bisim\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}