{"file_name": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus/Weak_Early_Step_Sim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Pi_Calculus", "problem_names": ["lemma monotonic: \n  fixes A  :: \"(pi \\<times> pi) set\"\n  and   B  :: \"(pi \\<times> pi) set\"\n  and   P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<leadsto>\\<guillemotleft>A\\<guillemotright> P'\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>B\\<guillemotright> P'\"", "lemma simCasesCont[consumes 1, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Eqvt:  \"eqvt Rel\"\n  and     Bound: \"\\<And>a x Q'. \\<lbrakk>x \\<sharp> C; Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Free:  \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"", "lemma simCases[consumes 0, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes \"\\<And>a x Q'. \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"", "lemma simE:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n\n  shows \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"", "lemma simE2:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes PSimQ: \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n  and     Sim: \"\\<And>R S. (R, S) \\<in> Rel \\<Longrightarrow> R \\<leadsto><Rel> S\"\n  and     Eqvt: \"eqvt Rel\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"", "lemma eqvtI:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   perm :: \"name prm\"\n\n  assumes PSimQ: \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"(perm \\<bullet> P) \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> (perm \\<bullet> Q)\"", "lemma reflexive:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> P\"", "lemma transitive:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n  and     QSimR: \"Q \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> R\"\n  and     Eqvt: \"eqvt Rel\"\n  and     Eqvt'': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n  and     Sim: \"\\<And>S T. (S, T) \\<in> Rel \\<Longrightarrow> S \\<leadsto><Rel> T\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel''\\<guillemotright> R\"", "lemma strongSimWeakSim:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>[Rel] Q\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"", "lemma weakSimWeakEqSim:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n\n  assumes \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n\n  shows \"P \\<leadsto><Rel> Q\""], "translations": [["", "lemma monotonic: \n  fixes A  :: \"(pi \\<times> pi) set\"\n  and   B  :: \"(pi \\<times> pi) set\"\n  and   P  :: pi\n  and   P' :: pi\n\n  assumes \"P \\<leadsto>\\<guillemotleft>A\\<guillemotright> P'\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>B\\<guillemotright> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>B\\<guillemotright> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<guillemotleft>A\\<guillemotright> P'\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>B\\<guillemotright> P'", "by(simp add: weakStepSimulation_def) blast"], ["", "lemma simCasesCont[consumes 1, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes Eqvt:  \"eqvt Rel\"\n  and     Bound: \"\\<And>a x Q'. \\<lbrakk>x \\<sharp> C; Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     Free:  \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q", "from Free"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<Longrightarrow>?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<Longrightarrow>?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q", "proof(auto simp add: weakStepSimulation_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "fix Q' a x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume xFreshP: \"(x::name) \\<sharp> P\""], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "assume Trans: \"Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "have \"\\<exists>c::name. c \\<sharp> (P, Q', x, C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. c \\<sharp> (P, Q', x, C)", "by(blast intro: name_exists_fresh)"], ["proof (state)\nthis:\n  \\<exists>c. c \\<sharp> (P, Q', x, C)\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>c. c \\<sharp> (P, Q', x, C)", "obtain c::name where cFreshP: \"c \\<sharp> P\" and cFreshQ': \"c \\<sharp> Q'\" and cFreshC: \"c \\<sharp> C\"\n                          and cineqx: \"c \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (P, Q', x, C)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<sharp> P; c \\<sharp> Q'; c \\<sharp> C;\n         c \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(force simp add: fresh_prod)"], ["proof (state)\nthis:\n  c \\<sharp> P\n  c \\<sharp> Q'\n  c \\<sharp> C\n  c \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from Trans cFreshQ'"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  c \\<sharp> Q'", "have \"Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(x, c)] \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  c \\<sharp> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(x, c)] \\<bullet> Q')", "by(simp add: alphaBoundOutput)"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(x, c)] \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "with cFreshC"], ["proof (chain)\npicking this:\n  c \\<sharp> C\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(x, c)] \\<bullet> Q')", "have \"\\<exists>P'. P \\<Longrightarrow> a<\\<nu>c> \\<prec> P' \\<and> (P', [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  c \\<sharp> C\n  Q \\<longmapsto> a<\\<nu>c> \\<prec> ([(x, c)] \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>a<\\<nu>c> \\<prec> P' \\<and>\n       (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "by(rule Bound)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow> a<\\<nu>c> \\<prec> P'\" and P'RelQ': \"(P', [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>c> \\<prec> P' \\<and>\n     (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>a<\\<nu>c> \\<prec> P';\n         (P', [(x, c)] \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>a<\\<nu>c> \\<prec> P'\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from PTrans \\<open>x \\<sharp> P\\<close> \\<open>c \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P\n  c \\<noteq> x", "have \"P \\<Longrightarrow>a<\\<nu>x> \\<prec> ([(x, c)] \\<bullet> P')\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>a<\\<nu>c> \\<prec> P'\n  x \\<sharp> P\n  c \\<noteq> x\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'", "by(simp add: weakTransitionAlpha name_swap)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from Eqvt P'RelQ'"], ["proof (chain)\npicking this:\n  eqvt Rel\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel", "have \"([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  eqvt Rel\n  (P', [(x, c)] \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n    \\<in> Rel", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "with \\<open>c \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  c \\<noteq> x\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel", "have \"([(x, c)] \\<bullet> P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  c \\<noteq> x\n  ([(x, c)] \\<bullet> P', [(x, c)] \\<bullet> [(x, c)] \\<bullet> Q')\n  \\<in> Rel\n\ngoal (1 subgoal):\n 1. ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>Q' a x.\n       \\<lbrakk>\\<And>\\<alpha> Q'.\n                   Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                      (P', Q') \\<in> Rel;\n        Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel", "show \"\\<exists>P'. P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> [(x, c)] \\<bullet> P'\n  ([(x, c)] \\<bullet> P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simCases[consumes 0, case_names Bound Free]:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   C   :: \"'a::fs_name\"\n\n  assumes \"\\<And>a x Q'. \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk> \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and     \"\\<And>\\<alpha> Q'. Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>Q \\<longmapsto> ?a<\\<nu>?x> \\<prec> ?Q'; ?x \\<sharp> P\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       P \\<Longrightarrow>?a<\\<nu>?x> \\<prec> P' \\<and>\n                       (P', ?Q') \\<in> Rel\n  Q \\<longmapsto> ?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<Longrightarrow>?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q", "by(auto simp add: weakStepSimulation_def)"], ["", "lemma simE:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n\n  shows \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)", "by(simp add: weakStepSimulation_def)+"], ["", "lemma simE2:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n  and   Q   :: pi\n  and   a   :: name\n  and   x   :: name\n  and   Q'  :: pi\n\n  assumes PSimQ: \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n  and     Sim: \"\\<And>R S. (R, S) \\<in> Rel \\<Longrightarrow> R \\<leadsto><Rel> S\"\n  and     Eqvt: \"eqvt Rel\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q' \\<Longrightarrow> x \\<sharp> P \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n  and   \"Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n     \\<Longrightarrow> \\<exists>P'.\n                          P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                          (P', Q') \\<in> Rel) &&&\n    (Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n     \\<exists>P'.\n        P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "assume QTrans: \"Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "assume \"x \\<sharp> P\""], ["proof (state)\nthis:\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from QTrans"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'", "obtain Q'' Q''' where QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\"\n                                        and Q''Trans: \"Q'' \\<longmapsto>a<\\<nu>x> \\<prec> Q'''\"\n                                        and Q'''Chain: \"Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'' Q'''.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> Q'';\n         Q'' \\<longmapsto> a<\\<nu>x> \\<prec> Q''';\n         Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: transitionE)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  Q'' \\<longmapsto> a<\\<nu>x> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from QChain PRelQ Sim"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  (P, Q) \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto><Rel> ?S", "have \"\\<exists>P''. P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  (P, Q) \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto><Rel> ?S\n\ngoal (1 subgoal):\n 1. \\<exists>P''.\n       P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel", "obtain P'' where PChain: \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\" and P''RelQ'': \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P''.\n     P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and> (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P'';\n         (P'', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  (P'', Q'') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from PChain \\<open>x \\<sharp> P\\<close>"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  x \\<sharp> P", "have xFreshP'': \"x \\<sharp> P''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. x \\<sharp> P''", "by(rule freshChain)"], ["proof (state)\nthis:\n  x \\<sharp> P''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from P''RelQ''"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel", "have \"P'' \\<leadsto><Rel> Q''\""], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P'' \\<leadsto><Rel> Q''", "by(rule Sim)"], ["proof (state)\nthis:\n  P'' \\<leadsto><Rel> Q''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with Q''Trans xFreshP''"], ["proof (chain)\npicking this:\n  Q'' \\<longmapsto> a<\\<nu>x> \\<prec> Q'''\n  x \\<sharp> P''\n  P'' \\<leadsto><Rel> Q''", "obtain P''' where P''Trans: \"P'' \\<Longrightarrow>a<\\<nu>x> \\<prec> P'''\"\n                                        and P'''RelQ''': \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q'' \\<longmapsto> a<\\<nu>x> \\<prec> Q'''\n  x \\<sharp> P''\n  P'' \\<leadsto><Rel> Q''\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P'' \\<Longrightarrow>a<\\<nu>x> \\<prec> P''';\n         (P''', Q''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Weak_Early_Sim.simE)"], ["proof (state)\nthis:\n  P'' \\<Longrightarrow>a<\\<nu>x> \\<prec> P'''\n  (P''', Q''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"\\<exists>P'. P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "using Q'''Chain P'''RelQ''' Sim"], ["proof (prove)\nusing this:\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q''') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto><Rel> ?S\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "by(rule weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where P'''Chain: \"P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from PChain P''Trans P'''Chain"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  P'' \\<Longrightarrow>a<\\<nu>x> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'", "have \"P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P''\n  P'' \\<Longrightarrow>a<\\<nu>x> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'", "by(blast dest: Weak_Early_Step_Semantics.chainTransitionAppend)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'.\n                         P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                         (P', Q') \\<in> Rel\n 2. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'", "show \"\\<exists>P'. P \\<Longrightarrow> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "assume \"Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\""], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'", "obtain Q'' Q''' where QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\" \n                         and Q''Trans: \"Q'' \\<longmapsto>\\<alpha> \\<prec> Q'''\"\n                         and Q'''Chain: \"Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'' Q'''.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> Q'';\n         Q'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n         Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: transitionE)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  Q'' \\<longmapsto> \\<alpha> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Longrightarrow>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n    \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from QChain Q''Trans Q'''Chain"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  Q'' \\<longmapsto> \\<alpha> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'", "show \"\\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n  Q'' \\<longmapsto> \\<alpha> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "proof(induct arbitrary: \\<alpha> Q''' Q' rule: tauChainInduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "case id"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from PSimQ \\<open>Q \\<longmapsto>\\<alpha> \\<prec> Q'''\\<close>"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'''", "have \"\\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q''') \\<in> Rel", "by(blast dest: simE)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q''') \\<in> Rel", "obtain P''' where PTrans: \"P \\<Longrightarrow>\\<alpha> \\<prec> P'''\" and P'RelQ''': \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P''';\n         (P''', Q''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n  (P''', Q''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "have \"\\<exists>P'. P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "using \\<open>Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<close> P'RelQ''' Sim"], ["proof (prove)\nusing this:\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q''') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto><Rel> ?S\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "by(rule Weak_Early_Sim.weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where P'''Chain: \"P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from P'''Chain PTrans"], ["proof (chain)\npicking this:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''", "have \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<alpha> \\<prec> P'", "by(blast dest: Weak_Early_Step_Semantics.chainTransitionAppend)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "case(ih Q'''' Q'' \\<alpha> Q''' Q')"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q''''\n  Q'''' \\<longmapsto> \\<tau> \\<prec> Q''\n  \\<lbrakk>Q'''' \\<longmapsto> ?\\<alpha> \\<prec> ?Q''';\n   ?Q''' \\<Longrightarrow>\\<^sub>\\<tau> ?Q'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>P'.\n                       P \\<Longrightarrow>?\\<alpha> \\<prec> P' \\<and>\n                       (P', ?Q') \\<in> Rel\n  Q'' \\<longmapsto> \\<alpha> \\<prec> Q'''\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "have \"Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q''", "by simp"], ["proof (state)\nthis:\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "with \\<open>Q'''' \\<longmapsto>\\<tau> \\<prec> Q''\\<close>"], ["proof (chain)\npicking this:\n  Q'''' \\<longmapsto> \\<tau> \\<prec> Q''\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q''", "obtain P'' where PChain: \"P \\<Longrightarrow>\\<tau> \\<prec>  P''\" and P''RelQ'': \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q'''' \\<longmapsto> \\<tau> \\<prec> Q''\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P \\<Longrightarrow>\\<tau> \\<prec> P'';\n         (P'', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(drule_tac ih) auto"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<tau> \\<prec> P''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from P''RelQ''"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel", "have \"P'' \\<leadsto><Rel> Q''\""], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P'' \\<leadsto><Rel> Q''", "by(rule Sim)"], ["proof (state)\nthis:\n  P'' \\<leadsto><Rel> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "hence \"\\<exists>P'''. P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''' \\<and> (P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P'' \\<leadsto><Rel> Q''\n\ngoal (1 subgoal):\n 1. \\<exists>P'''.\n       P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n       (P''', Q''') \\<in> Rel", "using \\<open>Q'' \\<longmapsto>\\<alpha> \\<prec> Q'''\\<close>"], ["proof (prove)\nusing this:\n  P'' \\<leadsto><Rel> Q''\n  Q'' \\<longmapsto> \\<alpha> \\<prec> Q'''\n\ngoal (1 subgoal):\n 1. \\<exists>P'''.\n       P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n       (P''', Q''') \\<in> Rel", "by(rule Weak_Early_Sim.simE)"], ["proof (state)\nthis:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel", "obtain P''' where P''Trans: \"P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'''\"\n                       and P'''RelQ''': \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'''.\n     P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''' \\<and>\n     (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''';\n         (P''', Q''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'''\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from \\<open>Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<close> P'''RelQ''' Sim"], ["proof (chain)\npicking this:\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q''') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto><Rel> ?S", "have \"\\<exists>P'. P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q''') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto><Rel> ?S\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "by(rule Weak_Early_Sim.weakSimTauChain)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where P'''Chain: \"P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n                     and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P''' \\<Longrightarrow>\\<^sub>\\<tau> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "from PChain P''Trans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<tau> \\<prec> P''\n  P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'''", "have \"P \\<Longrightarrow>\\<alpha> \\<prec> P'''\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<tau> \\<prec> P''\n  P'' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'''\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<alpha> \\<prec> P'''", "apply(auto simp add: freeTransition_def weakFreeTransition_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'''a P''a P'''aa P''aa.\n       \\<lbrakk>(P, P'''a)\n                \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n        P'''a \\<longmapsto> \\<tau> \\<prec> P''a;\n        (P''a, P'')\n        \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n        (P'', P'''aa)\n        \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n        P'''aa \\<longmapsto> \\<alpha> \\<prec> P''aa;\n        (P''aa, P''')\n        \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'''a.\n                            (P, P'''a)\n                            \\<in> {(P, P').\n                                   P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>* \\<and>\n                            (\\<exists>P''.\n                                P'''a \\<longmapsto> \\<alpha> \\<prec> P'' \\<and>\n                                (P'', P''')\n                                \\<in> {(P, P').\n P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*)", "apply(drule tauActTauChain, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'''a P''a P'''aa P''aa.\n       \\<lbrakk>(P, P'''a)\n                \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n        (P''a, P'')\n        \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n        (P'', P'''aa)\n        \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n        P'''aa \\<longmapsto> \\<alpha> \\<prec> P''aa;\n        (P''aa, P''')\n        \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*;\n        (P'''a, P''a)\n        \\<in> {(P, P'). P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'''a.\n                            (P, P'''a)\n                            \\<in> {(P, P').\n                                   P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>* \\<and>\n                            (\\<exists>P''.\n                                P'''a \\<longmapsto> \\<alpha> \\<prec> P'' \\<and>\n                                (P'', P''')\n                                \\<in> {(P, P').\n P \\<longmapsto> \\<tau> \\<prec> P'}\\<^sup>*)", "by(rule_tac x=P'''aa in exI) auto"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "hence \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<alpha> \\<prec> P'", "using P'''Chain"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<alpha> \\<prec> P'", "by(rule Weak_Early_Step_Semantics.chainTransitionAppend)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>P'' P''' \\<alpha> Q''' Q'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<longmapsto> \\<tau> \\<prec> P''';\n        \\<And>\\<alpha> Q''' Q'.\n           \\<lbrakk>P'' \\<longmapsto> \\<alpha> \\<prec> Q''';\n            Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>P'.\n                                P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                                (P', Q') \\<in> Rel;\n        P''' \\<longmapsto> \\<alpha> \\<prec> Q''';\n        Q''' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eqvtI:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n  and   perm :: \"name prm\"\n\n  assumes PSimQ: \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n  and     RelRel': \"Rel \\<subseteq> Rel'\"\n  and     EqvtRel': \"eqvt Rel'\"\n\n  shows \"(perm \\<bullet> P) \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> (perm \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> perm \\<bullet> Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Bound a x Q')"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> perm \\<bullet> P\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have xFreshP: \"x \\<sharp> perm \\<bullet> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> perm \\<bullet> P", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> perm \\<bullet> P\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have QTrans: \"(perm \\<bullet> Q) \\<longmapsto> a<\\<nu>x> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"(rev perm \\<bullet> (perm \\<bullet> Q)) \\<longmapsto> rev perm \\<bullet> (a<\\<nu>x> \\<prec> Q')\""], ["proof (prove)\nusing this:\n  perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet>\n    perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>x> \\<prec> Q'", "by(rule eqvt)"], ["proof (state)\nthis:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>x> \\<prec> Q'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"Q \\<longmapsto> (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> x)> \\<prec> (rev perm \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> a<\\<nu>x> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> (rev perm \\<bullet>\n                     a)<\\<nu>(rev perm \\<bullet>\n                              x)> \\<prec> (rev perm \\<bullet> Q')", "by(simp add: name_rev_per)"], ["proof (state)\nthis:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            x)> \\<prec> (rev perm \\<bullet> Q')\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            x)> \\<prec> (rev perm \\<bullet> Q')\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from xFreshP"], ["proof (chain)\npicking this:\n  x \\<sharp> perm \\<bullet> P", "have \"(rev perm \\<bullet> x) \\<sharp> P\""], ["proof (prove)\nusing this:\n  x \\<sharp> perm \\<bullet> P\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet> x \\<sharp> P", "by(simp add: name_fresh_left)"], ["proof (state)\nthis:\n  rev perm \\<bullet> x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            x)> \\<prec> (rev perm \\<bullet> Q')\n  rev perm \\<bullet> x \\<sharp> P", "obtain P' where PTrans: \"P \\<Longrightarrow> (rev perm \\<bullet> a)<\\<nu>(rev perm \\<bullet> x)> \\<prec> P'\"\n                         and P'RelQ': \"(P', rev perm \\<bullet> Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            x)> \\<prec> (rev perm \\<bullet> Q')\n  rev perm \\<bullet> x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>rev perm \\<bullet>\n                                    a<\\<nu>rev perm \\<bullet> x> \\<prec> P';\n         (P', rev perm \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using PSimQ"], ["proof (prove)\nusing this:\n  Q \\<longmapsto> (rev perm \\<bullet>\n                   a)<\\<nu>(rev perm \\<bullet>\n                            x)> \\<prec> (rev perm \\<bullet> Q')\n  rev perm \\<bullet> x \\<sharp> P\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>rev perm \\<bullet>\n                                    a<\\<nu>rev perm \\<bullet> x> \\<prec> P';\n         (P', rev perm \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>rev perm \\<bullet>\n                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>rev perm \\<bullet>\n                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'", "have \"(perm \\<bullet> P) \\<Longrightarrow>(perm \\<bullet> rev perm \\<bullet> a)<\\<nu>(perm \\<bullet> rev perm \\<bullet> x)> \\<prec> perm \\<bullet> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>rev perm \\<bullet>\n                     a<\\<nu>rev perm \\<bullet> x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>perm \\<bullet>\n                       rev perm \\<bullet>\n                       a<\\<nu>perm \\<bullet>\n                              rev perm \\<bullet>\n                              x> \\<prec> perm \\<bullet> P'", "by(rule Weak_Early_Step_Semantics.eqvtI)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>perm \\<bullet>\n                     rev perm \\<bullet>\n                     a<\\<nu>perm \\<bullet>\n                            rev perm \\<bullet> x> \\<prec> perm \\<bullet> P'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence L1: \"(perm \\<bullet> P) \\<Longrightarrow> a<\\<nu>x> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>perm \\<bullet>\n                     rev perm \\<bullet>\n                     a<\\<nu>perm \\<bullet>\n                            rev perm \\<bullet> x> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<Longrightarrow>a<\\<nu>x> \\<prec> perm \\<bullet> P'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  perm \\<bullet> P \\<Longrightarrow>a<\\<nu>x> \\<prec> perm \\<bullet> P'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from P'RelQ' RelRel'"], ["proof (chain)\npicking this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  Rel \\<subseteq> Rel'", "have \"(P', rev perm \\<bullet> Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (P', rev perm \\<bullet> Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  (P', rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with EqvtRel'"], ["proof (chain)\npicking this:\n  eqvt Rel'\n  (P', rev perm \\<bullet> Q') \\<in> Rel'", "have \"(perm \\<bullet> P', perm \\<bullet> (rev perm \\<bullet> Q')) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  eqvt Rel'\n  (P', rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'", "by(rule eqvtRelI)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"(perm \\<bullet> P', Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', Q') \\<in> Rel'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>perm \\<bullet> Q \\<longmapsto> a<\\<nu>x> \\<prec> Q';\n        x \\<sharp> perm \\<bullet> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            perm \\<bullet>\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel'\n 2. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with L1"], ["proof (chain)\npicking this:\n  perm \\<bullet> P \\<Longrightarrow>a<\\<nu>x> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  perm \\<bullet> P \\<Longrightarrow>a<\\<nu>x> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       perm \\<bullet> P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     perm \\<bullet> P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "case(Free \\<alpha> Q')"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "have QTrans: \"(perm \\<bullet> Q) \\<longmapsto> \\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"(rev perm \\<bullet> (perm \\<bullet> Q)) \\<longmapsto> rev perm \\<bullet> (\\<alpha> \\<prec> Q')\""], ["proof (prove)\nusing this:\n  perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. rev perm \\<bullet>\n    perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'", "by(rule eqvts)"], ["proof (state)\nthis:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"Q \\<longmapsto> (rev perm \\<bullet> \\<alpha>) \\<prec> (rev perm \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  rev perm \\<bullet>\n  perm \\<bullet> Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto> rev perm \\<bullet>\n                    \\<alpha> \\<prec> rev perm \\<bullet> Q'", "by(simp add: name_rev_per)"], ["proof (state)\nthis:\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'", "obtain P' where PTrans: \"P \\<Longrightarrow> (rev perm \\<bullet> \\<alpha>) \\<prec> P'\"\n                         and PRel: \"(P', (rev perm \\<bullet> Q')) \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  Q \\<longmapsto> rev perm \\<bullet> \\<alpha> \\<prec> rev perm \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>rev perm \\<bullet> \\<alpha> \\<prec> P';\n         (P', rev perm \\<bullet> Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>rev perm \\<bullet> \\<alpha> \\<prec> P'\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>rev perm \\<bullet> \\<alpha> \\<prec> P'", "have \"(perm \\<bullet> P) \\<Longrightarrow>(perm \\<bullet> rev perm \\<bullet> \\<alpha>) \\<prec> perm \\<bullet> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>rev perm \\<bullet> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet>\n    P \\<Longrightarrow>perm \\<bullet>\n                       rev perm \\<bullet> \\<alpha> \\<prec> perm \\<bullet> P'", "by(rule Weak_Early_Step_Semantics.eqvtI)"], ["proof (state)\nthis:\n  perm \\<bullet>\n  P \\<Longrightarrow>perm \\<bullet>\n                     rev perm \\<bullet> \\<alpha> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence L1: \"(perm \\<bullet> P) \\<Longrightarrow> \\<alpha> \\<prec> (perm \\<bullet> P')\""], ["proof (prove)\nusing this:\n  perm \\<bullet>\n  P \\<Longrightarrow>perm \\<bullet>\n                     rev perm \\<bullet> \\<alpha> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> perm \\<bullet> P'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> perm \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "from PRel EqvtRel' RelRel'"], ["proof (chain)\npicking this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  eqvt Rel'\n  Rel \\<subseteq> Rel'", "have \"((perm \\<bullet> P'), (perm \\<bullet> (rev perm \\<bullet> Q'))) \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (P', rev perm \\<bullet> Q') \\<in> Rel\n  eqvt Rel'\n  Rel \\<subseteq> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'", "by(force intro: eqvtRelI)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "hence \"((perm \\<bullet> P'), Q') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  (perm \\<bullet> P', perm \\<bullet> rev perm \\<bullet> Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (perm \\<bullet> P', Q') \\<in> Rel'", "by(simp add: name_per_rev)"], ["proof (state)\nthis:\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       perm \\<bullet> Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n          (P', Q') \\<in> Rel'", "with L1"], ["proof (chain)\npicking this:\n  perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'", "show ?case"], ["proof (prove)\nusing this:\n  perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> perm \\<bullet> P'\n  (perm \\<bullet> P', Q') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n       (P', Q') \\<in> Rel'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     perm \\<bullet> P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n     (P', Q') \\<in> Rel'\n\ngoal:\nNo subgoals!", "qed"], ["", "(*****************Reflexivity and transitivity*********************)"], ["", "lemma reflexive:\n  fixes P   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> P", "using assms"], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> P", "by(auto intro: Weak_Early_Step_Semantics.singleActionChain\n   simp add: weakStepSimulation_def weakFreeTransition_def)"], ["", "lemma transitive:\n  fixes P     :: pi\n  and   Q     :: pi\n  and   R     :: pi\n  and   Rel   :: \"(pi \\<times> pi) set\"\n  and   Rel'  :: \"(pi \\<times> pi) set\"\n  and   Rel'' :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n  and     QSimR: \"Q \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> R\"\n  and     Eqvt: \"eqvt Rel\"\n  and     Eqvt'': \"eqvt Rel''\"\n  and     Trans: \"Rel O Rel' \\<subseteq> Rel''\"\n  and     Sim: \"\\<And>S T. (S, T) \\<in> Rel \\<Longrightarrow> S \\<leadsto><Rel> T\"\n  and     PRelQ: \"(P, Q) \\<in> Rel\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel''\\<guillemotright> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel''\\<guillemotright> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel''\\<guillemotright> R", "from Eqvt''"], ["proof (chain)\npicking this:\n  eqvt Rel''", "show ?thesis"], ["proof (prove)\nusing this:\n  eqvt Rel''\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel''\\<guillemotright> R", "proof(induct rule: simCasesCont[of _ \"(P, Q)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "case(Bound a x R')"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "have \"x \\<sharp> (P, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> (P, Q)", "by fact"], ["proof (state)\nthis:\n  x \\<sharp> (P, Q)\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "hence xFreshP: \"x \\<sharp> P\" and xFreshQ: \"x \\<sharp> Q\""], ["proof (prove)\nusing this:\n  x \\<sharp> (P, Q)\n\ngoal (1 subgoal):\n 1. x \\<sharp> P &&& x \\<sharp> Q", "by(simp add: fresh_prod)+"], ["proof (state)\nthis:\n  x \\<sharp> P\n  x \\<sharp> Q\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto>a<\\<nu>x> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> a<\\<nu>x> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from xFreshQ QSimR RTrans"], ["proof (chain)\npicking this:\n  x \\<sharp> Q\n  Q \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> R\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'", "obtain Q' where QTrans: \"Q \\<Longrightarrow> a<\\<nu>x> \\<prec> Q'\"\n                                          and Q'Rel'R': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  x \\<sharp> Q\n  Q \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> R\n  R \\<longmapsto> a<\\<nu>x> \\<prec> R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "with PSimQ Sim Eqvt PRelQ QTrans xFreshP"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  (?S, ?T) \\<in> Rel \\<Longrightarrow> ?S \\<leadsto><Rel> ?T\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\n  (Q', R') \\<in> Rel'", "have \"\\<exists>P'. P \\<Longrightarrow> a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  (?S, ?T) \\<in> Rel \\<Longrightarrow> ?S \\<leadsto><Rel> ?T\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n  Q \\<Longrightarrow>a<\\<nu>x> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by(blast intro: simE2)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow> a<\\<nu>x> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from P'RelQ' Q'Rel'R' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>x \\<sharp> (P, Q);\n        R \\<longmapsto> a<\\<nu>x> \\<prec> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel''\n 2. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "case(Free \\<alpha> R')"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "have RTrans: \"R \\<longmapsto> \\<alpha> \\<prec> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<longmapsto> \\<alpha> \\<prec> R'", "by fact"], ["proof (state)\nthis:\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "with QSimR"], ["proof (chain)\npicking this:\n  Q \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> R\n  R \\<longmapsto> \\<alpha> \\<prec> R'", "obtain Q' where QTrans: \"Q \\<Longrightarrow> \\<alpha> \\<prec> Q'\" and Q'RelR': \"(Q', R') \\<in> Rel'\""], ["proof (prove)\nusing this:\n  Q \\<leadsto>\\<guillemotleft>Rel'\\<guillemotright> R\n  R \\<longmapsto> \\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Longrightarrow>\\<alpha> \\<prec> Q';\n         (Q', R') \\<in> Rel'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: simE)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\n  (Q', R') \\<in> Rel'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from PSimQ Sim Eqvt PRelQ QTrans"], ["proof (chain)\npicking this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  (?S, ?T) \\<in> Rel \\<Longrightarrow> ?S \\<leadsto><Rel> ?T\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'", "have \"\\<exists>P'. P \\<Longrightarrow> \\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n  (?S, ?T) \\<in> Rel \\<Longrightarrow> ?S \\<leadsto><Rel> ?T\n  eqvt Rel\n  (P, Q) \\<in> Rel\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by(blast intro: simE2)"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "then"], ["proof (chain)\npicking this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "obtain P' where PTrans: \"P \\<Longrightarrow> \\<alpha> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "from P'RelQ' Q'RelR' Trans"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''", "have \"(P', R') \\<in> Rel''\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  (Q', R') \\<in> Rel'\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "with PTrans"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n  (P', R') \\<in> Rel''\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<leadsto>\\<guillemotleft>Rel''\\<guillemotright> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strongSimWeakSim:\n  fixes P   :: pi\n  and   Q   :: pi\n  and   Rel :: \"(pi \\<times> pi) set\"\n\n  assumes PSimQ: \"P \\<leadsto>[Rel] Q\"\n\n  shows \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q", "proof(induct rule: simCases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "case(Bound a x Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"Q \\<longmapsto>a<\\<nu>x> \\<prec> Q'\" and \"x \\<sharp> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> a<\\<nu>x> \\<prec> Q' &&& x \\<sharp> P", "by fact+"], ["proof (state)\nthis:\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P", "obtain P' where PTrans: \"P \\<longmapsto>a<\\<nu>x> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> a<\\<nu>x> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Strong_Early_Sim.elim)"], ["proof (state)\nthis:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'", "have \"P \\<Longrightarrow>a<\\<nu>x> \\<prec>  P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'", "by(force intro: Weak_Early_Step_Semantics.singleActionChain simp add: weakFreeTransition_def)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n\ngoal (2 subgoals):\n 1. \\<And>a x Q'.\n       \\<lbrakk>Q \\<longmapsto> a<\\<nu>x> \\<prec> Q'; x \\<sharp> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and>\n                            (P', Q') \\<in> Rel\n 2. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>a<\\<nu>x> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>a<\\<nu>x> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "case(Free \\<alpha> Q')"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "have \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto> \\<alpha> \\<prec> Q'", "by fact"], ["proof (state)\nthis:\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with PSimQ"], ["proof (chain)\npicking this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'", "obtain P' where PTrans: \"P \\<longmapsto>\\<alpha> \\<prec> P'\" and P'RelQ': \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto> \\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto> \\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: Strong_Early_Sim.elim)"], ["proof (state)\nthis:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "from PTrans"], ["proof (chain)\npicking this:\n  P \\<longmapsto> \\<alpha> \\<prec> P'", "have \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto> \\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<alpha> \\<prec> P'", "by(rule Weak_Early_Step_Semantics.singleActionChain)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       Q \\<longmapsto> \\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "with P'RelQ'"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'", "show ?case"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakSimWeakEqSim:\n  fixes P    :: pi\n  and   Q    :: pi\n  and   Rel  :: \"(pi \\<times> pi) set\"\n\n  assumes \"P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\"\n\n  shows \"P \\<leadsto><Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>\\<guillemotleft>Rel\\<guillemotright> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> Q", "by(force simp add: weakStepSimulation_def Weak_Early_Sim.weakSimulation_def weakFreeTransition_def)"], ["", "end"]]}